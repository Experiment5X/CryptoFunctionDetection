	.text
	.intel_syntax noprefix
	.file	"/mnt/c/Users/Adam/Developer/CryptoFunctionDetection/crypto_implementations/botan/src/lib/block/aes/aes.cpp"
	.globl	_ZNK5Botan7AES_1288providerB5cxx11Ev 
	.p2align	4, 0x90
	.type	_ZNK5Botan7AES_1288providerB5cxx11Ev,@function
_ZNK5Botan7AES_1288providerB5cxx11Ev:   
.Lfunc_begin0:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception0

	push	rbp
.Lcfi0:
	.cfi_def_cfa_offset 16
.Lcfi1:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi2:
	.cfi_def_cfa_register rbp
	sub	rsp, 64
	mov	rax, rdi
	mov	qword ptr [rbp - 8], rsi
	mov	qword ptr [rbp - 40], rax 
	mov	qword ptr [rbp - 48], rdi 
	call	_ZN5Botan12_GLOBAL__N_112aes_providerEv
	lea	rsi, [rbp - 16]
	mov	rdi, rsi
	mov	qword ptr [rbp - 56], rax 
	mov	qword ptr [rbp - 64], rsi 
	call	_ZNSaIcEC1Ev
.Ltmp0:
	mov	rdi, qword ptr [rbp - 48] 
	mov	rsi, qword ptr [rbp - 56] 
	mov	rdx, qword ptr [rbp - 64] 
	call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_
.Ltmp1:
	jmp	.LBB0_1
.LBB0_1:
	lea	rdi, [rbp - 16]
	call	_ZNSaIcED1Ev
	mov	rax, qword ptr [rbp - 40] 
	add	rsp, 64
	pop	rbp
	ret
.LBB0_2:
.Ltmp2:
	lea	rdi, [rbp - 16]
	mov	ecx, edx
	mov	qword ptr [rbp - 24], rax
	mov	dword ptr [rbp - 28], ecx
	call	_ZNSaIcED1Ev

	mov	rdi, qword ptr [rbp - 24]
	call	_Unwind_Resume
.Lfunc_end0:
	.size	_ZNK5Botan7AES_1288providerB5cxx11Ev, .Lfunc_end0-_ZNK5Botan7AES_1288providerB5cxx11Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table0:
.Lexception0:
	.byte	255                     
	.byte	3                       
	.byte	41                      
	.byte	3                       
	.byte	39                      
	.long	.Lfunc_begin0-.Lfunc_begin0 
	.long	.Ltmp0-.Lfunc_begin0    
	.long	0                       
	.byte	0                       
	.long	.Ltmp0-.Lfunc_begin0    
	.long	.Ltmp1-.Ltmp0           
	.long	.Ltmp2-.Lfunc_begin0    
	.byte	0                       
	.long	.Ltmp1-.Lfunc_begin0    
	.long	.Lfunc_end0-.Ltmp1      
	.long	0                       
	.byte	0                       
	.p2align	2

	.text
	.p2align	4, 0x90         
	.type	_ZN5Botan12_GLOBAL__N_112aes_providerEv,@function
_ZN5Botan12_GLOBAL__N_112aes_providerEv: 
	.cfi_startproc

	push	rbp
.Lcfi3:
	.cfi_def_cfa_offset 16
.Lcfi4:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi5:
	.cfi_def_cfa_register rbp
	sub	rsp, 48
	mov	dword ptr [rbp - 12], 1633022667
.LBB1_1:                                
	mov	eax, dword ptr [rbp - 12]
	mov	ecx, eax
	sub	ecx, 442076005
	mov	dword ptr [rbp - 16], eax 
	mov	dword ptr [rbp - 20], ecx 
	je	.LBB1_6
	jmp	.LBB1_10
.LBB1_10:                               
	mov	eax, dword ptr [rbp - 16] 
	sub	eax, 1460968158
	mov	dword ptr [rbp - 24], eax 
	je	.LBB1_8
	jmp	.LBB1_11
.LBB1_11:                               
	mov	eax, dword ptr [rbp - 16] 
	sub	eax, 1633022667
	mov	dword ptr [rbp - 28], eax 
	je	.LBB1_3
	jmp	.LBB1_12
.LBB1_12:                               
	mov	eax, dword ptr [rbp - 16] 
	sub	eax, 1742905134
	mov	dword ptr [rbp - 32], eax 
	je	.LBB1_7
	jmp	.LBB1_13
.LBB1_13:                               
	mov	eax, dword ptr [rbp - 16] 
	sub	eax, 1995084089
	mov	dword ptr [rbp - 36], eax 
	je	.LBB1_5
	jmp	.LBB1_14
.LBB1_14:                               
	mov	eax, dword ptr [rbp - 16] 
	sub	eax, 1995629611
	mov	dword ptr [rbp - 40], eax 
	je	.LBB1_4
	jmp	.LBB1_2
.LBB1_2:                                
	jmp	.LBB1_9
.LBB1_3:                                
	call	_ZN5Botan5CPUID10has_hw_aesEv
	mov	ecx, 1995084089
	mov	edx, 1995629611
	test	al, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 12], ecx
	jmp	.LBB1_9
.LBB1_4:                                
	movabs	rax, .L.str
	mov	qword ptr [rbp - 8], rax
	mov	dword ptr [rbp - 12], 1460968158
	jmp	.LBB1_9
.LBB1_5:                                
	call	_ZN5Botan5CPUID9has_vpermEv
	mov	ecx, 1742905134
	mov	edx, 442076005
	test	al, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 12], ecx
	jmp	.LBB1_9
.LBB1_6:                                
	movabs	rax, .L.str.1
	mov	qword ptr [rbp - 8], rax
	mov	dword ptr [rbp - 12], 1460968158
	jmp	.LBB1_9
.LBB1_7:                                
	movabs	rax, .L.str.2
	mov	qword ptr [rbp - 8], rax
	mov	dword ptr [rbp - 12], 1460968158
	jmp	.LBB1_9
.LBB1_8:
	mov	rax, qword ptr [rbp - 8]
	add	rsp, 48
	pop	rbp
	ret
.LBB1_9:                                
	jmp	.LBB1_1
.Lfunc_end1:
	.size	_ZN5Botan12_GLOBAL__N_112aes_providerEv, .Lfunc_end1-_ZN5Botan12_GLOBAL__N_112aes_providerEv
	.cfi_endproc

	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_ 
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_: 
.Lfunc_begin1:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception1

	push	rbp
.Lcfi6:
	.cfi_def_cfa_offset 16
.Lcfi7:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi8:
	.cfi_def_cfa_register rbp
	sub	rsp, 80
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	rdx, qword ptr [rbp - 8]
	mov	rdi, rdx
	mov	qword ptr [rbp - 48], rdx 
	call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv
	mov	rdx, qword ptr [rbp - 24]
	mov	rdi, qword ptr [rbp - 48] 
	mov	rsi, rax
	call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_
	mov	rsi, qword ptr [rbp - 16]
	cmp	qword ptr [rbp - 16], 0
	mov	qword ptr [rbp - 56], rsi 
	je	.LBB2_3

	mov	rax, qword ptr [rbp - 16]
.Ltmp3:
	mov	rdi, rax
	mov	qword ptr [rbp - 64], rax 
	call	_ZNSt11char_traitsIcE6lengthEPKc
.Ltmp4:
	mov	qword ptr [rbp - 72], rax 
	jmp	.LBB2_2
.LBB2_2:
	mov	rax, qword ptr [rbp - 64] 
	mov	rcx, qword ptr [rbp - 72] 
	add	rax, rcx
	mov	qword ptr [rbp - 80], rax 
	jmp	.LBB2_4
.LBB2_3:
	mov	rax, qword ptr [rbp - 16]
	add	rax, -1
	mov	qword ptr [rbp - 80], rax 
.LBB2_4:
.Ltmp5:
	mov	rax, qword ptr [rbp - 80] 
	mov	rdi, qword ptr [rbp - 48] 
	mov	rsi, qword ptr [rbp - 56] 
	mov	rdx, rax
	call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_
.Ltmp6:
	jmp	.LBB2_5
.LBB2_5:
	add	rsp, 80
	pop	rbp
	ret
.LBB2_6:
.Ltmp7:
	mov	ecx, edx
	mov	qword ptr [rbp - 32], rax
	mov	dword ptr [rbp - 36], ecx
	mov	rdi, qword ptr [rbp - 48] 
	call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev

	mov	rdi, qword ptr [rbp - 32]
	call	_Unwind_Resume
.Lfunc_end2:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_, .Lfunc_end2-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table2:
.Lexception1:
	.byte	255                     
	.byte	3                       
	.asciz	"\234"                  
	.byte	3                       
	.byte	26                      
	.long	.Ltmp3-.Lfunc_begin1    
	.long	.Ltmp6-.Ltmp3           
	.long	.Ltmp7-.Lfunc_begin1    
	.byte	0                       
	.long	.Ltmp6-.Lfunc_begin1    
	.long	.Lfunc_end2-.Ltmp6      
	.long	0                       
	.byte	0                       
	.p2align	2

	.text
	.globl	_ZNK5Botan7AES_1928providerB5cxx11Ev 
	.p2align	4, 0x90
	.type	_ZNK5Botan7AES_1928providerB5cxx11Ev,@function
_ZNK5Botan7AES_1928providerB5cxx11Ev:   
.Lfunc_begin2:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception2

	push	rbp
.Lcfi9:
	.cfi_def_cfa_offset 16
.Lcfi10:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi11:
	.cfi_def_cfa_register rbp
	sub	rsp, 64
	mov	rax, rdi
	mov	qword ptr [rbp - 8], rsi
	mov	qword ptr [rbp - 40], rax 
	mov	qword ptr [rbp - 48], rdi 
	call	_ZN5Botan12_GLOBAL__N_112aes_providerEv
	lea	rsi, [rbp - 16]
	mov	rdi, rsi
	mov	qword ptr [rbp - 56], rax 
	mov	qword ptr [rbp - 64], rsi 
	call	_ZNSaIcEC1Ev
.Ltmp8:
	mov	rdi, qword ptr [rbp - 48] 
	mov	rsi, qword ptr [rbp - 56] 
	mov	rdx, qword ptr [rbp - 64] 
	call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_
.Ltmp9:
	jmp	.LBB3_1
.LBB3_1:
	lea	rdi, [rbp - 16]
	call	_ZNSaIcED1Ev
	mov	rax, qword ptr [rbp - 40] 
	add	rsp, 64
	pop	rbp
	ret
.LBB3_2:
.Ltmp10:
	lea	rdi, [rbp - 16]
	mov	ecx, edx
	mov	qword ptr [rbp - 24], rax
	mov	dword ptr [rbp - 28], ecx
	call	_ZNSaIcED1Ev

	mov	rdi, qword ptr [rbp - 24]
	call	_Unwind_Resume
.Lfunc_end3:
	.size	_ZNK5Botan7AES_1928providerB5cxx11Ev, .Lfunc_end3-_ZNK5Botan7AES_1928providerB5cxx11Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table3:
.Lexception2:
	.byte	255                     
	.byte	3                       
	.byte	41                      
	.byte	3                       
	.byte	39                      
	.long	.Lfunc_begin2-.Lfunc_begin2 
	.long	.Ltmp8-.Lfunc_begin2    
	.long	0                       
	.byte	0                       
	.long	.Ltmp8-.Lfunc_begin2    
	.long	.Ltmp9-.Ltmp8           
	.long	.Ltmp10-.Lfunc_begin2   
	.byte	0                       
	.long	.Ltmp9-.Lfunc_begin2    
	.long	.Lfunc_end3-.Ltmp9      
	.long	0                       
	.byte	0                       
	.p2align	2

	.text
	.globl	_ZNK5Botan7AES_2568providerB5cxx11Ev 
	.p2align	4, 0x90
	.type	_ZNK5Botan7AES_2568providerB5cxx11Ev,@function
_ZNK5Botan7AES_2568providerB5cxx11Ev:   
.Lfunc_begin3:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception3

	push	rbp
.Lcfi12:
	.cfi_def_cfa_offset 16
.Lcfi13:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi14:
	.cfi_def_cfa_register rbp
	sub	rsp, 64
	mov	rax, rdi
	mov	qword ptr [rbp - 8], rsi
	mov	qword ptr [rbp - 40], rax 
	mov	qword ptr [rbp - 48], rdi 
	call	_ZN5Botan12_GLOBAL__N_112aes_providerEv
	lea	rsi, [rbp - 16]
	mov	rdi, rsi
	mov	qword ptr [rbp - 56], rax 
	mov	qword ptr [rbp - 64], rsi 
	call	_ZNSaIcEC1Ev
.Ltmp11:
	mov	rdi, qword ptr [rbp - 48] 
	mov	rsi, qword ptr [rbp - 56] 
	mov	rdx, qword ptr [rbp - 64] 
	call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_
.Ltmp12:
	jmp	.LBB4_1
.LBB4_1:
	lea	rdi, [rbp - 16]
	call	_ZNSaIcED1Ev
	mov	rax, qword ptr [rbp - 40] 
	add	rsp, 64
	pop	rbp
	ret
.LBB4_2:
.Ltmp13:
	lea	rdi, [rbp - 16]
	mov	ecx, edx
	mov	qword ptr [rbp - 24], rax
	mov	dword ptr [rbp - 28], ecx
	call	_ZNSaIcED1Ev

	mov	rdi, qword ptr [rbp - 24]
	call	_Unwind_Resume
.Lfunc_end4:
	.size	_ZNK5Botan7AES_2568providerB5cxx11Ev, .Lfunc_end4-_ZNK5Botan7AES_2568providerB5cxx11Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table4:
.Lexception3:
	.byte	255                     
	.byte	3                       
	.byte	41                      
	.byte	3                       
	.byte	39                      
	.long	.Lfunc_begin3-.Lfunc_begin3 
	.long	.Ltmp11-.Lfunc_begin3   
	.long	0                       
	.byte	0                       
	.long	.Ltmp11-.Lfunc_begin3   
	.long	.Ltmp12-.Ltmp11         
	.long	.Ltmp13-.Lfunc_begin3   
	.byte	0                       
	.long	.Ltmp12-.Lfunc_begin3   
	.long	.Lfunc_end4-.Ltmp12     
	.long	0                       
	.byte	0                       
	.p2align	2

	.text
	.globl	_ZNK5Botan7AES_12811parallelismEv 
	.p2align	4, 0x90
	.type	_ZNK5Botan7AES_12811parallelismEv,@function
_ZNK5Botan7AES_12811parallelismEv:      
	.cfi_startproc

	push	rbp
.Lcfi15:
	.cfi_def_cfa_offset 16
.Lcfi16:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi17:
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	call	_ZN5Botan12_GLOBAL__N_115aes_parallelismEv
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end5:
	.size	_ZNK5Botan7AES_12811parallelismEv, .Lfunc_end5-_ZNK5Botan7AES_12811parallelismEv
	.cfi_endproc

	.p2align	4, 0x90         
	.type	_ZN5Botan12_GLOBAL__N_115aes_parallelismEv,@function
_ZN5Botan12_GLOBAL__N_115aes_parallelismEv: 
	.cfi_startproc

	push	rbp
.Lcfi18:
	.cfi_def_cfa_offset 16
.Lcfi19:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi20:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	sub	rsp, 112
.Lcfi21:
	.cfi_offset rbx, -48
.Lcfi22:
	.cfi_offset r12, -40
.Lcfi23:
	.cfi_offset r14, -32
.Lcfi24:
	.cfi_offset r15, -24
	mov	dword ptr [rbp - 60], -148876283
.LBB6_1:                                
	mov	eax, dword ptr [rbp - 60]
	mov	ecx, eax
	sub	ecx, -2057156275
	mov	dword ptr [rbp - 64], eax 
	mov	dword ptr [rbp - 68], ecx 
	je	.LBB6_18
	jmp	.LBB6_22
.LBB6_22:                               
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, -2051441115
	mov	dword ptr [rbp - 72], eax 
	je	.LBB6_17
	jmp	.LBB6_23
.LBB6_23:                               
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, -1875721760
	mov	dword ptr [rbp - 76], eax 
	je	.LBB6_4
	jmp	.LBB6_24
.LBB6_24:                               
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, -1800938311
	mov	dword ptr [rbp - 80], eax 
	je	.LBB6_8
	jmp	.LBB6_25
.LBB6_25:                               
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, -1767115185
	mov	dword ptr [rbp - 84], eax 
	je	.LBB6_11
	jmp	.LBB6_26
.LBB6_26:                               
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, -1654094191
	mov	dword ptr [rbp - 88], eax 
	je	.LBB6_20
	jmp	.LBB6_27
.LBB6_27:                               
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, -942519792
	mov	dword ptr [rbp - 92], eax 
	je	.LBB6_9
	jmp	.LBB6_28
.LBB6_28:                               
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, -902954192
	mov	dword ptr [rbp - 96], eax 
	je	.LBB6_10
	jmp	.LBB6_29
.LBB6_29:                               
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, -817130531
	mov	dword ptr [rbp - 100], eax 
	je	.LBB6_15
	jmp	.LBB6_30
.LBB6_30:                               
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, -765391498
	mov	dword ptr [rbp - 104], eax 
	je	.LBB6_14
	jmp	.LBB6_31
.LBB6_31:                               
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, -148876283
	mov	dword ptr [rbp - 108], eax 
	je	.LBB6_3
	jmp	.LBB6_32
.LBB6_32:                               
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, 234692174
	mov	dword ptr [rbp - 112], eax 
	je	.LBB6_13
	jmp	.LBB6_33
.LBB6_33:                               
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, 626022188
	mov	dword ptr [rbp - 116], eax 
	je	.LBB6_7
	jmp	.LBB6_34
.LBB6_34:                               
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, 632273937
	mov	dword ptr [rbp - 120], eax 
	je	.LBB6_19
	jmp	.LBB6_35
.LBB6_35:                               
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, 780649420
	mov	dword ptr [rbp - 124], eax 
	je	.LBB6_12
	jmp	.LBB6_36
.LBB6_36:                               
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, 1691518496
	mov	dword ptr [rbp - 128], eax 
	je	.LBB6_5
	jmp	.LBB6_37
.LBB6_37:                               
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, 1808839051
	mov	dword ptr [rbp - 132], eax 
	je	.LBB6_16
	jmp	.LBB6_38
.LBB6_38:                               
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, 2044099470
	mov	dword ptr [rbp - 136], eax 
	je	.LBB6_6
	jmp	.LBB6_2
.LBB6_2:                                
	jmp	.LBB6_21
.LBB6_3:                                
	call	_ZN5Botan5CPUID10has_hw_aesEv
	mov	ecx, 626022188
	mov	edx, 2419245536
	test	al, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 60], ecx
	jmp	.LBB6_21
.LBB6_4:                                
	mov	eax, 2243526181
	mov	ecx, 1691518496
	xor	edx, edx
	mov	esi, dword ptr [x.18]
	mov	edi, dword ptr [y.19]
	sub	edx, 1
	mov	r8d, esi
	add	r8d, edx
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	and	r11b, r10b
	xor	r9b, r10b
	or	r11b, r9b
	test	r11b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 60], eax
	jmp	.LBB6_21
.LBB6_5:                                
	mov	eax, 2243526181
	mov	ecx, 2044099470
	mov	dl, 1
	mov	qword ptr [rbp - 56], 4
	mov	esi, dword ptr [x.18]
	mov	edi, dword ptr [y.19]
	mov	r8d, esi
	sub	r8d, -1977246058
	sub	r8d, 1
	add	r8d, -1977246058
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 0
	mov	r14b, r11b
	and	r14b, 0
	and	r9b, dl
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 0
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 60], eax
	jmp	.LBB6_21
.LBB6_6:                                
	mov	dword ptr [rbp - 60], -765391498
	jmp	.LBB6_21
.LBB6_7:                                
	mov	eax, 2237811021
	mov	ecx, 2494028985
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.18]
	mov	r8d, dword ptr [y.19]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 0
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, 0
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 0
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 60], eax
	jmp	.LBB6_21
.LBB6_8:                                
	call	_ZN5Botan5CPUID9has_vpermEv
	mov	ecx, 2237811021
	mov	edx, 3352447504
	xor	esi, esi
	and	al, 1
	mov	byte ptr [rbp - 41], al
	mov	edi, dword ptr [x.18]
	mov	r8d, dword ptr [y.19]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	al
	cmp	r8d, 10
	setl	r10b
	mov	r11b, al
	and	r11b, r10b
	xor	al, r10b
	or	r11b, al
	test	r11b, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 60], ecx
	jmp	.LBB6_21
.LBB6_9:                                
	mov	eax, 234692174
	mov	ecx, 3392013104
	mov	dl, byte ptr [rbp - 41]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 60], eax
	jmp	.LBB6_21
.LBB6_10:                               
	mov	eax, 632273937
	mov	ecx, 2527852111
	mov	edx, dword ptr [x.18]
	mov	esi, dword ptr [y.19]
	mov	edi, edx
	sub	edi, 1886412726
	sub	edi, 1
	add	edi, 1886412726
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 60], eax
	jmp	.LBB6_21
.LBB6_11:                               
	mov	eax, 632273937
	mov	ecx, 780649420
	mov	dl, 1
	mov	qword ptr [rbp - 56], 2
	mov	esi, dword ptr [x.18]
	mov	edi, dword ptr [y.19]
	mov	r8d, esi
	sub	r8d, 706383270
	sub	r8d, 1
	add	r8d, 706383270
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 0
	mov	r14b, r11b
	and	r14b, 0
	and	r9b, dl
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 0
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 60], eax
	jmp	.LBB6_21
.LBB6_12:                               
	mov	dword ptr [rbp - 60], -765391498
	jmp	.LBB6_21
.LBB6_13:                               
	mov	qword ptr [rbp - 56], 2
	mov	dword ptr [rbp - 60], -765391498
	jmp	.LBB6_21
.LBB6_14:                               
	mov	eax, 2640873105
	mov	ecx, 3477836765
	mov	dl, 1
	mov	esi, dword ptr [x.18]
	mov	edi, dword ptr [y.19]
	mov	r8d, esi
	add	r8d, -1113874837
	sub	r8d, 1
	sub	r8d, -1113874837
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 0
	mov	r14b, r11b
	and	r14b, 0
	and	r9b, dl
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 0
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 60], eax
	jmp	.LBB6_21
.LBB6_15:                               
	mov	eax, 2640873105
	mov	ecx, 1808839051
	mov	dl, 1
	mov	rsi, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 40], rsi
	mov	edi, dword ptr [x.18]
	mov	r8d, dword ptr [y.19]
	mov	r9d, edi
	sub	r9d, -827339064
	sub	r9d, 1
	add	r9d, -827339064
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 0
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, 0
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 0
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 60], eax
	jmp	.LBB6_21
.LBB6_16:
	mov	rax, qword ptr [rbp - 40]
	add	rsp, 112
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB6_17:                               
	mov	qword ptr [rbp - 56], 4
	mov	dword ptr [rbp - 60], 1691518496
	jmp	.LBB6_21
.LBB6_18:                               
	call	_ZN5Botan5CPUID9has_vpermEv
	mov	dword ptr [rbp - 60], -1800938311
	mov	byte ptr [rbp - 137], al 
	jmp	.LBB6_21
.LBB6_19:                               
	mov	qword ptr [rbp - 56], 2
	mov	dword ptr [rbp - 60], -1767115185
	jmp	.LBB6_21
.LBB6_20:                               
	mov	dword ptr [rbp - 60], -817130531
.LBB6_21:                               
	jmp	.LBB6_1
.Lfunc_end6:
	.size	_ZN5Botan12_GLOBAL__N_115aes_parallelismEv, .Lfunc_end6-_ZN5Botan12_GLOBAL__N_115aes_parallelismEv
	.cfi_endproc

	.globl	_ZNK5Botan7AES_19211parallelismEv 
	.p2align	4, 0x90
	.type	_ZNK5Botan7AES_19211parallelismEv,@function
_ZNK5Botan7AES_19211parallelismEv:      
	.cfi_startproc

	push	rbp
.Lcfi25:
	.cfi_def_cfa_offset 16
.Lcfi26:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi27:
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	call	_ZN5Botan12_GLOBAL__N_115aes_parallelismEv
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end7:
	.size	_ZNK5Botan7AES_19211parallelismEv, .Lfunc_end7-_ZNK5Botan7AES_19211parallelismEv
	.cfi_endproc

	.globl	_ZNK5Botan7AES_25611parallelismEv 
	.p2align	4, 0x90
	.type	_ZNK5Botan7AES_25611parallelismEv,@function
_ZNK5Botan7AES_25611parallelismEv:      
	.cfi_startproc

	push	rbp
.Lcfi28:
	.cfi_def_cfa_offset 16
.Lcfi29:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi30:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 56
.Lcfi31:
	.cfi_offset rbx, -56
.Lcfi32:
	.cfi_offset r12, -48
.Lcfi33:
	.cfi_offset r13, -40
.Lcfi34:
	.cfi_offset r14, -32
.Lcfi35:
	.cfi_offset r15, -24
	mov	eax, dword ptr [x.22]
	mov	ecx, dword ptr [y.23]
	mov	edx, eax
	sub	edx, -850501900
	sub	edx, 1
	add	edx, -850501900
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 50], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 49], sil
	mov	dword ptr [rbp - 56], -1979891093
	mov	qword ptr [rbp - 64], rdi 
.LBB8_1:                                
	mov	eax, dword ptr [rbp - 56]
	mov	ecx, eax
	sub	ecx, -1979891093
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB8_3
	jmp	.LBB8_8
.LBB8_8:                                
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -1632409920
	mov	dword ptr [rbp - 76], eax 
	je	.LBB8_4
	jmp	.LBB8_9
.LBB8_9:                                
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -767945491
	mov	dword ptr [rbp - 80], eax 
	je	.LBB8_6
	jmp	.LBB8_10
.LBB8_10:                               
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1607819670
	mov	dword ptr [rbp - 84], eax 
	je	.LBB8_5
	jmp	.LBB8_2
.LBB8_2:                                
	jmp	.LBB8_7
.LBB8_3:                                
	mov	eax, 3527021805
	mov	ecx, 2662557376
	mov	dl, 1
	mov	sil, byte ptr [rbp - 50]
	mov	dil, byte ptr [rbp - 49]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 0
	mov	r10b, r8b
	and	r10b, 0
	and	sil, dl
	mov	r11b, r9b
	and	r11b, 0
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 0
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB8_7
.LBB8_4:                                
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rcx
	call	_ZN5Botan12_GLOBAL__N_115aes_parallelismEv
	mov	edx, 3527021805
	mov	esi, 1607819670
	mov	dil, 1
	xor	r8d, r8d
	mov	qword ptr [rbp - 48], rax
	mov	r9d, dword ptr [x.22]
	mov	r10d, dword ptr [y.23]
	sub	r8d, 1
	mov	r11d, r9d
	add	r11d, r8d
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	bl
	cmp	r10d, 10
	setl	r14b
	mov	r15b, bl
	xor	r15b, -1
	mov	r12b, r14b
	xor	r12b, -1
	xor	dil, 0
	mov	r13b, r15b
	and	r13b, 0
	and	bl, dil
	mov	al, r12b
	and	al, 0
	and	r14b, dil
	or	r13b, bl
	or	al, r14b
	xor	r13b, al
	or	r15b, r12b
	xor	r15b, -1
	or	dil, 0
	and	r15b, dil
	or	r13b, r15b
	test	r13b, 1
	cmovne	edx, esi
	mov	dword ptr [rbp - 56], edx
	jmp	.LBB8_7
.LBB8_5:
	mov	rax, qword ptr [rbp - 48]
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB8_6:                                
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rcx
	call	_ZN5Botan12_GLOBAL__N_115aes_parallelismEv
	mov	dword ptr [rbp - 56], -1632409920
	mov	qword ptr [rbp - 96], rax 
.LBB8_7:                                
	jmp	.LBB8_1
.Lfunc_end8:
	.size	_ZNK5Botan7AES_25611parallelismEv, .Lfunc_end8-_ZNK5Botan7AES_25611parallelismEv
	.cfi_endproc

	.globl	_ZNK5Botan7AES_1289encrypt_nEPKhPhm 
	.p2align	4, 0x90
	.type	_ZNK5Botan7AES_1289encrypt_nEPKhPhm,@function
_ZNK5Botan7AES_1289encrypt_nEPKhPhm:    
	.cfi_startproc

	push	rbp
.Lcfi36:
	.cfi_def_cfa_offset 16
.Lcfi37:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi38:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 168
.Lcfi39:
	.cfi_offset rbx, -56
.Lcfi40:
	.cfi_offset r12, -48
.Lcfi41:
	.cfi_offset r13, -40
.Lcfi42:
	.cfi_offset r14, -32
.Lcfi43:
	.cfi_offset r15, -24
	mov	eax, dword ptr [x.24]
	mov	r8d, dword ptr [y.25]
	mov	r9d, eax
	sub	r9d, -287959659
	sub	r9d, 1
	add	r9d, -287959659
	imul	eax, r9d
	and	eax, 1
	cmp	eax, 0
	sete	r10b
	and	r10b, 1
	mov	byte ptr [rbp - 82], r10b
	cmp	r8d, 10
	setl	r10b
	and	r10b, 1
	mov	byte ptr [rbp - 81], r10b
	mov	dword ptr [rbp - 88], -1638082029
	mov	qword ptr [rbp - 96], rdx 
	mov	qword ptr [rbp - 104], rsi 
	mov	qword ptr [rbp - 112], rdi 
	mov	qword ptr [rbp - 120], rcx 
.LBB9_1:                                
	mov	eax, dword ptr [rbp - 88]
	mov	ecx, eax
	sub	ecx, -2025961568
	mov	dword ptr [rbp - 124], eax 
	mov	dword ptr [rbp - 128], ecx 
	je	.LBB9_5
	jmp	.LBB9_19
.LBB9_19:                               
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, -1942264903
	mov	dword ptr [rbp - 132], eax 
	je	.LBB9_7
	jmp	.LBB9_20
.LBB9_20:                               
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, -1922570533
	mov	dword ptr [rbp - 136], eax 
	je	.LBB9_10
	jmp	.LBB9_21
.LBB9_21:                               
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, -1638082029
	mov	dword ptr [rbp - 140], eax 
	je	.LBB9_3
	jmp	.LBB9_22
.LBB9_22:                               
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, -1190524858
	mov	dword ptr [rbp - 144], eax 
	je	.LBB9_9
	jmp	.LBB9_23
.LBB9_23:                               
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, -1172677050
	mov	dword ptr [rbp - 148], eax 
	je	.LBB9_15
	jmp	.LBB9_24
.LBB9_24:                               
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, -769299307
	mov	dword ptr [rbp - 152], eax 
	je	.LBB9_12
	jmp	.LBB9_25
.LBB9_25:                               
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, -316429305
	mov	dword ptr [rbp - 156], eax 
	je	.LBB9_17
	jmp	.LBB9_26
.LBB9_26:                               
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, -301677243
	mov	dword ptr [rbp - 160], eax 
	je	.LBB9_16
	jmp	.LBB9_27
.LBB9_27:                               
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, 251616792
	mov	dword ptr [rbp - 164], eax 
	je	.LBB9_4
	jmp	.LBB9_28
.LBB9_28:                               
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, 314430097
	mov	dword ptr [rbp - 168], eax 
	je	.LBB9_14
	jmp	.LBB9_29
.LBB9_29:                               
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, 594228196
	mov	dword ptr [rbp - 172], eax 
	je	.LBB9_11
	jmp	.LBB9_30
.LBB9_30:                               
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, 658484679
	mov	dword ptr [rbp - 176], eax 
	je	.LBB9_13
	jmp	.LBB9_31
.LBB9_31:                               
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, 1061534350
	mov	dword ptr [rbp - 180], eax 
	je	.LBB9_6
	jmp	.LBB9_32
.LBB9_32:                               
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, 1657010568
	mov	dword ptr [rbp - 184], eax 
	je	.LBB9_8
	jmp	.LBB9_2
.LBB9_2:                                
	jmp	.LBB9_18
.LBB9_3:                                
	mov	eax, 3122290246
	mov	ecx, 251616792
	mov	dl, 1
	mov	sil, byte ptr [rbp - 82]
	mov	dil, byte ptr [rbp - 81]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 88], eax
	jmp	.LBB9_18
.LBB9_4:                                
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	qword ptr [rbp - 80], rcx
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	qword ptr [rbp - 72], rcx
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	qword ptr [rbp - 64], rcx
	mov	rcx, qword ptr [rbp - 112] 
	mov	qword ptr [rax], rcx
	mov	rdx, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rbp - 104] 
	mov	qword ptr [rdx], rsi
	mov	rdx, qword ptr [rbp - 72]
	mov	rdi, qword ptr [rbp - 96] 
	mov	qword ptr [rdx], rdi
	mov	rdx, qword ptr [rbp - 64]
	mov	r8, qword ptr [rbp - 120] 
	mov	qword ptr [rdx], r8
	mov	rax, qword ptr [rax]
	mov	qword ptr [rbp - 56], rax
	mov	rax, qword ptr [rbp - 56]
	mov	rdx, qword ptr [rbp - 56]
	add	rdx, 8
	mov	rdi, rdx
	mov	qword ptr [rbp - 192], rax 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE5emptyEv
	and	al, 1
	movzx	r9d, al
	cmp	r9d, 0
	sete	al
	and	al, 1
	movzx	esi, al
	mov	rdi, qword ptr [rbp - 192] 
	call	_ZNK5Botan18SymmetricAlgorithm14verify_key_setEb
	call	_ZN5Botan5CPUID10has_hw_aesEv
	mov	esi, 3122290246
	mov	r9d, 2269005728
	mov	r10b, 1
	and	al, 1
	mov	byte ptr [rbp - 41], al
	mov	r11d, dword ptr [x.24]
	mov	ebx, dword ptr [y.25]
	mov	r14d, r11d
	add	r14d, 1850443770
	sub	r14d, 1
	sub	r14d, 1850443770
	imul	r11d, r14d
	and	r11d, 1
	cmp	r11d, 0
	sete	al
	cmp	ebx, 10
	setl	r15b
	mov	r12b, al
	xor	r12b, -1
	mov	r13b, r15b
	xor	r13b, -1
	xor	r10b, 1
	mov	cl, r12b
	and	cl, -1
	and	al, r10b
	mov	dl, r13b
	and	dl, -1
	and	r15b, r10b
	or	cl, al
	or	dl, r15b
	xor	cl, dl
	or	r12b, r13b
	xor	r12b, -1
	or	r10b, 1
	and	r12b, r10b
	or	cl, r12b
	test	cl, 1
	cmovne	esi, r9d
	mov	dword ptr [rbp - 88], esi
	jmp	.LBB9_18
.LBB9_5:                                
	mov	eax, 2352702393
	mov	ecx, 1061534350
	mov	dl, byte ptr [rbp - 41]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 88], eax
	jmp	.LBB9_18
.LBB9_6:                                
	mov	rax, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 72]
	mov	rdx, qword ptr [rax]
	mov	rax, qword ptr [rbp - 64]
	mov	rcx, qword ptr [rax]
	mov	rdi, qword ptr [rbp - 56]
	call	_ZNK5Botan7AES_12816hw_aes_encrypt_nEPKhPhm
	mov	dword ptr [rbp - 88], 314430097
	jmp	.LBB9_18
.LBB9_7:                                
	call	_ZN5Botan5CPUID9has_vpermEv
	mov	ecx, 594228196
	mov	edx, 1657010568
	test	al, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 88], ecx
	jmp	.LBB9_18
.LBB9_8:                                
	mov	eax, 3993290053
	mov	ecx, 3104442438
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.24]
	mov	r8d, dword ptr [y.25]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 1
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, -1
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 1
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 88], eax
	jmp	.LBB9_18
.LBB9_9:                                
	mov	rax, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 72]
	mov	rdx, qword ptr [rax]
	mov	rax, qword ptr [rbp - 64]
	mov	rcx, qword ptr [rax]
	mov	rdi, qword ptr [rbp - 56]
	call	_ZNK5Botan7AES_12815vperm_encrypt_nEPKhPhm
	mov	r8d, 3993290053
	mov	r9d, 2372396763
	xor	r10d, r10d
	mov	r11d, dword ptr [x.24]
	mov	ebx, dword ptr [y.25]
	sub	r10d, 1
	mov	r14d, r11d
	add	r14d, r10d
	imul	r11d, r14d
	and	r11d, 1
	cmp	r11d, 0
	sete	r15b
	cmp	ebx, 10
	setl	r12b
	mov	r13b, r15b
	and	r13b, r12b
	xor	r15b, r12b
	or	r13b, r15b
	test	r13b, 1
	cmovne	r8d, r9d
	mov	dword ptr [rbp - 88], r8d
	jmp	.LBB9_18
.LBB9_10:                               
	mov	dword ptr [rbp - 88], 314430097
	jmp	.LBB9_18
.LBB9_11:                               
	mov	eax, 3978537991
	mov	ecx, 3525667989
	mov	edx, dword ptr [x.24]
	mov	esi, dword ptr [y.25]
	mov	edi, edx
	add	edi, 1570687978
	sub	edi, 1
	sub	edi, 1570687978
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 88], eax
	jmp	.LBB9_18
.LBB9_12:                               
	mov	rax, qword ptr [rbp - 80]
	mov	rdi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 64]
	mov	rdx, qword ptr [rax]
	mov	rax, qword ptr [rbp - 56]
	add	rax, 8
	mov	rcx, rax
	call	_ZN5Botan12_GLOBAL__N_113aes_encrypt_nEPKhPhmRKSt6vectorIjNS_16secure_allocatorIjEEE
	mov	r8d, 3978537991
	mov	r9d, 658484679
	mov	r10d, dword ptr [x.24]
	mov	r11d, dword ptr [y.25]
	mov	ebx, r10d
	add	ebx, -70636913
	sub	ebx, 1
	sub	ebx, -70636913
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r14b
	cmp	r11d, 10
	setl	r15b
	mov	r12b, r14b
	and	r12b, r15b
	xor	r14b, r15b
	or	r12b, r14b
	test	r12b, 1
	cmovne	r8d, r9d
	mov	dword ptr [rbp - 88], r8d
	jmp	.LBB9_18
.LBB9_13:                               
	mov	dword ptr [rbp - 88], 314430097
	jmp	.LBB9_18
.LBB9_14:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB9_15:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 112] 
	mov	qword ptr [rax], rdi
	mov	r8, qword ptr [rbp - 104] 
	mov	qword ptr [rcx], r8
	mov	rcx, qword ptr [rbp - 96] 
	mov	qword ptr [rdx], rcx
	mov	rdx, qword ptr [rbp - 120] 
	mov	qword ptr [rsi], rdx
	mov	rax, qword ptr [rax]
	mov	rsi, rax
	add	rax, 8
	mov	rdi, rax
	mov	qword ptr [rbp - 200], rsi 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE5emptyEv
	and	al, 1
	movzx	r9d, al
	cmp	r9d, 0
	sete	al
	and	al, 1
	movzx	esi, al
	mov	rdi, qword ptr [rbp - 200] 
	call	_ZNK5Botan18SymmetricAlgorithm14verify_key_setEb
	call	_ZN5Botan5CPUID10has_hw_aesEv
	mov	dword ptr [rbp - 88], 251616792
	mov	byte ptr [rbp - 201], al 
	jmp	.LBB9_18
.LBB9_16:                               
	mov	rax, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 72]
	mov	rdx, qword ptr [rax]
	mov	rax, qword ptr [rbp - 64]
	mov	rcx, qword ptr [rax]
	mov	rdi, qword ptr [rbp - 56]
	call	_ZNK5Botan7AES_12815vperm_encrypt_nEPKhPhm
	mov	dword ptr [rbp - 88], -1190524858
	jmp	.LBB9_18
.LBB9_17:                               
	mov	rax, qword ptr [rbp - 80]
	mov	rdi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 64]
	mov	rdx, qword ptr [rax]
	mov	rax, qword ptr [rbp - 56]
	add	rax, 8
	mov	rcx, rax
	call	_ZN5Botan12_GLOBAL__N_113aes_encrypt_nEPKhPhmRKSt6vectorIjNS_16secure_allocatorIjEEE
	mov	dword ptr [rbp - 88], -769299307
.LBB9_18:                               
	jmp	.LBB9_1
.Lfunc_end9:
	.size	_ZNK5Botan7AES_1289encrypt_nEPKhPhm, .Lfunc_end9-_ZNK5Botan7AES_1289encrypt_nEPKhPhm
	.cfi_endproc

	.section	.text._ZNK5Botan18SymmetricAlgorithm14verify_key_setEb,"axG",@progbits,_ZNK5Botan18SymmetricAlgorithm14verify_key_setEb,comdat
	.weak	_ZNK5Botan18SymmetricAlgorithm14verify_key_setEb 
	.p2align	4, 0x90
	.type	_ZNK5Botan18SymmetricAlgorithm14verify_key_setEb,@function
_ZNK5Botan18SymmetricAlgorithm14verify_key_setEb: 
	.cfi_startproc

	push	rbp
.Lcfi44:
	.cfi_def_cfa_offset 16
.Lcfi45:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi46:
	.cfi_def_cfa_register rbp
	sub	rsp, 48
	mov	al, sil
	mov	qword ptr [rbp - 24], rdi
	and	al, 1
	mov	byte ptr [rbp - 25], al
	mov	rdi, qword ptr [rbp - 24]
	mov	qword ptr [rbp - 16], rdi
	mov	al, byte ptr [rbp - 25]
	and	al, 1
	movzx	esi, al
	mov	dword ptr [rbp - 4], esi
	mov	dword ptr [rbp - 32], -1030386112
.LBB10_1:                               
	mov	eax, dword ptr [rbp - 32]
	mov	ecx, eax
	sub	ecx, -1608174542
	mov	dword ptr [rbp - 36], eax 
	mov	dword ptr [rbp - 40], ecx 
	je	.LBB10_4
	jmp	.LBB10_7
.LBB10_7:                               
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, -1030386112
	mov	dword ptr [rbp - 44], eax 
	je	.LBB10_3
	jmp	.LBB10_8
.LBB10_8:                               
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, 1599777019
	mov	dword ptr [rbp - 48], eax 
	je	.LBB10_5
	jmp	.LBB10_2
.LBB10_2:                               
	jmp	.LBB10_6
.LBB10_3:                               
	mov	eax, 1599777019
	mov	ecx, 2686792754
	mov	edx, dword ptr [rbp - 4]
	cmp	edx, 0
	cmove	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB10_6
.LBB10_4:                               
	mov	rdi, qword ptr [rbp - 16]
	call	_ZNK5Botan18SymmetricAlgorithm23throw_key_not_set_errorEv
	mov	dword ptr [rbp - 32], 1599777019
	jmp	.LBB10_6
.LBB10_5:
	add	rsp, 48
	pop	rbp
	ret
.LBB10_6:                               
	jmp	.LBB10_1
.Lfunc_end10:
	.size	_ZNK5Botan18SymmetricAlgorithm14verify_key_setEb, .Lfunc_end10-_ZNK5Botan18SymmetricAlgorithm14verify_key_setEb
	.cfi_endproc

	.section	.text._ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE5emptyEv,"axG",@progbits,_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE5emptyEv,comdat
	.weak	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE5emptyEv 
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE5emptyEv,@function
_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE5emptyEv: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	qword ptr [rbp - 32], rdi 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE5beginEv
	mov	qword ptr [rbp - 16], rax
	mov	rdi, qword ptr [rbp - 32] 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE3endEv
	lea	rdi, [rbp - 16]
	lea	rsi, [rbp - 24]
	mov	qword ptr [rbp - 24], rax
	call	_ZN9__gnu_cxxeqIPKjSt6vectorIjN5Botan16secure_allocatorIjEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_
	and	al, 1
	movzx	eax, al
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end11:
	.size	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE5emptyEv, .Lfunc_end11-_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE5emptyEv

	.section	.text._ZN5Botan5CPUID10has_hw_aesEv,"axG",@progbits,_ZN5Botan5CPUID10has_hw_aesEv,comdat
	.weak	_ZN5Botan5CPUID10has_hw_aesEv 
	.p2align	4, 0x90
	.type	_ZN5Botan5CPUID10has_hw_aesEv,@function
_ZN5Botan5CPUID10has_hw_aesEv:          
	.cfi_startproc

	push	rbp
.Lcfi47:
	.cfi_def_cfa_offset 16
.Lcfi48:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi49:
	.cfi_def_cfa_register rbp
	call	_ZN5Botan5CPUID10has_aes_niEv
	and	al, 1
	movzx	eax, al
	pop	rbp
	ret
.Lfunc_end12:
	.size	_ZN5Botan5CPUID10has_hw_aesEv, .Lfunc_end12-_ZN5Botan5CPUID10has_hw_aesEv
	.cfi_endproc

	.section	.text._ZN5Botan5CPUID9has_vpermEv,"axG",@progbits,_ZN5Botan5CPUID9has_vpermEv,comdat
	.weak	_ZN5Botan5CPUID9has_vpermEv 
	.p2align	4, 0x90
	.type	_ZN5Botan5CPUID9has_vpermEv,@function
_ZN5Botan5CPUID9has_vpermEv:            
	.cfi_startproc

	push	rbp
.Lcfi50:
	.cfi_def_cfa_offset 16
.Lcfi51:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi52:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 40
.Lcfi53:
	.cfi_offset rbx, -40
.Lcfi54:
	.cfi_offset r14, -32
.Lcfi55:
	.cfi_offset r15, -24
	mov	eax, dword ptr [x.32]
	mov	ecx, dword ptr [y.33]
	mov	edx, eax
	sub	edx, -1938442201
	sub	edx, 1
	add	edx, -1938442201
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 27], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 26], sil
	mov	dword ptr [rbp - 32], -913289796
.LBB13_1:                               
	mov	eax, dword ptr [rbp - 32]
	mov	ecx, eax
	sub	ecx, -926937455
	mov	dword ptr [rbp - 36], eax 
	mov	dword ptr [rbp - 40], ecx 
	je	.LBB13_4
	jmp	.LBB13_8
.LBB13_8:                               
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, -913289796
	mov	dword ptr [rbp - 44], eax 
	je	.LBB13_3
	jmp	.LBB13_9
.LBB13_9:                               
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, 1254770592
	mov	dword ptr [rbp - 48], eax 
	je	.LBB13_6
	jmp	.LBB13_10
.LBB13_10:                              
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, 2029430093
	mov	dword ptr [rbp - 52], eax 
	je	.LBB13_5
	jmp	.LBB13_2
.LBB13_2:                               
	jmp	.LBB13_7
.LBB13_3:                               
	mov	eax, 1254770592
	mov	ecx, 3368029841
	mov	dl, 1
	mov	sil, byte ptr [rbp - 27]
	mov	dil, byte ptr [rbp - 26]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 0
	mov	r10b, r8b
	and	r10b, 0
	and	sil, dl
	mov	r11b, r9b
	and	r11b, 0
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 0
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB13_7
.LBB13_4:                               
	call	_ZN5Botan5CPUID9has_ssse3Ev
	mov	ecx, 1254770592
	mov	edx, 2029430093
	mov	sil, 1
	and	al, 1
	mov	byte ptr [rbp - 25], al
	mov	edi, dword ptr [x.32]
	mov	r8d, dword ptr [y.33]
	mov	r9d, edi
	sub	r9d, 158881420
	sub	r9d, 1
	add	r9d, 158881420
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	al
	cmp	r8d, 10
	setl	r10b
	mov	r11b, al
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	sil, 1
	mov	r14b, r11b
	and	r14b, -1
	and	al, sil
	mov	r15b, bl
	and	r15b, -1
	and	r10b, sil
	or	r14b, al
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	sil, 1
	and	r11b, sil
	or	r14b, r11b
	test	r14b, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 32], ecx
	jmp	.LBB13_7
.LBB13_5:
	mov	al, byte ptr [rbp - 25]
	and	al, 1
	movzx	eax, al
	add	rsp, 40
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB13_6:                               
	call	_ZN5Botan5CPUID9has_ssse3Ev
	mov	dword ptr [rbp - 32], -926937455
	mov	byte ptr [rbp - 53], al 
.LBB13_7:                               
	jmp	.LBB13_1
.Lfunc_end13:
	.size	_ZN5Botan5CPUID9has_vpermEv, .Lfunc_end13-_ZN5Botan5CPUID9has_vpermEv
	.cfi_endproc

	.text
	.p2align	4, 0x90         
	.type	_ZN5Botan12_GLOBAL__N_113aes_encrypt_nEPKhPhmRKSt6vectorIjNS_16secure_allocatorIjEEE,@function
_ZN5Botan12_GLOBAL__N_113aes_encrypt_nEPKhPhmRKSt6vectorIjNS_16secure_allocatorIjEEE: 
	.cfi_startproc

	push	rbp
.Lcfi56:
	.cfi_def_cfa_offset 16
.Lcfi57:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi58:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 856
.Lcfi59:
	.cfi_offset rbx, -56
.Lcfi60:
	.cfi_offset r12, -48
.Lcfi61:
	.cfi_offset r13, -40
.Lcfi62:
	.cfi_offset r14, -32
.Lcfi63:
	.cfi_offset r15, -24
	mov	qword ptr [rbp - 56], rdi
	mov	qword ptr [rbp - 64], rsi
	mov	qword ptr [rbp - 72], rdx
	mov	qword ptr [rbp - 80], rcx
	mov	dword ptr [rbp - 612], -1340502237
.LBB14_1:                               
	mov	eax, dword ptr [rbp - 612]
	mov	ecx, eax
	sub	ecx, -2138985245
	mov	dword ptr [rbp - 616], eax 
	mov	dword ptr [rbp - 620], ecx 
	je	.LBB14_7
	jmp	.LBB14_63
.LBB14_63:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -1937739808
	mov	dword ptr [rbp - 624], eax 
	je	.LBB14_52
	jmp	.LBB14_64
.LBB14_64:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -1937347704
	mov	dword ptr [rbp - 628], eax 
	je	.LBB14_26
	jmp	.LBB14_65
.LBB14_65:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -1878067363
	mov	dword ptr [rbp - 632], eax 
	je	.LBB14_46
	jmp	.LBB14_66
.LBB14_66:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -1833012544
	mov	dword ptr [rbp - 636], eax 
	je	.LBB14_45
	jmp	.LBB14_67
.LBB14_67:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -1374629661
	mov	dword ptr [rbp - 640], eax 
	je	.LBB14_38
	jmp	.LBB14_68
.LBB14_68:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -1369985643
	mov	dword ptr [rbp - 644], eax 
	je	.LBB14_39
	jmp	.LBB14_69
.LBB14_69:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -1361201275
	mov	dword ptr [rbp - 648], eax 
	je	.LBB14_19
	jmp	.LBB14_70
.LBB14_70:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -1340502237
	mov	dword ptr [rbp - 652], eax 
	je	.LBB14_3
	jmp	.LBB14_71
.LBB14_71:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -1283402474
	mov	dword ptr [rbp - 656], eax 
	je	.LBB14_5
	jmp	.LBB14_72
.LBB14_72:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -1156839408
	mov	dword ptr [rbp - 660], eax 
	je	.LBB14_57
	jmp	.LBB14_73
.LBB14_73:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -1091762470
	mov	dword ptr [rbp - 664], eax 
	je	.LBB14_10
	jmp	.LBB14_74
.LBB14_74:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -975828677
	mov	dword ptr [rbp - 668], eax 
	je	.LBB14_8
	jmp	.LBB14_75
.LBB14_75:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -907827335
	mov	dword ptr [rbp - 672], eax 
	je	.LBB14_9
	jmp	.LBB14_76
.LBB14_76:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -863343852
	mov	dword ptr [rbp - 676], eax 
	je	.LBB14_25
	jmp	.LBB14_77
.LBB14_77:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -820208027
	mov	dword ptr [rbp - 680], eax 
	je	.LBB14_35
	jmp	.LBB14_78
.LBB14_78:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -777956685
	mov	dword ptr [rbp - 684], eax 
	je	.LBB14_28
	jmp	.LBB14_79
.LBB14_79:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -698149631
	mov	dword ptr [rbp - 688], eax 
	je	.LBB14_17
	jmp	.LBB14_80
.LBB14_80:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -665713814
	mov	dword ptr [rbp - 692], eax 
	je	.LBB14_6
	jmp	.LBB14_81
.LBB14_81:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -653678543
	mov	dword ptr [rbp - 696], eax 
	je	.LBB14_12
	jmp	.LBB14_82
.LBB14_82:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -567457505
	mov	dword ptr [rbp - 700], eax 
	je	.LBB14_29
	jmp	.LBB14_83
.LBB14_83:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -525737859
	mov	dword ptr [rbp - 704], eax 
	je	.LBB14_16
	jmp	.LBB14_84
.LBB14_84:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -479722702
	mov	dword ptr [rbp - 708], eax 
	je	.LBB14_59
	jmp	.LBB14_85
.LBB14_85:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -443164326
	mov	dword ptr [rbp - 712], eax 
	je	.LBB14_33
	jmp	.LBB14_86
.LBB14_86:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -383708598
	mov	dword ptr [rbp - 716], eax 
	je	.LBB14_4
	jmp	.LBB14_87
.LBB14_87:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -241344621
	mov	dword ptr [rbp - 720], eax 
	je	.LBB14_60
	jmp	.LBB14_88
.LBB14_88:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -160125354
	mov	dword ptr [rbp - 724], eax 
	je	.LBB14_53
	jmp	.LBB14_89
.LBB14_89:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -128919285
	mov	dword ptr [rbp - 728], eax 
	je	.LBB14_11
	jmp	.LBB14_90
.LBB14_90:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -108786707
	mov	dword ptr [rbp - 732], eax 
	je	.LBB14_58
	jmp	.LBB14_91
.LBB14_91:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, -82230070
	mov	dword ptr [rbp - 736], eax 
	je	.LBB14_37
	jmp	.LBB14_92
.LBB14_92:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 90300682
	mov	dword ptr [rbp - 740], eax 
	je	.LBB14_44
	jmp	.LBB14_93
.LBB14_93:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 237353308
	mov	dword ptr [rbp - 744], eax 
	je	.LBB14_51
	jmp	.LBB14_94
.LBB14_94:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 283528709
	mov	dword ptr [rbp - 748], eax 
	je	.LBB14_23
	jmp	.LBB14_95
.LBB14_95:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 303262834
	mov	dword ptr [rbp - 752], eax 
	je	.LBB14_21
	jmp	.LBB14_96
.LBB14_96:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 378207674
	mov	dword ptr [rbp - 756], eax 
	je	.LBB14_22
	jmp	.LBB14_97
.LBB14_97:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 419791829
	mov	dword ptr [rbp - 760], eax 
	je	.LBB14_48
	jmp	.LBB14_98
.LBB14_98:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 495424114
	mov	dword ptr [rbp - 764], eax 
	je	.LBB14_40
	jmp	.LBB14_99
.LBB14_99:                              
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 636342971
	mov	dword ptr [rbp - 768], eax 
	je	.LBB14_61
	jmp	.LBB14_100
.LBB14_100:                             
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 898358935
	mov	dword ptr [rbp - 772], eax 
	je	.LBB14_32
	jmp	.LBB14_101
.LBB14_101:                             
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 930969786
	mov	dword ptr [rbp - 776], eax 
	je	.LBB14_43
	jmp	.LBB14_102
.LBB14_102:                             
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 1103510585
	mov	dword ptr [rbp - 780], eax 
	je	.LBB14_20
	jmp	.LBB14_103
.LBB14_103:                             
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 1213874859
	mov	dword ptr [rbp - 784], eax 
	je	.LBB14_30
	jmp	.LBB14_104
.LBB14_104:                             
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 1306343746
	mov	dword ptr [rbp - 788], eax 
	je	.LBB14_42
	jmp	.LBB14_105
.LBB14_105:                             
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 1320089013
	mov	dword ptr [rbp - 792], eax 
	je	.LBB14_50
	jmp	.LBB14_106
.LBB14_106:                             
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 1377570255
	mov	dword ptr [rbp - 796], eax 
	je	.LBB14_13
	jmp	.LBB14_107
.LBB14_107:                             
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 1473846584
	mov	dword ptr [rbp - 800], eax 
	je	.LBB14_31
	jmp	.LBB14_108
.LBB14_108:                             
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 1476691067
	mov	dword ptr [rbp - 804], eax 
	je	.LBB14_34
	jmp	.LBB14_109
.LBB14_109:                             
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 1555161604
	mov	dword ptr [rbp - 808], eax 
	je	.LBB14_36
	jmp	.LBB14_110
.LBB14_110:                             
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 1570583184
	mov	dword ptr [rbp - 812], eax 
	je	.LBB14_41
	jmp	.LBB14_111
.LBB14_111:                             
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 1578142008
	mov	dword ptr [rbp - 816], eax 
	je	.LBB14_56
	jmp	.LBB14_112
.LBB14_112:                             
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 1659718487
	mov	dword ptr [rbp - 820], eax 
	je	.LBB14_27
	jmp	.LBB14_113
.LBB14_113:                             
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 1754476665
	mov	dword ptr [rbp - 824], eax 
	je	.LBB14_55
	jmp	.LBB14_114
.LBB14_114:                             
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 1801008013
	mov	dword ptr [rbp - 828], eax 
	je	.LBB14_14
	jmp	.LBB14_115
.LBB14_115:                             
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 1838360561
	mov	dword ptr [rbp - 832], eax 
	je	.LBB14_18
	jmp	.LBB14_116
.LBB14_116:                             
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 1937042986
	mov	dword ptr [rbp - 836], eax 
	je	.LBB14_54
	jmp	.LBB14_117
.LBB14_117:                             
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 1938294587
	mov	dword ptr [rbp - 840], eax 
	je	.LBB14_15
	jmp	.LBB14_118
.LBB14_118:                             
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 1973214674
	mov	dword ptr [rbp - 844], eax 
	je	.LBB14_49
	jmp	.LBB14_119
.LBB14_119:                             
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 2095357098
	mov	dword ptr [rbp - 848], eax 
	je	.LBB14_47
	jmp	.LBB14_120
.LBB14_120:                             
	mov	eax, dword ptr [rbp - 616] 
	sub	eax, 2111823873
	mov	dword ptr [rbp - 852], eax 
	je	.LBB14_24
	jmp	.LBB14_2
.LBB14_2:                               
	jmp	.LBB14_62
.LBB14_3:                               
	mov	rdi, qword ptr [rbp - 80]
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	mov	ecx, 3911258698
	mov	edx, 2155982051
	cmp	rax, 44
	cmove	ecx, edx
	mov	dword ptr [rbp - 612], ecx
	jmp	.LBB14_62
.LBB14_4:                               
	mov	rdi, qword ptr [rbp - 80]
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	mov	ecx, 3011564822
	mov	edx, 2155982051
	cmp	rax, 52
	cmove	ecx, edx
	mov	dword ptr [rbp - 612], ecx
	jmp	.LBB14_62
.LBB14_5:                               
	mov	rdi, qword ptr [rbp - 80]
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	mov	ecx, 3629253482
	mov	edx, 2155982051
	cmp	rax, 60
	cmove	ecx, edx
	mov	dword ptr [rbp - 612], ecx
	jmp	.LBB14_62
.LBB14_6:
	movabs	rdi, .L.str.3
	movabs	rsi, .L.str.4
	movabs	rdx, .L__func__._ZN5Botan12_GLOBAL__N_113aes_encrypt_nEPKhPhmRKSt6vectorIjNS_16secure_allocatorIjEEE
	movabs	rcx, .L.str.5
	mov	r8d, 520
	call	_ZN5Botan17assertion_failureEPKcS1_S1_S1_i
.LBB14_7:                               
	mov	eax, 2357227488
	mov	ecx, 3319138619
	mov	edx, dword ptr [x.34]
	mov	esi, dword ptr [y.35]
	mov	edi, edx
	sub	edi, -999915034
	sub	edi, 1
	add	edi, -999915034
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 612], eax
	jmp	.LBB14_62
.LBB14_8:                               
	mov	eax, 2357227488
	mov	ecx, 3387139961
	mov	dl, 1
	mov	esi, dword ptr [x.34]
	mov	edi, dword ptr [y.35]
	mov	r8d, esi
	sub	r8d, 2094251642
	sub	r8d, 1
	add	r8d, 2094251642
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 0
	mov	r14b, r11b
	and	r14b, 0
	and	r9b, dl
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 0
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 612], eax
	jmp	.LBB14_62
.LBB14_9:                               
	mov	dword ptr [rbp - 612], -1091762470
	jmp	.LBB14_62
.LBB14_10:                              
	mov	eax, 4134841942
	mov	ecx, 4166048011
	xor	edx, edx
	mov	esi, dword ptr [x.34]
	mov	edi, dword ptr [y.35]
	sub	edx, 1
	mov	r8d, esi
	add	r8d, edx
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	and	r11b, r10b
	xor	r9b, r10b
	or	r11b, r9b
	test	r11b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 612], eax
	jmp	.LBB14_62
.LBB14_11:                              
	mov	rdi, qword ptr [rbp - 80]
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	mov	ecx, 4134841942
	mov	edx, 3641288753
	mov	sil, 1
	xor	r8d, r8d
	mov	r9d, 416
	mov	edi, r9d
	lea	r10, [rbp - 512]
	xor	r9d, r9d
	mov	r11d, r9d
	sub	r11, 4
	add	rax, r11
	shr	rax, 2
	mov	qword ptr [rbp - 88], rax
	mov	qword ptr [rbp - 864], rdi 
	mov	rdi, r10
	mov	byte ptr [rbp - 865], sil 
	mov	esi, r8d
	mov	rax, qword ptr [rbp - 864] 
	mov	dword ptr [rbp - 872], edx 
	mov	rdx, rax
	mov	dword ptr [rbp - 876], r8d 
	mov	dword ptr [rbp - 880], ecx 
	call	memset
	mov	qword ptr [rbp - 520], 0
	mov	ecx, dword ptr [x.34]
	mov	esi, dword ptr [y.35]
	mov	r8d, dword ptr [rbp - 876] 
	sub	r8d, 1
	mov	r9d, ecx
	add	r9d, r8d
	imul	ecx, r9d
	and	ecx, 1
	cmp	ecx, 0
	sete	bl
	cmp	esi, 10
	setl	r14b
	mov	r15b, bl
	xor	r15b, -1
	mov	r12b, r14b
	xor	r12b, -1
	mov	r13b, byte ptr [rbp - 865] 
	xor	r13b, 0
	mov	al, r15b
	and	al, 0
	and	bl, r13b
	mov	cl, r12b
	and	cl, 0
	and	r14b, r13b
	or	al, bl
	or	cl, r14b
	xor	al, cl
	or	r15b, r12b
	xor	r15b, -1
	or	r13b, 0
	and	r15b, r13b
	or	al, r15b
	test	al, 1
	mov	esi, dword ptr [rbp - 880] 
	mov	r8d, dword ptr [rbp - 872] 
	cmovne	esi, r8d
	mov	dword ptr [rbp - 612], esi
	jmp	.LBB14_62
.LBB14_12:                              
	mov	dword ptr [rbp - 612], 1377570255
	jmp	.LBB14_62
.LBB14_13:                              
	mov	eax, 1937042986
	mov	ecx, 1801008013
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.34]
	mov	r8d, dword ptr [y.35]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 1
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, -1
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 1
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 612], eax
	jmp	.LBB14_62
.LBB14_14:                              
	mov	eax, 1937042986
	mov	ecx, 1938294587
	mov	dl, 1
	movabs	rsi, 7515784427065269634
	mov	rdi, qword ptr [rbp - 520]
	mov	r8, qword ptr [rbp - 88]
	sub	r8, rsi
	sub	r8, 1
	add	r8, rsi
	cmp	rdi, r8
	setb	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 42], r9b
	mov	r10d, dword ptr [x.34]
	mov	r11d, dword ptr [y.35]
	mov	ebx, r10d
	sub	ebx, -1384927984
	sub	ebx, 1
	add	ebx, -1384927984
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r9b
	cmp	r11d, 10
	setl	r14b
	mov	r15b, r9b
	xor	r15b, -1
	mov	r12b, r14b
	xor	r12b, -1
	xor	dl, 0
	mov	r13b, r15b
	and	r13b, 0
	and	r9b, dl
	mov	sil, r12b
	and	sil, 0
	and	r14b, dl
	or	r13b, r9b
	or	sil, r14b
	xor	r13b, sil
	or	r15b, r12b
	xor	r15b, -1
	or	dl, 0
	and	r15b, dl
	or	r13b, r15b
	test	r13b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 612], eax
	jmp	.LBB14_62
.LBB14_15:                              
	mov	eax, 1103510585
	mov	ecx, 3769229437
	mov	dl, byte ptr [rbp - 42]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 612], eax
	jmp	.LBB14_62
.LBB14_16:                              
	lea	rax, [rbp - 512]
	mov	rcx, qword ptr [rbp - 520]
	shl	rcx, 3
	shl	rcx, 2
	add	rax, rcx
	mov	rdi, qword ptr [rbp - 80]
	mov	qword ptr [rbp - 888], rax 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4dataEv
	xor	edx, edx
	mov	ecx, edx
	mov	rdi, qword ptr [rbp - 520]
	shl	rdi, 2
	mov	rsi, rcx
	sub	rsi, rdi
	mov	rdi, rcx
	sub	rdi, 4
	add	rsi, rdi
	sub	rcx, rsi
	mov	rdi, qword ptr [rbp - 888] 
	mov	rsi, rax
	mov	rdx, rcx
	call	_ZN5Botan12_GLOBAL__N_19ks_expandEPjPKjm
	mov	dword ptr [rbp - 612], -698149631
	jmp	.LBB14_62
.LBB14_17:                              
	mov	eax, 1754476665
	mov	ecx, 1838360561
	mov	dl, 1
	mov	esi, dword ptr [x.34]
	mov	edi, dword ptr [y.35]
	mov	r8d, esi
	add	r8d, 876185719
	sub	r8d, 1
	sub	r8d, 876185719
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 1
	mov	r14b, r11b
	and	r14b, -1
	and	r9b, dl
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 1
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 612], eax
	jmp	.LBB14_62
.LBB14_18:                              
	mov	eax, 1754476665
	mov	ecx, 2933766021
	mov	dl, 1
	xor	esi, esi
	movabs	rdi, -7228355715173453122
	mov	r8, qword ptr [rbp - 520]
	sub	r8, rdi
	add	r8, 1
	add	r8, rdi
	mov	qword ptr [rbp - 520], r8
	mov	r9d, dword ptr [x.34]
	mov	r10d, dword ptr [y.35]
	sub	esi, 1
	mov	r11d, r9d
	add	r11d, esi
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	bl
	cmp	r10d, 10
	setl	r14b
	mov	r15b, bl
	xor	r15b, -1
	mov	r12b, r14b
	xor	r12b, -1
	xor	dl, 1
	mov	r13b, r15b
	and	r13b, -1
	and	bl, dl
	mov	sil, r12b
	and	sil, -1
	and	r14b, dl
	or	r13b, bl
	or	sil, r14b
	xor	r13b, sil
	or	r15b, r12b
	xor	r15b, -1
	or	dl, 1
	and	r15b, dl
	or	r13b, r15b
	test	r13b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 612], eax
	jmp	.LBB14_62
.LBB14_19:                              
	mov	dword ptr [rbp - 612], 1377570255
	jmp	.LBB14_62
.LBB14_20:                              
	mov	qword ptr [rbp - 528], 16
	mov	qword ptr [rbp - 536], 2
	mov	dword ptr [rbp - 612], 303262834
	jmp	.LBB14_62
.LBB14_21:                              
	mov	eax, 1973214674
	mov	ecx, 378207674
	cmp	qword ptr [rbp - 72], 0
	cmova	eax, ecx
	mov	dword ptr [rbp - 612], eax
	jmp	.LBB14_62
.LBB14_22:                              
	lea	rdi, [rbp - 72]
	lea	rsi, [rbp - 536]
	call	_ZSt3minImERKT_S2_S2_
	lea	rsi, [rbp - 576]
	xor	ecx, ecx
	mov	edx, 32

	mov	rax, qword ptr [rax]
	mov	qword ptr [rbp - 544], rax
	mov	rax, rsi
	mov	rdi, rax
	mov	qword ptr [rbp - 896], rsi 
	mov	esi, ecx
	call	memset
	mov	rsi, qword ptr [rbp - 56]
	mov	rax, qword ptr [rbp - 544]
	shl	rax, 2
	mov	rdi, qword ptr [rbp - 896] 
	mov	rdx, rax
	call	_ZN5Botan7load_beIjEEvPT_PKhm
	mov	ecx, 8
	mov	esi, ecx
	lea	rdi, [rbp - 576]
	call	_ZN5Botan2CT6poisonIjEEvPKT_m
	mov	qword ptr [rbp - 584], 0
	mov	dword ptr [rbp - 612], 283528709
	jmp	.LBB14_62
.LBB14_23:                              
	mov	eax, 1578142008
	mov	ecx, 2111823873
	mov	dl, 1
	mov	esi, dword ptr [x.34]
	mov	edi, dword ptr [y.35]
	mov	r8d, esi
	add	r8d, 1297548866
	sub	r8d, 1
	sub	r8d, 1297548866
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 1
	mov	r14b, r11b
	and	r14b, -1
	and	r9b, dl
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 1
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 612], eax
	jmp	.LBB14_62
.LBB14_24:                              
	mov	eax, 1578142008
	mov	ecx, 3431623444
	mov	dl, 1
	cmp	qword ptr [rbp - 584], 8
	setne	sil
	and	sil, 1
	mov	byte ptr [rbp - 41], sil
	mov	edi, dword ptr [x.34]
	mov	r8d, dword ptr [y.35]
	mov	r9d, edi
	add	r9d, 1335062706
	sub	r9d, 1
	sub	r9d, 1335062706
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	sil
	cmp	r8d, 10
	setl	r10b
	mov	r11b, sil
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 0
	mov	r14b, r11b
	and	r14b, 0
	and	sil, dl
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	or	r14b, sil
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 0
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 612], eax
	jmp	.LBB14_62
.LBB14_25:                              
	mov	eax, 3517010611
	mov	ecx, 2357619592
	mov	dl, byte ptr [rbp - 41]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 612], eax
	jmp	.LBB14_62
.LBB14_26:                              
	mov	rdi, qword ptr [rbp - 80]
	mov	rax, qword ptr [rbp - 584]
	and	rax, 3
	mov	rsi, rax
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	ecx, 4294967295
	mov	edx, dword ptr [rax]
	mov	rax, qword ptr [rbp - 584]
	mov	r8d, dword ptr [rbp + 4*rax - 576]
	mov	r9d, r8d
	xor	r9d, -1
	and	r9d, 635704602
	xor	ecx, 635704602
	and	r8d, ecx
	mov	r10d, edx
	xor	r10d, -1
	and	r10d, 635704602
	and	edx, ecx
	or	r9d, r8d
	or	r10d, edx
	xor	r9d, r10d
	mov	dword ptr [rbp + 4*rax - 576], r9d
	mov	dword ptr [rbp - 612], 1659718487
	jmp	.LBB14_62
.LBB14_27:                              
	xor	eax, eax
	mov	ecx, eax
	mov	rdx, qword ptr [rbp - 584]
	mov	rsi, rcx
	sub	rsi, rdx
	mov	rdx, rcx
	sub	rdx, 1
	add	rsi, rdx
	sub	rcx, rsi
	mov	qword ptr [rbp - 584], rcx
	mov	dword ptr [rbp - 612], 283528709
	jmp	.LBB14_62
.LBB14_28:                              
	lea	rdi, [rbp - 576]
	call	_ZN5Botan12_GLOBAL__N_113bit_transposeEPj
	mov	qword ptr [rbp - 592], 0
	mov	dword ptr [rbp - 612], -567457505
	jmp	.LBB14_62
.LBB14_29:                              
	mov	eax, 2920337635
	mov	ecx, 1213874859
	movabs	rdx, 8787467007018712757
	mov	rsi, qword ptr [rbp - 592]
	mov	rdi, qword ptr [rbp - 88]
	add	rdi, rdx
	sub	rdi, 1
	sub	rdi, rdx
	cmp	rsi, rdi
	cmovne	eax, ecx
	mov	dword ptr [rbp - 612], eax
	jmp	.LBB14_62
.LBB14_30:                              
	lea	rdi, [rbp - 576]
	call	_ZN5Botan12_GLOBAL__N_18AES_SBOXEPj
	lea	rdi, [rbp - 576]
	call	_ZN5Botan12_GLOBAL__N_110shift_rowsEPj
	lea	rdi, [rbp - 576]
	call	_ZN5Botan12_GLOBAL__N_111mix_columnsEPj
	mov	qword ptr [rbp - 600], 0
	mov	dword ptr [rbp - 612], 1473846584
	jmp	.LBB14_62
.LBB14_31:                              
	mov	eax, 1555161604
	mov	ecx, 898358935
	cmp	qword ptr [rbp - 600], 8
	cmovne	eax, ecx
	mov	dword ptr [rbp - 612], eax
	jmp	.LBB14_62
.LBB14_32:                              
	mov	eax, 3138127888
	mov	ecx, 3851802970
	mov	dl, 1
	mov	esi, dword ptr [x.34]
	mov	edi, dword ptr [y.35]
	mov	r8d, esi
	add	r8d, -1192449952
	sub	r8d, 1
	sub	r8d, -1192449952
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 1
	mov	r14b, r11b
	and	r14b, -1
	and	r9b, dl
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 1
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 612], eax
	jmp	.LBB14_62
.LBB14_33:                              
	mov	eax, 3138127888
	mov	ecx, 1476691067
	mov	dl, 1
	xor	esi, esi
	xor	edi, edi
	mov	r8d, edi
	mov	r9, qword ptr [rbp - 592]
	shl	r9, 3
	mov	r10, qword ptr [rbp - 600]
	mov	r11, r8
	sub	r11, r9
	mov	r9, r8
	sub	r9, r10
	add	r11, r9
	sub	r8, r11
	mov	edi, dword ptr [rbp + 4*r8 - 512]
	mov	r8, qword ptr [rbp - 600]
	mov	ebx, dword ptr [rbp + 4*r8 - 576]
	mov	r14d, ebx
	xor	r14d, -1
	mov	r15d, edi
	and	r15d, r14d
	xor	edi, -1
	and	ebx, edi
	or	r15d, ebx
	mov	dword ptr [rbp + 4*r8 - 576], r15d
	mov	edi, dword ptr [x.34]
	mov	ebx, dword ptr [y.35]
	sub	esi, 1
	mov	r14d, edi
	add	r14d, esi
	imul	edi, r14d
	and	edi, 1
	cmp	edi, 0
	sete	r12b
	cmp	ebx, 10
	setl	r13b
	mov	sil, r12b
	xor	sil, -1
	mov	dil, r13b
	xor	dil, -1
	xor	dl, 0
	mov	r8b, sil
	and	r8b, 0
	and	r12b, dl
	mov	r9b, dil
	and	r9b, 0
	and	r13b, dl
	or	r8b, r12b
	or	r9b, r13b
	xor	r8b, r9b
	or	sil, dil
	xor	sil, -1
	or	dl, 0
	and	sil, dl
	or	r8b, sil
	test	r8b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 612], eax
	jmp	.LBB14_62
.LBB14_34:                              
	mov	dword ptr [rbp - 612], -820208027
	jmp	.LBB14_62
.LBB14_35:                              
	movabs	rax, -2842436856871515507
	mov	rcx, qword ptr [rbp - 600]
	add	rcx, rax
	add	rcx, 1
	sub	rcx, rax
	mov	qword ptr [rbp - 600], rcx
	mov	dword ptr [rbp - 612], 1473846584
	jmp	.LBB14_62
.LBB14_36:                              
	mov	dword ptr [rbp - 612], -82230070
	jmp	.LBB14_62
.LBB14_37:                              
	movabs	rax, 2425189079109331810
	mov	rcx, qword ptr [rbp - 592]
	add	rcx, rax
	add	rcx, 1
	sub	rcx, rax
	mov	qword ptr [rbp - 592], rcx
	mov	dword ptr [rbp - 612], -567457505
	jmp	.LBB14_62
.LBB14_38:                              
	mov	eax, 4186180589
	mov	ecx, 2924981653
	xor	edx, edx
	mov	esi, dword ptr [x.34]
	mov	edi, dword ptr [y.35]
	sub	edx, 1
	mov	r8d, esi
	add	r8d, edx
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	and	r11b, r10b
	xor	r9b, r10b
	or	r11b, r9b
	test	r11b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 612], eax
	jmp	.LBB14_62
.LBB14_39:                              
	lea	rdi, [rbp - 576]
	call	_ZN5Botan12_GLOBAL__N_18AES_SBOXEPj
	lea	rdi, [rbp - 576]
	call	_ZN5Botan12_GLOBAL__N_110shift_rowsEPj
	lea	rdi, [rbp - 576]
	call	_ZN5Botan12_GLOBAL__N_113bit_transposeEPj
	mov	eax, 4186180589
	mov	ecx, 495424114
	mov	qword ptr [rbp - 608], 0
	mov	edx, dword ptr [x.34]
	mov	esi, dword ptr [y.35]
	mov	r8d, edx
	add	r8d, -1721814985
	sub	r8d, 1
	sub	r8d, -1721814985
	imul	edx, r8d
	and	edx, 1
	cmp	edx, 0
	sete	r9b
	cmp	esi, 10
	setl	r10b
	mov	r11b, r9b
	and	r11b, r10b
	xor	r9b, r10b
	or	r11b, r9b
	test	r11b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 612], eax
	jmp	.LBB14_62
.LBB14_40:                              
	mov	dword ptr [rbp - 612], 1570583184
	jmp	.LBB14_62
.LBB14_41:                              
	mov	eax, 419791829
	mov	ecx, 1306343746
	cmp	qword ptr [rbp - 608], 8
	cmovne	eax, ecx
	mov	dword ptr [rbp - 612], eax
	jmp	.LBB14_62
.LBB14_42:                              
	mov	eax, 3815244594
	mov	ecx, 930969786
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.34]
	mov	r8d, dword ptr [y.35]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 1
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, -1
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 1
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 612], eax
	jmp	.LBB14_62
.LBB14_43:                              
	movabs	rax, 50856054382891175
	mov	rdi, qword ptr [rbp - 80]
	mov	rcx, qword ptr [rbp - 88]
	shl	rcx, 2
	mov	rdx, qword ptr [rbp - 608]
	and	rdx, 3
	add	rcx, rax
	add	rcx, rdx
	sub	rcx, rax
	mov	rsi, rcx
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	r8d, 3815244594
	mov	r9d, 90300682
	mov	r10b, 1
	mov	r11d, dword ptr [rax]
	mov	rax, qword ptr [rbp - 608]
	mov	ebx, dword ptr [rbp + 4*rax - 576]
	mov	r14d, ebx
	xor	r14d, -1
	mov	r15d, r11d
	and	r15d, r14d
	xor	r11d, -1
	and	ebx, r11d
	or	r15d, ebx
	mov	dword ptr [rbp + 4*rax - 576], r15d
	mov	r11d, dword ptr [x.34]
	mov	ebx, dword ptr [y.35]
	mov	r14d, r11d
	sub	r14d, -1676845529
	sub	r14d, 1
	add	r14d, -1676845529
	imul	r11d, r14d
	and	r11d, 1
	cmp	r11d, 0
	sete	r12b
	cmp	ebx, 10
	setl	r13b
	mov	al, r12b
	xor	al, -1
	mov	cl, r13b
	xor	cl, -1
	xor	r10b, 1
	mov	dl, al
	and	dl, -1
	and	r12b, r10b
	mov	sil, cl
	and	sil, -1
	and	r13b, r10b
	or	dl, r12b
	or	sil, r13b
	xor	dl, sil
	or	al, cl
	xor	al, -1
	or	r10b, 1
	and	al, r10b
	or	dl, al
	test	dl, 1
	cmovne	r8d, r9d
	mov	dword ptr [rbp - 612], r8d
	jmp	.LBB14_62
.LBB14_44:                              
	mov	dword ptr [rbp - 612], -1833012544
	jmp	.LBB14_62
.LBB14_45:                              
	mov	eax, 4053622675
	mov	ecx, 2416899933
	xor	edx, edx
	mov	esi, dword ptr [x.34]
	mov	edi, dword ptr [y.35]
	sub	edx, 1
	mov	r8d, esi
	add	r8d, edx
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	and	r11b, r10b
	xor	r9b, r10b
	or	r11b, r9b
	test	r11b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 612], eax
	jmp	.LBB14_62
.LBB14_46:                              
	mov	eax, 4053622675
	mov	ecx, 2095357098
	xor	edx, edx
	mov	esi, edx
	mov	rdi, qword ptr [rbp - 608]
	mov	r8, rsi
	sub	r8, rdi
	mov	rdi, rsi
	sub	rdi, 1
	add	r8, rdi
	sub	rsi, r8
	mov	qword ptr [rbp - 608], rsi
	mov	edx, dword ptr [x.34]
	mov	r9d, dword ptr [y.35]
	mov	r10d, edx
	add	r10d, 1880178063
	sub	r10d, 1
	sub	r10d, 1880178063
	imul	edx, r10d
	and	edx, 1
	cmp	edx, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 612], eax
	jmp	.LBB14_62
.LBB14_47:                              
	mov	dword ptr [rbp - 612], 1570583184
	jmp	.LBB14_62
.LBB14_48:                              
	mov	eax, 8
	mov	esi, eax
	lea	rdi, [rbp - 576]
	call	_ZN5Botan2CT8unpoisonIjEEvPKT_m
	lea	rdx, [rbp - 576]
	mov	rdi, qword ptr [rbp - 64]
	mov	rsi, qword ptr [rbp - 544]
	shl	rsi, 2
	shl	rsi, 2
	call	_ZN5Botan11copy_out_beIjEEvPhmPKT_
	xor	eax, eax
	mov	edx, eax
	mov	rsi, qword ptr [rbp - 544]
	shl	rsi, 4
	add	rsi, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 56], rsi
	mov	rsi, qword ptr [rbp - 544]
	shl	rsi, 4
	add	rsi, qword ptr [rbp - 64]
	mov	qword ptr [rbp - 64], rsi
	mov	rsi, qword ptr [rbp - 544]
	mov	rdi, qword ptr [rbp - 72]
	sub	rdx, rsi
	add	rdi, rdx
	mov	qword ptr [rbp - 72], rdi
	mov	dword ptr [rbp - 612], 303262834
	jmp	.LBB14_62
.LBB14_49:                              
	mov	eax, 636342971
	mov	ecx, 1320089013
	mov	dl, 1
	mov	esi, dword ptr [x.34]
	mov	edi, dword ptr [y.35]
	mov	r8d, esi
	add	r8d, -275344369
	sub	r8d, 1
	sub	r8d, -275344369
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 1
	mov	r14b, r11b
	and	r14b, -1
	and	r9b, dl
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 1
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 612], eax
	jmp	.LBB14_62
.LBB14_50:                              
	mov	eax, 636342971
	mov	ecx, 237353308
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.34]
	mov	r8d, dword ptr [y.35]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 0
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, 0
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 0
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 612], eax
	jmp	.LBB14_62
.LBB14_51:
	add	rsp, 856
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB14_52:                              
	mov	dword ptr [rbp - 612], -975828677
	jmp	.LBB14_62
.LBB14_53:                              
	mov	rdi, qword ptr [rbp - 80]
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	xor	esi, esi
	mov	ecx, 416
	mov	edx, ecx
	lea	rdi, [rbp - 512]
	movabs	r8, 3038018370485434173
	sub	rax, r8
	sub	rax, 4
	add	rax, r8
	shr	rax, 2
	mov	qword ptr [rbp - 88], rax
	call	memset
	mov	qword ptr [rbp - 520], 0
	mov	dword ptr [rbp - 612], -128919285
	jmp	.LBB14_62
.LBB14_54:                              
	mov	dword ptr [rbp - 612], 1801008013
	jmp	.LBB14_62
.LBB14_55:                              
	xor	eax, eax
	mov	ecx, eax
	mov	rdx, qword ptr [rbp - 520]
	sub	rcx, 1
	sub	rdx, rcx
	mov	qword ptr [rbp - 520], rdx
	mov	dword ptr [rbp - 612], 1838360561
	jmp	.LBB14_62
.LBB14_56:                              
	mov	dword ptr [rbp - 612], 2111823873
	jmp	.LBB14_62
.LBB14_57:                              
	movabs	rax, 6284970990057796547
	mov	rcx, qword ptr [rbp - 592]
	shl	rcx, 3
	mov	rdx, qword ptr [rbp - 600]
	add	rcx, rax
	add	rcx, rdx
	sub	rcx, rax
	mov	esi, dword ptr [rbp + 4*rcx - 512]
	mov	rax, qword ptr [rbp - 600]
	mov	edi, dword ptr [rbp + 4*rax - 576]
	mov	r8d, edi
	xor	r8d, -1
	mov	r9d, esi
	and	r9d, r8d
	xor	esi, -1
	and	edi, esi
	or	r9d, edi
	mov	dword ptr [rbp + 4*rax - 576], r9d
	mov	dword ptr [rbp - 612], -443164326
	jmp	.LBB14_62
.LBB14_58:                              
	lea	rdi, [rbp - 576]
	call	_ZN5Botan12_GLOBAL__N_18AES_SBOXEPj
	lea	rdi, [rbp - 576]
	call	_ZN5Botan12_GLOBAL__N_110shift_rowsEPj
	lea	rdi, [rbp - 576]
	call	_ZN5Botan12_GLOBAL__N_113bit_transposeEPj
	mov	qword ptr [rbp - 608], 0
	mov	dword ptr [rbp - 612], -1369985643
	jmp	.LBB14_62
.LBB14_59:                              
	movabs	rax, 8023560149496215557
	mov	rdi, qword ptr [rbp - 80]
	mov	rcx, qword ptr [rbp - 88]
	shl	rcx, 2
	mov	rdx, qword ptr [rbp - 608]
	and	rdx, 3
	sub	rcx, rax
	add	rcx, rdx
	add	rcx, rax
	mov	rsi, rcx
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	r8d, 4294967295
	mov	r9d, dword ptr [rax]
	mov	rax, qword ptr [rbp - 608]
	mov	r10d, dword ptr [rbp + 4*rax - 576]
	mov	r11d, r10d
	xor	r11d, -1
	and	r11d, 3321659836
	xor	r8d, 3321659836
	and	r10d, r8d
	mov	ebx, r9d
	xor	ebx, -1
	and	ebx, -973307460
	and	r9d, r8d
	or	r11d, r10d
	or	ebx, r9d
	xor	r11d, ebx
	mov	dword ptr [rbp + 4*rax - 576], r11d
	mov	dword ptr [rbp - 612], 930969786
	jmp	.LBB14_62
.LBB14_60:                              
	xor	eax, eax
	mov	ecx, eax
	mov	rdx, qword ptr [rbp - 608]
	mov	rsi, rcx
	sub	rsi, rdx
	mov	rdx, rcx
	sub	rdx, 1
	add	rsi, rdx
	sub	rcx, rsi
	mov	qword ptr [rbp - 608], rcx
	mov	dword ptr [rbp - 612], -1878067363
	jmp	.LBB14_62
.LBB14_61:                              
	mov	dword ptr [rbp - 612], 1320089013
.LBB14_62:                              
	jmp	.LBB14_1
.Lfunc_end14:
	.size	_ZN5Botan12_GLOBAL__N_113aes_encrypt_nEPKhPhmRKSt6vectorIjNS_16secure_allocatorIjEEE, .Lfunc_end14-_ZN5Botan12_GLOBAL__N_113aes_encrypt_nEPKhPhmRKSt6vectorIjNS_16secure_allocatorIjEEE
	.cfi_endproc

	.globl	_ZNK5Botan7AES_1289decrypt_nEPKhPhm 
	.p2align	4, 0x90
	.type	_ZNK5Botan7AES_1289decrypt_nEPKhPhm,@function
_ZNK5Botan7AES_1289decrypt_nEPKhPhm:    
	.cfi_startproc

	push	rbp
.Lcfi64:
	.cfi_def_cfa_offset 16
.Lcfi65:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi66:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 152
.Lcfi67:
	.cfi_offset rbx, -56
.Lcfi68:
	.cfi_offset r12, -48
.Lcfi69:
	.cfi_offset r13, -40
.Lcfi70:
	.cfi_offset r14, -32
.Lcfi71:
	.cfi_offset r15, -24
	xor	eax, eax
	mov	r8d, dword ptr [x.36]
	mov	r9d, dword ptr [y.37]
	sub	eax, 1
	mov	r10d, r8d
	add	r10d, eax
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	and	r11b, 1
	mov	byte ptr [rbp - 82], r11b
	cmp	r9d, 10
	setl	r11b
	and	r11b, 1
	mov	byte ptr [rbp - 81], r11b
	mov	dword ptr [rbp - 88], -132872983
	mov	qword ptr [rbp - 96], rdx 
	mov	qword ptr [rbp - 104], rsi 
	mov	qword ptr [rbp - 112], rdi 
	mov	qword ptr [rbp - 120], rcx 
.LBB15_1:                               
	mov	eax, dword ptr [rbp - 88]
	mov	ecx, eax
	sub	ecx, -1732814634
	mov	dword ptr [rbp - 124], eax 
	mov	dword ptr [rbp - 128], ecx 
	je	.LBB15_5
	jmp	.LBB15_13
.LBB15_13:                              
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, -1617682524
	mov	dword ptr [rbp - 132], eax 
	je	.LBB15_10
	jmp	.LBB15_14
.LBB15_14:                              
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, -150250676
	mov	dword ptr [rbp - 136], eax 
	je	.LBB15_4
	jmp	.LBB15_15
.LBB15_15:                              
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, -132872983
	mov	dword ptr [rbp - 140], eax 
	je	.LBB15_3
	jmp	.LBB15_16
.LBB15_16:                              
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, 505227202
	mov	dword ptr [rbp - 144], eax 
	je	.LBB15_6
	jmp	.LBB15_17
.LBB15_17:                              
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, 1257092181
	mov	dword ptr [rbp - 148], eax 
	je	.LBB15_7
	jmp	.LBB15_18
.LBB15_18:                              
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, 1480180874
	mov	dword ptr [rbp - 152], eax 
	je	.LBB15_11
	jmp	.LBB15_19
.LBB15_19:                              
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, 2000030065
	mov	dword ptr [rbp - 156], eax 
	je	.LBB15_9
	jmp	.LBB15_20
.LBB15_20:                              
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, 2008817503
	mov	dword ptr [rbp - 160], eax 
	je	.LBB15_8
	jmp	.LBB15_2
.LBB15_2:                               
	jmp	.LBB15_12
.LBB15_3:                               
	mov	eax, 1480180874
	mov	ecx, 4144716620
	mov	dl, byte ptr [rbp - 82]
	mov	sil, byte ptr [rbp - 81]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 88], eax
	jmp	.LBB15_12
.LBB15_4:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	qword ptr [rbp - 80], rcx
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	qword ptr [rbp - 72], rcx
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	qword ptr [rbp - 64], rcx
	mov	rcx, qword ptr [rbp - 112] 
	mov	qword ptr [rax], rcx
	mov	rdx, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rbp - 104] 
	mov	qword ptr [rdx], rsi
	mov	rdx, qword ptr [rbp - 72]
	mov	rdi, qword ptr [rbp - 96] 
	mov	qword ptr [rdx], rdi
	mov	rdx, qword ptr [rbp - 64]
	mov	r8, qword ptr [rbp - 120] 
	mov	qword ptr [rdx], r8
	mov	rax, qword ptr [rax]
	mov	qword ptr [rbp - 56], rax
	mov	rax, qword ptr [rbp - 56]
	mov	rdx, qword ptr [rbp - 56]
	add	rdx, 32
	mov	rdi, rdx
	mov	qword ptr [rbp - 168], rax 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE5emptyEv
	and	al, 1
	movzx	r9d, al
	cmp	r9d, 0
	sete	al
	and	al, 1
	movzx	esi, al
	mov	rdi, qword ptr [rbp - 168] 
	call	_ZNK5Botan18SymmetricAlgorithm14verify_key_setEb
	call	_ZN5Botan5CPUID10has_hw_aesEv
	mov	esi, 1480180874
	mov	r9d, 2562152662
	mov	r10b, 1
	and	al, 1
	mov	byte ptr [rbp - 41], al
	mov	r11d, dword ptr [x.36]
	mov	ebx, dword ptr [y.37]
	mov	r14d, r11d
	sub	r14d, -870415115
	sub	r14d, 1
	add	r14d, -870415115
	imul	r11d, r14d
	and	r11d, 1
	cmp	r11d, 0
	sete	al
	cmp	ebx, 10
	setl	r15b
	mov	r12b, al
	xor	r12b, -1
	mov	r13b, r15b
	xor	r13b, -1
	xor	r10b, 1
	mov	cl, r12b
	and	cl, -1
	and	al, r10b
	mov	dl, r13b
	and	dl, -1
	and	r15b, r10b
	or	cl, al
	or	dl, r15b
	xor	cl, dl
	or	r12b, r13b
	xor	r12b, -1
	or	r10b, 1
	and	r12b, r10b
	or	cl, r12b
	test	cl, 1
	cmovne	esi, r9d
	mov	dword ptr [rbp - 88], esi
	jmp	.LBB15_12
.LBB15_5:                               
	mov	eax, 1257092181
	mov	ecx, 505227202
	mov	dl, byte ptr [rbp - 41]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 88], eax
	jmp	.LBB15_12
.LBB15_6:                               
	mov	rax, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 72]
	mov	rdx, qword ptr [rax]
	mov	rax, qword ptr [rbp - 64]
	mov	rcx, qword ptr [rax]
	mov	rdi, qword ptr [rbp - 56]
	call	_ZNK5Botan7AES_12816hw_aes_decrypt_nEPKhPhm
	mov	dword ptr [rbp - 88], -1617682524
	jmp	.LBB15_12
.LBB15_7:                               
	call	_ZN5Botan5CPUID9has_vpermEv
	mov	ecx, 2000030065
	mov	edx, 2008817503
	test	al, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 88], ecx
	jmp	.LBB15_12
.LBB15_8:                               
	mov	rax, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 72]
	mov	rdx, qword ptr [rax]
	mov	rax, qword ptr [rbp - 64]
	mov	rcx, qword ptr [rax]
	mov	rdi, qword ptr [rbp - 56]
	call	_ZNK5Botan7AES_12815vperm_decrypt_nEPKhPhm
	mov	dword ptr [rbp - 88], -1617682524
	jmp	.LBB15_12
.LBB15_9:                               
	mov	rax, qword ptr [rbp - 80]
	mov	rdi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 64]
	mov	rdx, qword ptr [rax]
	mov	rax, qword ptr [rbp - 56]
	add	rax, 32
	mov	rcx, rax
	call	_ZN5Botan12_GLOBAL__N_113aes_decrypt_nEPKhPhmRKSt6vectorIjNS_16secure_allocatorIjEEE
	mov	dword ptr [rbp - 88], -1617682524
	jmp	.LBB15_12
.LBB15_10:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB15_11:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 112] 
	mov	qword ptr [rax], rdi
	mov	r8, qword ptr [rbp - 104] 
	mov	qword ptr [rcx], r8
	mov	rcx, qword ptr [rbp - 96] 
	mov	qword ptr [rdx], rcx
	mov	rdx, qword ptr [rbp - 120] 
	mov	qword ptr [rsi], rdx
	mov	rax, qword ptr [rax]
	mov	rsi, rax
	add	rax, 32
	mov	rdi, rax
	mov	qword ptr [rbp - 176], rsi 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE5emptyEv
	and	al, 1
	movzx	r9d, al
	cmp	r9d, 0
	sete	al
	and	al, 1
	movzx	esi, al
	mov	rdi, qword ptr [rbp - 176] 
	call	_ZNK5Botan18SymmetricAlgorithm14verify_key_setEb
	call	_ZN5Botan5CPUID10has_hw_aesEv
	mov	dword ptr [rbp - 88], -150250676
	mov	byte ptr [rbp - 177], al 
.LBB15_12:                              
	jmp	.LBB15_1
.Lfunc_end15:
	.size	_ZNK5Botan7AES_1289decrypt_nEPKhPhm, .Lfunc_end15-_ZNK5Botan7AES_1289decrypt_nEPKhPhm
	.cfi_endproc

	.p2align	4, 0x90         
	.type	_ZN5Botan12_GLOBAL__N_113aes_decrypt_nEPKhPhmRKSt6vectorIjNS_16secure_allocatorIjEEE,@function
_ZN5Botan12_GLOBAL__N_113aes_decrypt_nEPKhPhmRKSt6vectorIjNS_16secure_allocatorIjEEE: 
	.cfi_startproc

	push	rbp
.Lcfi72:
	.cfi_def_cfa_offset 16
.Lcfi73:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi74:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	sub	rsp, 800
.Lcfi75:
	.cfi_offset rbx, -48
.Lcfi76:
	.cfi_offset r12, -40
.Lcfi77:
	.cfi_offset r14, -32
.Lcfi78:
	.cfi_offset r15, -24
	mov	qword ptr [rbp - 48], rdi
	mov	qword ptr [rbp - 56], rsi
	mov	qword ptr [rbp - 64], rdx
	mov	qword ptr [rbp - 72], rcx
	mov	dword ptr [rbp - 596], -320110854
.LBB16_1:                               
	mov	eax, dword ptr [rbp - 596]
	mov	ecx, eax
	sub	ecx, -1882270560
	mov	dword ptr [rbp - 600], eax 
	mov	dword ptr [rbp - 604], ecx 
	je	.LBB16_6
	jmp	.LBB16_48
.LBB16_48:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, -1862150016
	mov	dword ptr [rbp - 608], eax 
	je	.LBB16_45
	jmp	.LBB16_49
.LBB16_49:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, -1584592363
	mov	dword ptr [rbp - 612], eax 
	je	.LBB16_43
	jmp	.LBB16_50
.LBB16_50:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, -1510311482
	mov	dword ptr [rbp - 616], eax 
	je	.LBB16_21
	jmp	.LBB16_51
.LBB16_51:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, -1458963224
	mov	dword ptr [rbp - 620], eax 
	je	.LBB16_37
	jmp	.LBB16_52
.LBB16_52:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, -1260771176
	mov	dword ptr [rbp - 624], eax 
	je	.LBB16_31
	jmp	.LBB16_53
.LBB16_53:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, -1205864233
	mov	dword ptr [rbp - 628], eax 
	je	.LBB16_35
	jmp	.LBB16_54
.LBB16_54:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, -1202463047
	mov	dword ptr [rbp - 632], eax 
	je	.LBB16_23
	jmp	.LBB16_55
.LBB16_55:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, -1052866697
	mov	dword ptr [rbp - 636], eax 
	je	.LBB16_11
	jmp	.LBB16_56
.LBB16_56:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, -1022338624
	mov	dword ptr [rbp - 640], eax 
	je	.LBB16_20
	jmp	.LBB16_57
.LBB16_57:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, -991161257
	mov	dword ptr [rbp - 644], eax 
	je	.LBB16_28
	jmp	.LBB16_58
.LBB16_58:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, -872826912
	mov	dword ptr [rbp - 648], eax 
	je	.LBB16_16
	jmp	.LBB16_59
.LBB16_59:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, -722820185
	mov	dword ptr [rbp - 652], eax 
	je	.LBB16_13
	jmp	.LBB16_60
.LBB16_60:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, -552178352
	mov	dword ptr [rbp - 656], eax 
	je	.LBB16_10
	jmp	.LBB16_61
.LBB16_61:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, -504338636
	mov	dword ptr [rbp - 660], eax 
	je	.LBB16_40
	jmp	.LBB16_62
.LBB16_62:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, -447697922
	mov	dword ptr [rbp - 664], eax 
	je	.LBB16_22
	jmp	.LBB16_63
.LBB16_63:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, -320110854
	mov	dword ptr [rbp - 668], eax 
	je	.LBB16_3
	jmp	.LBB16_64
.LBB16_64:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, -202741463
	mov	dword ptr [rbp - 672], eax 
	je	.LBB16_18
	jmp	.LBB16_65
.LBB16_65:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, -69815529
	mov	dword ptr [rbp - 676], eax 
	je	.LBB16_19
	jmp	.LBB16_66
.LBB16_66:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, 41594680
	mov	dword ptr [rbp - 680], eax 
	je	.LBB16_33
	jmp	.LBB16_67
.LBB16_67:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, 72387109
	mov	dword ptr [rbp - 684], eax 
	je	.LBB16_39
	jmp	.LBB16_68
.LBB16_68:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, 380814908
	mov	dword ptr [rbp - 688], eax 
	je	.LBB16_27
	jmp	.LBB16_69
.LBB16_69:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, 393155042
	mov	dword ptr [rbp - 692], eax 
	je	.LBB16_14
	jmp	.LBB16_70
.LBB16_70:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, 564415698
	mov	dword ptr [rbp - 696], eax 
	je	.LBB16_15
	jmp	.LBB16_71
.LBB16_71:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, 591387879
	mov	dword ptr [rbp - 700], eax 
	je	.LBB16_12
	jmp	.LBB16_72
.LBB16_72:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, 672364364
	mov	dword ptr [rbp - 704], eax 
	je	.LBB16_32
	jmp	.LBB16_73
.LBB16_73:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, 712626673
	mov	dword ptr [rbp - 708], eax 
	je	.LBB16_34
	jmp	.LBB16_74
.LBB16_74:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, 915694915
	mov	dword ptr [rbp - 712], eax 
	je	.LBB16_36
	jmp	.LBB16_75
.LBB16_75:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, 1036554213
	mov	dword ptr [rbp - 716], eax 
	je	.LBB16_9
	jmp	.LBB16_76
.LBB16_76:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, 1091077169
	mov	dword ptr [rbp - 720], eax 
	je	.LBB16_8
	jmp	.LBB16_77
.LBB16_77:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, 1217127061
	mov	dword ptr [rbp - 724], eax 
	je	.LBB16_42
	jmp	.LBB16_78
.LBB16_78:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, 1281216001
	mov	dword ptr [rbp - 728], eax 
	je	.LBB16_44
	jmp	.LBB16_79
.LBB16_79:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, 1287066974
	mov	dword ptr [rbp - 732], eax 
	je	.LBB16_5
	jmp	.LBB16_80
.LBB16_80:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, 1328386280
	mov	dword ptr [rbp - 736], eax 
	je	.LBB16_46
	jmp	.LBB16_81
.LBB16_81:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, 1380206634
	mov	dword ptr [rbp - 740], eax 
	je	.LBB16_24
	jmp	.LBB16_82
.LBB16_82:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, 1485033329
	mov	dword ptr [rbp - 744], eax 
	je	.LBB16_38
	jmp	.LBB16_83
.LBB16_83:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, 1581611527
	mov	dword ptr [rbp - 748], eax 
	je	.LBB16_30
	jmp	.LBB16_84
.LBB16_84:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, 1667427019
	mov	dword ptr [rbp - 752], eax 
	je	.LBB16_26
	jmp	.LBB16_85
.LBB16_85:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, 1734420682
	mov	dword ptr [rbp - 756], eax 
	je	.LBB16_25
	jmp	.LBB16_86
.LBB16_86:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, 1741718379
	mov	dword ptr [rbp - 760], eax 
	je	.LBB16_41
	jmp	.LBB16_87
.LBB16_87:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, 1911761291
	mov	dword ptr [rbp - 764], eax 
	je	.LBB16_29
	jmp	.LBB16_88
.LBB16_88:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, 1984831080
	mov	dword ptr [rbp - 768], eax 
	je	.LBB16_7
	jmp	.LBB16_89
.LBB16_89:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, 2121883825
	mov	dword ptr [rbp - 772], eax 
	je	.LBB16_4
	jmp	.LBB16_90
.LBB16_90:                              
	mov	eax, dword ptr [rbp - 600] 
	sub	eax, 2124947038
	mov	dword ptr [rbp - 776], eax 
	je	.LBB16_17
	jmp	.LBB16_2
.LBB16_2:                               
	jmp	.LBB16_47
.LBB16_3:                               
	mov	eax, 1217127061
	mov	ecx, 2121883825
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.38]
	mov	r8d, dword ptr [y.39]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 0
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, 0
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 0
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 596], eax
	jmp	.LBB16_47
.LBB16_4:                               
	mov	rdi, qword ptr [rbp - 72]
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	mov	ecx, 1217127061
	mov	edx, 1287066974
	xor	esi, esi
	cmp	rax, 44
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 35], r8b
	mov	r9d, dword ptr [x.38]
	mov	r10d, dword ptr [y.39]
	sub	esi, 1
	mov	r11d, r9d
	add	r11d, esi
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	r8b
	cmp	r10d, 10
	setl	bl
	mov	r14b, r8b
	and	r14b, bl
	xor	r8b, bl
	or	r14b, r8b
	test	r14b, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 596], ecx
	jmp	.LBB16_47
.LBB16_5:                               
	mov	eax, 2412696736
	mov	ecx, 3242100599
	mov	dl, byte ptr [rbp - 35]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 596], eax
	jmp	.LBB16_47
.LBB16_6:                               
	mov	rdi, qword ptr [rbp - 72]
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	mov	ecx, 1984831080
	mov	edx, 3242100599
	cmp	rax, 52
	cmove	ecx, edx
	mov	dword ptr [rbp - 596], ecx
	jmp	.LBB16_47
.LBB16_7:                               
	mov	eax, 2710374933
	mov	ecx, 1091077169
	mov	dl, 1
	mov	esi, dword ptr [x.38]
	mov	edi, dword ptr [y.39]
	mov	r8d, esi
	sub	r8d, 474676428
	sub	r8d, 1
	add	r8d, 474676428
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 0
	mov	r14b, r11b
	and	r14b, 0
	and	r9b, dl
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 0
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 596], eax
	jmp	.LBB16_47
.LBB16_8:                               
	mov	rdi, qword ptr [rbp - 72]
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	mov	ecx, 2710374933
	mov	edx, 1036554213
	cmp	rax, 60
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 34], sil
	mov	r8d, dword ptr [x.38]
	mov	r9d, dword ptr [y.39]
	mov	r10d, r8d
	add	r10d, 1334083807
	sub	r10d, 1
	sub	r10d, 1334083807
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	sil
	cmp	r9d, 10
	setl	r11b
	mov	bl, sil
	and	bl, r11b
	xor	sil, r11b
	or	bl, sil
	test	bl, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 596], ecx
	jmp	.LBB16_47
.LBB16_9:                               
	mov	eax, 3742788944
	mov	ecx, 3242100599
	mov	dl, byte ptr [rbp - 34]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 596], eax
	jmp	.LBB16_47
.LBB16_10:
	movabs	rdi, .L.str.6
	movabs	rsi, .L.str.4
	movabs	rdx, .L__func__._ZN5Botan12_GLOBAL__N_113aes_decrypt_nEPKhPhmRKSt6vectorIjNS_16secure_allocatorIjEEE
	movabs	rcx, .L.str.5
	mov	r8d, 582
	call	_ZN5Botan17assertion_failureEPKcS1_S1_S1_i
.LBB16_11:                              
	mov	eax, 1281216001
	mov	ecx, 591387879
	mov	edx, dword ptr [x.38]
	mov	esi, dword ptr [y.39]
	mov	edi, edx
	add	edi, -948031397
	sub	edi, 1
	sub	edi, -948031397
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 596], eax
	jmp	.LBB16_47
.LBB16_12:                              
	mov	eax, 1281216001
	mov	ecx, 3572147111
	xor	edx, edx
	mov	esi, dword ptr [x.38]
	mov	edi, dword ptr [y.39]
	sub	edx, 1
	mov	r8d, esi
	add	r8d, edx
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	and	r11b, r10b
	xor	r9b, r10b
	or	r11b, r9b
	test	r11b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 596], eax
	jmp	.LBB16_47
.LBB16_13:                              
	mov	dword ptr [rbp - 596], 393155042
	jmp	.LBB16_47
.LBB16_14:                              
	mov	rdi, qword ptr [rbp - 72]
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	xor	esi, esi
	mov	ecx, 416
	mov	edx, ecx
	lea	rdi, [rbp - 496]
	movabs	r8, 1533643255755489012
	add	rax, r8
	sub	rax, 4
	sub	rax, r8
	shr	rax, 2
	mov	qword ptr [rbp - 80], rax
	call	memset
	mov	qword ptr [rbp - 504], 0
	mov	dword ptr [rbp - 596], 564415698
	jmp	.LBB16_47
.LBB16_15:                              
	mov	eax, 4092225833
	mov	ecx, 3422140384
	movabs	rdx, 2488989850658402117
	mov	rsi, qword ptr [rbp - 504]
	mov	rdi, qword ptr [rbp - 80]
	sub	rdi, rdx
	sub	rdi, 1
	add	rdi, rdx
	cmp	rsi, rdi
	cmovb	eax, ecx
	mov	dword ptr [rbp - 596], eax
	jmp	.LBB16_47
.LBB16_16:                              
	lea	rax, [rbp - 496]
	mov	rcx, qword ptr [rbp - 504]
	shl	rcx, 3
	shl	rcx, 2
	add	rax, rcx
	mov	rdi, qword ptr [rbp - 72]
	mov	qword ptr [rbp - 784], rax 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4dataEv
	xor	edx, edx
	mov	ecx, edx
	mov	rdi, qword ptr [rbp - 504]
	shl	rdi, 2
	sub	rcx, 4
	sub	rdi, rcx
	mov	rcx, qword ptr [rbp - 784] 
	mov	qword ptr [rbp - 792], rdi 
	mov	rdi, rcx
	mov	rsi, rax
	mov	rdx, qword ptr [rbp - 792] 
	call	_ZN5Botan12_GLOBAL__N_19ks_expandEPjPKjm
	mov	dword ptr [rbp - 596], 2124947038
	jmp	.LBB16_47
.LBB16_17:                              
	movabs	rax, -9215536274446376184
	mov	rcx, qword ptr [rbp - 504]
	sub	rcx, rax
	add	rcx, 1
	add	rcx, rax
	mov	qword ptr [rbp - 504], rcx
	mov	dword ptr [rbp - 596], 564415698
	jmp	.LBB16_47
.LBB16_18:                              
	mov	qword ptr [rbp - 512], 16
	mov	qword ptr [rbp - 520], 2
	mov	dword ptr [rbp - 596], -69815529
	jmp	.LBB16_47
.LBB16_19:                              
	mov	eax, 1741718379
	mov	ecx, 3272628672
	cmp	qword ptr [rbp - 64], 0
	cmova	eax, ecx
	mov	dword ptr [rbp - 596], eax
	jmp	.LBB16_47
.LBB16_20:                              
	lea	rdi, [rbp - 64]
	lea	rsi, [rbp - 520]
	call	_ZSt3minImERKT_S2_S2_
	mov	ecx, 8
	mov	esi, ecx
	lea	rdi, [rbp - 560]
	xor	ecx, ecx
	mov	edx, 32

	mov	rax, qword ptr [rax]
	mov	qword ptr [rbp - 528], rax
	mov	rax, rdi
	mov	qword ptr [rbp - 800], rdi 
	mov	rdi, rax
	mov	qword ptr [rbp - 808], rsi 
	mov	esi, ecx
	call	memset
	mov	rdi, qword ptr [rbp - 800] 
	mov	rsi, qword ptr [rbp - 808] 
	call	_ZN5Botan2CT6poisonIjEEvPKT_m
	lea	rdi, [rbp - 560]
	mov	rsi, qword ptr [rbp - 48]
	mov	rax, qword ptr [rbp - 528]
	shl	rax, 2
	mov	rdx, rax
	call	_ZN5Botan7load_beIjEEvPT_PKhm
	mov	qword ptr [rbp - 568], 0
	mov	dword ptr [rbp - 596], -1510311482
	jmp	.LBB16_47
.LBB16_21:                              
	mov	eax, 2432817280
	mov	ecx, 3847269374
	mov	edx, dword ptr [x.38]
	mov	esi, dword ptr [y.39]
	mov	edi, edx
	add	edi, -1486149553
	sub	edi, 1
	sub	edi, -1486149553
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 596], eax
	jmp	.LBB16_47
.LBB16_22:                              
	mov	eax, 2432817280
	mov	ecx, 3092504249
	mov	dl, 1
	cmp	qword ptr [rbp - 568], 8
	setne	sil
	and	sil, 1
	mov	byte ptr [rbp - 33], sil
	mov	edi, dword ptr [x.38]
	mov	r8d, dword ptr [y.39]
	mov	r9d, edi
	sub	r9d, -2006140525
	sub	r9d, 1
	add	r9d, -2006140525
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	sil
	cmp	r8d, 10
	setl	r10b
	mov	r11b, sil
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 1
	mov	r14b, r11b
	and	r14b, -1
	and	sil, dl
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	or	r14b, sil
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 1
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 596], eax
	jmp	.LBB16_47
.LBB16_23:                              
	mov	eax, 3303806039
	mov	ecx, 1380206634
	mov	dl, byte ptr [rbp - 33]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 596], eax
	jmp	.LBB16_47
.LBB16_24:                              
	mov	rdi, qword ptr [rbp - 72]
	mov	rax, qword ptr [rbp - 568]
	and	rax, 3
	mov	rsi, rax
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	ecx, dword ptr [rax]
	mov	rax, qword ptr [rbp - 568]
	mov	edx, dword ptr [rbp + 4*rax - 560]
	mov	r8d, edx
	xor	r8d, -1
	mov	r9d, ecx
	and	r9d, r8d
	xor	ecx, -1
	and	edx, ecx
	or	r9d, edx
	mov	dword ptr [rbp + 4*rax - 560], r9d
	mov	dword ptr [rbp - 596], 1734420682
	jmp	.LBB16_47
.LBB16_25:                              
	mov	eax, 1328386280
	mov	ecx, 1667427019
	mov	dl, 1
	mov	esi, dword ptr [x.38]
	mov	edi, dword ptr [y.39]
	mov	r8d, esi
	add	r8d, -469120464
	sub	r8d, 1
	sub	r8d, -469120464
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 1
	mov	r14b, r11b
	and	r14b, -1
	and	r9b, dl
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 1
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 596], eax
	jmp	.LBB16_47
.LBB16_26:                              
	mov	eax, 1328386280
	mov	ecx, 380814908
	xor	edx, edx
	xor	esi, esi
	mov	edi, esi
	mov	r8, qword ptr [rbp - 568]
	sub	rdi, 1
	sub	r8, rdi
	mov	qword ptr [rbp - 568], r8
	mov	esi, dword ptr [x.38]
	mov	r9d, dword ptr [y.39]
	sub	edx, 1
	mov	r10d, esi
	add	r10d, edx
	imul	esi, r10d
	and	esi, 1
	cmp	esi, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 596], eax
	jmp	.LBB16_47
.LBB16_27:                              
	mov	dword ptr [rbp - 596], -1510311482
	jmp	.LBB16_47
.LBB16_28:                              
	lea	rdi, [rbp - 560]
	call	_ZN5Botan12_GLOBAL__N_113bit_transposeEPj
	mov	qword ptr [rbp - 576], 0
	mov	dword ptr [rbp - 596], 1911761291
	jmp	.LBB16_47
.LBB16_29:                              
	mov	eax, 915694915
	mov	ecx, 1581611527
	xor	edx, edx
	mov	esi, edx
	mov	rdi, qword ptr [rbp - 576]
	mov	r8, qword ptr [rbp - 80]
	sub	rsi, 1
	add	r8, rsi
	cmp	rdi, r8
	cmovne	eax, ecx
	mov	dword ptr [rbp - 596], eax
	jmp	.LBB16_47
.LBB16_30:                              
	lea	rdi, [rbp - 560]
	call	_ZN5Botan12_GLOBAL__N_112AES_INV_SBOXEPj
	lea	rdi, [rbp - 560]
	call	_ZN5Botan12_GLOBAL__N_114inv_shift_rowsEPj
	lea	rdi, [rbp - 560]
	call	_ZN5Botan12_GLOBAL__N_115inv_mix_columnsEPj
	mov	qword ptr [rbp - 584], 0
	mov	dword ptr [rbp - 596], -1260771176
	jmp	.LBB16_47
.LBB16_31:                              
	mov	eax, 712626673
	mov	ecx, 672364364
	cmp	qword ptr [rbp - 584], 8
	cmovne	eax, ecx
	mov	dword ptr [rbp - 596], eax
	jmp	.LBB16_47
.LBB16_32:                              
	movabs	rax, -8681724485456248185
	mov	rcx, qword ptr [rbp - 576]
	shl	rcx, 3
	mov	rdx, qword ptr [rbp - 584]
	add	rcx, rax
	add	rcx, rdx
	sub	rcx, rax
	mov	esi, dword ptr [rbp + 4*rcx - 496]
	mov	rax, qword ptr [rbp - 584]
	mov	edi, dword ptr [rbp + 4*rax - 560]
	mov	r8d, edi
	xor	r8d, -1
	mov	r9d, esi
	and	r9d, r8d
	xor	esi, -1
	and	edi, esi
	or	r9d, edi
	mov	dword ptr [rbp + 4*rax - 560], r9d
	mov	dword ptr [rbp - 596], 41594680
	jmp	.LBB16_47
.LBB16_33:                              
	xor	eax, eax
	mov	ecx, eax
	mov	rdx, qword ptr [rbp - 584]
	mov	rsi, rcx
	sub	rsi, rdx
	mov	rdx, rcx
	sub	rdx, 1
	add	rsi, rdx
	sub	rcx, rsi
	mov	qword ptr [rbp - 584], rcx
	mov	dword ptr [rbp - 596], -1260771176
	jmp	.LBB16_47
.LBB16_34:                              
	mov	dword ptr [rbp - 596], -1205864233
	jmp	.LBB16_47
.LBB16_35:                              
	xor	eax, eax
	mov	ecx, eax
	mov	rdx, qword ptr [rbp - 576]
	sub	rcx, 1
	sub	rdx, rcx
	mov	qword ptr [rbp - 576], rdx
	mov	dword ptr [rbp - 596], 1911761291
	jmp	.LBB16_47
.LBB16_36:                              
	lea	rdi, [rbp - 560]
	call	_ZN5Botan12_GLOBAL__N_112AES_INV_SBOXEPj
	lea	rdi, [rbp - 560]
	call	_ZN5Botan12_GLOBAL__N_114inv_shift_rowsEPj
	lea	rdi, [rbp - 560]
	call	_ZN5Botan12_GLOBAL__N_113bit_transposeEPj
	mov	qword ptr [rbp - 592], 0
	mov	dword ptr [rbp - 596], -1458963224
	jmp	.LBB16_47
.LBB16_37:                              
	mov	eax, 3790628660
	mov	ecx, 1485033329
	cmp	qword ptr [rbp - 592], 8
	cmovne	eax, ecx
	mov	dword ptr [rbp - 596], eax
	jmp	.LBB16_47
.LBB16_38:                              
	movabs	rax, 2541977267176387648
	mov	rdi, qword ptr [rbp - 72]
	mov	rcx, qword ptr [rbp - 80]
	shl	rcx, 2
	mov	rdx, qword ptr [rbp - 592]
	and	rdx, 3
	sub	rcx, rax
	add	rcx, rdx
	add	rcx, rax
	mov	rsi, rcx
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	r8d, dword ptr [rax]
	mov	rax, qword ptr [rbp - 592]
	mov	r9d, dword ptr [rbp + 4*rax - 560]
	mov	r10d, r9d
	xor	r10d, -1
	mov	r11d, r8d
	and	r11d, r10d
	xor	r8d, -1
	and	r9d, r8d
	or	r11d, r9d
	mov	dword ptr [rbp + 4*rax - 560], r11d
	mov	dword ptr [rbp - 596], 72387109
	jmp	.LBB16_47
.LBB16_39:                              
	xor	eax, eax
	mov	ecx, eax
	mov	rdx, qword ptr [rbp - 592]
	sub	rcx, 1
	sub	rdx, rcx
	mov	qword ptr [rbp - 592], rdx
	mov	dword ptr [rbp - 596], -1458963224
	jmp	.LBB16_47
.LBB16_40:                              
	mov	eax, 8
	mov	esi, eax
	lea	rdi, [rbp - 560]
	call	_ZN5Botan2CT8unpoisonIjEEvPKT_m
	lea	rdx, [rbp - 560]
	mov	rdi, qword ptr [rbp - 56]
	mov	rsi, qword ptr [rbp - 528]
	shl	rsi, 2
	shl	rsi, 2
	call	_ZN5Botan11copy_out_beIjEEvPhmPKT_
	xor	eax, eax
	mov	edx, eax
	mov	rsi, qword ptr [rbp - 528]
	shl	rsi, 4
	add	rsi, qword ptr [rbp - 48]
	mov	qword ptr [rbp - 48], rsi
	mov	rsi, qword ptr [rbp - 528]
	shl	rsi, 4
	add	rsi, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 56], rsi
	mov	rsi, qword ptr [rbp - 528]
	mov	rdi, qword ptr [rbp - 64]
	sub	rdx, rsi
	add	rdi, rdx
	mov	qword ptr [rbp - 64], rdi
	mov	dword ptr [rbp - 596], -69815529
	jmp	.LBB16_47
.LBB16_41:
	add	rsp, 800
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB16_42:                              
	mov	rdi, qword ptr [rbp - 72]
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	mov	dword ptr [rbp - 596], 2121883825
	mov	qword ptr [rbp - 816], rax 
	jmp	.LBB16_47
.LBB16_43:                              
	mov	rdi, qword ptr [rbp - 72]
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	mov	dword ptr [rbp - 596], 1091077169
	mov	qword ptr [rbp - 824], rax 
	jmp	.LBB16_47
.LBB16_44:                              
	mov	dword ptr [rbp - 596], 591387879
	jmp	.LBB16_47
.LBB16_45:                              
	mov	dword ptr [rbp - 596], -447697922
	jmp	.LBB16_47
.LBB16_46:                              
	movabs	rax, 9042161367763873218
	mov	rcx, qword ptr [rbp - 568]
	sub	rcx, rax
	add	rcx, 1
	add	rcx, rax
	mov	qword ptr [rbp - 568], rcx
	mov	dword ptr [rbp - 596], 1667427019
.LBB16_47:                              
	jmp	.LBB16_1
.Lfunc_end16:
	.size	_ZN5Botan12_GLOBAL__N_113aes_decrypt_nEPKhPhmRKSt6vectorIjNS_16secure_allocatorIjEEE, .Lfunc_end16-_ZN5Botan12_GLOBAL__N_113aes_decrypt_nEPKhPhmRKSt6vectorIjNS_16secure_allocatorIjEEE
	.cfi_endproc

	.globl	_ZN5Botan7AES_12812key_scheduleEPKhm 
	.p2align	4, 0x90
	.type	_ZN5Botan7AES_12812key_scheduleEPKhm,@function
_ZN5Botan7AES_12812key_scheduleEPKhm:   
	.cfi_startproc

	push	rbp
.Lcfi79:
	.cfi_def_cfa_offset 16
.Lcfi80:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi81:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 248
.Lcfi82:
	.cfi_offset rbx, -56
.Lcfi83:
	.cfi_offset r12, -48
.Lcfi84:
	.cfi_offset r13, -40
.Lcfi85:
	.cfi_offset r14, -32
.Lcfi86:
	.cfi_offset r15, -24
	mov	eax, dword ptr [x.40]
	mov	ecx, dword ptr [y.41]
	mov	r8d, eax
	sub	r8d, -881584729
	sub	r8d, 1
	add	r8d, -881584729
	imul	eax, r8d
	and	eax, 1
	cmp	eax, 0
	sete	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 74], r9b
	cmp	ecx, 10
	setl	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 73], r9b
	mov	dword ptr [rbp - 80], -1467610696
	mov	qword ptr [rbp - 88], rsi 
	mov	qword ptr [rbp - 96], rdi 
	mov	qword ptr [rbp - 104], rdx 
.LBB17_1:                               
	mov	eax, dword ptr [rbp - 80]
	mov	ecx, eax
	sub	ecx, -1787929613
	mov	dword ptr [rbp - 108], eax 
	mov	dword ptr [rbp - 112], ecx 
	je	.LBB17_6
	jmp	.LBB17_27
.LBB17_27:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -1579634061
	mov	dword ptr [rbp - 116], eax 
	je	.LBB17_20
	jmp	.LBB17_28
.LBB17_28:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -1506517712
	mov	dword ptr [rbp - 120], eax 
	je	.LBB17_9
	jmp	.LBB17_29
.LBB17_29:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -1475221856
	mov	dword ptr [rbp - 124], eax 
	je	.LBB17_10
	jmp	.LBB17_30
.LBB17_30:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -1467610696
	mov	dword ptr [rbp - 128], eax 
	je	.LBB17_3
	jmp	.LBB17_31
.LBB17_31:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -1170936974
	mov	dword ptr [rbp - 132], eax 
	je	.LBB17_14
	jmp	.LBB17_32
.LBB17_32:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -890390349
	mov	dword ptr [rbp - 136], eax 
	je	.LBB17_11
	jmp	.LBB17_33
.LBB17_33:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -612289811
	mov	dword ptr [rbp - 140], eax 
	je	.LBB17_16
	jmp	.LBB17_34
.LBB17_34:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -537707443
	mov	dword ptr [rbp - 144], eax 
	je	.LBB17_22
	jmp	.LBB17_35
.LBB17_35:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -506484629
	mov	dword ptr [rbp - 148], eax 
	je	.LBB17_8
	jmp	.LBB17_36
.LBB17_36:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -497853698
	mov	dword ptr [rbp - 152], eax 
	je	.LBB17_13
	jmp	.LBB17_37
.LBB17_37:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, 6771
	mov	dword ptr [rbp - 156], eax 
	je	.LBB17_12
	jmp	.LBB17_38
.LBB17_38:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, 72103240
	mov	dword ptr [rbp - 160], eax 
	je	.LBB17_15
	jmp	.LBB17_39
.LBB17_39:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, 138582109
	mov	dword ptr [rbp - 164], eax 
	je	.LBB17_18
	jmp	.LBB17_40
.LBB17_40:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, 143968618
	mov	dword ptr [rbp - 168], eax 
	je	.LBB17_5
	jmp	.LBB17_41
.LBB17_41:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, 311207646
	mov	dword ptr [rbp - 172], eax 
	je	.LBB17_24
	jmp	.LBB17_42
.LBB17_42:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, 414071215
	mov	dword ptr [rbp - 176], eax 
	je	.LBB17_7
	jmp	.LBB17_43
.LBB17_43:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, 1013442026
	mov	dword ptr [rbp - 180], eax 
	je	.LBB17_21
	jmp	.LBB17_44
.LBB17_44:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, 1079055295
	mov	dword ptr [rbp - 184], eax 
	je	.LBB17_25
	jmp	.LBB17_45
.LBB17_45:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, 1454909696
	mov	dword ptr [rbp - 188], eax 
	je	.LBB17_4
	jmp	.LBB17_46
.LBB17_46:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, 1714992484
	mov	dword ptr [rbp - 192], eax 
	je	.LBB17_19
	jmp	.LBB17_47
.LBB17_47:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, 1839446850
	mov	dword ptr [rbp - 196], eax 
	je	.LBB17_23
	jmp	.LBB17_48
.LBB17_48:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, 2091256237
	mov	dword ptr [rbp - 200], eax 
	je	.LBB17_17
	jmp	.LBB17_2
.LBB17_2:                               
	jmp	.LBB17_26
.LBB17_3:                               
	mov	eax, 1013442026
	mov	ecx, 1454909696
	mov	dl, 1
	mov	sil, byte ptr [rbp - 74]
	mov	dil, byte ptr [rbp - 73]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 80], eax
	jmp	.LBB17_26
.LBB17_4:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	qword ptr [rbp - 72], rcx
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	qword ptr [rbp - 64], rcx
	mov	rcx, qword ptr [rbp - 96] 
	mov	qword ptr [rax], rcx
	mov	rdx, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 88] 
	mov	qword ptr [rdx], rsi
	mov	rdx, qword ptr [rbp - 64]
	mov	rdi, qword ptr [rbp - 104] 
	mov	qword ptr [rdx], rdi
	mov	rax, qword ptr [rax]
	mov	qword ptr [rbp - 56], rax
	call	_ZN5Botan5CPUID10has_aes_niEv
	mov	r8d, 1013442026
	mov	r9d, 143968618
	and	al, 1
	mov	byte ptr [rbp - 42], al
	mov	r10d, dword ptr [x.40]
	mov	r11d, dword ptr [y.41]
	mov	ebx, r10d
	sub	ebx, 1214687070
	sub	ebx, 1
	add	ebx, 1214687070
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	al
	cmp	r11d, 10
	setl	r14b
	mov	r15b, al
	and	r15b, r14b
	xor	al, r14b
	or	r15b, al
	test	r15b, 1
	cmovne	r8d, r9d
	mov	dword ptr [rbp - 80], r8d
	jmp	.LBB17_26
.LBB17_5:                               
	mov	eax, 414071215
	mov	ecx, 2507037683
	mov	dl, byte ptr [rbp - 42]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 80], eax
	jmp	.LBB17_26
.LBB17_6:                               
	mov	rax, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 64]
	mov	rdx, qword ptr [rax]
	mov	rdi, qword ptr [rbp - 56]
	call	_ZN5Botan7AES_12818aesni_key_scheduleEPKhm
	mov	dword ptr [rbp - 80], 138582109
	jmp	.LBB17_26
.LBB17_7:                               
	call	_ZN5Botan5CPUID10has_hw_aesEv
	mov	ecx, 3404576947
	mov	edx, 3788482667
	test	al, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 80], ecx
	jmp	.LBB17_26
.LBB17_8:                               
	mov	eax, 3757259853
	mov	ecx, 2788449584
	mov	dl, 1
	mov	esi, dword ptr [x.40]
	mov	edi, dword ptr [y.41]
	mov	r8d, esi
	add	r8d, -2121646202
	sub	r8d, 1
	sub	r8d, -2121646202
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 1
	mov	r14b, r11b
	and	r14b, -1
	and	r9b, dl
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 1
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 80], eax
	jmp	.LBB17_26
.LBB17_9:                               
	mov	rax, qword ptr [rbp - 72]
	mov	rdi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 64]
	mov	rsi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 56]
	add	rax, 8
	mov	rcx, qword ptr [rbp - 56]
	add	rcx, 32
	mov	qword ptr [rbp - 208], rdi 
	mov	qword ptr [rbp - 216], rsi 
	mov	qword ptr [rbp - 224], rax 
	mov	qword ptr [rbp - 232], rcx 
	call	_ZN5Botan5CPUID16is_little_endianEv
	and	al, 1
	movzx	r8d, al
	mov	rdi, qword ptr [rbp - 208] 
	mov	rsi, qword ptr [rbp - 216] 
	mov	rdx, qword ptr [rbp - 224] 
	mov	rcx, qword ptr [rbp - 232] 
	call	_ZN5Botan12_GLOBAL__N_116aes_key_scheduleEPKhmRSt6vectorIjNS_16secure_allocatorIjEEES7_b
	mov	r8d, 3757259853
	mov	r9d, 2819745440
	mov	r10d, dword ptr [x.40]
	mov	r11d, dword ptr [y.41]
	mov	ebx, r10d
	sub	ebx, -629698824
	sub	ebx, 1
	add	ebx, -629698824
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	al
	cmp	r11d, 10
	setl	r14b
	mov	r15b, al
	and	r15b, r14b
	xor	al, r14b
	or	r15b, al
	test	r15b, 1
	cmovne	r8d, r9d
	mov	dword ptr [rbp - 80], r8d
	jmp	.LBB17_26
.LBB17_10:                              
	mov	dword ptr [rbp - 80], 138582109
	jmp	.LBB17_26
.LBB17_11:                              
	mov	eax, 1839446850
	mov	ecx, 6771
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.40]
	mov	r8d, dword ptr [y.41]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 1
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, -1
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 1
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 80], eax
	jmp	.LBB17_26
.LBB17_12:                              
	call	_ZN5Botan5CPUID9has_vpermEv
	mov	ecx, 1839446850
	mov	edx, 3797113598
	mov	sil, 1
	and	al, 1
	mov	byte ptr [rbp - 41], al
	mov	edi, dword ptr [x.40]
	mov	r8d, dword ptr [y.41]
	mov	r9d, edi
	sub	r9d, -903547325
	sub	r9d, 1
	add	r9d, -903547325
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	al
	cmp	r8d, 10
	setl	r10b
	mov	r11b, al
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	sil, 0
	mov	r14b, r11b
	and	r14b, 0
	and	al, sil
	mov	r15b, bl
	and	r15b, 0
	and	r10b, sil
	or	r14b, al
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	sil, 0
	and	r11b, sil
	or	r14b, r11b
	test	r14b, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 80], ecx
	jmp	.LBB17_26
.LBB17_13:                              
	mov	eax, 72103240
	mov	ecx, 3124030322
	mov	dl, byte ptr [rbp - 41]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 80], eax
	jmp	.LBB17_26
.LBB17_14:                              
	mov	rax, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 64]
	mov	rdx, qword ptr [rax]
	mov	rdi, qword ptr [rbp - 56]
	call	_ZN5Botan7AES_12818vperm_key_scheduleEPKhm
	mov	dword ptr [rbp - 80], 138582109
	jmp	.LBB17_26
.LBB17_15:                              
	mov	eax, 311207646
	mov	ecx, 3682677485
	mov	dl, 1
	mov	esi, dword ptr [x.40]
	mov	edi, dword ptr [y.41]
	mov	r8d, esi
	add	r8d, -1769084267
	sub	r8d, 1
	sub	r8d, -1769084267
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 0
	mov	r14b, r11b
	and	r14b, 0
	and	r9b, dl
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 0
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 80], eax
	jmp	.LBB17_26
.LBB17_16:                              
	xor	r8d, r8d
	mov	rax, qword ptr [rbp - 72]
	mov	rdi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 64]
	mov	rsi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 56]
	add	rax, 8
	mov	rcx, qword ptr [rbp - 56]
	add	rcx, 32
	mov	rdx, rax
	call	_ZN5Botan12_GLOBAL__N_116aes_key_scheduleEPKhmRSt6vectorIjNS_16secure_allocatorIjEEES7_b
	mov	r8d, 311207646
	mov	r9d, 2091256237
	xor	r10d, r10d
	mov	r11d, dword ptr [x.40]
	mov	ebx, dword ptr [y.41]
	sub	r10d, 1
	mov	r14d, r11d
	add	r14d, r10d
	imul	r11d, r14d
	and	r11d, 1
	cmp	r11d, 0
	sete	r15b
	cmp	ebx, 10
	setl	r12b
	mov	r13b, r15b
	and	r13b, r12b
	xor	r15b, r12b
	or	r13b, r15b
	test	r13b, 1
	cmovne	r8d, r9d
	mov	dword ptr [rbp - 80], r8d
	jmp	.LBB17_26
.LBB17_17:                              
	mov	dword ptr [rbp - 80], 138582109
	jmp	.LBB17_26
.LBB17_18:                              
	mov	eax, 1079055295
	mov	ecx, 1714992484
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.40]
	mov	r8d, dword ptr [y.41]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 0
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, 0
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 0
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 80], eax
	jmp	.LBB17_26
.LBB17_19:                              
	mov	eax, 1079055295
	mov	ecx, 2715333235
	xor	edx, edx
	mov	esi, dword ptr [x.40]
	mov	edi, dword ptr [y.41]
	sub	edx, 1
	mov	r8d, esi
	add	r8d, edx
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	and	r11b, r10b
	xor	r9b, r10b
	or	r11b, r9b
	test	r11b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 80], eax
	jmp	.LBB17_26
.LBB17_20:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB17_21:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, qword ptr [rbp - 96] 
	mov	qword ptr [rax], rsi
	mov	rax, qword ptr [rbp - 88] 
	mov	qword ptr [rcx], rax
	mov	rcx, qword ptr [rbp - 104] 
	mov	qword ptr [rdx], rcx
	call	_ZN5Botan5CPUID10has_aes_niEv
	mov	dword ptr [rbp - 80], 1454909696
	mov	byte ptr [rbp - 233], al 
	jmp	.LBB17_26
.LBB17_22:                              
	mov	rax, qword ptr [rbp - 72]
	mov	rdi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 64]
	mov	rsi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 56]
	add	rax, 8
	mov	rcx, qword ptr [rbp - 56]
	add	rcx, 32
	mov	qword ptr [rbp - 248], rdi 
	mov	qword ptr [rbp - 256], rsi 
	mov	qword ptr [rbp - 264], rax 
	mov	qword ptr [rbp - 272], rcx 
	call	_ZN5Botan5CPUID16is_little_endianEv
	and	al, 1
	movzx	r8d, al
	mov	rdi, qword ptr [rbp - 248] 
	mov	rsi, qword ptr [rbp - 256] 
	mov	rdx, qword ptr [rbp - 264] 
	mov	rcx, qword ptr [rbp - 272] 
	call	_ZN5Botan12_GLOBAL__N_116aes_key_scheduleEPKhmRSt6vectorIjNS_16secure_allocatorIjEEES7_b
	mov	dword ptr [rbp - 80], -1506517712
	jmp	.LBB17_26
.LBB17_23:                              
	call	_ZN5Botan5CPUID9has_vpermEv
	mov	dword ptr [rbp - 80], 6771
	mov	byte ptr [rbp - 273], al 
	jmp	.LBB17_26
.LBB17_24:                              
	xor	r8d, r8d
	mov	rax, qword ptr [rbp - 72]
	mov	rdi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 64]
	mov	rsi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 56]
	add	rax, 8
	mov	rcx, qword ptr [rbp - 56]
	add	rcx, 32
	mov	rdx, rax
	call	_ZN5Botan12_GLOBAL__N_116aes_key_scheduleEPKhmRSt6vectorIjNS_16secure_allocatorIjEEES7_b
	mov	dword ptr [rbp - 80], -612289811
	jmp	.LBB17_26
.LBB17_25:                              
	mov	dword ptr [rbp - 80], 1714992484
.LBB17_26:                              
	jmp	.LBB17_1
.Lfunc_end17:
	.size	_ZN5Botan7AES_12812key_scheduleEPKhm, .Lfunc_end17-_ZN5Botan7AES_12812key_scheduleEPKhm
	.cfi_endproc

	.section	.text._ZN5Botan5CPUID10has_aes_niEv,"axG",@progbits,_ZN5Botan5CPUID10has_aes_niEv,comdat
	.weak	_ZN5Botan5CPUID10has_aes_niEv 
	.p2align	4, 0x90
	.type	_ZN5Botan5CPUID10has_aes_niEv,@function
_ZN5Botan5CPUID10has_aes_niEv:          
	.cfi_startproc

	push	rbp
.Lcfi87:
	.cfi_def_cfa_offset 16
.Lcfi88:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi89:
	.cfi_def_cfa_register rbp
	mov	eax, 65536
	mov	edi, eax
	call	_ZN5Botan5CPUID13has_cpuid_bitENS0_10CPUID_bitsE
	and	al, 1
	movzx	eax, al
	pop	rbp
	ret
.Lfunc_end18:
	.size	_ZN5Botan5CPUID10has_aes_niEv, .Lfunc_end18-_ZN5Botan5CPUID10has_aes_niEv
	.cfi_endproc

	.text
	.p2align	4, 0x90         
	.type	_ZN5Botan12_GLOBAL__N_116aes_key_scheduleEPKhmRSt6vectorIjNS_16secure_allocatorIjEEES7_b,@function
_ZN5Botan12_GLOBAL__N_116aes_key_scheduleEPKhmRSt6vectorIjNS_16secure_allocatorIjEEES7_b: 
	.cfi_startproc

	push	rbp
.Lcfi90:
	.cfi_def_cfa_offset 16
.Lcfi91:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi92:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 664
.Lcfi93:
	.cfi_offset rbx, -56
.Lcfi94:
	.cfi_offset r12, -48
.Lcfi95:
	.cfi_offset r13, -40
.Lcfi96:
	.cfi_offset r14, -32
.Lcfi97:
	.cfi_offset r15, -24
	mov	al, r8b
	mov	qword ptr [rbp - 56], rdi
	mov	qword ptr [rbp - 64], rsi
	mov	qword ptr [rbp - 72], rdx
	mov	qword ptr [rbp - 80], rcx
	and	al, 1
	mov	byte ptr [rbp - 81], al
	mov	rcx, qword ptr [rbp - 64]
	shr	rcx, 2
	mov	qword ptr [rbp - 96], rcx
	mov	dword ptr [rbp - 164], -456866577
.LBB19_1:                               
	mov	eax, dword ptr [rbp - 164]
	mov	ecx, eax
	sub	ecx, -2042430534
	mov	dword ptr [rbp - 172], eax 
	mov	dword ptr [rbp - 176], ecx 
	je	.LBB19_76
	jmp	.LBB19_97
.LBB19_97:                              
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -1946553675
	mov	dword ptr [rbp - 180], eax 
	je	.LBB19_59
	jmp	.LBB19_98
.LBB19_98:                              
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -1921823899
	mov	dword ptr [rbp - 184], eax 
	je	.LBB19_78
	jmp	.LBB19_99
.LBB19_99:                              
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -1897937551
	mov	dword ptr [rbp - 188], eax 
	je	.LBB19_91
	jmp	.LBB19_100
.LBB19_100:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -1781882145
	mov	dword ptr [rbp - 192], eax 
	je	.LBB19_27
	jmp	.LBB19_101
.LBB19_101:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -1771301201
	mov	dword ptr [rbp - 196], eax 
	je	.LBB19_93
	jmp	.LBB19_102
.LBB19_102:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -1702311905
	mov	dword ptr [rbp - 200], eax 
	je	.LBB19_61
	jmp	.LBB19_103
.LBB19_103:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -1691372991
	mov	dword ptr [rbp - 204], eax 
	je	.LBB19_43
	jmp	.LBB19_104
.LBB19_104:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -1686162254
	mov	dword ptr [rbp - 208], eax 
	je	.LBB19_29
	jmp	.LBB19_105
.LBB19_105:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -1600127348
	mov	dword ptr [rbp - 212], eax 
	je	.LBB19_22
	jmp	.LBB19_106
.LBB19_106:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -1543182194
	mov	dword ptr [rbp - 216], eax 
	je	.LBB19_6
	jmp	.LBB19_107
.LBB19_107:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -1511197023
	mov	dword ptr [rbp - 220], eax 
	je	.LBB19_55
	jmp	.LBB19_108
.LBB19_108:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -1460684094
	mov	dword ptr [rbp - 224], eax 
	je	.LBB19_92
	jmp	.LBB19_109
.LBB19_109:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -1443002953
	mov	dword ptr [rbp - 228], eax 
	je	.LBB19_56
	jmp	.LBB19_110
.LBB19_110:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -1409327954
	mov	dword ptr [rbp - 232], eax 
	je	.LBB19_40
	jmp	.LBB19_111
.LBB19_111:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -1387342828
	mov	dword ptr [rbp - 236], eax 
	je	.LBB19_87
	jmp	.LBB19_112
.LBB19_112:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -1240778076
	mov	dword ptr [rbp - 240], eax 
	je	.LBB19_51
	jmp	.LBB19_113
.LBB19_113:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -1158320137
	mov	dword ptr [rbp - 244], eax 
	je	.LBB19_53
	jmp	.LBB19_114
.LBB19_114:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -1097887644
	mov	dword ptr [rbp - 248], eax 
	je	.LBB19_65
	jmp	.LBB19_115
.LBB19_115:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -1064654964
	mov	dword ptr [rbp - 252], eax 
	je	.LBB19_16
	jmp	.LBB19_116
.LBB19_116:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -1052697001
	mov	dword ptr [rbp - 256], eax 
	je	.LBB19_83
	jmp	.LBB19_117
.LBB19_117:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -1048857382
	mov	dword ptr [rbp - 260], eax 
	je	.LBB19_82
	jmp	.LBB19_118
.LBB19_118:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -1010486115
	mov	dword ptr [rbp - 264], eax 
	je	.LBB19_79
	jmp	.LBB19_119
.LBB19_119:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -830259828
	mov	dword ptr [rbp - 268], eax 
	je	.LBB19_4
	jmp	.LBB19_120
.LBB19_120:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -789350396
	mov	dword ptr [rbp - 272], eax 
	je	.LBB19_24
	jmp	.LBB19_121
.LBB19_121:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -781534067
	mov	dword ptr [rbp - 276], eax 
	je	.LBB19_88
	jmp	.LBB19_122
.LBB19_122:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -633614564
	mov	dword ptr [rbp - 280], eax 
	je	.LBB19_9
	jmp	.LBB19_123
.LBB19_123:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -626463405
	mov	dword ptr [rbp - 284], eax 
	je	.LBB19_73
	jmp	.LBB19_124
.LBB19_124:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -498985682
	mov	dword ptr [rbp - 288], eax 
	je	.LBB19_86
	jmp	.LBB19_125
.LBB19_125:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -498941521
	mov	dword ptr [rbp - 292], eax 
	je	.LBB19_21
	jmp	.LBB19_126
.LBB19_126:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -486290946
	mov	dword ptr [rbp - 296], eax 
	je	.LBB19_84
	jmp	.LBB19_127
.LBB19_127:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -485632498
	mov	dword ptr [rbp - 300], eax 
	je	.LBB19_85
	jmp	.LBB19_128
.LBB19_128:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -456866577
	mov	dword ptr [rbp - 304], eax 
	je	.LBB19_3
	jmp	.LBB19_129
.LBB19_129:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -377794592
	mov	dword ptr [rbp - 308], eax 
	je	.LBB19_28
	jmp	.LBB19_130
.LBB19_130:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -275684018
	mov	dword ptr [rbp - 312], eax 
	je	.LBB19_94
	jmp	.LBB19_131
.LBB19_131:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -264253738
	mov	dword ptr [rbp - 316], eax 
	je	.LBB19_80
	jmp	.LBB19_132
.LBB19_132:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -233085337
	mov	dword ptr [rbp - 320], eax 
	je	.LBB19_81
	jmp	.LBB19_133
.LBB19_133:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -215852950
	mov	dword ptr [rbp - 324], eax 
	je	.LBB19_12
	jmp	.LBB19_134
.LBB19_134:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -190751069
	mov	dword ptr [rbp - 328], eax 
	je	.LBB19_44
	jmp	.LBB19_135
.LBB19_135:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -85423721
	mov	dword ptr [rbp - 332], eax 
	je	.LBB19_33
	jmp	.LBB19_136
.LBB19_136:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, -61006978
	mov	dword ptr [rbp - 336], eax 
	je	.LBB19_60
	jmp	.LBB19_137
.LBB19_137:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 97298314
	mov	dword ptr [rbp - 340], eax 
	je	.LBB19_70
	jmp	.LBB19_138
.LBB19_138:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 105635659
	mov	dword ptr [rbp - 344], eax 
	je	.LBB19_37
	jmp	.LBB19_139
.LBB19_139:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 187322967
	mov	dword ptr [rbp - 348], eax 
	je	.LBB19_11
	jmp	.LBB19_140
.LBB19_140:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 252598360
	mov	dword ptr [rbp - 352], eax 
	je	.LBB19_89
	jmp	.LBB19_141
.LBB19_141:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 276470455
	mov	dword ptr [rbp - 356], eax 
	je	.LBB19_95
	jmp	.LBB19_142
.LBB19_142:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 279323268
	mov	dword ptr [rbp - 360], eax 
	je	.LBB19_32
	jmp	.LBB19_143
.LBB19_143:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 285078958
	mov	dword ptr [rbp - 364], eax 
	je	.LBB19_77
	jmp	.LBB19_144
.LBB19_144:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 357659618
	mov	dword ptr [rbp - 368], eax 
	je	.LBB19_63
	jmp	.LBB19_145
.LBB19_145:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 460997238
	mov	dword ptr [rbp - 372], eax 
	je	.LBB19_45
	jmp	.LBB19_146
.LBB19_146:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 532882150
	mov	dword ptr [rbp - 376], eax 
	je	.LBB19_26
	jmp	.LBB19_147
.LBB19_147:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 559957362
	mov	dword ptr [rbp - 380], eax 
	je	.LBB19_52
	jmp	.LBB19_148
.LBB19_148:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 612680287
	mov	dword ptr [rbp - 384], eax 
	je	.LBB19_74
	jmp	.LBB19_149
.LBB19_149:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 658680477
	mov	dword ptr [rbp - 388], eax 
	je	.LBB19_38
	jmp	.LBB19_150
.LBB19_150:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 721591668
	mov	dword ptr [rbp - 392], eax 
	je	.LBB19_19
	jmp	.LBB19_151
.LBB19_151:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 842270729
	mov	dword ptr [rbp - 396], eax 
	je	.LBB19_57
	jmp	.LBB19_152
.LBB19_152:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 867525122
	mov	dword ptr [rbp - 400], eax 
	je	.LBB19_30
	jmp	.LBB19_153
.LBB19_153:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 934515191
	mov	dword ptr [rbp - 404], eax 
	je	.LBB19_14
	jmp	.LBB19_154
.LBB19_154:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 958215301
	mov	dword ptr [rbp - 408], eax 
	je	.LBB19_68
	jmp	.LBB19_155
.LBB19_155:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1016954974
	mov	dword ptr [rbp - 412], eax 
	je	.LBB19_23
	jmp	.LBB19_156
.LBB19_156:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1071614247
	mov	dword ptr [rbp - 416], eax 
	je	.LBB19_90
	jmp	.LBB19_157
.LBB19_157:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1098504109
	mov	dword ptr [rbp - 420], eax 
	je	.LBB19_42
	jmp	.LBB19_158
.LBB19_158:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1116419444
	mov	dword ptr [rbp - 424], eax 
	je	.LBB19_25
	jmp	.LBB19_159
.LBB19_159:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1211159099
	mov	dword ptr [rbp - 428], eax 
	je	.LBB19_62
	jmp	.LBB19_160
.LBB19_160:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1333959585
	mov	dword ptr [rbp - 432], eax 
	je	.LBB19_72
	jmp	.LBB19_161
.LBB19_161:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1342065954
	mov	dword ptr [rbp - 436], eax 
	je	.LBB19_36
	jmp	.LBB19_162
.LBB19_162:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1386401605
	mov	dword ptr [rbp - 440], eax 
	je	.LBB19_46
	jmp	.LBB19_163
.LBB19_163:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1397280645
	mov	dword ptr [rbp - 444], eax 
	je	.LBB19_35
	jmp	.LBB19_164
.LBB19_164:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1439536683
	mov	dword ptr [rbp - 448], eax 
	je	.LBB19_48
	jmp	.LBB19_165
.LBB19_165:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1451755790
	mov	dword ptr [rbp - 452], eax 
	je	.LBB19_49
	jmp	.LBB19_166
.LBB19_166:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1507046101
	mov	dword ptr [rbp - 456], eax 
	je	.LBB19_18
	jmp	.LBB19_167
.LBB19_167:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1517399448
	mov	dword ptr [rbp - 460], eax 
	je	.LBB19_64
	jmp	.LBB19_168
.LBB19_168:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1533549840
	mov	dword ptr [rbp - 464], eax 
	je	.LBB19_7
	jmp	.LBB19_169
.LBB19_169:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1556508693
	mov	dword ptr [rbp - 468], eax 
	je	.LBB19_20
	jmp	.LBB19_170
.LBB19_170:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1571766198
	mov	dword ptr [rbp - 472], eax 
	je	.LBB19_69
	jmp	.LBB19_171
.LBB19_171:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1572708053
	mov	dword ptr [rbp - 476], eax 
	je	.LBB19_15
	jmp	.LBB19_172
.LBB19_172:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1599090611
	mov	dword ptr [rbp - 480], eax 
	je	.LBB19_71
	jmp	.LBB19_173
.LBB19_173:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1654646390
	mov	dword ptr [rbp - 484], eax 
	je	.LBB19_34
	jmp	.LBB19_174
.LBB19_174:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1664387167
	mov	dword ptr [rbp - 488], eax 
	je	.LBB19_10
	jmp	.LBB19_175
.LBB19_175:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1683834110
	mov	dword ptr [rbp - 492], eax 
	je	.LBB19_58
	jmp	.LBB19_176
.LBB19_176:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1686299669
	mov	dword ptr [rbp - 496], eax 
	je	.LBB19_75
	jmp	.LBB19_177
.LBB19_177:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1705790914
	mov	dword ptr [rbp - 500], eax 
	je	.LBB19_17
	jmp	.LBB19_178
.LBB19_178:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1718998226
	mov	dword ptr [rbp - 504], eax 
	je	.LBB19_39
	jmp	.LBB19_179
.LBB19_179:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1735871419
	mov	dword ptr [rbp - 508], eax 
	je	.LBB19_47
	jmp	.LBB19_180
.LBB19_180:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1780047045
	mov	dword ptr [rbp - 512], eax 
	je	.LBB19_66
	jmp	.LBB19_181
.LBB19_181:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1786856472
	mov	dword ptr [rbp - 516], eax 
	je	.LBB19_31
	jmp	.LBB19_182
.LBB19_182:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1854602217
	mov	dword ptr [rbp - 520], eax 
	je	.LBB19_8
	jmp	.LBB19_183
.LBB19_183:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1898763270
	mov	dword ptr [rbp - 524], eax 
	je	.LBB19_67
	jmp	.LBB19_184
.LBB19_184:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1945691002
	mov	dword ptr [rbp - 528], eax 
	je	.LBB19_41
	jmp	.LBB19_185
.LBB19_185:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1994986441
	mov	dword ptr [rbp - 532], eax 
	je	.LBB19_50
	jmp	.LBB19_186
.LBB19_186:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 1999468470
	mov	dword ptr [rbp - 536], eax 
	je	.LBB19_5
	jmp	.LBB19_187
.LBB19_187:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 2037451394
	mov	dword ptr [rbp - 540], eax 
	je	.LBB19_54
	jmp	.LBB19_188
.LBB19_188:                             
	mov	eax, dword ptr [rbp - 172] 
	sub	eax, 2112226033
	mov	dword ptr [rbp - 544], eax 
	je	.LBB19_13
	jmp	.LBB19_2
.LBB19_2:                               
	jmp	.LBB19_96
.LBB19_3:                               
	mov	eax, 3464707468
	mov	ecx, 187322967
	cmp	qword ptr [rbp - 96], 4
	cmove	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_4:                               
	mov	eax, 4061881959
	mov	ecx, 1999468470
	mov	dl, 1
	mov	esi, dword ptr [x.44]
	mov	edi, dword ptr [y.45]
	mov	r8d, esi
	sub	r8d, 1429819268
	sub	r8d, 1
	add	r8d, 1429819268
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 0
	mov	r14b, r11b
	and	r14b, 0
	and	r9b, dl
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 0
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_5:                               
	mov	eax, 4061881959
	mov	ecx, 2751785102
	mov	dl, 1
	cmp	qword ptr [rbp - 96], 6
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 46], sil
	mov	edi, dword ptr [x.44]
	mov	r8d, dword ptr [y.45]
	mov	r9d, edi
	add	r9d, -638128465
	sub	r9d, 1
	sub	r9d, -638128465
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	sil
	cmp	r8d, 10
	setl	r10b
	mov	r11b, sil
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 0
	mov	r14b, r11b
	and	r14b, 0
	and	sil, dl
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	or	r14b, sil
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 0
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_6:                               
	mov	eax, 1533549840
	mov	ecx, 187322967
	mov	dl, byte ptr [rbp - 46]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_7:                               
	mov	eax, 1854602217
	mov	ecx, 187322967
	cmp	qword ptr [rbp - 96], 8
	cmove	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_8:                               
	mov	eax, 3246109914
	mov	ecx, 3661352732
	mov	dl, 1
	mov	esi, dword ptr [x.44]
	mov	edi, dword ptr [y.45]
	mov	r8d, esi
	sub	r8d, 392554318
	sub	r8d, 1
	add	r8d, 392554318
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 0
	mov	r14b, r11b
	and	r14b, 0
	and	r9b, dl
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 0
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_9:                               
	movabs	rdi, .L.str.7
	movabs	rsi, .L.str.8
	movabs	rdx, .L__func__._ZN5Botan12_GLOBAL__N_116aes_key_scheduleEPKhmRSt6vectorIjNS_16secure_allocatorIjEEES7_b
	movabs	rcx, .L.str.5
	mov	r8d, 697
	call	_ZN5Botan17assertion_failureEPKcS1_S1_S1_i
	mov	r8d, 3246109914
	mov	eax, 1664387167
	mov	r9d, dword ptr [x.44]
	mov	r10d, dword ptr [y.45]
	mov	r11d, r9d
	sub	r11d, 1513441307
	sub	r11d, 1
	add	r11d, 1513441307
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	bl
	cmp	r10d, 10
	setl	r14b
	mov	r15b, bl
	and	r15b, r14b
	xor	bl, r14b
	or	r15b, bl
	test	r15b, 1
	cmovne	r8d, eax
	mov	dword ptr [rbp - 164], r8d
	jmp	.LBB19_96
.LBB19_10:
.LBB19_11:                              
	mov	dword ptr [rbp - 164], -215852950
	jmp	.LBB19_96
.LBB19_12:                              
	movabs	rax, -3031053719773437898
	mov	rcx, qword ptr [rbp - 64]
	shr	rcx, 2
	add	rcx, rax
	add	rcx, 6
	sub	rcx, rax
	mov	qword ptr [rbp - 104], rcx
	mov	dword ptr [rbp - 164], 2112226033
	jmp	.LBB19_96
.LBB19_13:                              
	mov	eax, 934515191
	mov	ecx, 721591668
	cmp	qword ptr [rbp - 104], 10
	cmove	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_14:                              
	mov	eax, 3242270295
	mov	ecx, 1572708053
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.44]
	mov	r8d, dword ptr [y.45]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 1
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, -1
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 1
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_15:                              
	mov	eax, 3242270295
	mov	ecx, 3230312332
	mov	dl, 1
	xor	esi, esi
	cmp	qword ptr [rbp - 104], 12
	sete	dil
	and	dil, 1
	mov	byte ptr [rbp - 45], dil
	mov	r8d, dword ptr [x.44]
	mov	r9d, dword ptr [y.45]
	sub	esi, 1
	mov	r10d, r8d
	add	r10d, esi
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	dil
	cmp	r9d, 10
	setl	r11b
	mov	bl, dil
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 0
	mov	r15b, bl
	and	r15b, 0
	and	dil, dl
	mov	r12b, r14b
	and	r12b, 0
	and	r11b, dl
	or	r15b, dil
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 0
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_16:                              
	mov	eax, 1705790914
	mov	ecx, 721591668
	mov	dl, byte ptr [rbp - 45]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_17:                              
	mov	eax, 1507046101
	mov	ecx, 721591668
	cmp	qword ptr [rbp - 104], 14
	cmove	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_18:
	movabs	rdi, .L.str.9
	movabs	rsi, .L.str.8
	movabs	rdx, .L__func__._ZN5Botan12_GLOBAL__N_116aes_key_scheduleEPKhmRSt6vectorIjNS_16secure_allocatorIjEEES7_b
	movabs	rcx, .L.str.5
	mov	r8d, 702
	call	_ZN5Botan17assertion_failureEPKcS1_S1_S1_i
.LBB19_19:                              
	mov	eax, 3808676350
	mov	ecx, 1556508693
	mov	edx, dword ptr [x.44]
	mov	esi, dword ptr [y.45]
	mov	edi, edx
	add	edi, -280074372
	sub	edi, 1
	sub	edi, -280074372
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_20:                              
	mov	eax, 3808676350
	mov	ecx, 3796025775
	mov	dl, 1
	mov	esi, dword ptr [x.44]
	mov	edi, dword ptr [y.45]
	mov	r8d, esi
	add	r8d, -1935935089
	sub	r8d, 1
	sub	r8d, -1935935089
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 0
	mov	r14b, r11b
	and	r14b, 0
	and	r9b, dl
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 0
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_21:                              
	mov	dword ptr [rbp - 164], -1600127348
	jmp	.LBB19_96
.LBB19_22:                              
	mov	rdi, qword ptr [rbp - 56]
	mov	rsi, qword ptr [rbp - 64]
	call	_ZN5Botan2CT6poisonIhEEvPKT_m
	xor	eax, eax
	mov	esi, eax
	mov	rdi, qword ptr [rbp - 72]
	mov	rcx, qword ptr [rbp - 64]
	sub	rsi, 28
	sub	rcx, rsi
	mov	rsi, rcx
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE6resizeEm
	movabs	rcx, -3463197061611077807
	mov	rdi, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rbp - 64]
	add	rsi, rcx
	add	rsi, 28
	sub	rsi, rcx
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE6resizeEm
	mov	qword ptr [rbp - 112], 0
	mov	dword ptr [rbp - 164], 1016954974
	jmp	.LBB19_96
.LBB19_23:                              
	mov	eax, 3917172704
	mov	ecx, 3505616900
	mov	rdx, qword ptr [rbp - 112]
	cmp	rdx, qword ptr [rbp - 96]
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_24:                              
	mov	eax, 3809334798
	mov	ecx, 1116419444
	mov	edx, dword ptr [x.44]
	mov	esi, dword ptr [y.45]
	mov	edi, edx
	sub	edi, 452151949
	sub	edi, 1
	add	edi, 452151949
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_25:                              
	mov	rdi, qword ptr [rbp - 56]
	mov	rsi, qword ptr [rbp - 112]
	call	_ZN5Botan7load_beIjEET_PKhm
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 112]
	mov	dword ptr [rbp - 548], eax 
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	ecx, 3809334798
	mov	edx, 532882150
	mov	r8b, 1
	mov	r9d, dword ptr [rbp - 548] 
	mov	dword ptr [rax], r9d
	mov	r9d, dword ptr [x.44]
	mov	r10d, dword ptr [y.45]
	mov	r11d, r9d
	sub	r11d, -442393084
	sub	r11d, 1
	add	r11d, -442393084
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	bl
	cmp	r10d, 10
	setl	r14b
	mov	r15b, bl
	xor	r15b, -1
	mov	r12b, r14b
	xor	r12b, -1
	xor	r8b, 0
	mov	r13b, r15b
	and	r13b, 0
	and	bl, r8b
	mov	al, r12b
	and	al, 0
	and	r14b, r8b
	or	r13b, bl
	or	al, r14b
	xor	r13b, al
	or	r15b, r12b
	xor	r15b, -1
	or	r8b, 0
	and	r15b, r8b
	or	r13b, r15b
	test	r13b, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 164], ecx
	jmp	.LBB19_96
.LBB19_26:                              
	mov	dword ptr [rbp - 164], -1781882145
	jmp	.LBB19_96
.LBB19_27:                              
	movabs	rax, -9120797722431565364
	mov	rcx, qword ptr [rbp - 112]
	sub	rcx, rax
	add	rcx, 1
	add	rcx, rax
	mov	qword ptr [rbp - 112], rcx
	mov	dword ptr [rbp - 164], 1016954974
	jmp	.LBB19_96
.LBB19_28:                              
	mov	rax, qword ptr [rbp - 96]
	mov	qword ptr [rbp - 120], rax
	mov	dword ptr [rbp - 164], -1686162254
	jmp	.LBB19_96
.LBB19_29:                              
	mov	eax, 559957362
	mov	ecx, 867525122
	movabs	rdx, 9007492172748927304
	mov	rsi, qword ptr [rbp - 120]
	mov	rdi, qword ptr [rbp - 104]
	sub	rdi, rdx
	add	rdi, 1
	add	rdi, rdx
	shl	rdi, 2
	cmp	rsi, rdi
	cmovb	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_30:                              
	mov	eax, 3795981614
	mov	ecx, 1786856472
	mov	edx, dword ptr [x.44]
	mov	esi, dword ptr [y.45]
	mov	edi, edx
	sub	edi, 1101577614
	sub	edi, 1
	add	edi, 1101577614
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_31:                              
	movabs	rax, -5449025837849814898
	mov	rdi, qword ptr [rbp - 72]
	mov	rcx, qword ptr [rbp - 120]
	mov	rdx, qword ptr [rbp - 96]
	add	rcx, rax
	sub	rcx, rdx
	sub	rcx, rax
	mov	rsi, rcx
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	xor	r8d, r8d
	mov	ecx, r8d
	mov	r8d, dword ptr [rax]
	mov	rax, qword ptr [rbp - 120]
	mov	rdx, qword ptr [rbp - 96]
	mov	rsi, rcx
	sub	rsi, rdx
	add	rax, rsi
	xor	r9d, r9d
	mov	edx, r9d
	div	qword ptr [rbp - 96]
	mov	r9d, dword ptr [4*rax + _ZZN5Botan12_GLOBAL__N_116aes_key_scheduleEPKhmRSt6vectorIjNS_16secure_allocatorIjEEES7_bE2RC]
	mov	r10d, r8d
	xor	r10d, -1
	mov	r11d, r9d
	and	r11d, r10d
	xor	r9d, -1
	and	r8d, r9d
	or	r11d, r8d
	mov	rdi, qword ptr [rbp - 72]
	mov	rax, qword ptr [rbp - 120]
	sub	rcx, 1
	add	rax, rcx
	mov	rsi, rax
	mov	dword ptr [rbp - 552], r11d 
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	edi, dword ptr [rax]
	call	_ZN5Botan12_GLOBAL__N_17SE_wordEj
	mov	edi, eax
	call	_ZN5Botan4rotlILm8EjEET0_S1_
	mov	edi, dword ptr [rbp - 552] 
	xor	edi, -1
	mov	r8d, eax
	and	r8d, edi
	xor	eax, -1
	mov	edi, dword ptr [rbp - 552] 
	and	edi, eax
	or	r8d, edi
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 120]
	mov	dword ptr [rbp - 556], r8d 
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	r8d, 3795981614
	mov	r9d, 279323268
	mov	r10d, dword ptr [rbp - 556] 
	mov	dword ptr [rax], r10d
	mov	qword ptr [rbp - 128], 1
	mov	r10d, dword ptr [x.44]
	mov	r11d, dword ptr [y.45]
	mov	ebx, r10d
	add	ebx, 1633813828
	sub	ebx, 1
	sub	ebx, 1633813828
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r14b
	cmp	r11d, 10
	setl	r15b
	mov	r12b, r14b
	and	r12b, r15b
	xor	r14b, r15b
	or	r12b, r14b
	test	r12b, 1
	cmovne	r8d, r9d
	mov	dword ptr [rbp - 164], r8d
	jmp	.LBB19_96
.LBB19_32:                              
	mov	dword ptr [rbp - 164], -85423721
	jmp	.LBB19_96
.LBB19_33:                              
	mov	eax, 105635659
	mov	ecx, 1654646390
	mov	rdx, qword ptr [rbp - 128]
	cmp	rdx, qword ptr [rbp - 96]
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	mov	byte ptr [rbp - 165], 0
	jmp	.LBB19_96
.LBB19_34:                              
	mov	eax, 2907624468
	mov	ecx, 1397280645
	xor	edx, edx
	mov	esi, dword ptr [x.44]
	mov	edi, dword ptr [y.45]
	sub	edx, 1
	mov	r8d, esi
	add	r8d, edx
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	and	r11b, r10b
	xor	r9b, r10b
	or	r11b, r9b
	test	r11b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_35:                              
	xor	eax, eax
	mov	ecx, eax
	mov	rdx, qword ptr [rbp - 120]
	mov	rsi, qword ptr [rbp - 128]
	sub	rcx, rsi
	sub	rdx, rcx
	mov	rdi, qword ptr [rbp - 72]
	mov	qword ptr [rbp - 568], rdx 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	mov	r8d, 2907624468
	mov	r9d, 1342065954
	mov	r10b, 1
	mov	rcx, qword ptr [rbp - 568] 
	cmp	rcx, rax
	setb	r11b
	and	r11b, 1
	mov	byte ptr [rbp - 44], r11b
	mov	ebx, dword ptr [x.44]
	mov	r14d, dword ptr [y.45]
	mov	r15d, ebx
	add	r15d, 707549184
	sub	r15d, 1
	sub	r15d, 707549184
	imul	ebx, r15d
	and	ebx, 1
	cmp	ebx, 0
	sete	r11b
	cmp	r14d, 10
	setl	r12b
	mov	r13b, r11b
	xor	r13b, -1
	mov	al, r12b
	xor	al, -1
	xor	r10b, 0
	mov	cl, r13b
	and	cl, 0
	and	r11b, r10b
	mov	dl, al
	and	dl, 0
	and	r12b, r10b
	or	cl, r11b
	or	dl, r12b
	xor	cl, dl
	or	r13b, al
	xor	r13b, -1
	or	r10b, 0
	and	r13b, r10b
	or	cl, r13b
	test	cl, 1
	cmovne	r8d, r9d
	mov	dword ptr [rbp - 164], r8d
	jmp	.LBB19_96
.LBB19_36:                              
	mov	dword ptr [rbp - 164], 105635659
	mov	al, byte ptr [rbp - 44]
	and	al, 1
	mov	byte ptr [rbp - 165], al
	jmp	.LBB19_96
.LBB19_37:                              
	mov	eax, 1386401605
	mov	ecx, 658680477
	test	byte ptr [rbp - 165], 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_38:                              
	mov	eax, 3513433229
	mov	ecx, 1718998226
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.44]
	mov	r8d, dword ptr [y.45]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 0
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, 0
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 0
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_39:                              
	movabs	rax, 5745932498941050211
	movabs	rcx, -1505887902328421386
	mov	rdi, qword ptr [rbp - 72]
	mov	rdx, qword ptr [rbp - 120]
	mov	rsi, qword ptr [rbp - 128]
	add	rdx, rcx
	add	rdx, rsi
	sub	rdx, rcx
	mov	rcx, qword ptr [rbp - 96]
	sub	rdx, rax
	sub	rdx, rcx
	add	rdx, rax
	mov	rsi, rdx
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	xor	r8d, r8d
	mov	ecx, r8d
	mov	r8d, dword ptr [rax]
	mov	rdi, qword ptr [rbp - 72]
	mov	rax, qword ptr [rbp - 120]
	mov	rdx, qword ptr [rbp - 128]
	mov	rsi, rcx
	sub	rsi, rax
	mov	rax, rcx
	sub	rax, rdx
	add	rsi, rax
	sub	rcx, rsi
	mov	rsi, rcx
	mov	dword ptr [rbp - 572], r8d 
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	r8d, 3513433229
	mov	r9d, 2885639342
	mov	r10b, 1
	mov	r11d, dword ptr [rbp - 572] 
	mov	dword ptr [rax], r11d
	cmp	qword ptr [rbp - 96], 8
	sete	bl
	and	bl, 1
	mov	byte ptr [rbp - 43], bl
	mov	r11d, dword ptr [x.44]
	mov	r14d, dword ptr [y.45]
	mov	r15d, r11d
	sub	r15d, -1424674552
	sub	r15d, 1
	add	r15d, -1424674552
	imul	r11d, r15d
	and	r11d, 1
	cmp	r11d, 0
	sete	bl
	cmp	r14d, 10
	setl	r12b
	mov	r13b, bl
	xor	r13b, -1
	mov	al, r12b
	xor	al, -1
	xor	r10b, 1
	mov	cl, r13b
	and	cl, -1
	and	bl, r10b
	mov	dl, al
	and	dl, -1
	and	r12b, r10b
	or	cl, bl
	or	dl, r12b
	xor	cl, dl
	or	r13b, al
	xor	r13b, -1
	or	r10b, 1
	and	r13b, r10b
	or	cl, r13b
	test	cl, 1
	cmovne	r8d, r9d
	mov	dword ptr [rbp - 164], r8d
	jmp	.LBB19_96
.LBB19_40:                              
	mov	eax, 2603594305
	mov	ecx, 1945691002
	mov	dl, byte ptr [rbp - 43]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_41:                              
	mov	eax, 2603594305
	mov	ecx, 1098504109
	cmp	qword ptr [rbp - 128], 4
	cmove	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_42:                              
	movabs	rax, -2623404640814368119
	xor	ecx, ecx
	mov	edx, ecx
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 120]
	mov	r8, qword ptr [rbp - 128]
	sub	rdx, r8
	sub	rsi, rdx
	add	rsi, rax
	sub	rsi, 1
	sub	rsi, rax
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	edi, dword ptr [rax]
	call	_ZN5Botan12_GLOBAL__N_17SE_wordEj
	movabs	rdx, -5466237424300604308
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 120]
	mov	r8, qword ptr [rbp - 128]
	sub	rsi, rdx
	add	rsi, r8
	add	rsi, rdx
	mov	dword ptr [rbp - 576], eax 
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	ecx, dword ptr [rax]
	mov	r9d, ecx
	xor	r9d, -1
	mov	r10d, dword ptr [rbp - 576] 
	and	r10d, r9d
	mov	r9d, dword ptr [rbp - 576] 
	xor	r9d, -1
	and	ecx, r9d
	or	r10d, ecx
	mov	dword ptr [rax], r10d
	mov	dword ptr [rbp - 164], -190751069
	jmp	.LBB19_96
.LBB19_43:                              
	xor	eax, eax
	mov	ecx, eax
	movabs	rdx, 5487128073387203756
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 120]
	mov	r8, qword ptr [rbp - 128]
	add	rsi, rdx
	add	rsi, r8
	sub	rsi, rdx
	sub	rcx, 1
	add	rsi, rcx
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	movabs	rcx, 1560986708455637312
	mov	r9d, dword ptr [rax]
	mov	rdi, qword ptr [rbp - 72]
	mov	rax, qword ptr [rbp - 120]
	mov	rdx, qword ptr [rbp - 128]
	add	rax, rcx
	add	rax, rdx
	sub	rax, rcx
	mov	rsi, rax
	mov	dword ptr [rbp - 580], r9d 
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	r9d, dword ptr [rax]
	mov	r10d, r9d
	xor	r10d, -1
	mov	r11d, dword ptr [rbp - 580] 
	and	r11d, r10d
	mov	r10d, dword ptr [rbp - 580] 
	xor	r10d, -1
	and	r9d, r10d
	or	r11d, r9d
	mov	dword ptr [rax], r11d
	mov	dword ptr [rbp - 164], -190751069
	jmp	.LBB19_96
.LBB19_44:                              
	mov	dword ptr [rbp - 164], 460997238
	jmp	.LBB19_96
.LBB19_45:                              
	movabs	rax, -6968461478656730820
	mov	rcx, qword ptr [rbp - 128]
	add	rcx, rax
	add	rcx, 1
	sub	rcx, rax
	mov	qword ptr [rbp - 128], rcx
	mov	dword ptr [rbp - 164], -85423721
	jmp	.LBB19_96
.LBB19_46:                              
	mov	eax, 252598360
	mov	ecx, 1735871419
	mov	dl, 1
	mov	esi, dword ptr [x.44]
	mov	edi, dword ptr [y.45]
	mov	r8d, esi
	sub	r8d, -585114838
	sub	r8d, 1
	add	r8d, -585114838
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 1
	mov	r14b, r11b
	and	r14b, -1
	and	r9b, dl
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 1
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_47:                              
	mov	eax, 252598360
	mov	ecx, 1439536683
	mov	dl, 1
	mov	esi, dword ptr [x.44]
	mov	edi, dword ptr [y.45]
	mov	r8d, esi
	sub	r8d, -1826947815
	sub	r8d, 1
	add	r8d, -1826947815
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 0
	mov	r14b, r11b
	and	r14b, 0
	and	r9b, dl
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 0
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_48:                              
	mov	dword ptr [rbp - 164], 1451755790
	jmp	.LBB19_96
.LBB19_49:                              
	mov	eax, 1071614247
	mov	ecx, 1994986441
	mov	edx, dword ptr [x.44]
	mov	esi, dword ptr [y.45]
	mov	edi, edx
	sub	edi, -342186537
	sub	edi, 1
	add	edi, -342186537
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_50:                              
	mov	eax, 1071614247
	mov	ecx, 3054189220
	xor	edx, edx
	movabs	rsi, -6179237285666551974
	mov	rdi, qword ptr [rbp - 96]
	mov	r8, qword ptr [rbp - 120]
	add	r8, rsi
	add	r8, rdi
	sub	r8, rsi
	mov	qword ptr [rbp - 120], r8
	mov	r9d, dword ptr [x.44]
	mov	r10d, dword ptr [y.45]
	sub	edx, 1
	mov	r11d, r9d
	add	r11d, edx
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	bl
	cmp	r10d, 10
	setl	r14b
	mov	r15b, bl
	and	r15b, r14b
	xor	bl, r14b
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_51:                              
	mov	dword ptr [rbp - 164], -1686162254
	jmp	.LBB19_96
.LBB19_52:                              
	mov	qword ptr [rbp - 136], 0
	mov	dword ptr [rbp - 164], -1158320137
	jmp	.LBB19_96
.LBB19_53:                              
	mov	eax, 2851964343
	mov	ecx, 2037451394
	xor	edx, edx
	mov	esi, edx
	mov	rdi, qword ptr [rbp - 136]
	mov	r8, qword ptr [rbp - 104]
	mov	r9, rsi
	sub	r9, r8
	mov	r8, rsi
	sub	r8, 1
	add	r9, r8
	sub	rsi, r9
	shl	rsi, 2
	cmp	rdi, rsi
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_54:                              
	movabs	rax, -1041927722550845027
	mov	rdi, qword ptr [rbp - 72]
	mov	rcx, qword ptr [rbp - 104]
	shl	rcx, 2
	mov	rdx, qword ptr [rbp - 136]
	add	rcx, rax
	sub	rcx, rdx
	sub	rcx, rax
	mov	rsi, rcx
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	r8d, dword ptr [rax]
	mov	rdi, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rbp - 136]
	mov	dword ptr [rbp - 584], r8d 
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	movabs	rcx, 3342154971957962927
	movabs	rdx, 8172054584257940194
	mov	r8d, dword ptr [rbp - 584] 
	mov	dword ptr [rax], r8d
	mov	rdi, qword ptr [rbp - 72]
	mov	rax, qword ptr [rbp - 104]
	shl	rax, 2
	mov	rsi, qword ptr [rbp - 136]
	sub	rax, rdx
	sub	rax, rsi
	add	rax, rdx
	add	rax, rcx
	add	rax, 1
	sub	rax, rcx
	mov	rsi, rax
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	xor	r8d, r8d
	mov	ecx, r8d
	mov	r8d, dword ptr [rax]
	mov	rdi, qword ptr [rbp - 80]
	mov	rax, qword ptr [rbp - 136]
	sub	rcx, 1
	sub	rax, rcx
	mov	rsi, rax
	mov	dword ptr [rbp - 588], r8d 
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	movabs	rcx, 6149148027826786491
	movabs	rdx, -3016099398971256457
	mov	r8d, dword ptr [rbp - 588] 
	mov	dword ptr [rax], r8d
	mov	rdi, qword ptr [rbp - 72]
	mov	rax, qword ptr [rbp - 104]
	shl	rax, 2
	mov	rsi, qword ptr [rbp - 136]
	add	rax, rdx
	sub	rax, rsi
	sub	rax, rdx
	sub	rax, rcx
	add	rax, 2
	add	rax, rcx
	mov	rsi, rax
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	xor	r8d, r8d
	mov	ecx, r8d
	mov	r8d, dword ptr [rax]
	mov	rdi, qword ptr [rbp - 80]
	mov	rax, qword ptr [rbp - 136]
	sub	rcx, 2
	sub	rax, rcx
	mov	rsi, rax
	mov	dword ptr [rbp - 592], r8d 
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	movabs	rcx, -3246673416664983992
	movabs	rdx, -8403020090540564597
	mov	r8d, dword ptr [rbp - 592] 
	mov	dword ptr [rax], r8d
	mov	rdi, qword ptr [rbp - 72]
	mov	rax, qword ptr [rbp - 104]
	shl	rax, 2
	mov	rsi, qword ptr [rbp - 136]
	sub	rax, rdx
	sub	rax, rsi
	add	rax, rdx
	sub	rax, rcx
	add	rax, 3
	add	rax, rcx
	mov	rsi, rax
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	xor	r8d, r8d
	mov	ecx, r8d
	mov	r8d, dword ptr [rax]
	mov	rdi, qword ptr [rbp - 80]
	mov	rax, qword ptr [rbp - 136]
	sub	rcx, 3
	sub	rax, rcx
	mov	rsi, rax
	mov	dword ptr [rbp - 596], r8d 
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	r8d, dword ptr [rbp - 596] 
	mov	dword ptr [rax], r8d
	mov	dword ptr [rbp - 164], -1511197023
	jmp	.LBB19_96
.LBB19_55:                              
	xor	eax, eax
	mov	ecx, eax
	mov	rdx, qword ptr [rbp - 136]
	sub	rcx, 4
	sub	rdx, rcx
	mov	qword ptr [rbp - 136], rdx
	mov	dword ptr [rbp - 164], -1158320137
	jmp	.LBB19_96
.LBB19_56:                              
	mov	qword ptr [rbp - 144], 4
	mov	dword ptr [rbp - 164], 842270729
	jmp	.LBB19_96
.LBB19_57:                              
	mov	eax, 2397029745
	mov	ecx, 1683834110
	mov	edx, dword ptr [x.44]
	mov	esi, dword ptr [y.45]
	mov	edi, edx
	add	edi, -182531480
	sub	edi, 1
	sub	edi, -182531480
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_58:                              
	mov	eax, 2397029745
	mov	ecx, 2348413621
	mov	dl, 1
	xor	esi, esi
	mov	rdi, qword ptr [rbp - 144]
	mov	r8, qword ptr [rbp - 104]
	shl	r8, 2
	cmp	rdi, r8
	setne	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 42], r9b
	mov	r10d, dword ptr [x.44]
	mov	r11d, dword ptr [y.45]
	sub	esi, 1
	mov	ebx, r10d
	add	ebx, esi
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r9b
	cmp	r11d, 10
	setl	r14b
	mov	r15b, r9b
	xor	r15b, -1
	mov	r12b, r14b
	xor	r12b, -1
	xor	dl, 1
	mov	r13b, r15b
	and	r13b, -1
	and	r9b, dl
	mov	sil, r12b
	and	sil, -1
	and	r14b, dl
	or	r13b, r9b
	or	sil, r14b
	xor	r13b, sil
	or	r15b, r12b
	xor	r15b, -1
	or	dl, 1
	and	r15b, dl
	or	r13b, r15b
	test	r13b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_59:                              
	mov	eax, 1211159099
	mov	ecx, 4233960318
	mov	dl, byte ptr [rbp - 42]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_60:                              
	mov	rdi, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rbp - 144]
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	rdi, rax
	call	_ZN5Botan12_GLOBAL__N_115InvMixColumn_x4EPj
	mov	dword ptr [rbp - 164], -1702311905
	jmp	.LBB19_96
.LBB19_61:                              
	xor	eax, eax
	mov	ecx, eax
	mov	rdx, qword ptr [rbp - 144]
	mov	rsi, rcx
	sub	rsi, rdx
	mov	rdx, rcx
	sub	rdx, 4
	add	rsi, rdx
	sub	rcx, rsi
	mov	qword ptr [rbp - 144], rcx
	mov	dword ptr [rbp - 164], 842270729
	jmp	.LBB19_96
.LBB19_62:                              
	mov	eax, 2834283202
	mov	ecx, 357659618
	mov	dl, 1
	mov	esi, dword ptr [x.44]
	mov	edi, dword ptr [y.45]
	mov	r8d, esi
	sub	r8d, -1945140845
	sub	r8d, 1
	add	r8d, -1945140845
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 1
	mov	r14b, r11b
	and	r14b, -1
	and	r9b, dl
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 1
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_63:                              
	mov	eax, 2834283202
	mov	ecx, 1517399448
	xor	edx, edx
	mov	sil, byte ptr [rbp - 81]
	and	sil, 1
	mov	byte ptr [rbp - 41], sil
	mov	edi, dword ptr [x.44]
	mov	r8d, dword ptr [y.45]
	sub	edx, 1
	mov	r9d, edi
	add	r9d, edx
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	sil
	cmp	r8d, 10
	setl	r10b
	mov	r11b, sil
	and	r11b, r10b
	xor	sil, r10b
	or	r11b, sil
	test	r11b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_64:                              
	mov	eax, 4030713558
	mov	ecx, 3197079652
	mov	dl, byte ptr [rbp - 41]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_65:                              
	mov	qword ptr [rbp - 152], 0
	mov	dword ptr [rbp - 164], 1780047045
	jmp	.LBB19_96
.LBB19_66:                              
	mov	rax, qword ptr [rbp - 152]
	mov	rdi, qword ptr [rbp - 72]
	mov	qword ptr [rbp - 608], rax 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	mov	ecx, 1599090611
	mov	edx, 1898763270
	mov	rdi, qword ptr [rbp - 608] 
	cmp	rdi, rax
	cmovne	ecx, edx
	mov	dword ptr [rbp - 164], ecx
	jmp	.LBB19_96
.LBB19_67:                              
	mov	eax, 2523666095
	mov	ecx, 958215301
	mov	edx, dword ptr [x.44]
	mov	esi, dword ptr [y.45]
	mov	edi, edx
	add	edi, -1816369040
	sub	edi, 1
	sub	edi, -1816369040
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_68:                              
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 152]
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	edi, dword ptr [rax]
	call	_ZN5Botan13reverse_bytesEj
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 152]
	mov	dword ptr [rbp - 612], eax 
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	ecx, 2523666095
	mov	edx, 1571766198
	xor	r8d, r8d
	mov	r9d, dword ptr [rbp - 612] 
	mov	dword ptr [rax], r9d
	mov	r9d, dword ptr [x.44]
	mov	r10d, dword ptr [y.45]
	sub	r8d, 1
	mov	r11d, r9d
	add	r11d, r8d
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	bl
	cmp	r10d, 10
	setl	r14b
	mov	r15b, bl
	and	r15b, r14b
	xor	bl, r14b
	or	r15b, bl
	test	r15b, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 164], ecx
	jmp	.LBB19_96
.LBB19_69:                              
	mov	dword ptr [rbp - 164], 97298314
	jmp	.LBB19_96
.LBB19_70:                              
	movabs	rax, -827221482250929646
	mov	rcx, qword ptr [rbp - 152]
	add	rcx, rax
	add	rcx, 1
	sub	rcx, rax
	mov	qword ptr [rbp - 152], rcx
	mov	dword ptr [rbp - 164], 1780047045
	jmp	.LBB19_96
.LBB19_71:                              
	mov	qword ptr [rbp - 160], 0
	mov	dword ptr [rbp - 164], 1333959585
	jmp	.LBB19_96
.LBB19_72:                              
	mov	rax, qword ptr [rbp - 160]
	mov	rdi, qword ptr [rbp - 80]
	mov	qword ptr [rbp - 624], rax 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	mov	ecx, 3284481181
	mov	edx, 3668503891
	mov	rdi, qword ptr [rbp - 624] 
	cmp	rdi, rax
	cmovne	ecx, edx
	mov	dword ptr [rbp - 164], ecx
	jmp	.LBB19_96
.LBB19_73:                              
	mov	eax, 4019283278
	mov	ecx, 612680287
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.44]
	mov	r8d, dword ptr [y.45]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 0
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, 0
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 0
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_74:                              
	mov	rdi, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rbp - 160]
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	edi, dword ptr [rax]
	call	_ZN5Botan13reverse_bytesEj
	mov	rdi, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rbp - 160]
	mov	dword ptr [rbp - 628], eax 
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	ecx, 4019283278
	mov	edx, 1686299669
	mov	r8b, 1
	mov	r9d, dword ptr [rbp - 628] 
	mov	dword ptr [rax], r9d
	mov	r9d, dword ptr [x.44]
	mov	r10d, dword ptr [y.45]
	mov	r11d, r9d
	add	r11d, 991695810
	sub	r11d, 1
	sub	r11d, 991695810
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	bl
	cmp	r10d, 10
	setl	r14b
	mov	r15b, bl
	xor	r15b, -1
	mov	r12b, r14b
	xor	r12b, -1
	xor	r8b, 0
	mov	r13b, r15b
	and	r13b, 0
	and	bl, r8b
	mov	al, r12b
	and	al, 0
	and	r14b, r8b
	or	r13b, bl
	or	al, r14b
	xor	r13b, al
	or	r15b, r12b
	xor	r15b, -1
	or	r8b, 0
	and	r15b, r8b
	or	r13b, r15b
	test	r13b, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 164], ecx
	jmp	.LBB19_96
.LBB19_75:                              
	mov	dword ptr [rbp - 164], -2042430534
	jmp	.LBB19_96
.LBB19_76:                              
	mov	eax, 276470455
	mov	ecx, 285078958
	mov	edx, dword ptr [x.44]
	mov	esi, dword ptr [y.45]
	mov	edi, edx
	sub	edi, 1892204435
	sub	edi, 1
	add	edi, 1892204435
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_77:                              
	mov	eax, 276470455
	mov	ecx, 2373143397
	mov	dl, 1
	xor	esi, esi
	xor	edi, edi
	mov	r8d, edi
	mov	r9, qword ptr [rbp - 160]
	mov	r10, r8
	sub	r10, r9
	mov	r9, r8
	sub	r9, 1
	add	r10, r9
	sub	r8, r10
	mov	qword ptr [rbp - 160], r8
	mov	edi, dword ptr [x.44]
	mov	r11d, dword ptr [y.45]
	sub	esi, 1
	mov	ebx, edi
	add	ebx, esi
	imul	edi, ebx
	and	edi, 1
	cmp	edi, 0
	sete	r14b
	cmp	r11d, 10
	setl	r15b
	mov	r12b, r14b
	xor	r12b, -1
	mov	r13b, r15b
	xor	r13b, -1
	xor	dl, 1
	mov	sil, r12b
	and	sil, -1
	and	r14b, dl
	mov	dil, r13b
	and	dil, -1
	and	r15b, dl
	or	sil, r14b
	or	dil, r15b
	xor	sil, dil
	or	r12b, r13b
	xor	r12b, -1
	or	dl, 1
	and	r12b, dl
	or	sil, r12b
	test	sil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 164], eax
	jmp	.LBB19_96
.LBB19_78:                              
	mov	dword ptr [rbp - 164], 1333959585
	jmp	.LBB19_96
.LBB19_79:                              
	mov	dword ptr [rbp - 164], -264253738
	jmp	.LBB19_96
.LBB19_80:
	mov	rdi, qword ptr [rbp - 72]
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE4dataEv
	mov	rdi, qword ptr [rbp - 72]
	mov	qword ptr [rbp - 640], rax 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	mov	rdi, qword ptr [rbp - 640] 
	mov	rsi, rax
	call	_ZN5Botan2CT8unpoisonIjEEvPKT_m
	mov	rdi, qword ptr [rbp - 80]
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE4dataEv
	mov	rdi, qword ptr [rbp - 80]
	mov	qword ptr [rbp - 648], rax 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	mov	rdi, qword ptr [rbp - 648] 
	mov	rsi, rax
	call	_ZN5Botan2CT8unpoisonIjEEvPKT_m
	mov	rdi, qword ptr [rbp - 56]
	mov	rsi, qword ptr [rbp - 64]
	call	_ZN5Botan2CT8unpoisonIhEEvPKT_m
	add	rsp, 664
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB19_81:                              
	mov	dword ptr [rbp - 164], 1999468470
	jmp	.LBB19_96
.LBB19_82:                              
	movabs	rdi, .L.str.7
	movabs	rsi, .L.str.8
	movabs	rdx, .L__func__._ZN5Botan12_GLOBAL__N_116aes_key_scheduleEPKhmRSt6vectorIjNS_16secure_allocatorIjEEES7_b
	movabs	rcx, .L.str.5
	mov	r8d, 697
	call	_ZN5Botan17assertion_failureEPKcS1_S1_S1_i
	mov	dword ptr [rbp - 164], -633614564
	jmp	.LBB19_96
.LBB19_83:                              
	mov	dword ptr [rbp - 164], 1572708053
	jmp	.LBB19_96
.LBB19_84:                              
	mov	dword ptr [rbp - 164], 1556508693
	jmp	.LBB19_96
.LBB19_85:                              
	mov	rdi, qword ptr [rbp - 56]
	mov	rsi, qword ptr [rbp - 112]
	call	_ZN5Botan7load_beIjEET_PKhm
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 112]
	mov	dword ptr [rbp - 652], eax 
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	ecx, dword ptr [rbp - 652] 
	mov	dword ptr [rax], ecx
	mov	dword ptr [rbp - 164], 1116419444
	jmp	.LBB19_96
.LBB19_86:                              
	xor	eax, eax
	mov	ecx, eax
	mov	rdi, qword ptr [rbp - 72]
	mov	rdx, qword ptr [rbp - 120]
	mov	rsi, qword ptr [rbp - 96]
	sub	rcx, rsi
	add	rdx, rcx
	mov	rsi, rdx
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	xor	r8d, r8d
	mov	ecx, r8d
	mov	r8d, 4294967295
	movabs	rdx, 1056111590940079682
	mov	r9d, dword ptr [rax]
	mov	rax, qword ptr [rbp - 120]
	mov	rsi, qword ptr [rbp - 96]
	add	rax, rdx
	sub	rax, rsi
	sub	rax, rdx
	mov	rdx, qword ptr [rbp - 96]
	xor	r10d, r10d
	mov	qword ptr [rbp - 664], rdx 
	mov	edx, r10d
	mov	rsi, qword ptr [rbp - 664] 
	div	rsi
	mov	r10d, dword ptr [4*rax + _ZZN5Botan12_GLOBAL__N_116aes_key_scheduleEPKhmRSt6vectorIjNS_16secure_allocatorIjEEES7_bE2RC]
	mov	r11d, r9d
	xor	r11d, -1
	and	r11d, 2198401339
	xor	r8d, 2198401339
	and	r9d, r8d
	mov	ebx, r10d
	xor	ebx, -1
	and	ebx, -2096565957
	and	r10d, r8d
	or	r11d, r9d
	or	ebx, r10d
	xor	r11d, ebx
	mov	rdi, qword ptr [rbp - 72]
	mov	rax, qword ptr [rbp - 120]
	sub	rcx, 1
	add	rax, rcx
	mov	rsi, rax
	mov	dword ptr [rbp - 668], r11d 
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	edi, dword ptr [rax]
	call	_ZN5Botan12_GLOBAL__N_17SE_wordEj
	mov	edi, eax
	call	_ZN5Botan4rotlILm8EjEET0_S1_
	mov	edi, 4294967295
	mov	r8d, dword ptr [rbp - 668] 
	xor	r8d, -1
	and	r8d, 803285299
	xor	edi, 803285299
	mov	r9d, dword ptr [rbp - 668] 
	and	r9d, edi
	mov	r10d, eax
	xor	r10d, -1
	and	r10d, 803285299
	and	eax, edi
	or	r8d, r9d
	or	r10d, eax
	xor	r8d, r10d
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 120]
	mov	dword ptr [rbp - 672], r8d 
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	r8d, dword ptr [rbp - 672] 
	mov	dword ptr [rax], r8d
	mov	qword ptr [rbp - 128], 1
	mov	dword ptr [rbp - 164], 1786856472
	jmp	.LBB19_96
.LBB19_87:                              
	mov	rdi, qword ptr [rbp - 72]
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	mov	dword ptr [rbp - 164], 1397280645
	mov	qword ptr [rbp - 680], rax 
	jmp	.LBB19_96
.LBB19_88:                              
	movabs	rax, 2825230465778254942
	xor	ecx, ecx
	mov	edx, ecx
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 120]
	mov	r8, qword ptr [rbp - 128]
	sub	rdx, r8
	sub	rsi, rdx
	mov	rdx, qword ptr [rbp - 96]
	add	rsi, rax
	sub	rsi, rdx
	sub	rsi, rax
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	xor	ecx, ecx
	mov	edx, ecx
	mov	ecx, dword ptr [rax]
	mov	rdi, qword ptr [rbp - 72]
	mov	rax, qword ptr [rbp - 120]
	mov	rsi, qword ptr [rbp - 128]
	sub	rdx, rsi
	sub	rax, rdx
	mov	rsi, rax
	mov	dword ptr [rbp - 684], ecx 
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	ecx, dword ptr [rbp - 684] 
	mov	dword ptr [rax], ecx
	mov	dword ptr [rbp - 164], 1718998226
	jmp	.LBB19_96
.LBB19_89:                              
	mov	dword ptr [rbp - 164], 1735871419
	jmp	.LBB19_96
.LBB19_90:                              
	movabs	rax, -7475846651247466733
	mov	rcx, qword ptr [rbp - 96]
	mov	rdx, qword ptr [rbp - 120]
	add	rdx, rax
	add	rdx, rcx
	sub	rdx, rax
	mov	qword ptr [rbp - 120], rdx
	mov	dword ptr [rbp - 164], 1994986441
	jmp	.LBB19_96
.LBB19_91:                              
	mov	dword ptr [rbp - 164], 1683834110
	jmp	.LBB19_96
.LBB19_92:                              
	mov	dword ptr [rbp - 164], 357659618
	jmp	.LBB19_96
.LBB19_93:                              
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 152]
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	edi, dword ptr [rax]
	call	_ZN5Botan13reverse_bytesEj
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 152]
	mov	dword ptr [rbp - 688], eax 
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	ecx, dword ptr [rbp - 688] 
	mov	dword ptr [rax], ecx
	mov	dword ptr [rbp - 164], 958215301
	jmp	.LBB19_96
.LBB19_94:                              
	mov	rdi, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rbp - 160]
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	edi, dword ptr [rax]
	call	_ZN5Botan13reverse_bytesEj
	mov	rdi, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rbp - 160]
	mov	dword ptr [rbp - 692], eax 
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm
	mov	ecx, dword ptr [rbp - 692] 
	mov	dword ptr [rax], ecx
	mov	dword ptr [rbp - 164], 612680287
	jmp	.LBB19_96
.LBB19_95:                              
	movabs	rax, -5372906784892268556
	mov	rcx, qword ptr [rbp - 160]
	add	rcx, rax
	add	rcx, 1
	sub	rcx, rax
	mov	qword ptr [rbp - 160], rcx
	mov	dword ptr [rbp - 164], 285078958
.LBB19_96:                              
	jmp	.LBB19_1
.Lfunc_end19:
	.size	_ZN5Botan12_GLOBAL__N_116aes_key_scheduleEPKhmRSt6vectorIjNS_16secure_allocatorIjEEES7_b, .Lfunc_end19-_ZN5Botan12_GLOBAL__N_116aes_key_scheduleEPKhmRSt6vectorIjNS_16secure_allocatorIjEEES7_b
	.cfi_endproc

	.section	.text._ZN5Botan5CPUID16is_little_endianEv,"axG",@progbits,_ZN5Botan5CPUID16is_little_endianEv,comdat
	.weak	_ZN5Botan5CPUID16is_little_endianEv 
	.p2align	4, 0x90
	.type	_ZN5Botan5CPUID16is_little_endianEv,@function
_ZN5Botan5CPUID16is_little_endianEv:    

	push	rbp
	mov	rbp, rsp
	mov	al, 1
	and	al, 1
	movzx	eax, al
	pop	rbp
	ret
.Lfunc_end20:
	.size	_ZN5Botan5CPUID16is_little_endianEv, .Lfunc_end20-_ZN5Botan5CPUID16is_little_endianEv

	.text
	.globl	_ZN5Botan7AES_1285clearEv 
	.p2align	4, 0x90
	.type	_ZN5Botan7AES_1285clearEv,@function
_ZN5Botan7AES_1285clearEv:              
	.cfi_startproc

	push	rbp
.Lcfi98:
	.cfi_def_cfa_offset 16
.Lcfi99:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi100:
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	rax, rdi
	add	rax, 8
	mov	qword ptr [rbp - 16], rdi 
	mov	rdi, rax
	call	_ZN5Botan3zapIjNS_16secure_allocatorIjEEEEvRSt6vectorIT_T0_E
	mov	rax, qword ptr [rbp - 16] 
	add	rax, 32
	mov	rdi, rax
	call	_ZN5Botan3zapIjNS_16secure_allocatorIjEEEEvRSt6vectorIT_T0_E
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end21:
	.size	_ZN5Botan7AES_1285clearEv, .Lfunc_end21-_ZN5Botan7AES_1285clearEv
	.cfi_endproc

	.section	.text._ZN5Botan3zapIjNS_16secure_allocatorIjEEEEvRSt6vectorIT_T0_E,"axG",@progbits,_ZN5Botan3zapIjNS_16secure_allocatorIjEEEEvRSt6vectorIT_T0_E,comdat
	.weak	_ZN5Botan3zapIjNS_16secure_allocatorIjEEEEvRSt6vectorIT_T0_E 
	.p2align	4, 0x90
	.type	_ZN5Botan3zapIjNS_16secure_allocatorIjEEEEvRSt6vectorIT_T0_E,@function
_ZN5Botan3zapIjNS_16secure_allocatorIjEEEEvRSt6vectorIT_T0_E: 
	.cfi_startproc

	push	rbp
.Lcfi101:
	.cfi_def_cfa_offset 16
.Lcfi102:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi103:
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZN5Botan7zeroiseIjNS_16secure_allocatorIjEEEEvRSt6vectorIT_T0_E
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE5clearEv
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE13shrink_to_fitEv
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end22:
	.size	_ZN5Botan3zapIjNS_16secure_allocatorIjEEEEvRSt6vectorIT_T0_E, .Lfunc_end22-_ZN5Botan3zapIjNS_16secure_allocatorIjEEEEvRSt6vectorIT_T0_E
	.cfi_endproc

	.text
	.globl	_ZNK5Botan7AES_1929encrypt_nEPKhPhm 
	.p2align	4, 0x90
	.type	_ZNK5Botan7AES_1929encrypt_nEPKhPhm,@function
_ZNK5Botan7AES_1929encrypt_nEPKhPhm:    
	.cfi_startproc

	push	rbp
.Lcfi104:
	.cfi_def_cfa_offset 16
.Lcfi105:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi106:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 120
.Lcfi107:
	.cfi_offset rbx, -56
.Lcfi108:
	.cfi_offset r12, -48
.Lcfi109:
	.cfi_offset r13, -40
.Lcfi110:
	.cfi_offset r14, -32
.Lcfi111:
	.cfi_offset r15, -24
	mov	qword ptr [rbp - 64], rdi
	mov	qword ptr [rbp - 72], rsi
	mov	qword ptr [rbp - 80], rdx
	mov	qword ptr [rbp - 88], rcx
	mov	rcx, qword ptr [rbp - 64]
	mov	qword ptr [rbp - 56], rcx
	mov	rcx, qword ptr [rbp - 56]
	mov	rdx, qword ptr [rbp - 56]
	add	rdx, 8
	mov	rdi, rdx
	mov	qword ptr [rbp - 104], rcx 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE5emptyEv
	and	al, 1
	movzx	r8d, al
	cmp	r8d, 0
	sete	al
	and	al, 1
	movzx	esi, al
	mov	rdi, qword ptr [rbp - 104] 
	call	_ZNK5Botan18SymmetricAlgorithm14verify_key_setEb
	mov	dword ptr [rbp - 92], 425115453
.LBB23_1:                               
	mov	eax, dword ptr [rbp - 92]
	mov	ecx, eax
	sub	ecx, -2125252109
	mov	dword ptr [rbp - 108], eax 
	mov	dword ptr [rbp - 112], ecx 
	je	.LBB23_4
	jmp	.LBB23_16
.LBB23_16:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -1703915606
	mov	dword ptr [rbp - 116], eax 
	je	.LBB23_5
	jmp	.LBB23_17
.LBB23_17:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -1439926449
	mov	dword ptr [rbp - 120], eax 
	je	.LBB23_11
	jmp	.LBB23_18
.LBB23_18:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -819542735
	mov	dword ptr [rbp - 124], eax 
	je	.LBB23_13
	jmp	.LBB23_19
.LBB23_19:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -806874675
	mov	dword ptr [rbp - 128], eax 
	je	.LBB23_7
	jmp	.LBB23_20
.LBB23_20:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -501224715
	mov	dword ptr [rbp - 132], eax 
	je	.LBB23_12
	jmp	.LBB23_21
.LBB23_21:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -76613713
	mov	dword ptr [rbp - 136], eax 
	je	.LBB23_6
	jmp	.LBB23_22
.LBB23_22:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, 425115453
	mov	dword ptr [rbp - 140], eax 
	je	.LBB23_3
	jmp	.LBB23_23
.LBB23_23:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, 1109513756
	mov	dword ptr [rbp - 144], eax 
	je	.LBB23_8
	jmp	.LBB23_24
.LBB23_24:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, 1166562766
	mov	dword ptr [rbp - 148], eax 
	je	.LBB23_9
	jmp	.LBB23_25
.LBB23_25:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, 1380536562
	mov	dword ptr [rbp - 152], eax 
	je	.LBB23_10
	jmp	.LBB23_26
.LBB23_26:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, 1696736396
	mov	dword ptr [rbp - 156], eax 
	je	.LBB23_14
	jmp	.LBB23_2
.LBB23_2:                               
	jmp	.LBB23_15
.LBB23_3:                               
	call	_ZN5Botan5CPUID10has_hw_aesEv
	mov	ecx, 2591051690
	mov	edx, 2169715187
	test	al, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 92], ecx
	jmp	.LBB23_15
.LBB23_4:                               
	mov	rsi, qword ptr [rbp - 72]
	mov	rdx, qword ptr [rbp - 80]
	mov	rcx, qword ptr [rbp - 88]
	mov	rdi, qword ptr [rbp - 56]
	call	_ZNK5Botan7AES_19216hw_aes_encrypt_nEPKhPhm
	mov	dword ptr [rbp - 92], -501224715
	jmp	.LBB23_15
.LBB23_5:                               
	mov	eax, 3475424561
	mov	ecx, 4218353583
	mov	dl, 1
	mov	esi, dword ptr [x.52]
	mov	edi, dword ptr [y.53]
	mov	r8d, esi
	add	r8d, -1125593436
	sub	r8d, 1
	sub	r8d, -1125593436
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 1
	mov	r14b, r11b
	and	r14b, -1
	and	r9b, dl
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 1
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 92], eax
	jmp	.LBB23_15
.LBB23_6:                               
	call	_ZN5Botan5CPUID9has_vpermEv
	mov	ecx, 3475424561
	mov	edx, 3488092621
	mov	sil, 1
	and	al, 1
	mov	byte ptr [rbp - 41], al
	mov	edi, dword ptr [x.52]
	mov	r8d, dword ptr [y.53]
	mov	r9d, edi
	sub	r9d, -1526352224
	sub	r9d, 1
	add	r9d, -1526352224
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	al
	cmp	r8d, 10
	setl	r10b
	mov	r11b, al
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	sil, 1
	mov	r14b, r11b
	and	r14b, -1
	and	al, sil
	mov	r15b, bl
	and	r15b, -1
	and	r10b, sil
	or	r14b, al
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	sil, 1
	and	r11b, sil
	or	r14b, r11b
	test	r14b, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 92], ecx
	jmp	.LBB23_15
.LBB23_7:                               
	mov	eax, 1166562766
	mov	ecx, 1109513756
	mov	dl, byte ptr [rbp - 41]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 92], eax
	jmp	.LBB23_15
.LBB23_8:                               
	mov	rsi, qword ptr [rbp - 72]
	mov	rdx, qword ptr [rbp - 80]
	mov	rcx, qword ptr [rbp - 88]
	mov	rdi, qword ptr [rbp - 56]
	call	_ZNK5Botan7AES_19215vperm_encrypt_nEPKhPhm
	mov	dword ptr [rbp - 92], -501224715
	jmp	.LBB23_15
.LBB23_9:                               
	mov	eax, 1696736396
	mov	ecx, 1380536562
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.52]
	mov	r8d, dword ptr [y.53]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 1
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, -1
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 1
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 92], eax
	jmp	.LBB23_15
.LBB23_10:                              
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 80]
	mov	rdx, qword ptr [rbp - 88]
	mov	rax, qword ptr [rbp - 56]
	add	rax, 8
	mov	rcx, rax
	call	_ZN5Botan12_GLOBAL__N_113aes_encrypt_nEPKhPhmRKSt6vectorIjNS_16secure_allocatorIjEEE
	mov	r8d, 1696736396
	mov	r9d, 2855040847
	mov	r10b, 1
	xor	r11d, r11d
	mov	ebx, dword ptr [x.52]
	mov	r14d, dword ptr [y.53]
	sub	r11d, 1
	mov	r15d, ebx
	add	r15d, r11d
	imul	ebx, r15d
	and	ebx, 1
	cmp	ebx, 0
	sete	r12b
	cmp	r14d, 10
	setl	r13b
	mov	al, r12b
	xor	al, -1
	mov	cl, r13b
	xor	cl, -1
	xor	r10b, 1
	mov	dl, al
	and	dl, -1
	and	r12b, r10b
	mov	sil, cl
	and	sil, -1
	and	r13b, r10b
	or	dl, r12b
	or	sil, r13b
	xor	dl, sil
	or	al, cl
	xor	al, -1
	or	r10b, 1
	and	al, r10b
	or	dl, al
	test	dl, 1
	cmovne	r8d, r9d
	mov	dword ptr [rbp - 92], r8d
	jmp	.LBB23_15
.LBB23_11:                              
	mov	dword ptr [rbp - 92], -501224715
	jmp	.LBB23_15
.LBB23_12:
	add	rsp, 120
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB23_13:                              
	call	_ZN5Botan5CPUID9has_vpermEv
	mov	dword ptr [rbp - 92], -76613713
	mov	byte ptr [rbp - 157], al 
	jmp	.LBB23_15
.LBB23_14:                              
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 80]
	mov	rdx, qword ptr [rbp - 88]
	mov	rax, qword ptr [rbp - 56]
	add	rax, 8
	mov	rcx, rax
	call	_ZN5Botan12_GLOBAL__N_113aes_encrypt_nEPKhPhmRKSt6vectorIjNS_16secure_allocatorIjEEE
	mov	dword ptr [rbp - 92], 1380536562
.LBB23_15:                              
	jmp	.LBB23_1
.Lfunc_end23:
	.size	_ZNK5Botan7AES_1929encrypt_nEPKhPhm, .Lfunc_end23-_ZNK5Botan7AES_1929encrypt_nEPKhPhm
	.cfi_endproc

	.globl	_ZNK5Botan7AES_1929decrypt_nEPKhPhm 
	.p2align	4, 0x90
	.type	_ZNK5Botan7AES_1929decrypt_nEPKhPhm,@function
_ZNK5Botan7AES_1929decrypt_nEPKhPhm:    
	.cfi_startproc

	push	rbp
.Lcfi112:
	.cfi_def_cfa_offset 16
.Lcfi113:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi114:
	.cfi_def_cfa_register rbp
	sub	rsp, 96
	mov	qword ptr [rbp - 16], rdi
	mov	qword ptr [rbp - 24], rsi
	mov	qword ptr [rbp - 32], rdx
	mov	qword ptr [rbp - 40], rcx
	mov	rcx, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 8], rcx
	mov	rcx, qword ptr [rbp - 8]
	mov	rdx, qword ptr [rbp - 8]
	add	rdx, 32
	mov	rdi, rdx
	mov	qword ptr [rbp - 56], rcx 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE5emptyEv
	and	al, 1
	movzx	r8d, al
	cmp	r8d, 0
	sete	al
	and	al, 1
	movzx	esi, al
	mov	rdi, qword ptr [rbp - 56] 
	call	_ZNK5Botan18SymmetricAlgorithm14verify_key_setEb
	mov	dword ptr [rbp - 44], 2001535909
.LBB24_1:                               
	mov	eax, dword ptr [rbp - 44]
	mov	ecx, eax
	sub	ecx, -1611681810
	mov	dword ptr [rbp - 60], eax 
	mov	dword ptr [rbp - 64], ecx 
	je	.LBB24_6
	jmp	.LBB24_10
.LBB24_10:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, -611951712
	mov	dword ptr [rbp - 68], eax 
	je	.LBB24_8
	jmp	.LBB24_11
.LBB24_11:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 371748401
	mov	dword ptr [rbp - 72], eax 
	je	.LBB24_7
	jmp	.LBB24_12
.LBB24_12:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 1331788993
	mov	dword ptr [rbp - 76], eax 
	je	.LBB24_4
	jmp	.LBB24_13
.LBB24_13:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 1841013203
	mov	dword ptr [rbp - 80], eax 
	je	.LBB24_5
	jmp	.LBB24_14
.LBB24_14:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 2001535909
	mov	dword ptr [rbp - 84], eax 
	je	.LBB24_3
	jmp	.LBB24_2
.LBB24_2:                               
	jmp	.LBB24_9
.LBB24_3:                               
	call	_ZN5Botan5CPUID10has_hw_aesEv
	mov	ecx, 1841013203
	mov	edx, 1331788993
	test	al, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 44], ecx
	jmp	.LBB24_9
.LBB24_4:                               
	mov	rsi, qword ptr [rbp - 24]
	mov	rdx, qword ptr [rbp - 32]
	mov	rcx, qword ptr [rbp - 40]
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNK5Botan7AES_19216hw_aes_decrypt_nEPKhPhm
	mov	dword ptr [rbp - 44], -611951712
	jmp	.LBB24_9
.LBB24_5:                               
	call	_ZN5Botan5CPUID9has_vpermEv
	mov	ecx, 371748401
	mov	edx, 2683285486
	test	al, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 44], ecx
	jmp	.LBB24_9
.LBB24_6:                               
	mov	rsi, qword ptr [rbp - 24]
	mov	rdx, qword ptr [rbp - 32]
	mov	rcx, qword ptr [rbp - 40]
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNK5Botan7AES_19215vperm_decrypt_nEPKhPhm
	mov	dword ptr [rbp - 44], -611951712
	jmp	.LBB24_9
.LBB24_7:                               
	mov	rdi, qword ptr [rbp - 24]
	mov	rsi, qword ptr [rbp - 32]
	mov	rdx, qword ptr [rbp - 40]
	mov	rax, qword ptr [rbp - 8]
	add	rax, 32
	mov	rcx, rax
	call	_ZN5Botan12_GLOBAL__N_113aes_decrypt_nEPKhPhmRKSt6vectorIjNS_16secure_allocatorIjEEE
	mov	dword ptr [rbp - 44], -611951712
	jmp	.LBB24_9
.LBB24_8:
	add	rsp, 96
	pop	rbp
	ret
.LBB24_9:                               
	jmp	.LBB24_1
.Lfunc_end24:
	.size	_ZNK5Botan7AES_1929decrypt_nEPKhPhm, .Lfunc_end24-_ZNK5Botan7AES_1929decrypt_nEPKhPhm
	.cfi_endproc

	.globl	_ZN5Botan7AES_19212key_scheduleEPKhm 
	.p2align	4, 0x90
	.type	_ZN5Botan7AES_19212key_scheduleEPKhm,@function
_ZN5Botan7AES_19212key_scheduleEPKhm:   
	.cfi_startproc

	push	rbp
.Lcfi115:
	.cfi_def_cfa_offset 16
.Lcfi116:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi117:
	.cfi_def_cfa_register rbp
	sub	rsp, 144
	mov	qword ptr [rbp - 24], rdi
	mov	qword ptr [rbp - 32], rsi
	mov	qword ptr [rbp - 40], rdx
	mov	rdx, qword ptr [rbp - 24]
	mov	qword ptr [rbp - 16], rdx
	mov	dword ptr [rbp - 44], -624185016
.LBB25_1:                               
	mov	eax, dword ptr [rbp - 44]
	mov	ecx, eax
	sub	ecx, -2136966696
	mov	dword ptr [rbp - 48], eax 
	mov	dword ptr [rbp - 52], ecx 
	je	.LBB25_13
	jmp	.LBB25_15
.LBB25_15:                              
	mov	eax, dword ptr [rbp - 48] 
	sub	eax, -877872424
	mov	dword ptr [rbp - 56], eax 
	je	.LBB25_8
	jmp	.LBB25_16
.LBB25_16:                              
	mov	eax, dword ptr [rbp - 48] 
	sub	eax, -624185016
	mov	dword ptr [rbp - 60], eax 
	je	.LBB25_3
	jmp	.LBB25_17
.LBB25_17:                              
	mov	eax, dword ptr [rbp - 48] 
	sub	eax, -439470677
	mov	dword ptr [rbp - 64], eax 
	je	.LBB25_6
	jmp	.LBB25_18
.LBB25_18:                              
	mov	eax, dword ptr [rbp - 48] 
	sub	eax, -289802932
	mov	dword ptr [rbp - 68], eax 
	je	.LBB25_12
	jmp	.LBB25_19
.LBB25_19:                              
	mov	eax, dword ptr [rbp - 48] 
	sub	eax, -131156378
	mov	dword ptr [rbp - 72], eax 
	je	.LBB25_5
	jmp	.LBB25_20
.LBB25_20:                              
	mov	eax, dword ptr [rbp - 48] 
	sub	eax, 377786113
	mov	dword ptr [rbp - 76], eax 
	je	.LBB25_7
	jmp	.LBB25_21
.LBB25_21:                              
	mov	eax, dword ptr [rbp - 48] 
	sub	eax, 652578998
	mov	dword ptr [rbp - 80], eax 
	je	.LBB25_4
	jmp	.LBB25_22
.LBB25_22:                              
	mov	eax, dword ptr [rbp - 48] 
	sub	eax, 1245323433
	mov	dword ptr [rbp - 84], eax 
	je	.LBB25_10
	jmp	.LBB25_23
.LBB25_23:                              
	mov	eax, dword ptr [rbp - 48] 
	sub	eax, 1360597778
	mov	dword ptr [rbp - 88], eax 
	je	.LBB25_11
	jmp	.LBB25_24
.LBB25_24:                              
	mov	eax, dword ptr [rbp - 48] 
	sub	eax, 1612469203
	mov	dword ptr [rbp - 92], eax 
	je	.LBB25_9
	jmp	.LBB25_2
.LBB25_2:                               
	jmp	.LBB25_14
.LBB25_3:                               
	call	_ZN5Botan5CPUID10has_aes_niEv
	mov	ecx, 4163810918
	mov	edx, 652578998
	test	al, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 44], ecx
	jmp	.LBB25_14
.LBB25_4:                               
	mov	rsi, qword ptr [rbp - 32]
	mov	rdx, qword ptr [rbp - 40]
	mov	rdi, qword ptr [rbp - 16]
	call	_ZN5Botan7AES_19218aesni_key_scheduleEPKhm
	mov	dword ptr [rbp - 44], -289802932
	jmp	.LBB25_14
.LBB25_5:                               
	mov	eax, 2158000600
	mov	ecx, 3855496619
	mov	edx, dword ptr [x.56]
	mov	esi, dword ptr [y.57]
	mov	edi, edx
	add	edi, -1326161036
	sub	edi, 1
	sub	edi, -1326161036
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 44], eax
	jmp	.LBB25_14
.LBB25_6:                               
	call	_ZN5Botan5CPUID10has_hw_aesEv
	mov	ecx, 2158000600
	mov	edx, 377786113
	xor	esi, esi
	and	al, 1
	mov	byte ptr [rbp - 1], al
	mov	edi, dword ptr [x.56]
	mov	r8d, dword ptr [y.57]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	al
	cmp	r8d, 10
	setl	r10b
	mov	r11b, al
	and	r11b, r10b
	xor	al, r10b
	or	r11b, al
	test	r11b, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 44], ecx
	jmp	.LBB25_14
.LBB25_7:                               
	mov	eax, 1612469203
	mov	ecx, 3417094872
	mov	dl, byte ptr [rbp - 1]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 44], eax
	jmp	.LBB25_14
.LBB25_8:                               
	mov	rdi, qword ptr [rbp - 32]
	mov	rsi, qword ptr [rbp - 40]
	mov	rax, qword ptr [rbp - 16]
	add	rax, 8
	mov	rcx, qword ptr [rbp - 16]
	add	rcx, 32
	mov	qword ptr [rbp - 104], rdi 
	mov	qword ptr [rbp - 112], rsi 
	mov	qword ptr [rbp - 120], rax 
	mov	qword ptr [rbp - 128], rcx 
	call	_ZN5Botan5CPUID16is_little_endianEv
	and	al, 1
	movzx	r8d, al
	mov	rdi, qword ptr [rbp - 104] 
	mov	rsi, qword ptr [rbp - 112] 
	mov	rdx, qword ptr [rbp - 120] 
	mov	rcx, qword ptr [rbp - 128] 
	call	_ZN5Botan12_GLOBAL__N_116aes_key_scheduleEPKhmRSt6vectorIjNS_16secure_allocatorIjEEES7_b
	mov	dword ptr [rbp - 44], -289802932
	jmp	.LBB25_14
.LBB25_9:                               
	call	_ZN5Botan5CPUID9has_vpermEv
	mov	ecx, 1360597778
	mov	edx, 1245323433
	test	al, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 44], ecx
	jmp	.LBB25_14
.LBB25_10:                              
	mov	rsi, qword ptr [rbp - 32]
	mov	rdx, qword ptr [rbp - 40]
	mov	rdi, qword ptr [rbp - 16]
	call	_ZN5Botan7AES_19218vperm_key_scheduleEPKhm
	mov	dword ptr [rbp - 44], -289802932
	jmp	.LBB25_14
.LBB25_11:                              
	xor	r8d, r8d
	mov	rdi, qword ptr [rbp - 32]
	mov	rsi, qword ptr [rbp - 40]
	mov	rax, qword ptr [rbp - 16]
	add	rax, 8
	mov	rcx, qword ptr [rbp - 16]
	add	rcx, 32
	mov	rdx, rax
	call	_ZN5Botan12_GLOBAL__N_116aes_key_scheduleEPKhmRSt6vectorIjNS_16secure_allocatorIjEEES7_b
	mov	dword ptr [rbp - 44], -289802932
	jmp	.LBB25_14
.LBB25_12:
	add	rsp, 144
	pop	rbp
	ret
.LBB25_13:                              
	call	_ZN5Botan5CPUID10has_hw_aesEv
	mov	dword ptr [rbp - 44], -439470677
	mov	byte ptr [rbp - 129], al 
.LBB25_14:                              
	jmp	.LBB25_1
.Lfunc_end25:
	.size	_ZN5Botan7AES_19212key_scheduleEPKhm, .Lfunc_end25-_ZN5Botan7AES_19212key_scheduleEPKhm
	.cfi_endproc

	.globl	_ZN5Botan7AES_1925clearEv 
	.p2align	4, 0x90
	.type	_ZN5Botan7AES_1925clearEv,@function
_ZN5Botan7AES_1925clearEv:              
	.cfi_startproc

	push	rbp
.Lcfi118:
	.cfi_def_cfa_offset 16
.Lcfi119:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi120:
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	rax, rdi
	add	rax, 8
	mov	qword ptr [rbp - 16], rdi 
	mov	rdi, rax
	call	_ZN5Botan3zapIjNS_16secure_allocatorIjEEEEvRSt6vectorIT_T0_E
	mov	rax, qword ptr [rbp - 16] 
	add	rax, 32
	mov	rdi, rax
	call	_ZN5Botan3zapIjNS_16secure_allocatorIjEEEEvRSt6vectorIT_T0_E
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end26:
	.size	_ZN5Botan7AES_1925clearEv, .Lfunc_end26-_ZN5Botan7AES_1925clearEv
	.cfi_endproc

	.globl	_ZNK5Botan7AES_2569encrypt_nEPKhPhm 
	.p2align	4, 0x90
	.type	_ZNK5Botan7AES_2569encrypt_nEPKhPhm,@function
_ZNK5Botan7AES_2569encrypt_nEPKhPhm:    
	.cfi_startproc

	push	rbp
.Lcfi121:
	.cfi_def_cfa_offset 16
.Lcfi122:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi123:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 152
.Lcfi124:
	.cfi_offset rbx, -40
.Lcfi125:
	.cfi_offset r14, -32
.Lcfi126:
	.cfi_offset r15, -24
	mov	eax, dword ptr [x.60]
	mov	r8d, dword ptr [y.61]
	mov	r9d, eax
	sub	r9d, 523571887
	sub	r9d, 1
	add	r9d, 523571887
	imul	eax, r9d
	and	eax, 1
	cmp	eax, 0
	sete	r10b
	and	r10b, 1
	mov	byte ptr [rbp - 66], r10b
	cmp	r8d, 10
	setl	r10b
	and	r10b, 1
	mov	byte ptr [rbp - 65], r10b
	mov	dword ptr [rbp - 72], -435899003
	mov	qword ptr [rbp - 80], rdx 
	mov	qword ptr [rbp - 88], rsi 
	mov	qword ptr [rbp - 96], rdi 
	mov	qword ptr [rbp - 104], rcx 
.LBB27_1:                               
	mov	eax, dword ptr [rbp - 72]
	mov	ecx, eax
	sub	ecx, -1538703082
	mov	dword ptr [rbp - 108], eax 
	mov	dword ptr [rbp - 112], ecx 
	je	.LBB27_10
	jmp	.LBB27_13
.LBB27_13:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -1098888252
	mov	dword ptr [rbp - 116], eax 
	je	.LBB27_5
	jmp	.LBB27_14
.LBB27_14:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -572071257
	mov	dword ptr [rbp - 120], eax 
	je	.LBB27_7
	jmp	.LBB27_15
.LBB27_15:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -435899003
	mov	dword ptr [rbp - 124], eax 
	je	.LBB27_3
	jmp	.LBB27_16
.LBB27_16:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, 217464898
	mov	dword ptr [rbp - 128], eax 
	je	.LBB27_4
	jmp	.LBB27_17
.LBB27_17:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, 803569999
	mov	dword ptr [rbp - 132], eax 
	je	.LBB27_11
	jmp	.LBB27_18
.LBB27_18:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, 1224906403
	mov	dword ptr [rbp - 136], eax 
	je	.LBB27_6
	jmp	.LBB27_19
.LBB27_19:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, 1461977281
	mov	dword ptr [rbp - 140], eax 
	je	.LBB27_8
	jmp	.LBB27_20
.LBB27_20:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, 1488361536
	mov	dword ptr [rbp - 144], eax 
	je	.LBB27_9
	jmp	.LBB27_2
.LBB27_2:                               
	jmp	.LBB27_12
.LBB27_3:                               
	mov	eax, 803569999
	mov	ecx, 217464898
	mov	dl, byte ptr [rbp - 66]
	mov	sil, byte ptr [rbp - 65]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 72], eax
	jmp	.LBB27_12
.LBB27_4:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	qword ptr [rbp - 64], rcx
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	qword ptr [rbp - 56], rcx
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	qword ptr [rbp - 48], rcx
	mov	rcx, qword ptr [rbp - 96] 
	mov	qword ptr [rax], rcx
	mov	rdx, qword ptr [rbp - 64]
	mov	rsi, qword ptr [rbp - 88] 
	mov	qword ptr [rdx], rsi
	mov	rdx, qword ptr [rbp - 56]
	mov	rdi, qword ptr [rbp - 80] 
	mov	qword ptr [rdx], rdi
	mov	rdx, qword ptr [rbp - 48]
	mov	r8, qword ptr [rbp - 104] 
	mov	qword ptr [rdx], r8
	mov	rax, qword ptr [rax]
	mov	qword ptr [rbp - 40], rax
	mov	rax, qword ptr [rbp - 40]
	mov	rdx, qword ptr [rbp - 40]
	add	rdx, 8
	mov	rdi, rdx
	mov	qword ptr [rbp - 152], rax 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE5emptyEv
	and	al, 1
	movzx	r9d, al
	cmp	r9d, 0
	sete	al
	and	al, 1
	movzx	esi, al
	mov	rdi, qword ptr [rbp - 152] 
	call	_ZNK5Botan18SymmetricAlgorithm14verify_key_setEb
	call	_ZN5Botan5CPUID10has_hw_aesEv
	mov	esi, 803569999
	mov	r9d, 3196079044
	and	al, 1
	mov	byte ptr [rbp - 25], al
	mov	r10d, dword ptr [x.60]
	mov	r11d, dword ptr [y.61]
	mov	ebx, r10d
	sub	ebx, 894696969
	sub	ebx, 1
	add	ebx, 894696969
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	al
	cmp	r11d, 10
	setl	r14b
	mov	r15b, al
	and	r15b, r14b
	xor	al, r14b
	or	r15b, al
	test	r15b, 1
	cmovne	esi, r9d
	mov	dword ptr [rbp - 72], esi
	jmp	.LBB27_12
.LBB27_5:                               
	mov	eax, 3722896039
	mov	ecx, 1224906403
	mov	dl, byte ptr [rbp - 25]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 72], eax
	jmp	.LBB27_12
.LBB27_6:                               
	mov	rax, qword ptr [rbp - 64]
	mov	rsi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 56]
	mov	rdx, qword ptr [rax]
	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rax]
	mov	rdi, qword ptr [rbp - 40]
	call	_ZNK5Botan7AES_25616hw_aes_encrypt_nEPKhPhm
	mov	dword ptr [rbp - 72], -1538703082
	jmp	.LBB27_12
.LBB27_7:                               
	call	_ZN5Botan5CPUID9has_vpermEv
	mov	ecx, 1488361536
	mov	edx, 1461977281
	test	al, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 72], ecx
	jmp	.LBB27_12
.LBB27_8:                               
	mov	rax, qword ptr [rbp - 64]
	mov	rsi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 56]
	mov	rdx, qword ptr [rax]
	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rax]
	mov	rdi, qword ptr [rbp - 40]
	call	_ZNK5Botan7AES_25615vperm_encrypt_nEPKhPhm
	mov	dword ptr [rbp - 72], -1538703082
	jmp	.LBB27_12
.LBB27_9:                               
	mov	rax, qword ptr [rbp - 64]
	mov	rdi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 56]
	mov	rsi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 48]
	mov	rdx, qword ptr [rax]
	mov	rax, qword ptr [rbp - 40]
	add	rax, 8
	mov	rcx, rax
	call	_ZN5Botan12_GLOBAL__N_113aes_encrypt_nEPKhPhmRKSt6vectorIjNS_16secure_allocatorIjEEE
	mov	dword ptr [rbp - 72], -1538703082
	jmp	.LBB27_12
.LBB27_10:
	lea	rsp, [rbp - 24]
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB27_11:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 96] 
	mov	qword ptr [rax], rdi
	mov	r8, qword ptr [rbp - 88] 
	mov	qword ptr [rcx], r8
	mov	rcx, qword ptr [rbp - 80] 
	mov	qword ptr [rdx], rcx
	mov	rdx, qword ptr [rbp - 104] 
	mov	qword ptr [rsi], rdx
	mov	rax, qword ptr [rax]
	mov	rsi, rax
	add	rax, 8
	mov	rdi, rax
	mov	qword ptr [rbp - 160], rsi 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE5emptyEv
	and	al, 1
	movzx	r9d, al
	cmp	r9d, 0
	sete	al
	and	al, 1
	movzx	esi, al
	mov	rdi, qword ptr [rbp - 160] 
	call	_ZNK5Botan18SymmetricAlgorithm14verify_key_setEb
	call	_ZN5Botan5CPUID10has_hw_aesEv
	mov	dword ptr [rbp - 72], 217464898
	mov	byte ptr [rbp - 161], al 
.LBB27_12:                              
	jmp	.LBB27_1
.Lfunc_end27:
	.size	_ZNK5Botan7AES_2569encrypt_nEPKhPhm, .Lfunc_end27-_ZNK5Botan7AES_2569encrypt_nEPKhPhm
	.cfi_endproc

	.globl	_ZNK5Botan7AES_2569decrypt_nEPKhPhm 
	.p2align	4, 0x90
	.type	_ZNK5Botan7AES_2569decrypt_nEPKhPhm,@function
_ZNK5Botan7AES_2569decrypt_nEPKhPhm:    
	.cfi_startproc

	push	rbp
.Lcfi127:
	.cfi_def_cfa_offset 16
.Lcfi128:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi129:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 152
.Lcfi130:
	.cfi_offset rbx, -56
.Lcfi131:
	.cfi_offset r12, -48
.Lcfi132:
	.cfi_offset r13, -40
.Lcfi133:
	.cfi_offset r14, -32
.Lcfi134:
	.cfi_offset r15, -24
	mov	qword ptr [rbp - 64], rdi
	mov	qword ptr [rbp - 72], rsi
	mov	qword ptr [rbp - 80], rdx
	mov	qword ptr [rbp - 88], rcx
	mov	rcx, qword ptr [rbp - 64]
	mov	qword ptr [rbp - 56], rcx
	mov	rcx, qword ptr [rbp - 56]
	mov	rdx, qword ptr [rbp - 56]
	add	rdx, 32
	mov	rdi, rdx
	mov	qword ptr [rbp - 104], rcx 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE5emptyEv
	and	al, 1
	movzx	r8d, al
	cmp	r8d, 0
	sete	al
	and	al, 1
	movzx	esi, al
	mov	rdi, qword ptr [rbp - 104] 
	call	_ZNK5Botan18SymmetricAlgorithm14verify_key_setEb
	mov	dword ptr [rbp - 92], 438871560
.LBB28_1:                               
	mov	eax, dword ptr [rbp - 92]
	mov	ecx, eax
	sub	ecx, -2126375458
	mov	dword ptr [rbp - 108], eax 
	mov	dword ptr [rbp - 112], ecx 
	je	.LBB28_5
	jmp	.LBB28_22
.LBB28_22:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -2103341384
	mov	dword ptr [rbp - 116], eax 
	je	.LBB28_4
	jmp	.LBB28_23
.LBB28_23:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -2074117685
	mov	dword ptr [rbp - 120], eax 
	je	.LBB28_19
	jmp	.LBB28_24
.LBB28_24:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -1719980795
	mov	dword ptr [rbp - 124], eax 
	je	.LBB28_20
	jmp	.LBB28_25
.LBB28_25:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -1483768400
	mov	dword ptr [rbp - 128], eax 
	je	.LBB28_10
	jmp	.LBB28_26
.LBB28_26:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -1439535388
	mov	dword ptr [rbp - 132], eax 
	je	.LBB28_11
	jmp	.LBB28_27
.LBB28_27:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -1343823064
	mov	dword ptr [rbp - 136], eax 
	je	.LBB28_18
	jmp	.LBB28_28
.LBB28_28:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -929652751
	mov	dword ptr [rbp - 140], eax 
	je	.LBB28_12
	jmp	.LBB28_29
.LBB28_29:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -883129761
	mov	dword ptr [rbp - 144], eax 
	je	.LBB28_8
	jmp	.LBB28_30
.LBB28_30:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -811815617
	mov	dword ptr [rbp - 148], eax 
	je	.LBB28_9
	jmp	.LBB28_31
.LBB28_31:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -778969833
	mov	dword ptr [rbp - 152], eax 
	je	.LBB28_13
	jmp	.LBB28_32
.LBB28_32:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -729480406
	mov	dword ptr [rbp - 156], eax 
	je	.LBB28_15
	jmp	.LBB28_33
.LBB28_33:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -701171562
	mov	dword ptr [rbp - 160], eax 
	je	.LBB28_14
	jmp	.LBB28_34
.LBB28_34:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, -26696402
	mov	dword ptr [rbp - 164], eax 
	je	.LBB28_7
	jmp	.LBB28_35
.LBB28_35:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, 333578724
	mov	dword ptr [rbp - 168], eax 
	je	.LBB28_6
	jmp	.LBB28_36
.LBB28_36:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, 438871560
	mov	dword ptr [rbp - 172], eax 
	je	.LBB28_3
	jmp	.LBB28_37
.LBB28_37:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, 618087002
	mov	dword ptr [rbp - 176], eax 
	je	.LBB28_17
	jmp	.LBB28_38
.LBB28_38:                              
	mov	eax, dword ptr [rbp - 108] 
	sub	eax, 929829200
	mov	dword ptr [rbp - 180], eax 
	je	.LBB28_16
	jmp	.LBB28_2
.LBB28_2:                               
	jmp	.LBB28_21
.LBB28_3:                               
	call	_ZN5Botan5CPUID10has_hw_aesEv
	mov	ecx, 2168591838
	mov	edx, 2191625912
	test	al, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 92], ecx
	jmp	.LBB28_21
.LBB28_4:                               
	mov	rsi, qword ptr [rbp - 72]
	mov	rdx, qword ptr [rbp - 80]
	mov	rcx, qword ptr [rbp - 88]
	mov	rdi, qword ptr [rbp - 56]
	call	_ZNK5Botan7AES_25616hw_aes_decrypt_nEPKhPhm
	mov	dword ptr [rbp - 92], -701171562
	jmp	.LBB28_21
.LBB28_5:                               
	mov	eax, 618087002
	mov	ecx, 333578724
	mov	dl, 1
	mov	esi, dword ptr [x.62]
	mov	edi, dword ptr [y.63]
	mov	r8d, esi
	sub	r8d, 1335953551
	sub	r8d, 1
	add	r8d, 1335953551
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 0
	mov	r14b, r11b
	and	r14b, 0
	and	r9b, dl
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 0
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 92], eax
	jmp	.LBB28_21
.LBB28_6:                               
	call	_ZN5Botan5CPUID9has_vpermEv
	mov	ecx, 618087002
	mov	edx, 4268270894
	and	al, 1
	mov	byte ptr [rbp - 41], al
	mov	esi, dword ptr [x.62]
	mov	edi, dword ptr [y.63]
	mov	r8d, esi
	sub	r8d, -131404408
	sub	r8d, 1
	add	r8d, -131404408
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	al
	cmp	edi, 10
	setl	r9b
	mov	r10b, al
	and	r10b, r9b
	xor	al, r9b
	or	r10b, al
	test	r10b, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 92], ecx
	jmp	.LBB28_21
.LBB28_7:                               
	mov	eax, 2855431908
	mov	ecx, 3411837535
	mov	dl, byte ptr [rbp - 41]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 92], eax
	jmp	.LBB28_21
.LBB28_8:                               
	mov	eax, 2951144232
	mov	ecx, 3483151679
	mov	dl, 1
	mov	esi, dword ptr [x.62]
	mov	edi, dword ptr [y.63]
	mov	r8d, esi
	sub	r8d, -1229231123
	sub	r8d, 1
	add	r8d, -1229231123
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 0
	mov	r14b, r11b
	and	r14b, 0
	and	r9b, dl
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 0
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 92], eax
	jmp	.LBB28_21
.LBB28_9:                               
	mov	rsi, qword ptr [rbp - 72]
	mov	rdx, qword ptr [rbp - 80]
	mov	rcx, qword ptr [rbp - 88]
	mov	rdi, qword ptr [rbp - 56]
	call	_ZNK5Botan7AES_25615vperm_decrypt_nEPKhPhm
	mov	eax, 2951144232
	mov	r8d, 2811198896
	xor	r9d, r9d
	mov	r10d, dword ptr [x.62]
	mov	r11d, dword ptr [y.63]
	sub	r9d, 1
	mov	ebx, r10d
	add	ebx, r9d
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r14b
	cmp	r11d, 10
	setl	r15b
	mov	r12b, r14b
	and	r12b, r15b
	xor	r14b, r15b
	or	r12b, r14b
	test	r12b, 1
	cmovne	eax, r8d
	mov	dword ptr [rbp - 92], eax
	jmp	.LBB28_21
.LBB28_10:                              
	mov	dword ptr [rbp - 92], -701171562
	jmp	.LBB28_21
.LBB28_11:                              
	mov	eax, 2220849611
	mov	ecx, 3365314545
	xor	edx, edx
	mov	esi, dword ptr [x.62]
	mov	edi, dword ptr [y.63]
	sub	edx, 1
	mov	r8d, esi
	add	r8d, edx
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	and	r11b, r10b
	xor	r9b, r10b
	or	r11b, r9b
	test	r11b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 92], eax
	jmp	.LBB28_21
.LBB28_12:                              
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 80]
	mov	rdx, qword ptr [rbp - 88]
	mov	rax, qword ptr [rbp - 56]
	add	rax, 32
	mov	rcx, rax
	call	_ZN5Botan12_GLOBAL__N_113aes_decrypt_nEPKhPhmRKSt6vectorIjNS_16secure_allocatorIjEEE
	mov	r8d, 2220849611
	mov	r9d, 3515997463
	xor	r10d, r10d
	mov	r11d, dword ptr [x.62]
	mov	ebx, dword ptr [y.63]
	sub	r10d, 1
	mov	r14d, r11d
	add	r14d, r10d
	imul	r11d, r14d
	and	r11d, 1
	cmp	r11d, 0
	sete	r15b
	cmp	ebx, 10
	setl	r12b
	mov	r13b, r15b
	and	r13b, r12b
	xor	r15b, r12b
	or	r13b, r15b
	test	r13b, 1
	cmovne	r8d, r9d
	mov	dword ptr [rbp - 92], r8d
	jmp	.LBB28_21
.LBB28_13:                              
	mov	dword ptr [rbp - 92], -701171562
	jmp	.LBB28_21
.LBB28_14:                              
	mov	eax, 2574986501
	mov	ecx, 3565486890
	mov	dl, 1
	mov	esi, dword ptr [x.62]
	mov	edi, dword ptr [y.63]
	mov	r8d, esi
	add	r8d, -1290041489
	sub	r8d, 1
	sub	r8d, -1290041489
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 0
	mov	r14b, r11b
	and	r14b, 0
	and	r9b, dl
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 0
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 92], eax
	jmp	.LBB28_21
.LBB28_15:                              
	mov	eax, 2574986501
	mov	ecx, 929829200
	mov	edx, dword ptr [x.62]
	mov	esi, dword ptr [y.63]
	mov	edi, edx
	add	edi, 1174423052
	sub	edi, 1
	sub	edi, 1174423052
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 92], eax
	jmp	.LBB28_21
.LBB28_16:
	add	rsp, 152
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB28_17:                              
	call	_ZN5Botan5CPUID9has_vpermEv
	mov	dword ptr [rbp - 92], 333578724
	mov	byte ptr [rbp - 181], al 
	jmp	.LBB28_21
.LBB28_18:                              
	mov	rsi, qword ptr [rbp - 72]
	mov	rdx, qword ptr [rbp - 80]
	mov	rcx, qword ptr [rbp - 88]
	mov	rdi, qword ptr [rbp - 56]
	call	_ZNK5Botan7AES_25615vperm_decrypt_nEPKhPhm
	mov	dword ptr [rbp - 92], -811815617
	jmp	.LBB28_21
.LBB28_19:                              
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 80]
	mov	rdx, qword ptr [rbp - 88]
	mov	rax, qword ptr [rbp - 56]
	add	rax, 32
	mov	rcx, rax
	call	_ZN5Botan12_GLOBAL__N_113aes_decrypt_nEPKhPhmRKSt6vectorIjNS_16secure_allocatorIjEEE
	mov	dword ptr [rbp - 92], -929652751
	jmp	.LBB28_21
.LBB28_20:                              
	mov	dword ptr [rbp - 92], -729480406
.LBB28_21:                              
	jmp	.LBB28_1
.Lfunc_end28:
	.size	_ZNK5Botan7AES_2569decrypt_nEPKhPhm, .Lfunc_end28-_ZNK5Botan7AES_2569decrypt_nEPKhPhm
	.cfi_endproc

	.globl	_ZN5Botan7AES_25612key_scheduleEPKhm 
	.p2align	4, 0x90
	.type	_ZN5Botan7AES_25612key_scheduleEPKhm,@function
_ZN5Botan7AES_25612key_scheduleEPKhm:   
	.cfi_startproc

	push	rbp
.Lcfi135:
	.cfi_def_cfa_offset 16
.Lcfi136:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi137:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 152
.Lcfi138:
	.cfi_offset rbx, -40
.Lcfi139:
	.cfi_offset r14, -32
.Lcfi140:
	.cfi_offset r15, -24
	mov	qword ptr [rbp - 48], rdi
	mov	qword ptr [rbp - 56], rsi
	mov	qword ptr [rbp - 64], rdx
	mov	rdx, qword ptr [rbp - 48]
	mov	qword ptr [rbp - 40], rdx
	mov	dword ptr [rbp - 68], -764725874
.LBB29_1:                               
	mov	eax, dword ptr [rbp - 68]
	mov	ecx, eax
	sub	ecx, -1943824047
	mov	dword ptr [rbp - 72], eax 
	mov	dword ptr [rbp - 76], ecx 
	je	.LBB29_12
	jmp	.LBB29_18
.LBB29_18:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, -1671651520
	mov	dword ptr [rbp - 80], eax 
	je	.LBB29_9
	jmp	.LBB29_19
.LBB29_19:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, -1176306524
	mov	dword ptr [rbp - 84], eax 
	je	.LBB29_5
	jmp	.LBB29_20
.LBB29_20:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, -1174755187
	mov	dword ptr [rbp - 88], eax 
	je	.LBB29_16
	jmp	.LBB29_21
.LBB29_21:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, -764725874
	mov	dword ptr [rbp - 92], eax 
	je	.LBB29_3
	jmp	.LBB29_22
.LBB29_22:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, -676855300
	mov	dword ptr [rbp - 96], eax 
	je	.LBB29_13
	jmp	.LBB29_23
.LBB29_23:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, -288483430
	mov	dword ptr [rbp - 100], eax 
	je	.LBB29_11
	jmp	.LBB29_24
.LBB29_24:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, -100903651
	mov	dword ptr [rbp - 104], eax 
	je	.LBB29_4
	jmp	.LBB29_25
.LBB29_25:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, 161635338
	mov	dword ptr [rbp - 108], eax 
	je	.LBB29_8
	jmp	.LBB29_26
.LBB29_26:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, 262285102
	mov	dword ptr [rbp - 112], eax 
	je	.LBB29_15
	jmp	.LBB29_27
.LBB29_27:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, 381693996
	mov	dword ptr [rbp - 116], eax 
	je	.LBB29_10
	jmp	.LBB29_28
.LBB29_28:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, 580682547
	mov	dword ptr [rbp - 120], eax 
	je	.LBB29_14
	jmp	.LBB29_29
.LBB29_29:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, 1041652418
	mov	dword ptr [rbp - 124], eax 
	je	.LBB29_6
	jmp	.LBB29_30
.LBB29_30:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, 1171993552
	mov	dword ptr [rbp - 128], eax 
	je	.LBB29_7
	jmp	.LBB29_2
.LBB29_2:                               
	jmp	.LBB29_17
.LBB29_3:                               
	call	_ZN5Botan5CPUID10has_aes_niEv
	mov	ecx, 1171993552
	mov	edx, 4194063645
	test	al, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 68], ecx
	jmp	.LBB29_17
.LBB29_4:                               
	mov	eax, 262285102
	mov	ecx, 3118660772
	mov	dl, 1
	mov	esi, dword ptr [x.64]
	mov	edi, dword ptr [y.65]
	mov	r8d, esi
	sub	r8d, 1893023252
	sub	r8d, 1
	add	r8d, 1893023252
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 0
	mov	r14b, r11b
	and	r14b, 0
	and	r9b, dl
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 0
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 68], eax
	jmp	.LBB29_17
.LBB29_5:                               
	mov	rsi, qword ptr [rbp - 56]
	mov	rdx, qword ptr [rbp - 64]
	mov	rdi, qword ptr [rbp - 40]
	call	_ZN5Botan7AES_25618aesni_key_scheduleEPKhm
	mov	eax, 262285102
	mov	ecx, 1041652418
	xor	r8d, r8d
	mov	r9d, dword ptr [x.64]
	mov	r10d, dword ptr [y.65]
	sub	r8d, 1
	mov	r11d, r9d
	add	r11d, r8d
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	bl
	cmp	r10d, 10
	setl	r14b
	mov	r15b, bl
	and	r15b, r14b
	xor	bl, r14b
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 68], eax
	jmp	.LBB29_17
.LBB29_6:                               
	mov	dword ptr [rbp - 68], 580682547
	jmp	.LBB29_17
.LBB29_7:                               
	mov	eax, 3120212109
	mov	ecx, 161635338
	mov	dl, 1
	mov	esi, dword ptr [x.64]
	mov	edi, dword ptr [y.65]
	mov	r8d, esi
	sub	r8d, 973493805
	sub	r8d, 1
	add	r8d, 973493805
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 0
	mov	r14b, r11b
	and	r14b, 0
	and	r9b, dl
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 0
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 68], eax
	jmp	.LBB29_17
.LBB29_8:                               
	call	_ZN5Botan5CPUID10has_hw_aesEv
	mov	ecx, 3120212109
	mov	edx, 2623315776
	mov	sil, 1
	and	al, 1
	mov	byte ptr [rbp - 25], al
	mov	edi, dword ptr [x.64]
	mov	r8d, dword ptr [y.65]
	mov	r9d, edi
	sub	r9d, 289526742
	sub	r9d, 1
	add	r9d, 289526742
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	al
	cmp	r8d, 10
	setl	r10b
	mov	r11b, al
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	sil, 1
	mov	r14b, r11b
	and	r14b, -1
	and	al, sil
	mov	r15b, bl
	and	r15b, -1
	and	r10b, sil
	or	r14b, al
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	sil, 1
	and	r11b, sil
	or	r14b, r11b
	test	r14b, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 68], ecx
	jmp	.LBB29_17
.LBB29_9:                               
	mov	eax, 4006483866
	mov	ecx, 381693996
	mov	dl, byte ptr [rbp - 25]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 68], eax
	jmp	.LBB29_17
.LBB29_10:                              
	mov	rdi, qword ptr [rbp - 56]
	mov	rsi, qword ptr [rbp - 64]
	mov	rax, qword ptr [rbp - 40]
	add	rax, 8
	mov	rcx, qword ptr [rbp - 40]
	add	rcx, 32
	mov	qword ptr [rbp - 136], rdi 
	mov	qword ptr [rbp - 144], rsi 
	mov	qword ptr [rbp - 152], rax 
	mov	qword ptr [rbp - 160], rcx 
	call	_ZN5Botan5CPUID16is_little_endianEv
	and	al, 1
	movzx	r8d, al
	mov	rdi, qword ptr [rbp - 136] 
	mov	rsi, qword ptr [rbp - 144] 
	mov	rdx, qword ptr [rbp - 152] 
	mov	rcx, qword ptr [rbp - 160] 
	call	_ZN5Botan12_GLOBAL__N_116aes_key_scheduleEPKhmRSt6vectorIjNS_16secure_allocatorIjEEES7_b
	mov	dword ptr [rbp - 68], 580682547
	jmp	.LBB29_17
.LBB29_11:                              
	call	_ZN5Botan5CPUID9has_vpermEv
	mov	ecx, 3618111996
	mov	edx, 2351143249
	test	al, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 68], ecx
	jmp	.LBB29_17
.LBB29_12:                              
	mov	rsi, qword ptr [rbp - 56]
	mov	rdx, qword ptr [rbp - 64]
	mov	rdi, qword ptr [rbp - 40]
	call	_ZN5Botan7AES_25618vperm_key_scheduleEPKhm
	mov	dword ptr [rbp - 68], 580682547
	jmp	.LBB29_17
.LBB29_13:                              
	xor	r8d, r8d
	mov	rdi, qword ptr [rbp - 56]
	mov	rsi, qword ptr [rbp - 64]
	mov	rax, qword ptr [rbp - 40]
	add	rax, 8
	mov	rcx, qword ptr [rbp - 40]
	add	rcx, 32
	mov	rdx, rax
	call	_ZN5Botan12_GLOBAL__N_116aes_key_scheduleEPKhmRSt6vectorIjNS_16secure_allocatorIjEEES7_b
	mov	dword ptr [rbp - 68], 580682547
	jmp	.LBB29_17
.LBB29_14:
	add	rsp, 152
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB29_15:                              
	mov	rsi, qword ptr [rbp - 56]
	mov	rdx, qword ptr [rbp - 64]
	mov	rdi, qword ptr [rbp - 40]
	call	_ZN5Botan7AES_25618aesni_key_scheduleEPKhm
	mov	dword ptr [rbp - 68], -1176306524
	jmp	.LBB29_17
.LBB29_16:                              
	call	_ZN5Botan5CPUID10has_hw_aesEv
	mov	dword ptr [rbp - 68], 161635338
	mov	byte ptr [rbp - 161], al 
.LBB29_17:                              
	jmp	.LBB29_1
.Lfunc_end29:
	.size	_ZN5Botan7AES_25612key_scheduleEPKhm, .Lfunc_end29-_ZN5Botan7AES_25612key_scheduleEPKhm
	.cfi_endproc

	.globl	_ZN5Botan7AES_2565clearEv 
	.p2align	4, 0x90
	.type	_ZN5Botan7AES_2565clearEv,@function
_ZN5Botan7AES_2565clearEv:              
	.cfi_startproc

	push	rbp
.Lcfi141:
	.cfi_def_cfa_offset 16
.Lcfi142:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi143:
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	rax, rdi
	add	rax, 8
	mov	qword ptr [rbp - 16], rdi 
	mov	rdi, rax
	call	_ZN5Botan3zapIjNS_16secure_allocatorIjEEEEvRSt6vectorIT_T0_E
	mov	rax, qword ptr [rbp - 16] 
	add	rax, 32
	mov	rdi, rax
	call	_ZN5Botan3zapIjNS_16secure_allocatorIjEEEEvRSt6vectorIT_T0_E
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end30:
	.size	_ZN5Botan7AES_2565clearEv, .Lfunc_end30-_ZN5Botan7AES_2565clearEv
	.cfi_endproc

	.section	.text._ZN5Botan7AES_128D2Ev,"axG",@progbits,_ZN5Botan7AES_128D2Ev,comdat
	.weak	_ZN5Botan7AES_128D2Ev   
	.p2align	4, 0x90
	.type	_ZN5Botan7AES_128D2Ev,@function
_ZN5Botan7AES_128D2Ev:                  

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	movabs	rax, _ZTVN5Botan7AES_128E
	add	rax, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	qword ptr [rdi], rax
	mov	rax, rdi
	add	rax, 32
	mov	qword ptr [rbp - 16], rdi 
	mov	rdi, rax
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEED2Ev
	mov	rax, qword ptr [rbp - 16] 
	add	rax, 8
	mov	rdi, rax
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEED2Ev
	mov	rax, qword ptr [rbp - 16] 
	mov	rdi, rax
	call	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEED2Ev
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end31:
	.size	_ZN5Botan7AES_128D2Ev, .Lfunc_end31-_ZN5Botan7AES_128D2Ev

	.section	.text._ZN5Botan7AES_128D0Ev,"axG",@progbits,_ZN5Botan7AES_128D0Ev,comdat
	.weak	_ZN5Botan7AES_128D0Ev   
	.p2align	4, 0x90
	.type	_ZN5Botan7AES_128D0Ev,@function
_ZN5Botan7AES_128D0Ev:                  

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	qword ptr [rbp - 16], rdi 
	call	_ZN5Botan7AES_128D2Ev
	mov	rdi, qword ptr [rbp - 16] 
	call	_ZdlPv
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end32:
	.size	_ZN5Botan7AES_128D0Ev, .Lfunc_end32-_ZN5Botan7AES_128D0Ev

	.section	.text._ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE8key_specEv,"axG",@progbits,_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE8key_specEv,comdat
	.weak	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE8key_specEv 
	.p2align	4, 0x90
	.type	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE8key_specEv,@function
_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE8key_specEv: 
	.cfi_startproc

	push	rbp
.Lcfi144:
	.cfi_def_cfa_offset 16
.Lcfi145:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi146:
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	rax, rdi
	mov	ecx, 16
	mov	edx, ecx
	xor	ecx, ecx
	mov	r8d, ecx
	mov	ecx, 1

	mov	qword ptr [rbp - 8], rsi
	mov	rsi, rdx
	mov	rdx, r8
	mov	qword ptr [rbp - 16], rax 
	call	_ZN5Botan24Key_Length_SpecificationC2Emmm
	mov	rax, qword ptr [rbp - 16] 
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end33:
	.size	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE8key_specEv, .Lfunc_end33-_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE8key_specEv
	.cfi_endproc

	.section	.text._ZNK5Botan7AES_1284nameB5cxx11Ev,"axG",@progbits,_ZNK5Botan7AES_1284nameB5cxx11Ev,comdat
	.weak	_ZNK5Botan7AES_1284nameB5cxx11Ev 
	.p2align	4, 0x90
	.type	_ZNK5Botan7AES_1284nameB5cxx11Ev,@function
_ZNK5Botan7AES_1284nameB5cxx11Ev:       
.Lfunc_begin4:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception4

	push	rbp
.Lcfi147:
	.cfi_def_cfa_offset 16
.Lcfi148:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi149:
	.cfi_def_cfa_register rbp
	sub	rsp, 64
	mov	rax, rdi
	mov	qword ptr [rbp - 8], rsi
	lea	rsi, [rbp - 16]
	mov	qword ptr [rbp - 40], rdi 
	mov	rdi, rsi
	mov	qword ptr [rbp - 48], rax 
	mov	qword ptr [rbp - 56], rsi 
	call	_ZNSaIcEC1Ev
.Ltmp14:
	mov	ecx, .L.str.11
	mov	esi, ecx
	mov	rdi, qword ptr [rbp - 40] 
	mov	rdx, qword ptr [rbp - 56] 
	call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_
.Ltmp15:
	jmp	.LBB34_1
.LBB34_1:
	lea	rdi, [rbp - 16]
	call	_ZNSaIcED1Ev
	mov	rax, qword ptr [rbp - 48] 
	add	rsp, 64
	pop	rbp
	ret
.LBB34_2:
.Ltmp16:
	lea	rdi, [rbp - 16]
	mov	ecx, edx
	mov	qword ptr [rbp - 24], rax
	mov	dword ptr [rbp - 28], ecx
	call	_ZNSaIcED1Ev

	mov	rdi, qword ptr [rbp - 24]
	call	_Unwind_Resume
.Lfunc_end34:
	.size	_ZNK5Botan7AES_1284nameB5cxx11Ev, .Lfunc_end34-_ZNK5Botan7AES_1284nameB5cxx11Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table34:
.Lexception4:
	.byte	255                     
	.byte	3                       
	.asciz	"\234"                  
	.byte	3                       
	.byte	26                      
	.long	.Ltmp14-.Lfunc_begin4   
	.long	.Ltmp15-.Ltmp14         
	.long	.Ltmp16-.Lfunc_begin4   
	.byte	0                       
	.long	.Ltmp15-.Lfunc_begin4   
	.long	.Lfunc_end34-.Ltmp15    
	.long	0                       
	.byte	0                       
	.p2align	2

	.section	.text._ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE10block_sizeEv,"axG",@progbits,_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE10block_sizeEv,comdat
	.weak	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE10block_sizeEv 
	.p2align	4, 0x90
	.type	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE10block_sizeEv,@function
_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE10block_sizeEv: 

	push	rbp
	mov	rbp, rsp
	mov	eax, 16

	mov	qword ptr [rbp - 8], rdi
	pop	rbp
	ret
.Lfunc_end35:
	.size	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE10block_sizeEv, .Lfunc_end35-_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE10block_sizeEv

	.section	.text._ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm,"axG",@progbits,_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm,comdat
	.weak	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm 
	.p2align	4, 0x90
	.type	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm,@function
_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm: 
	.cfi_startproc

	push	rbp
.Lcfi150:
	.cfi_def_cfa_offset 16
.Lcfi151:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi152:
	.cfi_def_cfa_register rbp
	sub	rsp, 64
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	qword ptr [rbp - 32], rcx
	mov	rcx, qword ptr [rbp - 8]
	mov	rdi, qword ptr [rbp - 16]
	mov	rsi, qword ptr [rbp - 24]
	mov	rdx, qword ptr [rbp - 32]
	shl	rdx, 4
	mov	qword ptr [rbp - 40], rcx 
	call	_ZN5Botan7xor_bufEPhPKhm
	mov	rcx, qword ptr [rbp - 40] 
	mov	rdx, qword ptr [rbp - 40] 
	mov	rsi, qword ptr [rdx]
	mov	rsi, qword ptr [rsi + 72]
	mov	rdi, qword ptr [rbp - 16]
	mov	rdx, qword ptr [rbp - 16]
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [rbp - 48], rdi 
	mov	rdi, rcx
	mov	rcx, qword ptr [rbp - 48] 
	mov	qword ptr [rbp - 56], rsi 
	mov	rsi, rcx
	mov	rcx, rax
	mov	rax, qword ptr [rbp - 56] 
	call	rax
	mov	rdi, qword ptr [rbp - 16]
	mov	rsi, qword ptr [rbp - 24]
	mov	rax, qword ptr [rbp - 32]
	shl	rax, 4
	mov	rdx, rax
	call	_ZN5Botan7xor_bufEPhPKhm
	add	rsp, 64
	pop	rbp
	ret
.Lfunc_end36:
	.size	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm, .Lfunc_end36-_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm
	.cfi_endproc

	.section	.text._ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm,"axG",@progbits,_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm,comdat
	.weak	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm 
	.p2align	4, 0x90
	.type	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm,@function
_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm: 
	.cfi_startproc

	push	rbp
.Lcfi153:
	.cfi_def_cfa_offset 16
.Lcfi154:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi155:
	.cfi_def_cfa_register rbp
	sub	rsp, 64
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	qword ptr [rbp - 32], rcx
	mov	rcx, qword ptr [rbp - 8]
	mov	rdi, qword ptr [rbp - 16]
	mov	rsi, qword ptr [rbp - 24]
	mov	rdx, qword ptr [rbp - 32]
	shl	rdx, 4
	mov	qword ptr [rbp - 40], rcx 
	call	_ZN5Botan7xor_bufEPhPKhm
	mov	rcx, qword ptr [rbp - 40] 
	mov	rdx, qword ptr [rbp - 40] 
	mov	rsi, qword ptr [rdx]
	mov	rsi, qword ptr [rsi + 80]
	mov	rdi, qword ptr [rbp - 16]
	mov	rdx, qword ptr [rbp - 16]
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [rbp - 48], rdi 
	mov	rdi, rcx
	mov	rcx, qword ptr [rbp - 48] 
	mov	qword ptr [rbp - 56], rsi 
	mov	rsi, rcx
	mov	rcx, rax
	mov	rax, qword ptr [rbp - 56] 
	call	rax
	mov	rdi, qword ptr [rbp - 16]
	mov	rsi, qword ptr [rbp - 24]
	mov	rax, qword ptr [rbp - 32]
	shl	rax, 4
	mov	rdx, rax
	call	_ZN5Botan7xor_bufEPhPKhm
	add	rsp, 64
	pop	rbp
	ret
.Lfunc_end37:
	.size	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm, .Lfunc_end37-_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm
	.cfi_endproc

	.section	.text._ZNK5Botan7AES_12810new_objectEv,"axG",@progbits,_ZNK5Botan7AES_12810new_objectEv,comdat
	.weak	_ZNK5Botan7AES_12810new_objectEv 
	.p2align	4, 0x90
	.type	_ZNK5Botan7AES_12810new_objectEv,@function
_ZNK5Botan7AES_12810new_objectEv:       
	.cfi_startproc

	push	rbp
.Lcfi156:
	.cfi_def_cfa_offset 16
.Lcfi157:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi158:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	sub	rsp, 80
.Lcfi159:
	.cfi_offset rbx, -48
.Lcfi160:
	.cfi_offset r12, -40
.Lcfi161:
	.cfi_offset r14, -32
.Lcfi162:
	.cfi_offset r15, -24
	mov	rax, rdi
	mov	ecx, dword ptr [x.80]
	mov	edx, dword ptr [y.81]
	mov	r8d, ecx
	add	r8d, 428740769
	sub	r8d, 1
	sub	r8d, 428740769
	imul	ecx, r8d
	and	ecx, 1
	cmp	ecx, 0
	sete	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 34], r9b
	cmp	edx, 10
	setl	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 33], r9b
	mov	dword ptr [rbp - 40], 291973832
	mov	qword ptr [rbp - 48], rax 
	mov	qword ptr [rbp - 56], rsi 
	mov	qword ptr [rbp - 64], rdi 
.LBB38_1:                               
	mov	eax, dword ptr [rbp - 40]
	mov	ecx, eax
	sub	ecx, -1942905523
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB38_5
	jmp	.LBB38_8
.LBB38_8:                               
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -1760079523
	mov	dword ptr [rbp - 76], eax 
	je	.LBB38_4
	jmp	.LBB38_9
.LBB38_9:                               
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -479762926
	mov	dword ptr [rbp - 80], eax 
	je	.LBB38_6
	jmp	.LBB38_10
.LBB38_10:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 291973832
	mov	dword ptr [rbp - 84], eax 
	je	.LBB38_3
	jmp	.LBB38_2
.LBB38_2:                               
	jmp	.LBB38_7
.LBB38_3:                               
	mov	eax, 3815204370
	mov	ecx, 2534887773
	mov	dl, 1
	mov	sil, byte ptr [rbp - 34]
	mov	dil, byte ptr [rbp - 33]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 40], eax
	jmp	.LBB38_7
.LBB38_4:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rdx
	mov	rdi, rcx
	mov	qword ptr [rbp - 96], rcx 
	call	_ZSt11make_uniqueIN5Botan7AES_128EJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_
	mov	rdi, qword ptr [rbp - 64] 
	mov	rsi, qword ptr [rbp - 96] 
	call	_ZNSt10unique_ptrIN5Botan11BlockCipherESt14default_deleteIS1_EEC2INS0_7AES_128ES2_IS6_EvEEOS_IT_T0_E
	mov	rdi, qword ptr [rbp - 96] 
	call	_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EED2Ev
	mov	r8d, 3815204370
	mov	r9d, 2352061773
	mov	r10d, dword ptr [x.80]
	mov	r11d, dword ptr [y.81]
	mov	ebx, r10d
	sub	ebx, 837063951
	sub	ebx, 1
	add	ebx, 837063951
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r14b
	cmp	r11d, 10
	setl	r15b
	mov	r12b, r14b
	and	r12b, r15b
	xor	r14b, r15b
	or	r12b, r14b
	test	r12b, 1
	cmovne	r8d, r9d
	mov	dword ptr [rbp - 40], r8d
	jmp	.LBB38_7
.LBB38_5:
	mov	rax, qword ptr [rbp - 48] 
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB38_6:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rdx
	mov	rdi, rcx
	mov	qword ptr [rbp - 104], rcx 
	call	_ZSt11make_uniqueIN5Botan7AES_128EJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_
	mov	rdi, qword ptr [rbp - 64] 
	mov	rsi, qword ptr [rbp - 104] 
	call	_ZNSt10unique_ptrIN5Botan11BlockCipherESt14default_deleteIS1_EEC2INS0_7AES_128ES2_IS6_EvEEOS_IT_T0_E
	mov	rdi, qword ptr [rbp - 104] 
	call	_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EED2Ev
	mov	dword ptr [rbp - 40], -1760079523
.LBB38_7:                               
	jmp	.LBB38_1
.Lfunc_end38:
	.size	_ZNK5Botan7AES_12810new_objectEv, .Lfunc_end38-_ZNK5Botan7AES_12810new_objectEv
	.cfi_endproc

	.section	.text._ZN5Botan7AES_192D2Ev,"axG",@progbits,_ZN5Botan7AES_192D2Ev,comdat
	.weak	_ZN5Botan7AES_192D2Ev   
	.p2align	4, 0x90
	.type	_ZN5Botan7AES_192D2Ev,@function
_ZN5Botan7AES_192D2Ev:                  

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	movabs	rax, _ZTVN5Botan7AES_192E
	add	rax, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	qword ptr [rdi], rax
	mov	rax, rdi
	add	rax, 32
	mov	qword ptr [rbp - 16], rdi 
	mov	rdi, rax
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEED2Ev
	mov	rax, qword ptr [rbp - 16] 
	add	rax, 8
	mov	rdi, rax
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEED2Ev
	mov	rax, qword ptr [rbp - 16] 
	mov	rdi, rax
	call	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEED2Ev
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end39:
	.size	_ZN5Botan7AES_192D2Ev, .Lfunc_end39-_ZN5Botan7AES_192D2Ev

	.section	.text._ZN5Botan7AES_192D0Ev,"axG",@progbits,_ZN5Botan7AES_192D0Ev,comdat
	.weak	_ZN5Botan7AES_192D0Ev   
	.p2align	4, 0x90
	.type	_ZN5Botan7AES_192D0Ev,@function
_ZN5Botan7AES_192D0Ev:                  

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	qword ptr [rbp - 16], rdi 
	call	_ZN5Botan7AES_192D2Ev
	mov	rdi, qword ptr [rbp - 16] 
	call	_ZdlPv
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end40:
	.size	_ZN5Botan7AES_192D0Ev, .Lfunc_end40-_ZN5Botan7AES_192D0Ev

	.section	.text._ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE8key_specEv,"axG",@progbits,_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE8key_specEv,comdat
	.weak	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE8key_specEv 
	.p2align	4, 0x90
	.type	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE8key_specEv,@function
_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE8key_specEv: 
	.cfi_startproc

	push	rbp
.Lcfi163:
	.cfi_def_cfa_offset 16
.Lcfi164:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi165:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 56
.Lcfi166:
	.cfi_offset rbx, -56
.Lcfi167:
	.cfi_offset r12, -48
.Lcfi168:
	.cfi_offset r13, -40
.Lcfi169:
	.cfi_offset r14, -32
.Lcfi170:
	.cfi_offset r15, -24
	mov	rax, rdi
	mov	ecx, dword ptr [x.86]
	mov	edx, dword ptr [y.87]
	mov	r8d, ecx
	add	r8d, 985513930
	sub	r8d, 1
	sub	r8d, 985513930
	imul	ecx, r8d
	and	ecx, 1
	cmp	ecx, 0
	sete	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 42], r9b
	cmp	edx, 10
	setl	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 41], r9b
	mov	dword ptr [rbp - 48], -1254901573
	mov	qword ptr [rbp - 56], rax 
	mov	qword ptr [rbp - 64], rsi 
	mov	qword ptr [rbp - 72], rdi 
.LBB41_1:                               
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -1254901573
	mov	dword ptr [rbp - 76], eax 
	mov	dword ptr [rbp - 80], ecx 
	je	.LBB41_3
	jmp	.LBB41_8
.LBB41_8:                               
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, -508068448
	mov	dword ptr [rbp - 84], eax 
	je	.LBB41_5
	jmp	.LBB41_9
.LBB41_9:                               
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, 1570048397
	mov	dword ptr [rbp - 88], eax 
	je	.LBB41_4
	jmp	.LBB41_10
.LBB41_10:                              
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, 1774851201
	mov	dword ptr [rbp - 92], eax 
	je	.LBB41_6
	jmp	.LBB41_2
.LBB41_2:                               
	jmp	.LBB41_7
.LBB41_3:                               
	mov	eax, 1774851201
	mov	ecx, 1570048397
	mov	dl, 1
	mov	sil, byte ptr [rbp - 42]
	mov	dil, byte ptr [rbp - 41]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB41_7
.LBB41_4:                               
	mov	eax, 24
	mov	esi, eax
	xor	eax, eax
	mov	edx, eax
	mov	eax, 1
	mov	ecx, eax
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	r8, qword ptr [rbp - 64] 
	mov	qword ptr [rdi], r8
	mov	rdi, qword ptr [rbp - 72] 
	call	_ZN5Botan24Key_Length_SpecificationC2Emmm
	mov	eax, 1774851201
	mov	r9d, 3786898848
	mov	r10b, 1
	mov	r11d, dword ptr [x.86]
	mov	ebx, dword ptr [y.87]
	mov	r14d, r11d
	sub	r14d, 1013812184
	sub	r14d, 1
	add	r14d, 1013812184
	imul	r11d, r14d
	and	r11d, 1
	cmp	r11d, 0
	sete	r15b
	cmp	ebx, 10
	setl	r12b
	mov	r13b, r15b
	xor	r13b, -1
	mov	cl, r12b
	xor	cl, -1
	xor	r10b, 1
	mov	dl, r13b
	and	dl, -1
	and	r15b, r10b
	mov	sil, cl
	and	sil, -1
	and	r12b, r10b
	or	dl, r15b
	or	sil, r12b
	xor	dl, sil
	or	r13b, cl
	xor	r13b, -1
	or	r10b, 1
	and	r13b, r10b
	or	dl, r13b
	test	dl, 1
	cmovne	eax, r9d
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB41_7
.LBB41_5:
	mov	rax, qword ptr [rbp - 56] 
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB41_6:                               
	mov	eax, 24
	mov	esi, eax
	xor	eax, eax
	mov	edx, eax
	mov	eax, 1
	mov	ecx, eax
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	r8, qword ptr [rbp - 64] 
	mov	qword ptr [rdi], r8
	mov	rdi, qword ptr [rbp - 72] 
	call	_ZN5Botan24Key_Length_SpecificationC2Emmm
	mov	dword ptr [rbp - 48], 1570048397
.LBB41_7:                               
	jmp	.LBB41_1
.Lfunc_end41:
	.size	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE8key_specEv, .Lfunc_end41-_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE8key_specEv
	.cfi_endproc

	.section	.text._ZNK5Botan7AES_1924nameB5cxx11Ev,"axG",@progbits,_ZNK5Botan7AES_1924nameB5cxx11Ev,comdat
	.weak	_ZNK5Botan7AES_1924nameB5cxx11Ev 
	.p2align	4, 0x90
	.type	_ZNK5Botan7AES_1924nameB5cxx11Ev,@function
_ZNK5Botan7AES_1924nameB5cxx11Ev:       
.Lfunc_begin5:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception5

	push	rbp
.Lcfi171:
	.cfi_def_cfa_offset 16
.Lcfi172:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi173:
	.cfi_def_cfa_register rbp
	sub	rsp, 64
	mov	rax, rdi
	mov	qword ptr [rbp - 8], rsi
	lea	rsi, [rbp - 16]
	mov	qword ptr [rbp - 40], rdi 
	mov	rdi, rsi
	mov	qword ptr [rbp - 48], rax 
	mov	qword ptr [rbp - 56], rsi 
	call	_ZNSaIcEC1Ev
.Ltmp17:
	mov	ecx, .L.str.12
	mov	esi, ecx
	mov	rdi, qword ptr [rbp - 40] 
	mov	rdx, qword ptr [rbp - 56] 
	call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_
.Ltmp18:
	jmp	.LBB42_1
.LBB42_1:
	lea	rdi, [rbp - 16]
	call	_ZNSaIcED1Ev
	mov	rax, qword ptr [rbp - 48] 
	add	rsp, 64
	pop	rbp
	ret
.LBB42_2:
.Ltmp19:
	lea	rdi, [rbp - 16]
	mov	ecx, edx
	mov	qword ptr [rbp - 24], rax
	mov	dword ptr [rbp - 28], ecx
	call	_ZNSaIcED1Ev

	mov	rdi, qword ptr [rbp - 24]
	call	_Unwind_Resume
.Lfunc_end42:
	.size	_ZNK5Botan7AES_1924nameB5cxx11Ev, .Lfunc_end42-_ZNK5Botan7AES_1924nameB5cxx11Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table42:
.Lexception5:
	.byte	255                     
	.byte	3                       
	.asciz	"\234"                  
	.byte	3                       
	.byte	26                      
	.long	.Ltmp17-.Lfunc_begin5   
	.long	.Ltmp18-.Ltmp17         
	.long	.Ltmp19-.Lfunc_begin5   
	.byte	0                       
	.long	.Ltmp18-.Lfunc_begin5   
	.long	.Lfunc_end42-.Ltmp18    
	.long	0                       
	.byte	0                       
	.p2align	2

	.section	.text._ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE10block_sizeEv,"axG",@progbits,_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE10block_sizeEv,comdat
	.weak	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE10block_sizeEv 
	.p2align	4, 0x90
	.type	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE10block_sizeEv,@function
_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE10block_sizeEv: 

	push	rbp
	mov	rbp, rsp
	mov	eax, 16

	mov	qword ptr [rbp - 8], rdi
	pop	rbp
	ret
.Lfunc_end43:
	.size	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE10block_sizeEv, .Lfunc_end43-_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE10block_sizeEv

	.section	.text._ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm,"axG",@progbits,_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm,comdat
	.weak	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm 
	.p2align	4, 0x90
	.type	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm,@function
_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm: 
	.cfi_startproc

	push	rbp
.Lcfi174:
	.cfi_def_cfa_offset 16
.Lcfi175:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi176:
	.cfi_def_cfa_register rbp
	sub	rsp, 64
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	qword ptr [rbp - 32], rcx
	mov	rcx, qword ptr [rbp - 8]
	mov	rdi, qword ptr [rbp - 16]
	mov	rsi, qword ptr [rbp - 24]
	mov	rdx, qword ptr [rbp - 32]
	shl	rdx, 4
	mov	qword ptr [rbp - 40], rcx 
	call	_ZN5Botan7xor_bufEPhPKhm
	mov	rcx, qword ptr [rbp - 40] 
	mov	rdx, qword ptr [rbp - 40] 
	mov	rsi, qword ptr [rdx]
	mov	rsi, qword ptr [rsi + 72]
	mov	rdi, qword ptr [rbp - 16]
	mov	rdx, qword ptr [rbp - 16]
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [rbp - 48], rdi 
	mov	rdi, rcx
	mov	rcx, qword ptr [rbp - 48] 
	mov	qword ptr [rbp - 56], rsi 
	mov	rsi, rcx
	mov	rcx, rax
	mov	rax, qword ptr [rbp - 56] 
	call	rax
	mov	rdi, qword ptr [rbp - 16]
	mov	rsi, qword ptr [rbp - 24]
	mov	rax, qword ptr [rbp - 32]
	shl	rax, 4
	mov	rdx, rax
	call	_ZN5Botan7xor_bufEPhPKhm
	add	rsp, 64
	pop	rbp
	ret
.Lfunc_end44:
	.size	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm, .Lfunc_end44-_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm
	.cfi_endproc

	.section	.text._ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm,"axG",@progbits,_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm,comdat
	.weak	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm 
	.p2align	4, 0x90
	.type	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm,@function
_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm: 
	.cfi_startproc

	push	rbp
.Lcfi177:
	.cfi_def_cfa_offset 16
.Lcfi178:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi179:
	.cfi_def_cfa_register rbp
	sub	rsp, 64
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	qword ptr [rbp - 32], rcx
	mov	rcx, qword ptr [rbp - 8]
	mov	rdi, qword ptr [rbp - 16]
	mov	rsi, qword ptr [rbp - 24]
	mov	rdx, qword ptr [rbp - 32]
	shl	rdx, 4
	mov	qword ptr [rbp - 40], rcx 
	call	_ZN5Botan7xor_bufEPhPKhm
	mov	rcx, qword ptr [rbp - 40] 
	mov	rdx, qword ptr [rbp - 40] 
	mov	rsi, qword ptr [rdx]
	mov	rsi, qword ptr [rsi + 80]
	mov	rdi, qword ptr [rbp - 16]
	mov	rdx, qword ptr [rbp - 16]
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [rbp - 48], rdi 
	mov	rdi, rcx
	mov	rcx, qword ptr [rbp - 48] 
	mov	qword ptr [rbp - 56], rsi 
	mov	rsi, rcx
	mov	rcx, rax
	mov	rax, qword ptr [rbp - 56] 
	call	rax
	mov	rdi, qword ptr [rbp - 16]
	mov	rsi, qword ptr [rbp - 24]
	mov	rax, qword ptr [rbp - 32]
	shl	rax, 4
	mov	rdx, rax
	call	_ZN5Botan7xor_bufEPhPKhm
	add	rsp, 64
	pop	rbp
	ret
.Lfunc_end45:
	.size	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm, .Lfunc_end45-_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm
	.cfi_endproc

	.section	.text._ZNK5Botan7AES_19210new_objectEv,"axG",@progbits,_ZNK5Botan7AES_19210new_objectEv,comdat
	.weak	_ZNK5Botan7AES_19210new_objectEv 
	.p2align	4, 0x90
	.type	_ZNK5Botan7AES_19210new_objectEv,@function
_ZNK5Botan7AES_19210new_objectEv:       
	.cfi_startproc

	push	rbp
.Lcfi180:
	.cfi_def_cfa_offset 16
.Lcfi181:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi182:
	.cfi_def_cfa_register rbp
	sub	rsp, 32
	mov	rax, rdi
	lea	rcx, [rbp - 16]
	mov	qword ptr [rbp - 8], rsi
	mov	qword ptr [rbp - 24], rdi 
	mov	rdi, rcx
	mov	qword ptr [rbp - 32], rax 
	call	_ZSt11make_uniqueIN5Botan7AES_192EJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_
	lea	rsi, [rbp - 16]
	mov	rdi, qword ptr [rbp - 24] 
	call	_ZNSt10unique_ptrIN5Botan11BlockCipherESt14default_deleteIS1_EEC2INS0_7AES_192ES2_IS6_EvEEOS_IT_T0_E
	lea	rdi, [rbp - 16]
	call	_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EED2Ev
	mov	rax, qword ptr [rbp - 32] 
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end46:
	.size	_ZNK5Botan7AES_19210new_objectEv, .Lfunc_end46-_ZNK5Botan7AES_19210new_objectEv
	.cfi_endproc

	.section	.text._ZN5Botan7AES_256D2Ev,"axG",@progbits,_ZN5Botan7AES_256D2Ev,comdat
	.weak	_ZN5Botan7AES_256D2Ev   
	.p2align	4, 0x90
	.type	_ZN5Botan7AES_256D2Ev,@function
_ZN5Botan7AES_256D2Ev:                  

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	movabs	rax, _ZTVN5Botan7AES_256E
	add	rax, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	qword ptr [rdi], rax
	mov	rax, rdi
	add	rax, 32
	mov	qword ptr [rbp - 16], rdi 
	mov	rdi, rax
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEED2Ev
	mov	rax, qword ptr [rbp - 16] 
	add	rax, 8
	mov	rdi, rax
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEED2Ev
	mov	rax, qword ptr [rbp - 16] 
	mov	rdi, rax
	call	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEED2Ev
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end47:
	.size	_ZN5Botan7AES_256D2Ev, .Lfunc_end47-_ZN5Botan7AES_256D2Ev

	.section	.text._ZN5Botan7AES_256D0Ev,"axG",@progbits,_ZN5Botan7AES_256D0Ev,comdat
	.weak	_ZN5Botan7AES_256D0Ev   
	.p2align	4, 0x90
	.type	_ZN5Botan7AES_256D0Ev,@function
_ZN5Botan7AES_256D0Ev:                  

	push	rbp
	mov	rbp, rsp
	push	r14
	push	rbx
	sub	rsp, 64
	mov	eax, dword ptr [x.98]
	mov	ecx, dword ptr [y.99]
	mov	edx, eax
	add	edx, -118021352
	sub	edx, 1
	sub	edx, -118021352
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 18], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 17], sil
	mov	dword ptr [rbp - 24], -1686181352
	mov	qword ptr [rbp - 32], rdi 
.LBB48_1:                               
	mov	eax, dword ptr [rbp - 24]
	mov	ecx, eax
	sub	ecx, -1686181352
	mov	dword ptr [rbp - 36], eax 
	mov	dword ptr [rbp - 40], ecx 
	je	.LBB48_3
	jmp	.LBB48_8
.LBB48_8:                               
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, -539291093
	mov	dword ptr [rbp - 44], eax 
	je	.LBB48_5
	jmp	.LBB48_9
.LBB48_9:                               
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, 245935458
	mov	dword ptr [rbp - 48], eax 
	je	.LBB48_6
	jmp	.LBB48_10
.LBB48_10:                              
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, 1481539506
	mov	dword ptr [rbp - 52], eax 
	je	.LBB48_4
	jmp	.LBB48_2
.LBB48_2:                               
	jmp	.LBB48_7
.LBB48_3:                               
	mov	eax, 245935458
	mov	ecx, 1481539506
	mov	dl, 1
	mov	sil, byte ptr [rbp - 18]
	mov	dil, byte ptr [rbp - 17]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 0
	mov	r10b, r8b
	and	r10b, 0
	and	sil, dl
	mov	r11b, r9b
	and	r11b, 0
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 0
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 24], eax
	jmp	.LBB48_7
.LBB48_4:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 32] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	mov	qword ptr [rbp - 64], rax 
	call	_ZN5Botan7AES_256D2Ev
	mov	rax, qword ptr [rbp - 64] 
	mov	rdi, rax
	call	_ZdlPv
	mov	edx, 245935458
	mov	esi, 3755676203
	mov	r8d, dword ptr [x.98]
	mov	r9d, dword ptr [y.99]
	mov	r10d, r8d
	sub	r10d, 2048761509
	sub	r10d, 1
	add	r10d, 2048761509
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	edx, esi
	mov	dword ptr [rbp - 24], edx
	jmp	.LBB48_7
.LBB48_5:
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
.LBB48_6:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 32] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	mov	qword ptr [rbp - 72], rax 
	call	_ZN5Botan7AES_256D2Ev
	mov	rax, qword ptr [rbp - 72] 
	mov	rdi, rax
	call	_ZdlPv
	mov	dword ptr [rbp - 24], 1481539506
.LBB48_7:                               
	jmp	.LBB48_1
.Lfunc_end48:
	.size	_ZN5Botan7AES_256D0Ev, .Lfunc_end48-_ZN5Botan7AES_256D0Ev

	.section	.text._ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE8key_specEv,"axG",@progbits,_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE8key_specEv,comdat
	.weak	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE8key_specEv 
	.p2align	4, 0x90
	.type	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE8key_specEv,@function
_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE8key_specEv: 
	.cfi_startproc

	push	rbp
.Lcfi183:
	.cfi_def_cfa_offset 16
.Lcfi184:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi185:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	sub	rsp, 64
.Lcfi186:
	.cfi_offset rbx, -48
.Lcfi187:
	.cfi_offset r12, -40
.Lcfi188:
	.cfi_offset r14, -32
.Lcfi189:
	.cfi_offset r15, -24
	mov	rax, rdi
	mov	ecx, dword ptr [x.100]
	mov	edx, dword ptr [y.101]
	mov	r8d, ecx
	add	r8d, 1743588977
	sub	r8d, 1
	sub	r8d, 1743588977
	imul	ecx, r8d
	and	ecx, 1
	cmp	ecx, 0
	sete	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 34], r9b
	cmp	edx, 10
	setl	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 33], r9b
	mov	dword ptr [rbp - 40], -238644227
	mov	qword ptr [rbp - 48], rax 
	mov	qword ptr [rbp - 56], rsi 
	mov	qword ptr [rbp - 64], rdi 
.LBB49_1:                               
	mov	eax, dword ptr [rbp - 40]
	mov	ecx, eax
	sub	ecx, -558098660
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB49_5
	jmp	.LBB49_8
.LBB49_8:                               
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -238644227
	mov	dword ptr [rbp - 76], eax 
	je	.LBB49_3
	jmp	.LBB49_9
.LBB49_9:                               
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 389638905
	mov	dword ptr [rbp - 80], eax 
	je	.LBB49_4
	jmp	.LBB49_10
.LBB49_10:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1525663974
	mov	dword ptr [rbp - 84], eax 
	je	.LBB49_6
	jmp	.LBB49_2
.LBB49_2:                               
	jmp	.LBB49_7
.LBB49_3:                               
	mov	eax, 1525663974
	mov	ecx, 389638905
	mov	dl, 1
	mov	sil, byte ptr [rbp - 34]
	mov	dil, byte ptr [rbp - 33]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 40], eax
	jmp	.LBB49_7
.LBB49_4:                               
	mov	eax, 32
	mov	esi, eax
	xor	eax, eax
	mov	edx, eax
	mov	eax, 1
	mov	ecx, eax
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	r8, qword ptr [rbp - 56] 
	mov	qword ptr [rdi], r8
	mov	rdi, qword ptr [rbp - 64] 
	call	_ZN5Botan24Key_Length_SpecificationC2Emmm
	mov	eax, 1525663974
	mov	r9d, 3736868636
	mov	r10d, dword ptr [x.100]
	mov	r11d, dword ptr [y.101]
	mov	ebx, r10d
	sub	ebx, -980088550
	sub	ebx, 1
	add	ebx, -980088550
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r14b
	cmp	r11d, 10
	setl	r15b
	mov	r12b, r14b
	and	r12b, r15b
	xor	r14b, r15b
	or	r12b, r14b
	test	r12b, 1
	cmovne	eax, r9d
	mov	dword ptr [rbp - 40], eax
	jmp	.LBB49_7
.LBB49_5:
	mov	rax, qword ptr [rbp - 48] 
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB49_6:                               
	mov	eax, 32
	mov	esi, eax
	xor	eax, eax
	mov	edx, eax
	mov	eax, 1
	mov	ecx, eax
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	r8, qword ptr [rbp - 56] 
	mov	qword ptr [rdi], r8
	mov	rdi, qword ptr [rbp - 64] 
	call	_ZN5Botan24Key_Length_SpecificationC2Emmm
	mov	dword ptr [rbp - 40], 389638905
.LBB49_7:                               
	jmp	.LBB49_1
.Lfunc_end49:
	.size	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE8key_specEv, .Lfunc_end49-_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE8key_specEv
	.cfi_endproc

	.section	.text._ZNK5Botan7AES_2564nameB5cxx11Ev,"axG",@progbits,_ZNK5Botan7AES_2564nameB5cxx11Ev,comdat
	.weak	_ZNK5Botan7AES_2564nameB5cxx11Ev 
	.p2align	4, 0x90
	.type	_ZNK5Botan7AES_2564nameB5cxx11Ev,@function
_ZNK5Botan7AES_2564nameB5cxx11Ev:       
.Lfunc_begin6:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception6

	push	rbp
.Lcfi190:
	.cfi_def_cfa_offset 16
.Lcfi191:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi192:
	.cfi_def_cfa_register rbp
	sub	rsp, 64
	mov	rax, rdi
	mov	qword ptr [rbp - 8], rsi
	lea	rsi, [rbp - 16]
	mov	qword ptr [rbp - 40], rdi 
	mov	rdi, rsi
	mov	qword ptr [rbp - 48], rax 
	mov	qword ptr [rbp - 56], rsi 
	call	_ZNSaIcEC1Ev
.Ltmp20:
	mov	ecx, .L.str.13
	mov	esi, ecx
	mov	rdi, qword ptr [rbp - 40] 
	mov	rdx, qword ptr [rbp - 56] 
	call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_
.Ltmp21:
	jmp	.LBB50_1
.LBB50_1:
	lea	rdi, [rbp - 16]
	call	_ZNSaIcED1Ev
	mov	rax, qword ptr [rbp - 48] 
	add	rsp, 64
	pop	rbp
	ret
.LBB50_2:
.Ltmp22:
	lea	rdi, [rbp - 16]
	mov	ecx, edx
	mov	qword ptr [rbp - 24], rax
	mov	dword ptr [rbp - 28], ecx
	call	_ZNSaIcED1Ev

	mov	rdi, qword ptr [rbp - 24]
	call	_Unwind_Resume
.Lfunc_end50:
	.size	_ZNK5Botan7AES_2564nameB5cxx11Ev, .Lfunc_end50-_ZNK5Botan7AES_2564nameB5cxx11Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table50:
.Lexception6:
	.byte	255                     
	.byte	3                       
	.asciz	"\234"                  
	.byte	3                       
	.byte	26                      
	.long	.Ltmp20-.Lfunc_begin6   
	.long	.Ltmp21-.Ltmp20         
	.long	.Ltmp22-.Lfunc_begin6   
	.byte	0                       
	.long	.Ltmp21-.Lfunc_begin6   
	.long	.Lfunc_end50-.Ltmp21    
	.long	0                       
	.byte	0                       
	.p2align	2

	.section	.text._ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE10block_sizeEv,"axG",@progbits,_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE10block_sizeEv,comdat
	.weak	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE10block_sizeEv 
	.p2align	4, 0x90
	.type	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE10block_sizeEv,@function
_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE10block_sizeEv: 

	push	rbp
	mov	rbp, rsp
	push	rbx
	sub	rsp, 40
	mov	eax, dword ptr [x.102]
	mov	ecx, dword ptr [y.103]
	mov	edx, eax
	add	edx, -624426642
	sub	edx, 1
	sub	edx, -624426642
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 10], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 9], sil
	mov	dword ptr [rbp - 16], -321997329
	mov	qword ptr [rbp - 24], rdi 
.LBB51_1:                               
	mov	eax, dword ptr [rbp - 16]
	mov	ecx, eax
	sub	ecx, -1151141931
	mov	dword ptr [rbp - 28], eax 
	mov	dword ptr [rbp - 32], ecx 
	je	.LBB51_6
	jmp	.LBB51_8
.LBB51_8:                               
	mov	eax, dword ptr [rbp - 28] 
	sub	eax, -362703108
	mov	dword ptr [rbp - 36], eax 
	je	.LBB51_4
	jmp	.LBB51_9
.LBB51_9:                               
	mov	eax, dword ptr [rbp - 28] 
	sub	eax, -321997329
	mov	dword ptr [rbp - 40], eax 
	je	.LBB51_3
	jmp	.LBB51_10
.LBB51_10:                              
	mov	eax, dword ptr [rbp - 28] 
	sub	eax, 224547146
	mov	dword ptr [rbp - 44], eax 
	je	.LBB51_5
	jmp	.LBB51_2
.LBB51_2:                               
	jmp	.LBB51_7
.LBB51_3:                               
	mov	eax, 3143825365
	mov	ecx, 3932264188
	mov	dl, 1
	mov	sil, byte ptr [rbp - 10]
	mov	dil, byte ptr [rbp - 9]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 16], eax
	jmp	.LBB51_7
.LBB51_4:                               
	mov	eax, 3143825365
	mov	ecx, 224547146
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, qword ptr [rbp - 24] 
	mov	qword ptr [rdx], rsi
	mov	edi, dword ptr [x.102]
	mov	r8d, dword ptr [y.103]
	mov	r9d, edi
	sub	r9d, -1917955152
	sub	r9d, 1
	add	r9d, -1917955152
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	and	bl, r11b
	xor	r10b, r11b
	or	bl, r10b
	test	bl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 16], eax
	jmp	.LBB51_7
.LBB51_5:
	mov	eax, 16

	lea	rsp, [rbp - 8]
	pop	rbx
	pop	rbp
	ret
.LBB51_6:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 24] 
	mov	qword ptr [rax], rcx
	mov	dword ptr [rbp - 16], -362703108
.LBB51_7:                               
	jmp	.LBB51_1
.Lfunc_end51:
	.size	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE10block_sizeEv, .Lfunc_end51-_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE10block_sizeEv

	.section	.text._ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm,"axG",@progbits,_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm,comdat
	.weak	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm 
	.p2align	4, 0x90
	.type	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm,@function
_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm: 
	.cfi_startproc

	push	rbp
.Lcfi193:
	.cfi_def_cfa_offset 16
.Lcfi194:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi195:
	.cfi_def_cfa_register rbp
	sub	rsp, 64
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	qword ptr [rbp - 32], rcx
	mov	rcx, qword ptr [rbp - 8]
	mov	rdi, qword ptr [rbp - 16]
	mov	rsi, qword ptr [rbp - 24]
	mov	rdx, qword ptr [rbp - 32]
	shl	rdx, 4
	mov	qword ptr [rbp - 40], rcx 
	call	_ZN5Botan7xor_bufEPhPKhm
	mov	rcx, qword ptr [rbp - 40] 
	mov	rdx, qword ptr [rbp - 40] 
	mov	rsi, qword ptr [rdx]
	mov	rsi, qword ptr [rsi + 72]
	mov	rdi, qword ptr [rbp - 16]
	mov	rdx, qword ptr [rbp - 16]
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [rbp - 48], rdi 
	mov	rdi, rcx
	mov	rcx, qword ptr [rbp - 48] 
	mov	qword ptr [rbp - 56], rsi 
	mov	rsi, rcx
	mov	rcx, rax
	mov	rax, qword ptr [rbp - 56] 
	call	rax
	mov	rdi, qword ptr [rbp - 16]
	mov	rsi, qword ptr [rbp - 24]
	mov	rax, qword ptr [rbp - 32]
	shl	rax, 4
	mov	rdx, rax
	call	_ZN5Botan7xor_bufEPhPKhm
	add	rsp, 64
	pop	rbp
	ret
.Lfunc_end52:
	.size	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm, .Lfunc_end52-_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm
	.cfi_endproc

	.section	.text._ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm,"axG",@progbits,_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm,comdat
	.weak	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm 
	.p2align	4, 0x90
	.type	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm,@function
_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm: 
	.cfi_startproc

	push	rbp
.Lcfi196:
	.cfi_def_cfa_offset 16
.Lcfi197:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi198:
	.cfi_def_cfa_register rbp
	sub	rsp, 64
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	qword ptr [rbp - 32], rcx
	mov	rcx, qword ptr [rbp - 8]
	mov	rdi, qword ptr [rbp - 16]
	mov	rsi, qword ptr [rbp - 24]
	mov	rdx, qword ptr [rbp - 32]
	shl	rdx, 4
	mov	qword ptr [rbp - 40], rcx 
	call	_ZN5Botan7xor_bufEPhPKhm
	mov	rcx, qword ptr [rbp - 40] 
	mov	rdx, qword ptr [rbp - 40] 
	mov	rsi, qword ptr [rdx]
	mov	rsi, qword ptr [rsi + 80]
	mov	rdi, qword ptr [rbp - 16]
	mov	rdx, qword ptr [rbp - 16]
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [rbp - 48], rdi 
	mov	rdi, rcx
	mov	rcx, qword ptr [rbp - 48] 
	mov	qword ptr [rbp - 56], rsi 
	mov	rsi, rcx
	mov	rcx, rax
	mov	rax, qword ptr [rbp - 56] 
	call	rax
	mov	rdi, qword ptr [rbp - 16]
	mov	rsi, qword ptr [rbp - 24]
	mov	rax, qword ptr [rbp - 32]
	shl	rax, 4
	mov	rdx, rax
	call	_ZN5Botan7xor_bufEPhPKhm
	add	rsp, 64
	pop	rbp
	ret
.Lfunc_end53:
	.size	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm, .Lfunc_end53-_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm
	.cfi_endproc

	.section	.text._ZNK5Botan7AES_25610new_objectEv,"axG",@progbits,_ZNK5Botan7AES_25610new_objectEv,comdat
	.weak	_ZNK5Botan7AES_25610new_objectEv 
	.p2align	4, 0x90
	.type	_ZNK5Botan7AES_25610new_objectEv,@function
_ZNK5Botan7AES_25610new_objectEv:       
	.cfi_startproc

	push	rbp
.Lcfi199:
	.cfi_def_cfa_offset 16
.Lcfi200:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi201:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 72
.Lcfi202:
	.cfi_offset rbx, -56
.Lcfi203:
	.cfi_offset r12, -48
.Lcfi204:
	.cfi_offset r13, -40
.Lcfi205:
	.cfi_offset r14, -32
.Lcfi206:
	.cfi_offset r15, -24
	mov	rax, rdi
	mov	ecx, dword ptr [x.108]
	mov	edx, dword ptr [y.109]
	mov	r8d, ecx
	sub	r8d, -1058977301
	sub	r8d, 1
	add	r8d, -1058977301
	imul	ecx, r8d
	and	ecx, 1
	cmp	ecx, 0
	sete	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 42], r9b
	cmp	edx, 10
	setl	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 41], r9b
	mov	dword ptr [rbp - 48], -614175391
	mov	qword ptr [rbp - 56], rax 
	mov	qword ptr [rbp - 64], rsi 
	mov	qword ptr [rbp - 72], rdi 
.LBB54_1:                               
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -614175391
	mov	dword ptr [rbp - 76], eax 
	mov	dword ptr [rbp - 80], ecx 
	je	.LBB54_3
	jmp	.LBB54_8
.LBB54_8:                               
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, 425001472
	mov	dword ptr [rbp - 84], eax 
	je	.LBB54_5
	jmp	.LBB54_9
.LBB54_9:                               
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, 1071950948
	mov	dword ptr [rbp - 88], eax 
	je	.LBB54_6
	jmp	.LBB54_10
.LBB54_10:                              
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, 1780053412
	mov	dword ptr [rbp - 92], eax 
	je	.LBB54_4
	jmp	.LBB54_2
.LBB54_2:                               
	jmp	.LBB54_7
.LBB54_3:                               
	mov	eax, 1071950948
	mov	ecx, 1780053412
	mov	dl, byte ptr [rbp - 42]
	mov	sil, byte ptr [rbp - 41]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB54_7
.LBB54_4:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rdx
	mov	rdi, rcx
	mov	qword ptr [rbp - 104], rcx 
	call	_ZSt11make_uniqueIN5Botan7AES_256EJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_
	mov	rdi, qword ptr [rbp - 72] 
	mov	rsi, qword ptr [rbp - 104] 
	call	_ZNSt10unique_ptrIN5Botan11BlockCipherESt14default_deleteIS1_EEC2INS0_7AES_256ES2_IS6_EvEEOS_IT_T0_E
	mov	rdi, qword ptr [rbp - 104] 
	call	_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EED2Ev
	mov	r8d, 1071950948
	mov	r9d, 425001472
	xor	r10d, r10d
	mov	r11d, dword ptr [x.108]
	mov	ebx, dword ptr [y.109]
	sub	r10d, 1
	mov	r14d, r11d
	add	r14d, r10d
	imul	r11d, r14d
	and	r11d, 1
	cmp	r11d, 0
	sete	r15b
	cmp	ebx, 10
	setl	r12b
	mov	r13b, r15b
	and	r13b, r12b
	xor	r15b, r12b
	or	r13b, r15b
	test	r13b, 1
	cmovne	r8d, r9d
	mov	dword ptr [rbp - 48], r8d
	jmp	.LBB54_7
.LBB54_5:
	mov	rax, qword ptr [rbp - 56] 
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB54_6:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rdx
	mov	rdi, rcx
	mov	qword ptr [rbp - 112], rcx 
	call	_ZSt11make_uniqueIN5Botan7AES_256EJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_
	mov	rdi, qword ptr [rbp - 72] 
	mov	rsi, qword ptr [rbp - 112] 
	call	_ZNSt10unique_ptrIN5Botan11BlockCipherESt14default_deleteIS1_EEC2INS0_7AES_256ES2_IS6_EvEEOS_IT_T0_E
	mov	rdi, qword ptr [rbp - 112] 
	call	_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EED2Ev
	mov	dword ptr [rbp - 48], 1780053412
.LBB54_7:                               
	jmp	.LBB54_1
.Lfunc_end54:
	.size	_ZNK5Botan7AES_25610new_objectEv, .Lfunc_end54-_ZNK5Botan7AES_25610new_objectEv
	.cfi_endproc

	.section	.text._ZN5Botan5CPUID9has_ssse3Ev,"axG",@progbits,_ZN5Botan5CPUID9has_ssse3Ev,comdat
	.weak	_ZN5Botan5CPUID9has_ssse3Ev 
	.p2align	4, 0x90
	.type	_ZN5Botan5CPUID9has_ssse3Ev,@function
_ZN5Botan5CPUID9has_ssse3Ev:            
	.cfi_startproc

	push	rbp
.Lcfi207:
	.cfi_def_cfa_offset 16
.Lcfi208:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi209:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 40
.Lcfi210:
	.cfi_offset rbx, -56
.Lcfi211:
	.cfi_offset r12, -48
.Lcfi212:
	.cfi_offset r13, -40
.Lcfi213:
	.cfi_offset r14, -32
.Lcfi214:
	.cfi_offset r15, -24
	mov	eax, dword ptr [x.110]
	mov	ecx, dword ptr [y.111]
	mov	edx, eax
	sub	edx, 503913882
	sub	edx, 1
	add	edx, 503913882
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 43], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 42], sil
	mov	dword ptr [rbp - 48], 423050194
.LBB55_1:                               
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -1743115520
	mov	dword ptr [rbp - 52], eax 
	mov	dword ptr [rbp - 56], ecx 
	je	.LBB55_4
	jmp	.LBB55_8
.LBB55_8:                               
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, -1032465210
	mov	dword ptr [rbp - 60], eax 
	je	.LBB55_5
	jmp	.LBB55_9
.LBB55_9:                               
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, 423050194
	mov	dword ptr [rbp - 64], eax 
	je	.LBB55_3
	jmp	.LBB55_10
.LBB55_10:                              
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, 1084777426
	mov	dword ptr [rbp - 68], eax 
	je	.LBB55_6
	jmp	.LBB55_2
.LBB55_2:                               
	jmp	.LBB55_7
.LBB55_3:                               
	mov	eax, 1084777426
	mov	ecx, 2551851776
	mov	dl, 1
	mov	sil, byte ptr [rbp - 43]
	mov	dil, byte ptr [rbp - 42]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB55_7
.LBB55_4:                               
	mov	eax, 2
	mov	edi, eax
	call	_ZN5Botan5CPUID13has_cpuid_bitENS0_10CPUID_bitsE
	mov	ecx, 1084777426
	mov	edx, 3262502086
	mov	sil, 1
	xor	r8d, r8d
	and	al, 1
	mov	byte ptr [rbp - 41], al
	mov	r9d, dword ptr [x.110]
	mov	r10d, dword ptr [y.111]
	sub	r8d, 1
	mov	r11d, r9d
	add	r11d, r8d
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	al
	cmp	r10d, 10
	setl	bl
	mov	r14b, al
	xor	r14b, -1
	mov	r15b, bl
	xor	r15b, -1
	xor	sil, 0
	mov	r12b, r14b
	and	r12b, 0
	and	al, sil
	mov	r13b, r15b
	and	r13b, 0
	and	bl, sil
	or	r12b, al
	or	r13b, bl
	xor	r12b, r13b
	or	r14b, r15b
	xor	r14b, -1
	or	sil, 0
	and	r14b, sil
	or	r12b, r14b
	test	r12b, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 48], ecx
	jmp	.LBB55_7
.LBB55_5:
	mov	al, byte ptr [rbp - 41]
	and	al, 1
	movzx	eax, al
	add	rsp, 40
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB55_6:                               
	mov	eax, 2
	mov	edi, eax
	call	_ZN5Botan5CPUID13has_cpuid_bitENS0_10CPUID_bitsE
	mov	dword ptr [rbp - 48], -1743115520
	mov	byte ptr [rbp - 69], al 
.LBB55_7:                               
	jmp	.LBB55_1
.Lfunc_end55:
	.size	_ZN5Botan5CPUID9has_ssse3Ev, .Lfunc_end55-_ZN5Botan5CPUID9has_ssse3Ev
	.cfi_endproc

	.section	.text._ZN5Botan5CPUID13has_cpuid_bitENS0_10CPUID_bitsE,"axG",@progbits,_ZN5Botan5CPUID13has_cpuid_bitENS0_10CPUID_bitsE,comdat
	.weak	_ZN5Botan5CPUID13has_cpuid_bitENS0_10CPUID_bitsE 
	.p2align	4, 0x90
	.type	_ZN5Botan5CPUID13has_cpuid_bitENS0_10CPUID_bitsE,@function
_ZN5Botan5CPUID13has_cpuid_bitENS0_10CPUID_bitsE: 
	.cfi_startproc

	push	rbp
.Lcfi215:
	.cfi_def_cfa_offset 16
.Lcfi216:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi217:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	sub	rsp, 64
.Lcfi218:
	.cfi_offset rbx, -48
.Lcfi219:
	.cfi_offset r12, -40
.Lcfi220:
	.cfi_offset r14, -32
.Lcfi221:
	.cfi_offset r15, -24
	mov	eax, dword ptr [x.112]
	mov	ecx, dword ptr [y.113]
	mov	edx, eax
	add	edx, 1258786306
	sub	edx, 1
	sub	edx, 1258786306
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 35], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 34], sil
	mov	dword ptr [rbp - 40], 1544461622
	mov	qword ptr [rbp - 48], rdi 
.LBB56_1:                               
	mov	eax, dword ptr [rbp - 40]
	mov	ecx, eax
	sub	ecx, -996617554
	mov	dword ptr [rbp - 52], eax 
	mov	dword ptr [rbp - 56], ecx 
	je	.LBB56_5
	jmp	.LBB56_8
.LBB56_8:                               
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, 193038672
	mov	dword ptr [rbp - 60], eax 
	je	.LBB56_4
	jmp	.LBB56_9
.LBB56_9:                               
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, 521481665
	mov	dword ptr [rbp - 64], eax 
	je	.LBB56_6
	jmp	.LBB56_10
.LBB56_10:                              
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, 1544461622
	mov	dword ptr [rbp - 68], eax 
	je	.LBB56_3
	jmp	.LBB56_2
.LBB56_2:                               
	jmp	.LBB56_7
.LBB56_3:                               
	mov	eax, 521481665
	mov	ecx, 193038672
	mov	dl, byte ptr [rbp - 35]
	mov	sil, byte ptr [rbp - 34]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 40], eax
	jmp	.LBB56_7
.LBB56_4:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 48] 
	mov	qword ptr [rax], rdx
	mov	rax, qword ptr [rax]
	mov	qword ptr [rcx], rax
	mov	qword ptr [rbp - 80], rcx 
	call	_ZN5Botan5CPUID5stateEv
	mov	rcx, qword ptr [rbp - 80] 
	mov	rsi, qword ptr [rcx]
	mov	rdi, rax
	call	_ZNK5Botan5CPUID10CPUID_Data7has_bitEm
	mov	r8d, 521481665
	mov	r9d, 3298349742
	xor	r10d, r10d
	and	al, 1
	mov	byte ptr [rbp - 33], al
	mov	r11d, dword ptr [x.112]
	mov	ebx, dword ptr [y.113]
	sub	r10d, 1
	mov	r14d, r11d
	add	r14d, r10d
	imul	r11d, r14d
	and	r11d, 1
	cmp	r11d, 0
	sete	al
	cmp	ebx, 10
	setl	r15b
	mov	r12b, al
	and	r12b, r15b
	xor	al, r15b
	or	r12b, al
	test	r12b, 1
	cmovne	r8d, r9d
	mov	dword ptr [rbp - 40], r8d
	jmp	.LBB56_7
.LBB56_5:
	mov	al, byte ptr [rbp - 33]
	and	al, 1
	movzx	eax, al
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB56_6:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 48] 
	mov	qword ptr [rax], rdx
	mov	rax, qword ptr [rax]
	mov	qword ptr [rcx], rax
	mov	qword ptr [rbp - 88], rcx 
	call	_ZN5Botan5CPUID5stateEv
	mov	rcx, qword ptr [rbp - 88] 
	mov	rsi, qword ptr [rcx]
	mov	rdi, rax
	call	_ZNK5Botan5CPUID10CPUID_Data7has_bitEm
	mov	dword ptr [rbp - 40], 193038672
	mov	byte ptr [rbp - 89], al 
.LBB56_7:                               
	jmp	.LBB56_1
.Lfunc_end56:
	.size	_ZN5Botan5CPUID13has_cpuid_bitENS0_10CPUID_bitsE, .Lfunc_end56-_ZN5Botan5CPUID13has_cpuid_bitENS0_10CPUID_bitsE
	.cfi_endproc

	.section	.text._ZN5Botan5CPUID5stateEv,"axG",@progbits,_ZN5Botan5CPUID5stateEv,comdat
	.weak	_ZN5Botan5CPUID5stateEv 
	.p2align	4, 0x90
	.type	_ZN5Botan5CPUID5stateEv,@function
_ZN5Botan5CPUID5stateEv:                
.Lfunc_begin7:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception7

	push	rbp
.Lcfi222:
	.cfi_def_cfa_offset 16
.Lcfi223:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi224:
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	cmp	byte ptr [_ZGVZN5Botan5CPUID5stateEvE7g_cpuid], 0
	jne	.LBB57_4

	movabs	rdi, _ZGVZN5Botan5CPUID5stateEvE7g_cpuid
	call	__cxa_guard_acquire
	cmp	eax, 0
	je	.LBB57_4

.Ltmp23:
	mov	eax, _ZZN5Botan5CPUID5stateEvE7g_cpuid
	mov	edi, eax
	call	_ZN5Botan5CPUID10CPUID_DataC1Ev
.Ltmp24:
	jmp	.LBB57_3
.LBB57_3:
	movabs	rdi, _ZGVZN5Botan5CPUID5stateEvE7g_cpuid
	call	__cxa_guard_release
.LBB57_4:
	movabs	rax, _ZZN5Botan5CPUID5stateEvE7g_cpuid
	add	rsp, 16
	pop	rbp
	ret
.LBB57_5:
.Ltmp25:
	movabs	rdi, _ZGVZN5Botan5CPUID5stateEvE7g_cpuid
	mov	ecx, edx
	mov	qword ptr [rbp - 8], rax
	mov	dword ptr [rbp - 12], ecx
	call	__cxa_guard_abort

	mov	rdi, qword ptr [rbp - 8]
	call	_Unwind_Resume
.Lfunc_end57:
	.size	_ZN5Botan5CPUID5stateEv, .Lfunc_end57-_ZN5Botan5CPUID5stateEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table57:
.Lexception7:
	.byte	255                     
	.byte	3                       
	.asciz	"\234"                  
	.byte	3                       
	.byte	26                      
	.long	.Ltmp23-.Lfunc_begin7   
	.long	.Ltmp24-.Ltmp23         
	.long	.Ltmp25-.Lfunc_begin7   
	.byte	0                       
	.long	.Ltmp24-.Lfunc_begin7   
	.long	.Lfunc_end57-.Ltmp24    
	.long	0                       
	.byte	0                       
	.p2align	2

	.section	.text._ZNK5Botan5CPUID10CPUID_Data7has_bitEm,"axG",@progbits,_ZNK5Botan5CPUID10CPUID_Data7has_bitEm,comdat
	.weak	_ZNK5Botan5CPUID10CPUID_Data7has_bitEm 
	.p2align	4, 0x90
	.type	_ZNK5Botan5CPUID10CPUID_Data7has_bitEm,@function
_ZNK5Botan5CPUID10CPUID_Data7has_bitEm: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 56
	mov	eax, dword ptr [x.114]
	mov	ecx, dword ptr [y.115]
	mov	edx, eax
	add	edx, 1098890472
	sub	edx, 1
	sub	edx, 1098890472
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 43], r8b
	cmp	ecx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 42], r8b
	mov	dword ptr [rbp - 48], 1137901887
	mov	qword ptr [rbp - 56], rdi 
	mov	qword ptr [rbp - 64], rsi 
.LBB58_1:                               
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -802641444
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB58_6
	jmp	.LBB58_8
.LBB58_8:                               
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1137901887
	mov	dword ptr [rbp - 76], eax 
	je	.LBB58_3
	jmp	.LBB58_9
.LBB58_9:                               
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1559486625
	mov	dword ptr [rbp - 80], eax 
	je	.LBB58_4
	jmp	.LBB58_10
.LBB58_10:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 2031726608
	mov	dword ptr [rbp - 84], eax 
	je	.LBB58_5
	jmp	.LBB58_2
.LBB58_2:                               
	jmp	.LBB58_7
.LBB58_3:                               
	mov	eax, 3492325852
	mov	ecx, 1559486625
	mov	dl, byte ptr [rbp - 43]
	mov	sil, byte ptr [rbp - 42]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB58_7
.LBB58_4:                               
	mov	eax, 3492325852
	mov	ecx, 2031726608
	mov	dl, 1
	xor	esi, esi
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	r8, rsp
	add	r8, -16
	mov	rsp, r8
	mov	r9, qword ptr [rbp - 56] 
	mov	qword ptr [rdi], r9
	mov	r10, qword ptr [rbp - 64] 
	mov	qword ptr [r8], r10
	mov	rdi, qword ptr [rdi]
	mov	rdi, qword ptr [rdi]
	mov	r11, qword ptr [r8]
	xor	r11, -1
	mov	rbx, rdi
	xor	rbx, r11
	and	rbx, rdi
	cmp	rbx, qword ptr [r8]
	sete	r14b
	and	r14b, 1
	mov	byte ptr [rbp - 41], r14b
	mov	r15d, dword ptr [x.114]
	mov	r12d, dword ptr [y.115]
	sub	esi, 1
	mov	r13d, r15d
	add	r13d, esi
	imul	r15d, r13d
	and	r15d, 1
	cmp	r15d, 0
	sete	r14b
	cmp	r12d, 10
	setl	sil
	mov	dil, r14b
	xor	dil, -1
	mov	r8b, sil
	xor	r8b, -1
	xor	dl, 1
	mov	r9b, dil
	and	r9b, -1
	and	r14b, dl
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	or	r9b, r14b
	or	r10b, sil
	xor	r9b, r10b
	or	dil, r8b
	xor	dil, -1
	or	dl, 1
	and	dil, dl
	or	r9b, dil
	test	r9b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB58_7
.LBB58_5:
	mov	al, byte ptr [rbp - 41]
	and	al, 1
	movzx	eax, al
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB58_6:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rdx
	mov	rax, qword ptr [rbp - 64] 
	mov	qword ptr [rcx], rax
	mov	dword ptr [rbp - 48], 1559486625
.LBB58_7:                               
	jmp	.LBB58_1
.Lfunc_end58:
	.size	_ZNK5Botan5CPUID10CPUID_Data7has_bitEm, .Lfunc_end58-_ZNK5Botan5CPUID10CPUID_Data7has_bitEm

	.section	.text._ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv,"axG",@progbits,_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv,comdat
	.weak	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv 
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv,@function
_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 56
	mov	eax, dword ptr [x.116]
	mov	ecx, dword ptr [y.117]
	mov	edx, eax
	add	edx, 134337192
	sub	edx, 1
	sub	edx, 134337192
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 50], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 49], sil
	mov	dword ptr [rbp - 56], -1674342996
	mov	qword ptr [rbp - 64], rdi 
.LBB59_1:                               
	mov	eax, dword ptr [rbp - 56]
	mov	ecx, eax
	sub	ecx, -1674342996
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB59_3
	jmp	.LBB59_8
.LBB59_8:                               
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -1641713827
	mov	dword ptr [rbp - 76], eax 
	je	.LBB59_4
	jmp	.LBB59_9
.LBB59_9:                               
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -1231392889
	mov	dword ptr [rbp - 80], eax 
	je	.LBB59_6
	jmp	.LBB59_10
.LBB59_10:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1243024434
	mov	dword ptr [rbp - 84], eax 
	je	.LBB59_5
	jmp	.LBB59_2
.LBB59_2:                               
	jmp	.LBB59_7
.LBB59_3:                               
	mov	eax, 3063574407
	mov	ecx, 2653253469
	mov	dl, 1
	mov	sil, byte ptr [rbp - 50]
	mov	dil, byte ptr [rbp - 49]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 0
	mov	r10b, r8b
	and	r10b, 0
	and	sil, dl
	mov	r11b, r9b
	and	r11b, 0
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 0
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB59_7
.LBB59_4:                               
	mov	eax, 3063574407
	mov	ecx, 1243024434
	mov	dl, 1
	xor	esi, esi
	movabs	rdi, -7363073613247509419
	mov	r8, rsp
	add	r8, -16
	mov	rsp, r8
	mov	r9, qword ptr [rbp - 64] 
	mov	qword ptr [r8], r9
	mov	r8, qword ptr [r8]
	mov	r10, qword ptr [r8 + 8]
	mov	r8, qword ptr [r8]
	add	r10, rdi
	sub	r10, r8
	sub	r10, rdi
	sar	r10, 2
	mov	qword ptr [rbp - 48], r10
	mov	r11d, dword ptr [x.116]
	mov	ebx, dword ptr [y.117]
	sub	esi, 1
	mov	r14d, r11d
	add	r14d, esi
	imul	r11d, r14d
	and	r11d, 1
	cmp	r11d, 0
	sete	r15b
	cmp	ebx, 10
	setl	r12b
	mov	r13b, r15b
	xor	r13b, -1
	mov	sil, r12b
	xor	sil, -1
	xor	dl, 1
	mov	dil, r13b
	and	dil, -1
	and	r15b, dl
	mov	r8b, sil
	and	r8b, -1
	and	r12b, dl
	or	dil, r15b
	or	r8b, r12b
	xor	dil, r8b
	or	r13b, sil
	xor	r13b, -1
	or	dl, 1
	and	r13b, dl
	or	dil, r13b
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB59_7
.LBB59_5:
	mov	rax, qword ptr [rbp - 48]
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB59_6:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rcx
	mov	dword ptr [rbp - 56], -1641713827
.LBB59_7:                               
	jmp	.LBB59_1
.Lfunc_end59:
	.size	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv, .Lfunc_end59-_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv

	.text
	.p2align	4, 0x90         
	.type	_ZN5Botan12_GLOBAL__N_19ks_expandEPjPKjm,@function
_ZN5Botan12_GLOBAL__N_19ks_expandEPjPKjm: 
	.cfi_startproc

	push	rbp
.Lcfi225:
	.cfi_def_cfa_offset 16
.Lcfi226:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi227:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 216
.Lcfi228:
	.cfi_offset rbx, -56
.Lcfi229:
	.cfi_offset r12, -48
.Lcfi230:
	.cfi_offset r13, -40
.Lcfi231:
	.cfi_offset r14, -32
.Lcfi232:
	.cfi_offset r15, -24
	mov	eax, dword ptr [x.118]
	mov	ecx, dword ptr [y.119]
	mov	r8d, eax
	sub	r8d, -2045091393
	sub	r8d, 1
	add	r8d, -2045091393
	imul	eax, r8d
	and	eax, 1
	cmp	eax, 0
	sete	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 82], r9b
	cmp	ecx, 10
	setl	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 81], r9b
	mov	dword ptr [rbp - 88], 1715790996
	mov	qword ptr [rbp - 96], rsi 
	mov	qword ptr [rbp - 104], rdi 
	mov	qword ptr [rbp - 112], rdx 
.LBB60_1:                               
	mov	eax, dword ptr [rbp - 88]
	mov	ecx, eax
	sub	ecx, -1804087450
	mov	dword ptr [rbp - 116], eax 
	mov	dword ptr [rbp - 120], ecx 
	je	.LBB60_6
	jmp	.LBB60_18
.LBB60_18:                              
	mov	eax, dword ptr [rbp - 116] 
	sub	eax, -1479921373
	mov	dword ptr [rbp - 124], eax 
	je	.LBB60_12
	jmp	.LBB60_19
.LBB60_19:                              
	mov	eax, dword ptr [rbp - 116] 
	sub	eax, -277360151
	mov	dword ptr [rbp - 128], eax 
	je	.LBB60_9
	jmp	.LBB60_20
.LBB60_20:                              
	mov	eax, dword ptr [rbp - 116] 
	sub	eax, -205818361
	mov	dword ptr [rbp - 132], eax 
	je	.LBB60_8
	jmp	.LBB60_21
.LBB60_21:                              
	mov	eax, dword ptr [rbp - 116] 
	sub	eax, -61511415
	mov	dword ptr [rbp - 136], eax 
	je	.LBB60_13
	jmp	.LBB60_22
.LBB60_22:                              
	mov	eax, dword ptr [rbp - 116] 
	sub	eax, 321255651
	mov	dword ptr [rbp - 140], eax 
	je	.LBB60_7
	jmp	.LBB60_23
.LBB60_23:                              
	mov	eax, dword ptr [rbp - 116] 
	sub	eax, 617809046
	mov	dword ptr [rbp - 144], eax 
	je	.LBB60_5
	jmp	.LBB60_24
.LBB60_24:                              
	mov	eax, dword ptr [rbp - 116] 
	sub	eax, 619213873
	mov	dword ptr [rbp - 148], eax 
	je	.LBB60_4
	jmp	.LBB60_25
.LBB60_25:                              
	mov	eax, dword ptr [rbp - 116] 
	sub	eax, 787674844
	mov	dword ptr [rbp - 152], eax 
	je	.LBB60_14
	jmp	.LBB60_26
.LBB60_26:                              
	mov	eax, dword ptr [rbp - 116] 
	sub	eax, 1292526668
	mov	dword ptr [rbp - 156], eax 
	je	.LBB60_16
	jmp	.LBB60_27
.LBB60_27:                              
	mov	eax, dword ptr [rbp - 116] 
	sub	eax, 1715790996
	mov	dword ptr [rbp - 160], eax 
	je	.LBB60_3
	jmp	.LBB60_28
.LBB60_28:                              
	mov	eax, dword ptr [rbp - 116] 
	sub	eax, 1868779387
	mov	dword ptr [rbp - 164], eax 
	je	.LBB60_15
	jmp	.LBB60_29
.LBB60_29:                              
	mov	eax, dword ptr [rbp - 116] 
	sub	eax, 1975804565
	mov	dword ptr [rbp - 168], eax 
	je	.LBB60_10
	jmp	.LBB60_30
.LBB60_30:                              
	mov	eax, dword ptr [rbp - 116] 
	sub	eax, 2084630746
	mov	dword ptr [rbp - 172], eax 
	je	.LBB60_11
	jmp	.LBB60_2
.LBB60_2:                               
	jmp	.LBB60_17
.LBB60_3:                               
	mov	eax, 787674844
	mov	ecx, 619213873
	mov	dl, 1
	mov	sil, byte ptr [rbp - 82]
	mov	dil, byte ptr [rbp - 81]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 88], eax
	jmp	.LBB60_17
.LBB60_4:                               
	mov	eax, 787674844
	mov	ecx, 617809046
	xor	edx, edx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	qword ptr [rbp - 80], rsi
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	qword ptr [rbp - 72], rsi
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	qword ptr [rbp - 64], rsi
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	qword ptr [rbp - 56], rsi
	mov	rsi, qword ptr [rbp - 80]
	mov	rdi, qword ptr [rbp - 104] 
	mov	qword ptr [rsi], rdi
	mov	rsi, qword ptr [rbp - 72]
	mov	r8, qword ptr [rbp - 96] 
	mov	qword ptr [rsi], r8
	mov	rsi, qword ptr [rbp - 64]
	mov	r9, qword ptr [rbp - 112] 
	mov	qword ptr [rsi], r9
	mov	rsi, qword ptr [rbp - 56]
	mov	qword ptr [rsi], 0
	mov	r10d, dword ptr [x.118]
	mov	r11d, dword ptr [y.119]
	sub	edx, 1
	mov	ebx, r10d
	add	ebx, edx
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r14b
	cmp	r11d, 10
	setl	r15b
	mov	r12b, r14b
	and	r12b, r15b
	xor	r14b, r15b
	or	r12b, r14b
	test	r12b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 88], eax
	jmp	.LBB60_17
.LBB60_5:                               
	mov	dword ptr [rbp - 88], -1804087450
	jmp	.LBB60_17
.LBB60_6:                               
	mov	eax, 1868779387
	mov	ecx, 321255651
	xor	edx, edx
	mov	esi, dword ptr [x.118]
	mov	edi, dword ptr [y.119]
	sub	edx, 1
	mov	r8d, esi
	add	r8d, edx
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	and	r11b, r10b
	xor	r9b, r10b
	or	r11b, r9b
	test	r11b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 88], eax
	jmp	.LBB60_17
.LBB60_7:                               
	mov	eax, 1868779387
	mov	ecx, 4089148935
	mov	dl, 1
	mov	rsi, qword ptr [rbp - 56]
	cmp	qword ptr [rsi], 4
	setne	dil
	and	dil, 1
	mov	byte ptr [rbp - 41], dil
	mov	r8d, dword ptr [x.118]
	mov	r9d, dword ptr [y.119]
	mov	r10d, r8d
	sub	r10d, -1461676645
	sub	r10d, 1
	add	r10d, -1461676645
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	dil
	cmp	r9d, 10
	setl	r11b
	mov	bl, dil
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 1
	mov	r15b, bl
	and	r15b, -1
	and	dil, dl
	mov	r12b, r14b
	and	r12b, -1
	and	r11b, dl
	or	r15b, dil
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 1
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 88], eax
	jmp	.LBB60_17
.LBB60_8:                               
	mov	eax, 4233455881
	mov	ecx, 4017607145
	mov	dl, byte ptr [rbp - 41]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 88], eax
	jmp	.LBB60_17
.LBB60_9:                               
	xor	eax, eax
	mov	ecx, eax
	mov	rdx, qword ptr [rbp - 72]
	mov	rdx, qword ptr [rdx]
	mov	rsi, qword ptr [rbp - 64]
	mov	rsi, qword ptr [rsi]
	mov	rdi, qword ptr [rbp - 56]
	mov	rdi, qword ptr [rdi]
	sub	rcx, rdi
	sub	rsi, rcx
	mov	eax, dword ptr [rdx + 4*rsi]
	mov	rcx, qword ptr [rbp - 80]
	mov	rcx, qword ptr [rcx]
	mov	rdx, qword ptr [rbp - 56]
	mov	rdx, qword ptr [rdx]
	mov	dword ptr [rcx + 4*rdx], eax
	mov	dword ptr [rbp - 88], 1975804565
	jmp	.LBB60_17
.LBB60_10:                              
	mov	eax, 1292526668
	mov	ecx, 2084630746
	mov	edx, dword ptr [x.118]
	mov	esi, dword ptr [y.119]
	mov	edi, edx
	add	edi, 1524481949
	sub	edi, 1
	sub	edi, 1524481949
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 88], eax
	jmp	.LBB60_17
.LBB60_11:                              
	mov	eax, 1292526668
	mov	ecx, 2815045923
	mov	dl, 1
	xor	esi, esi
	movabs	rdi, -4919045276116176068
	mov	r8, qword ptr [rbp - 56]
	mov	r8, qword ptr [r8]
	sub	r8, rdi
	add	r8, 1
	add	r8, rdi
	mov	rdi, qword ptr [rbp - 56]
	mov	qword ptr [rdi], r8
	mov	r9d, dword ptr [x.118]
	mov	r10d, dword ptr [y.119]
	sub	esi, 1
	mov	r11d, r9d
	add	r11d, esi
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	bl
	cmp	r10d, 10
	setl	r14b
	mov	r15b, bl
	xor	r15b, -1
	mov	r12b, r14b
	xor	r12b, -1
	xor	dl, 0
	mov	r13b, r15b
	and	r13b, 0
	and	bl, dl
	mov	sil, r12b
	and	sil, 0
	and	r14b, dl
	or	r13b, bl
	or	sil, r14b
	xor	r13b, sil
	or	r15b, r12b
	xor	r15b, -1
	or	dl, 0
	and	r15b, dl
	or	r13b, r15b
	test	r13b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 88], eax
	jmp	.LBB60_17
.LBB60_12:                              
	mov	dword ptr [rbp - 88], -1804087450
	jmp	.LBB60_17
.LBB60_13:
	mov	edx, 1431655765
	mov	eax, 1
	mov	ecx, eax
	mov	rsi, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rsi]
	add	rsi, 4
	mov	rdi, qword ptr [rbp - 80]
	mov	rdi, qword ptr [rdi]
	mov	qword ptr [rbp - 184], rdi 
	mov	rdi, rsi
	mov	rsi, qword ptr [rbp - 184] 
	call	_ZN5Botan9swap_bitsIjEEvRT_S2_S1_m
	mov	edx, 1431655765
	mov	eax, 1
	mov	ecx, eax
	mov	rsi, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rsi]
	add	rsi, 12
	mov	rdi, qword ptr [rbp - 80]
	mov	rdi, qword ptr [rdi]
	add	rdi, 8
	mov	qword ptr [rbp - 192], rdi 
	mov	rdi, rsi
	mov	rsi, qword ptr [rbp - 192] 
	call	_ZN5Botan9swap_bitsIjEEvRT_S2_S1_m
	mov	edx, 858993459
	mov	eax, 2
	mov	ecx, eax
	mov	rsi, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rsi]
	add	rsi, 8
	mov	rdi, qword ptr [rbp - 80]
	mov	rdi, qword ptr [rdi]
	mov	qword ptr [rbp - 200], rdi 
	mov	rdi, rsi
	mov	rsi, qword ptr [rbp - 200] 
	call	_ZN5Botan9swap_bitsIjEEvRT_S2_S1_m
	mov	edx, 858993459
	mov	eax, 2
	mov	ecx, eax
	mov	rsi, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rsi]
	add	rsi, 12
	mov	rdi, qword ptr [rbp - 80]
	mov	rdi, qword ptr [rdi]
	add	rdi, 4
	mov	qword ptr [rbp - 208], rdi 
	mov	rdi, rsi
	mov	rsi, qword ptr [rbp - 208] 
	call	_ZN5Botan9swap_bitsIjEEvRT_S2_S1_m
	mov	edx, 252645135
	mov	eax, 4
	mov	ecx, eax
	mov	rsi, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rsi]
	mov	eax, dword ptr [rsi]
	mov	rsi, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rsi]
	mov	dword ptr [rsi + 16], eax
	mov	rsi, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rsi]
	mov	eax, dword ptr [rsi + 4]
	mov	rsi, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rsi]
	mov	dword ptr [rsi + 20], eax
	mov	rsi, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rsi]
	mov	eax, dword ptr [rsi + 8]
	mov	rsi, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rsi]
	mov	dword ptr [rsi + 24], eax
	mov	rsi, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rsi]
	mov	eax, dword ptr [rsi + 12]
	mov	rsi, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rsi]
	mov	dword ptr [rsi + 28], eax
	mov	rsi, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rsi]
	add	rsi, 16
	mov	rdi, qword ptr [rbp - 80]
	mov	rdi, qword ptr [rdi]
	mov	qword ptr [rbp - 216], rdi 
	mov	rdi, rsi
	mov	rsi, qword ptr [rbp - 216] 
	call	_ZN5Botan9swap_bitsIjEEvRT_S2_S1_m
	mov	edx, 252645135
	mov	eax, 4
	mov	ecx, eax
	mov	rsi, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rsi]
	add	rsi, 20
	mov	rdi, qword ptr [rbp - 80]
	mov	rdi, qword ptr [rdi]
	add	rdi, 4
	mov	qword ptr [rbp - 224], rdi 
	mov	rdi, rsi
	mov	rsi, qword ptr [rbp - 224] 
	call	_ZN5Botan9swap_bitsIjEEvRT_S2_S1_m
	mov	edx, 252645135
	mov	eax, 4
	mov	ecx, eax
	mov	rsi, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rsi]
	add	rsi, 24
	mov	rdi, qword ptr [rbp - 80]
	mov	rdi, qword ptr [rdi]
	add	rdi, 8
	mov	qword ptr [rbp - 232], rdi 
	mov	rdi, rsi
	mov	rsi, qword ptr [rbp - 232] 
	call	_ZN5Botan9swap_bitsIjEEvRT_S2_S1_m
	mov	edx, 252645135
	mov	eax, 4
	mov	ecx, eax
	mov	rsi, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rsi]
	add	rsi, 28
	mov	rdi, qword ptr [rbp - 80]
	mov	rdi, qword ptr [rdi]
	add	rdi, 12
	mov	qword ptr [rbp - 240], rdi 
	mov	rdi, rsi
	mov	rsi, qword ptr [rbp - 240] 
	call	_ZN5Botan9swap_bitsIjEEvRT_S2_S1_m
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB60_14:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 104] 
	mov	qword ptr [rax], rdi
	mov	rax, qword ptr [rbp - 96] 
	mov	qword ptr [rcx], rax
	mov	rcx, qword ptr [rbp - 112] 
	mov	qword ptr [rdx], rcx
	mov	qword ptr [rsi], 0
	mov	dword ptr [rbp - 88], 619213873
	jmp	.LBB60_17
.LBB60_15:                              
	mov	rax, qword ptr [rbp - 56]
	mov	dword ptr [rbp - 88], 321255651
	mov	qword ptr [rbp - 248], rax 
	jmp	.LBB60_17
.LBB60_16:                              
	xor	eax, eax
	mov	ecx, eax
	mov	rdx, qword ptr [rbp - 56]
	mov	rdx, qword ptr [rdx]
	sub	rcx, 1
	sub	rdx, rcx
	mov	rcx, qword ptr [rbp - 56]
	mov	qword ptr [rcx], rdx
	mov	dword ptr [rbp - 88], 2084630746
.LBB60_17:                              
	jmp	.LBB60_1
.Lfunc_end60:
	.size	_ZN5Botan12_GLOBAL__N_19ks_expandEPjPKjm, .Lfunc_end60-_ZN5Botan12_GLOBAL__N_19ks_expandEPjPKjm
	.cfi_endproc

	.section	.text._ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4dataEv,"axG",@progbits,_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4dataEv,comdat
	.weak	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4dataEv 
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4dataEv,@function
_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4dataEv: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 56
	mov	eax, dword ptr [x.120]
	mov	ecx, dword ptr [y.121]
	mov	edx, eax
	sub	edx, -128259827
	sub	edx, 1
	add	edx, -128259827
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 50], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 49], sil
	mov	dword ptr [rbp - 56], -1705936905
	mov	qword ptr [rbp - 64], rdi 
.LBB61_1:                               
	mov	eax, dword ptr [rbp - 56]
	mov	ecx, eax
	sub	ecx, -2053667034
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB61_6
	jmp	.LBB61_8
.LBB61_8:                               
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -1955198553
	mov	dword ptr [rbp - 76], eax 
	je	.LBB61_4
	jmp	.LBB61_9
.LBB61_9:                               
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -1705936905
	mov	dword ptr [rbp - 80], eax 
	je	.LBB61_3
	jmp	.LBB61_10
.LBB61_10:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 2099631555
	mov	dword ptr [rbp - 84], eax 
	je	.LBB61_5
	jmp	.LBB61_2
.LBB61_2:                               
	jmp	.LBB61_7
.LBB61_3:                               
	mov	eax, 2241300262
	mov	ecx, 2339768743
	mov	dl, 1
	mov	sil, byte ptr [rbp - 50]
	mov	dil, byte ptr [rbp - 49]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB61_7
.LBB61_4:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rsi, qword ptr [rax]
	mov	rdi, rax
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE11_M_data_ptrIjEEPT_S6_
	mov	edx, 2241300262
	mov	r8d, 2099631555
	mov	r9b, 1
	mov	qword ptr [rbp - 48], rax
	mov	r10d, dword ptr [x.120]
	mov	r11d, dword ptr [y.121]
	mov	ebx, r10d
	sub	ebx, -379539223
	sub	ebx, 1
	add	ebx, -379539223
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r14b
	cmp	r11d, 10
	setl	r15b
	mov	r12b, r14b
	xor	r12b, -1
	mov	r13b, r15b
	xor	r13b, -1
	xor	r9b, 1
	mov	al, r12b
	and	al, -1
	and	r14b, r9b
	mov	cl, r13b
	and	cl, -1
	and	r15b, r9b
	or	al, r14b
	or	cl, r15b
	xor	al, cl
	or	r12b, r13b
	xor	r12b, -1
	or	r9b, 1
	and	r12b, r9b
	or	al, r12b
	test	al, 1
	cmovne	edx, r8d
	mov	dword ptr [rbp - 56], edx
	jmp	.LBB61_7
.LBB61_5:
	mov	rax, qword ptr [rbp - 48]
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB61_6:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rsi, qword ptr [rax]
	mov	rdi, rax
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE11_M_data_ptrIjEEPT_S6_
	mov	dword ptr [rbp - 56], -1955198553
	mov	qword ptr [rbp - 96], rax 
.LBB61_7:                               
	jmp	.LBB61_1
.Lfunc_end61:
	.size	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4dataEv, .Lfunc_end61-_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4dataEv

	.section	.text._ZSt3minImERKT_S2_S2_,"axG",@progbits,_ZSt3minImERKT_S2_S2_,comdat
	.weak	_ZSt3minImERKT_S2_S2_   
	.p2align	4, 0x90
	.type	_ZSt3minImERKT_S2_S2_,@function
_ZSt3minImERKT_S2_S2_:                  

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 104
	xor	eax, eax
	mov	ecx, dword ptr [x.122]
	mov	edx, dword ptr [y.123]
	sub	eax, 1
	mov	r8d, ecx
	add	r8d, eax
	imul	ecx, r8d
	and	ecx, 1
	cmp	ecx, 0
	sete	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 74], r9b
	cmp	edx, 10
	setl	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 73], r9b
	mov	dword ptr [rbp - 80], 1208566007
	mov	qword ptr [rbp - 88], rdi 
	mov	qword ptr [rbp - 96], rsi 
.LBB62_1:                               
	mov	eax, dword ptr [rbp - 80]
	mov	ecx, eax
	sub	ecx, -1929305444
	mov	dword ptr [rbp - 100], eax 
	mov	dword ptr [rbp - 104], ecx 
	je	.LBB62_6
	jmp	.LBB62_14
.LBB62_14:                              
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, -1544242005
	mov	dword ptr [rbp - 108], eax 
	je	.LBB62_12
	jmp	.LBB62_15
.LBB62_15:                              
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, -862532545
	mov	dword ptr [rbp - 112], eax 
	je	.LBB62_11
	jmp	.LBB62_16
.LBB62_16:                              
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, -466883321
	mov	dword ptr [rbp - 116], eax 
	je	.LBB62_9
	jmp	.LBB62_17
.LBB62_17:                              
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, -436031843
	mov	dword ptr [rbp - 120], eax 
	je	.LBB62_10
	jmp	.LBB62_18
.LBB62_18:                              
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, -256609727
	mov	dword ptr [rbp - 124], eax 
	je	.LBB62_5
	jmp	.LBB62_19
.LBB62_19:                              
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, 76902870
	mov	dword ptr [rbp - 128], eax 
	je	.LBB62_8
	jmp	.LBB62_20
.LBB62_20:                              
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, 732646928
	mov	dword ptr [rbp - 132], eax 
	je	.LBB62_4
	jmp	.LBB62_21
.LBB62_21:                              
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, 1110157751
	mov	dword ptr [rbp - 136], eax 
	je	.LBB62_7
	jmp	.LBB62_22
.LBB62_22:                              
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, 1208566007
	mov	dword ptr [rbp - 140], eax 
	je	.LBB62_3
	jmp	.LBB62_2
.LBB62_2:                               
	jmp	.LBB62_13
.LBB62_3:                               
	mov	eax, 3432434751
	mov	ecx, 732646928
	mov	dl, byte ptr [rbp - 74]
	mov	sil, byte ptr [rbp - 73]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 80], eax
	jmp	.LBB62_13
.LBB62_4:                               
	mov	eax, 3432434751
	mov	ecx, 4038357569
	mov	dl, 1
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	qword ptr [rbp - 72], rsi
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	qword ptr [rbp - 64], rsi
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	qword ptr [rbp - 56], rsi
	mov	rsi, qword ptr [rbp - 64]
	mov	rdi, qword ptr [rbp - 88] 
	mov	qword ptr [rsi], rdi
	mov	rsi, qword ptr [rbp - 56]
	mov	r8, qword ptr [rbp - 96] 
	mov	qword ptr [rsi], r8
	mov	rsi, qword ptr [rbp - 56]
	mov	rsi, qword ptr [rsi]
	mov	rsi, qword ptr [rsi]
	mov	r9, qword ptr [rbp - 64]
	mov	r9, qword ptr [r9]
	cmp	rsi, qword ptr [r9]
	setb	r10b
	and	r10b, 1
	mov	byte ptr [rbp - 41], r10b
	mov	r11d, dword ptr [x.122]
	mov	ebx, dword ptr [y.123]
	mov	r14d, r11d
	add	r14d, 2125756935
	sub	r14d, 1
	sub	r14d, 2125756935
	imul	r11d, r14d
	and	r11d, 1
	cmp	r11d, 0
	sete	r10b
	cmp	ebx, 10
	setl	r15b
	mov	r12b, r10b
	xor	r12b, -1
	mov	r13b, r15b
	xor	r13b, -1
	xor	dl, 0
	mov	sil, r12b
	and	sil, 0
	and	r10b, dl
	mov	dil, r13b
	and	dil, 0
	and	r15b, dl
	or	sil, r10b
	or	dil, r15b
	xor	sil, dil
	or	r12b, r13b
	xor	r12b, -1
	or	dl, 0
	and	r12b, dl
	or	sil, r12b
	test	sil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 80], eax
	jmp	.LBB62_13
.LBB62_5:                               
	mov	eax, 3828083975
	mov	ecx, 2365661852
	mov	dl, byte ptr [rbp - 41]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 80], eax
	jmp	.LBB62_13
.LBB62_6:                               
	mov	eax, 2750725291
	mov	ecx, 1110157751
	mov	edx, dword ptr [x.122]
	mov	esi, dword ptr [y.123]
	mov	edi, edx
	add	edi, -883648862
	sub	edi, 1
	sub	edi, -883648862
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 80], eax
	jmp	.LBB62_13
.LBB62_7:                               
	mov	eax, 2750725291
	mov	ecx, 76902870
	mov	dl, 1
	mov	rsi, qword ptr [rbp - 56]
	mov	rsi, qword ptr [rsi]
	mov	rdi, qword ptr [rbp - 72]
	mov	qword ptr [rdi], rsi
	mov	r8d, dword ptr [x.122]
	mov	r9d, dword ptr [y.123]
	mov	r10d, r8d
	add	r10d, 841522450
	sub	r10d, 1
	sub	r10d, 841522450
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	xor	r14b, -1
	mov	r15b, bl
	xor	r15b, -1
	xor	dl, 0
	mov	r12b, r14b
	and	r12b, 0
	and	r11b, dl
	mov	r13b, r15b
	and	r13b, 0
	and	bl, dl
	or	r12b, r11b
	or	r13b, bl
	xor	r12b, r13b
	or	r14b, r15b
	xor	r14b, -1
	or	dl, 0
	and	r14b, dl
	or	r12b, r14b
	test	r12b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 80], eax
	jmp	.LBB62_13
.LBB62_8:                               
	mov	dword ptr [rbp - 80], -436031843
	jmp	.LBB62_13
.LBB62_9:                               
	mov	rax, qword ptr [rbp - 64]
	mov	rax, qword ptr [rax]
	mov	rcx, qword ptr [rbp - 72]
	mov	qword ptr [rcx], rax
	mov	dword ptr [rbp - 80], -436031843
	jmp	.LBB62_13
.LBB62_10:
	mov	rax, qword ptr [rbp - 72]
	mov	rax, qword ptr [rax]
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB62_11:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 88] 
	mov	qword ptr [rax], rdx
	mov	rax, qword ptr [rbp - 96] 
	mov	qword ptr [rcx], rax
	mov	dword ptr [rbp - 80], 732646928
	jmp	.LBB62_13
.LBB62_12:                              
	mov	rax, qword ptr [rbp - 56]
	mov	rax, qword ptr [rax]
	mov	rcx, qword ptr [rbp - 72]
	mov	qword ptr [rcx], rax
	mov	dword ptr [rbp - 80], 1110157751
.LBB62_13:                              
	jmp	.LBB62_1
.Lfunc_end62:
	.size	_ZSt3minImERKT_S2_S2_, .Lfunc_end62-_ZSt3minImERKT_S2_S2_

	.section	.text._ZN5Botan7load_beIjEEvPT_PKhm,"axG",@progbits,_ZN5Botan7load_beIjEEvPT_PKhm,comdat
	.weak	_ZN5Botan7load_beIjEEvPT_PKhm 
	.p2align	4, 0x90
	.type	_ZN5Botan7load_beIjEEvPT_PKhm,@function
_ZN5Botan7load_beIjEEvPT_PKhm:          
	.cfi_startproc

	push	rbp
.Lcfi233:
	.cfi_def_cfa_offset 16
.Lcfi234:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi235:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 168
.Lcfi236:
	.cfi_offset rbx, -56
.Lcfi237:
	.cfi_offset r12, -48
.Lcfi238:
	.cfi_offset r13, -40
.Lcfi239:
	.cfi_offset r14, -32
.Lcfi240:
	.cfi_offset r15, -24
	mov	qword ptr [rbp - 64], rdi
	mov	qword ptr [rbp - 72], rsi
	mov	qword ptr [rbp - 80], rdx
	mov	rdx, qword ptr [rbp - 80]
	mov	qword ptr [rbp - 56], rdx
	mov	dword ptr [rbp - 116], 209518252
.LBB63_1:                               
	mov	eax, dword ptr [rbp - 116]
	mov	ecx, eax
	sub	ecx, -1699257731
	mov	dword ptr [rbp - 120], eax 
	mov	dword ptr [rbp - 124], ecx 
	je	.LBB63_13
	jmp	.LBB63_24
.LBB63_24:                              
	mov	eax, dword ptr [rbp - 120] 
	sub	eax, -1573323169
	mov	dword ptr [rbp - 128], eax 
	je	.LBB63_19
	jmp	.LBB63_25
.LBB63_25:                              
	mov	eax, dword ptr [rbp - 120] 
	sub	eax, -1451924855
	mov	dword ptr [rbp - 132], eax 
	je	.LBB63_14
	jmp	.LBB63_26
.LBB63_26:                              
	mov	eax, dword ptr [rbp - 120] 
	sub	eax, -1362884568
	mov	dword ptr [rbp - 136], eax 
	je	.LBB63_22
	jmp	.LBB63_27
.LBB63_27:                              
	mov	eax, dword ptr [rbp - 120] 
	sub	eax, -1070679462
	mov	dword ptr [rbp - 140], eax 
	je	.LBB63_9
	jmp	.LBB63_28
.LBB63_28:                              
	mov	eax, dword ptr [rbp - 120] 
	sub	eax, -457457522
	mov	dword ptr [rbp - 144], eax 
	je	.LBB63_10
	jmp	.LBB63_29
.LBB63_29:                              
	mov	eax, dword ptr [rbp - 120] 
	sub	eax, -449648023
	mov	dword ptr [rbp - 148], eax 
	je	.LBB63_5
	jmp	.LBB63_30
.LBB63_30:                              
	mov	eax, dword ptr [rbp - 120] 
	sub	eax, 100735026
	mov	dword ptr [rbp - 152], eax 
	je	.LBB63_21
	jmp	.LBB63_31
.LBB63_31:                              
	mov	eax, dword ptr [rbp - 120] 
	sub	eax, 209518252
	mov	dword ptr [rbp - 156], eax 
	je	.LBB63_3
	jmp	.LBB63_32
.LBB63_32:                              
	mov	eax, dword ptr [rbp - 120] 
	sub	eax, 253975095
	mov	dword ptr [rbp - 160], eax 
	je	.LBB63_15
	jmp	.LBB63_33
.LBB63_33:                              
	mov	eax, dword ptr [rbp - 120] 
	sub	eax, 333261080
	mov	dword ptr [rbp - 164], eax 
	je	.LBB63_17
	jmp	.LBB63_34
.LBB63_34:                              
	mov	eax, dword ptr [rbp - 120] 
	sub	eax, 827936136
	mov	dword ptr [rbp - 168], eax 
	je	.LBB63_18
	jmp	.LBB63_35
.LBB63_35:                              
	mov	eax, dword ptr [rbp - 120] 
	sub	eax, 987729181
	mov	dword ptr [rbp - 172], eax 
	je	.LBB63_11
	jmp	.LBB63_36
.LBB63_36:                              
	mov	eax, dword ptr [rbp - 120] 
	sub	eax, 1192789126
	mov	dword ptr [rbp - 176], eax 
	je	.LBB63_4
	jmp	.LBB63_37
.LBB63_37:                              
	mov	eax, dword ptr [rbp - 120] 
	sub	eax, 1211993105
	mov	dword ptr [rbp - 180], eax 
	je	.LBB63_16
	jmp	.LBB63_38
.LBB63_38:                              
	mov	eax, dword ptr [rbp - 120] 
	sub	eax, 1729620897
	mov	dword ptr [rbp - 184], eax 
	je	.LBB63_8
	jmp	.LBB63_39
.LBB63_39:                              
	mov	eax, dword ptr [rbp - 120] 
	sub	eax, 1862337490
	mov	dword ptr [rbp - 188], eax 
	je	.LBB63_6
	jmp	.LBB63_40
.LBB63_40:                              
	mov	eax, dword ptr [rbp - 120] 
	sub	eax, 1867898106
	mov	dword ptr [rbp - 192], eax 
	je	.LBB63_20
	jmp	.LBB63_41
.LBB63_41:                              
	mov	eax, dword ptr [rbp - 120] 
	sub	eax, 2031226900
	mov	dword ptr [rbp - 196], eax 
	je	.LBB63_7
	jmp	.LBB63_42
.LBB63_42:                              
	mov	eax, dword ptr [rbp - 120] 
	sub	eax, 2094609090
	mov	dword ptr [rbp - 200], eax 
	je	.LBB63_12
	jmp	.LBB63_2
.LBB63_2:                               
	jmp	.LBB63_23
.LBB63_3:                               
	mov	eax, 2721644127
	mov	ecx, 1192789126
	mov	rdx, qword ptr [rbp - 56]
	cmp	rdx, 0
	cmova	eax, ecx
	mov	dword ptr [rbp - 116], eax
	jmp	.LBB63_23
.LBB63_4:                               
	mov	eax, 1867898106
	mov	ecx, 3845319273
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.124]
	mov	r8d, dword ptr [y.125]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 1
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, -1
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 1
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 116], eax
	jmp	.LBB63_23
.LBB63_5:                               
	mov	rdi, qword ptr [rbp - 64]
	mov	rsi, qword ptr [rbp - 72]
	mov	rdx, qword ptr [rbp - 80]
	call	_ZN5Botan13typecast_copyIjEEvPT_PKhm
	mov	eax, 1867898106
	mov	ecx, 1862337490
	mov	r8b, 1
	xor	r9d, r9d
	movabs	rdx, 6971144161440057607
	xor	r10d, r10d
	mov	esi, r10d
	mov	rdi, qword ptr [rbp - 80]
	mov	r11, qword ptr [rbp - 80]
	and	r11, 3
	sub	rsi, r11
	add	rdi, rsi
	mov	qword ptr [rbp - 88], rdi
	mov	rsi, qword ptr [rbp - 80]
	mov	rdi, qword ptr [rbp - 88]
	sub	rsi, rdx
	sub	rsi, rdi
	add	rsi, rdx
	mov	qword ptr [rbp - 96], rsi
	mov	qword ptr [rbp - 104], 0
	mov	r10d, dword ptr [x.124]
	mov	ebx, dword ptr [y.125]
	sub	r9d, 1
	mov	r14d, r10d
	add	r14d, r9d
	imul	r10d, r14d
	and	r10d, 1
	cmp	r10d, 0
	sete	r15b
	cmp	ebx, 10
	setl	r12b
	mov	r13b, r15b
	xor	r13b, -1
	mov	dl, r12b
	xor	dl, -1
	xor	r8b, 0
	mov	sil, r13b
	and	sil, 0
	and	r15b, r8b
	mov	dil, dl
	and	dil, 0
	and	r12b, r8b
	or	sil, r15b
	or	dil, r12b
	xor	sil, dil
	or	r13b, dl
	xor	r13b, -1
	or	r8b, 0
	and	r13b, r8b
	or	sil, r13b
	test	sil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 116], eax
	jmp	.LBB63_23
.LBB63_6:                               
	mov	dword ptr [rbp - 116], 2031226900
	jmp	.LBB63_23
.LBB63_7:                               
	mov	eax, 100735026
	mov	ecx, 1729620897
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.124]
	mov	r8d, dword ptr [y.125]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 1
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, -1
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 1
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 116], eax
	jmp	.LBB63_23
.LBB63_8:                               
	mov	eax, 100735026
	mov	ecx, 3224287834
	mov	dl, 1
	xor	esi, esi
	mov	rdi, qword ptr [rbp - 104]
	cmp	rdi, qword ptr [rbp - 88]
	setne	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 41], r8b
	mov	r9d, dword ptr [x.124]
	mov	r10d, dword ptr [y.125]
	sub	esi, 1
	mov	r11d, r9d
	add	r11d, esi
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	r8b
	cmp	r10d, 10
	setl	bl
	mov	r14b, r8b
	xor	r14b, -1
	mov	r15b, bl
	xor	r15b, -1
	xor	dl, 0
	mov	r12b, r14b
	and	r12b, 0
	and	r8b, dl
	mov	r13b, r15b
	and	r13b, 0
	and	bl, dl
	or	r12b, r8b
	or	r13b, bl
	xor	r12b, r13b
	or	r14b, r15b
	xor	r14b, -1
	or	dl, 0
	and	r14b, dl
	or	r12b, r14b
	test	r12b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 116], eax
	jmp	.LBB63_23
.LBB63_9:                               
	mov	eax, 2094609090
	mov	ecx, 3837509774
	mov	dl, byte ptr [rbp - 41]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 116], eax
	jmp	.LBB63_23
.LBB63_10:                              
	mov	rax, qword ptr [rbp - 64]
	mov	rcx, qword ptr [rbp - 104]
	shl	rcx, 2
	add	rax, rcx
	mov	rdi, rax
	call	_ZN5Botan7bswap_4IjEEvPT_
	mov	dword ptr [rbp - 116], 987729181
	jmp	.LBB63_23
.LBB63_11:                              
	movabs	rax, 8714584895857618279
	mov	rcx, qword ptr [rbp - 104]
	add	rcx, rax
	add	rcx, 4
	sub	rcx, rax
	mov	qword ptr [rbp - 104], rcx
	mov	dword ptr [rbp - 116], 2031226900
	jmp	.LBB63_23
.LBB63_12:                              
	mov	eax, 2932082728
	mov	ecx, 2595709565
	mov	edx, dword ptr [x.124]
	mov	esi, dword ptr [y.125]
	mov	edi, edx
	sub	edi, -1266916291
	sub	edi, 1
	add	edi, -1266916291
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 116], eax
	jmp	.LBB63_23
.LBB63_13:                              
	mov	eax, 2932082728
	mov	ecx, 2843042441
	mov	dl, 1
	xor	esi, esi
	mov	qword ptr [rbp - 112], 0
	mov	edi, dword ptr [x.124]
	mov	r8d, dword ptr [y.125]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 0
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, 0
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 0
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 116], eax
	jmp	.LBB63_23
.LBB63_14:                              
	mov	dword ptr [rbp - 116], 253975095
	jmp	.LBB63_23
.LBB63_15:                              
	mov	eax, 827936136
	mov	ecx, 1211993105
	mov	rdx, qword ptr [rbp - 112]
	cmp	rdx, qword ptr [rbp - 96]
	cmovne	eax, ecx
	mov	dword ptr [rbp - 116], eax
	jmp	.LBB63_23
.LBB63_16:                              
	movabs	rax, 8596942858864893503
	mov	rcx, qword ptr [rbp - 64]
	mov	rdx, qword ptr [rbp - 88]
	mov	rsi, qword ptr [rbp - 112]
	sub	rdx, rax
	add	rdx, rsi
	add	rdx, rax
	shl	rdx, 2
	add	rcx, rdx
	mov	edi, dword ptr [rcx]
	call	_ZN5Botan13reverse_bytesEj
	movabs	rcx, 5184151197566909056
	mov	rdx, qword ptr [rbp - 64]
	mov	rsi, qword ptr [rbp - 88]
	mov	r8, qword ptr [rbp - 112]
	sub	rsi, rcx
	add	rsi, r8
	add	rsi, rcx
	shl	rsi, 2
	add	rdx, rsi
	mov	dword ptr [rdx], eax
	mov	dword ptr [rbp - 116], 333261080
	jmp	.LBB63_23
.LBB63_17:                              
	xor	eax, eax
	mov	ecx, eax
	mov	rdx, qword ptr [rbp - 112]
	mov	rsi, rcx
	sub	rsi, rdx
	mov	rdx, rcx
	sub	rdx, 1
	add	rsi, rdx
	sub	rcx, rsi
	mov	qword ptr [rbp - 112], rcx
	mov	dword ptr [rbp - 116], 253975095
	jmp	.LBB63_23
.LBB63_18:                              
	mov	dword ptr [rbp - 116], -1573323169
	jmp	.LBB63_23
.LBB63_19:
	add	rsp, 168
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB63_20:                              
	mov	rdi, qword ptr [rbp - 64]
	mov	rsi, qword ptr [rbp - 72]
	mov	rdx, qword ptr [rbp - 80]
	call	_ZN5Botan13typecast_copyIjEEvPT_PKhm
	xor	eax, eax
	mov	edx, eax
	mov	rsi, qword ptr [rbp - 80]
	mov	rdi, qword ptr [rbp - 80]
	and	rdi, 3
	mov	rcx, rdx
	sub	rcx, rdi
	add	rsi, rcx
	mov	qword ptr [rbp - 88], rsi
	mov	rcx, qword ptr [rbp - 80]
	mov	rsi, qword ptr [rbp - 88]
	sub	rdx, rsi
	add	rcx, rdx
	mov	qword ptr [rbp - 96], rcx
	mov	qword ptr [rbp - 104], 0
	mov	dword ptr [rbp - 116], -449648023
	jmp	.LBB63_23
.LBB63_21:                              
	mov	dword ptr [rbp - 116], 1729620897
	jmp	.LBB63_23
.LBB63_22:                              
	mov	qword ptr [rbp - 112], 0
	mov	dword ptr [rbp - 116], -1699257731
.LBB63_23:                              
	jmp	.LBB63_1
.Lfunc_end63:
	.size	_ZN5Botan7load_beIjEEvPT_PKhm, .Lfunc_end63-_ZN5Botan7load_beIjEEvPT_PKhm
	.cfi_endproc

	.section	.text._ZN5Botan2CT6poisonIjEEvPKT_m,"axG",@progbits,_ZN5Botan2CT6poisonIjEEvPKT_m,comdat
	.weak	_ZN5Botan2CT6poisonIjEEvPKT_m 
	.p2align	4, 0x90
	.type	_ZN5Botan2CT6poisonIjEEvPKT_m,@function
_ZN5Botan2CT6poisonIjEEvPKT_m:          

	push	rbp
	mov	rbp, rsp
	push	r14
	push	rbx
	sub	rsp, 48
	xor	eax, eax
	mov	ecx, dword ptr [x.126]
	mov	edx, dword ptr [y.127]
	sub	eax, 1
	mov	r8d, ecx
	add	r8d, eax
	imul	ecx, r8d
	and	ecx, 1
	cmp	ecx, 0
	sete	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 18], r9b
	cmp	edx, 10
	setl	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 17], r9b
	mov	dword ptr [rbp - 24], -769562350
	mov	qword ptr [rbp - 32], rdi 
	mov	qword ptr [rbp - 40], rsi 
.LBB64_1:                               
	mov	eax, dword ptr [rbp - 24]
	mov	ecx, eax
	sub	ecx, -2109692947
	mov	dword ptr [rbp - 44], eax 
	mov	dword ptr [rbp - 48], ecx 
	je	.LBB64_4
	jmp	.LBB64_8
.LBB64_8:                               
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, -1536091355
	mov	dword ptr [rbp - 52], eax 
	je	.LBB64_5
	jmp	.LBB64_9
.LBB64_9:                               
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, -769562350
	mov	dword ptr [rbp - 56], eax 
	je	.LBB64_3
	jmp	.LBB64_10
.LBB64_10:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 890992148
	mov	dword ptr [rbp - 60], eax 
	je	.LBB64_6
	jmp	.LBB64_2
.LBB64_2:                               
	jmp	.LBB64_7
.LBB64_3:                               
	mov	eax, 890992148
	mov	ecx, 2185274349
	mov	dl, 1
	mov	sil, byte ptr [rbp - 18]
	mov	dil, byte ptr [rbp - 17]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 0
	mov	r10b, r8b
	and	r10b, 0
	and	sil, dl
	mov	r11b, r9b
	and	r11b, 0
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 0
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 24], eax
	jmp	.LBB64_7
.LBB64_4:                               
	mov	eax, 890992148
	mov	ecx, 2758875941
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 32] 
	mov	qword ptr [rdx], rdi
	mov	rdx, qword ptr [rbp - 40] 
	mov	qword ptr [rsi], rdx
	mov	r8d, dword ptr [x.126]
	mov	r9d, dword ptr [y.127]
	mov	r10d, r8d
	add	r10d, -324438429
	sub	r10d, 1
	sub	r10d, -324438429
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 24], eax
	jmp	.LBB64_7
.LBB64_5:
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
.LBB64_6:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 32] 
	mov	qword ptr [rax], rdx
	mov	rax, qword ptr [rbp - 40] 
	mov	qword ptr [rcx], rax
	mov	dword ptr [rbp - 24], -2109692947
.LBB64_7:                               
	jmp	.LBB64_1
.Lfunc_end64:
	.size	_ZN5Botan2CT6poisonIjEEvPKT_m, .Lfunc_end64-_ZN5Botan2CT6poisonIjEEvPKT_m

	.section	.text._ZNKSt6vectorIjN5Botan16secure_allocatorIjEEEixEm,"axG",@progbits,_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEEixEm,comdat
	.weak	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEEixEm 
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEEixEm,@function
_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEEixEm: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rsi, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rsi]
	mov	rdi, qword ptr [rbp - 16]
	shl	rdi, 2
	add	rsi, rdi
	mov	rax, rsi
	pop	rbp
	ret
.Lfunc_end65:
	.size	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEEixEm, .Lfunc_end65-_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEEixEm

	.text
	.p2align	4, 0x90         
	.type	_ZN5Botan12_GLOBAL__N_113bit_transposeEPj,@function
_ZN5Botan12_GLOBAL__N_113bit_transposeEPj: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	edx, 1431655765
	mov	eax, 1
	mov	ecx, eax
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	add	rdi, 4
	mov	rsi, qword ptr [rbp - 8]
	call	_ZN5Botan9swap_bitsIjEEvRT_S2_S1_m
	mov	edx, 1431655765
	mov	eax, 1
	mov	ecx, eax
	mov	rsi, qword ptr [rbp - 8]
	add	rsi, 12
	mov	rdi, qword ptr [rbp - 8]
	add	rdi, 8
	mov	qword ptr [rbp - 16], rdi 
	mov	rdi, rsi
	mov	rsi, qword ptr [rbp - 16] 
	call	_ZN5Botan9swap_bitsIjEEvRT_S2_S1_m
	mov	edx, 1431655765
	mov	eax, 1
	mov	ecx, eax
	mov	rsi, qword ptr [rbp - 8]
	add	rsi, 20
	mov	rdi, qword ptr [rbp - 8]
	add	rdi, 16
	mov	qword ptr [rbp - 24], rdi 
	mov	rdi, rsi
	mov	rsi, qword ptr [rbp - 24] 
	call	_ZN5Botan9swap_bitsIjEEvRT_S2_S1_m
	mov	edx, 1431655765
	mov	eax, 1
	mov	ecx, eax
	mov	rsi, qword ptr [rbp - 8]
	add	rsi, 28
	mov	rdi, qword ptr [rbp - 8]
	add	rdi, 24
	mov	qword ptr [rbp - 32], rdi 
	mov	rdi, rsi
	mov	rsi, qword ptr [rbp - 32] 
	call	_ZN5Botan9swap_bitsIjEEvRT_S2_S1_m
	mov	edx, 858993459
	mov	eax, 2
	mov	ecx, eax
	mov	rsi, qword ptr [rbp - 8]
	add	rsi, 8
	mov	rdi, qword ptr [rbp - 8]
	mov	qword ptr [rbp - 40], rdi 
	mov	rdi, rsi
	mov	rsi, qword ptr [rbp - 40] 
	call	_ZN5Botan9swap_bitsIjEEvRT_S2_S1_m
	mov	edx, 858993459
	mov	eax, 2
	mov	ecx, eax
	mov	rsi, qword ptr [rbp - 8]
	add	rsi, 12
	mov	rdi, qword ptr [rbp - 8]
	add	rdi, 4
	mov	qword ptr [rbp - 48], rdi 
	mov	rdi, rsi
	mov	rsi, qword ptr [rbp - 48] 
	call	_ZN5Botan9swap_bitsIjEEvRT_S2_S1_m
	mov	edx, 858993459
	mov	eax, 2
	mov	ecx, eax
	mov	rsi, qword ptr [rbp - 8]
	add	rsi, 24
	mov	rdi, qword ptr [rbp - 8]
	add	rdi, 16
	mov	qword ptr [rbp - 56], rdi 
	mov	rdi, rsi
	mov	rsi, qword ptr [rbp - 56] 
	call	_ZN5Botan9swap_bitsIjEEvRT_S2_S1_m
	mov	edx, 858993459
	mov	eax, 2
	mov	ecx, eax
	mov	rsi, qword ptr [rbp - 8]
	add	rsi, 28
	mov	rdi, qword ptr [rbp - 8]
	add	rdi, 20
	mov	qword ptr [rbp - 64], rdi 
	mov	rdi, rsi
	mov	rsi, qword ptr [rbp - 64] 
	call	_ZN5Botan9swap_bitsIjEEvRT_S2_S1_m
	mov	edx, 252645135
	mov	eax, 4
	mov	ecx, eax
	mov	rsi, qword ptr [rbp - 8]
	add	rsi, 16
	mov	rdi, qword ptr [rbp - 8]
	mov	qword ptr [rbp - 72], rdi 
	mov	rdi, rsi
	mov	rsi, qword ptr [rbp - 72] 
	call	_ZN5Botan9swap_bitsIjEEvRT_S2_S1_m
	mov	edx, 252645135
	mov	eax, 4
	mov	ecx, eax
	mov	rsi, qword ptr [rbp - 8]
	add	rsi, 20
	mov	rdi, qword ptr [rbp - 8]
	add	rdi, 4
	mov	qword ptr [rbp - 80], rdi 
	mov	rdi, rsi
	mov	rsi, qword ptr [rbp - 80] 
	call	_ZN5Botan9swap_bitsIjEEvRT_S2_S1_m
	mov	edx, 252645135
	mov	eax, 4
	mov	ecx, eax
	mov	rsi, qword ptr [rbp - 8]
	add	rsi, 24
	mov	rdi, qword ptr [rbp - 8]
	add	rdi, 8
	mov	qword ptr [rbp - 88], rdi 
	mov	rdi, rsi
	mov	rsi, qword ptr [rbp - 88] 
	call	_ZN5Botan9swap_bitsIjEEvRT_S2_S1_m
	mov	edx, 252645135
	mov	eax, 4
	mov	ecx, eax
	mov	rsi, qword ptr [rbp - 8]
	add	rsi, 28
	mov	rdi, qword ptr [rbp - 8]
	add	rdi, 12
	mov	qword ptr [rbp - 96], rdi 
	mov	rdi, rsi
	mov	rsi, qword ptr [rbp - 96] 
	call	_ZN5Botan9swap_bitsIjEEvRT_S2_S1_m
	add	rsp, 96
	pop	rbp
	ret
.Lfunc_end66:
	.size	_ZN5Botan12_GLOBAL__N_113bit_transposeEPj, .Lfunc_end66-_ZN5Botan12_GLOBAL__N_113bit_transposeEPj

	.p2align	4, 0x90         
	.type	_ZN5Botan12_GLOBAL__N_18AES_SBOXEPj,@function
_ZN5Botan12_GLOBAL__N_18AES_SBOXEPj:    

	push	rbp
	mov	rbp, rsp
	sub	rsp, 368
	mov	eax, 4294967295
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	ecx, dword ptr [rdi]
	mov	dword ptr [rbp - 12], ecx
	mov	rdi, qword ptr [rbp - 8]
	mov	ecx, dword ptr [rdi + 4]
	mov	dword ptr [rbp - 16], ecx
	mov	rdi, qword ptr [rbp - 8]
	mov	ecx, dword ptr [rdi + 8]
	mov	dword ptr [rbp - 20], ecx
	mov	rdi, qword ptr [rbp - 8]
	mov	ecx, dword ptr [rdi + 12]
	mov	dword ptr [rbp - 24], ecx
	mov	rdi, qword ptr [rbp - 8]
	mov	ecx, dword ptr [rdi + 16]
	mov	dword ptr [rbp - 28], ecx
	mov	rdi, qword ptr [rbp - 8]
	mov	ecx, dword ptr [rdi + 20]
	mov	dword ptr [rbp - 32], ecx
	mov	rdi, qword ptr [rbp - 8]
	mov	ecx, dword ptr [rdi + 24]
	mov	dword ptr [rbp - 36], ecx
	mov	rdi, qword ptr [rbp - 8]
	mov	ecx, dword ptr [rdi + 28]
	mov	dword ptr [rbp - 40], ecx
	mov	ecx, dword ptr [rbp - 24]
	mov	edx, dword ptr [rbp - 32]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 856231074
	mov	r8d, eax
	xor	r8d, 856231074
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 856231074
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 44], esi
	mov	ecx, dword ptr [rbp - 12]
	mov	edx, dword ptr [rbp - 36]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 48], r8d
	mov	ecx, dword ptr [rbp - 12]
	mov	edx, dword ptr [rbp - 24]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 3678283319
	mov	r8d, eax
	xor	r8d, 3678283319
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -616683977
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 52], esi
	mov	ecx, dword ptr [rbp - 12]
	mov	edx, dword ptr [rbp - 32]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 2153063486
	mov	r8d, eax
	xor	r8d, 2153063486
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -2141903810
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 56], esi
	mov	ecx, dword ptr [rbp - 16]
	mov	edx, dword ptr [rbp - 20]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 60], r8d
	mov	ecx, dword ptr [rbp - 60]
	mov	edx, dword ptr [rbp - 40]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 3862174798
	mov	r8d, eax
	xor	r8d, 3862174798
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -432792498
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 64], esi
	mov	ecx, dword ptr [rbp - 64]
	mov	edx, dword ptr [rbp - 24]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 722748453
	mov	r8d, eax
	xor	r8d, 722748453
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 722748453
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 68], esi
	mov	ecx, dword ptr [rbp - 48]
	mov	edx, dword ptr [rbp - 44]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 72], r8d
	mov	ecx, dword ptr [rbp - 64]
	mov	edx, dword ptr [rbp - 12]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 2025590812
	mov	r8d, eax
	xor	r8d, 2025590812
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 2025590812
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 76], esi
	mov	ecx, dword ptr [rbp - 64]
	mov	edx, dword ptr [rbp - 36]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 2438616096
	mov	r8d, eax
	xor	r8d, 2438616096
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -1856351200
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 80], esi
	mov	ecx, dword ptr [rbp - 80]
	mov	edx, dword ptr [rbp - 56]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 4035813428
	mov	r8d, eax
	xor	r8d, 4035813428
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -259153868
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 84], esi
	mov	ecx, dword ptr [rbp - 28]
	mov	edx, dword ptr [rbp - 72]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 88], r8d
	mov	ecx, dword ptr [rbp - 88]
	mov	edx, dword ptr [rbp - 32]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 92], r8d
	mov	ecx, dword ptr [rbp - 88]
	mov	edx, dword ptr [rbp - 16]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 1419265794
	mov	r8d, eax
	xor	r8d, 1419265794
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 1419265794
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 96], esi
	mov	ecx, dword ptr [rbp - 92]
	mov	edx, dword ptr [rbp - 40]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 98959160
	mov	r8d, eax
	xor	r8d, 98959160
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 98959160
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 100], esi
	mov	ecx, dword ptr [rbp - 92]
	mov	edx, dword ptr [rbp - 60]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 1431954159
	mov	r8d, eax
	xor	r8d, 1431954159
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 1431954159
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 104], esi
	mov	ecx, dword ptr [rbp - 96]
	mov	edx, dword ptr [rbp - 52]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 1943995574
	mov	r8d, eax
	xor	r8d, 1943995574
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 1943995574
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 108], esi
	mov	ecx, dword ptr [rbp - 40]
	mov	edx, dword ptr [rbp - 108]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 418220908
	mov	r8d, eax
	xor	r8d, 418220908
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 418220908
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 112], esi
	mov	ecx, dword ptr [rbp - 104]
	mov	edx, dword ptr [rbp - 108]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 116], r8d
	mov	ecx, dword ptr [rbp - 104]
	mov	edx, dword ptr [rbp - 56]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 120], r8d
	mov	ecx, dword ptr [rbp - 60]
	mov	edx, dword ptr [rbp - 108]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 124], r8d
	mov	ecx, dword ptr [rbp - 48]
	mov	edx, dword ptr [rbp - 124]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 2085183116
	mov	r8d, eax
	xor	r8d, 2085183116
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 2085183116
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 128], esi
	mov	ecx, dword ptr [rbp - 12]
	mov	edx, dword ptr [rbp - 124]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 132], r8d
	mov	ecx, dword ptr [rbp - 72]
	mov	edx, dword ptr [rbp - 92]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 136], esi
	mov	ecx, dword ptr [rbp - 84]
	mov	edx, dword ptr [rbp - 100]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 140], esi
	mov	ecx, dword ptr [rbp - 140]
	mov	edx, dword ptr [rbp - 136]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 3726533795
	mov	r8d, eax
	xor	r8d, 3726533795
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -568433501
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 144], esi
	mov	ecx, dword ptr [rbp - 68]
	mov	edx, dword ptr [rbp - 40]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 4225792110
	or	ecx, edx
	or	esi, 4225792110
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 148], ecx
	mov	ecx, dword ptr [rbp - 148]
	mov	edx, dword ptr [rbp - 136]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 152], r8d
	mov	ecx, dword ptr [rbp - 48]
	mov	edx, dword ptr [rbp - 124]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 2142795483
	or	ecx, edx
	or	esi, 2142795483
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 156], ecx
	mov	ecx, dword ptr [rbp - 80]
	mov	edx, dword ptr [rbp - 64]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 480117828
	or	ecx, edx
	or	esi, 480117828
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 160], ecx
	mov	ecx, dword ptr [rbp - 160]
	mov	edx, dword ptr [rbp - 156]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 164], r8d
	mov	ecx, dword ptr [rbp - 76]
	mov	edx, dword ptr [rbp - 112]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 2511685299
	or	ecx, edx
	or	esi, 2511685299
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 168], ecx
	mov	ecx, dword ptr [rbp - 168]
	mov	edx, dword ptr [rbp - 156]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 2352957761
	mov	r8d, eax
	xor	r8d, 2352957761
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -1942009535
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 172], esi
	mov	ecx, dword ptr [rbp - 52]
	mov	edx, dword ptr [rbp - 108]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 176], esi
	mov	ecx, dword ptr [rbp - 44]
	mov	edx, dword ptr [rbp - 116]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 180], esi
	mov	ecx, dword ptr [rbp - 180]
	mov	edx, dword ptr [rbp - 176]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 184], r8d
	mov	ecx, dword ptr [rbp - 56]
	mov	edx, dword ptr [rbp - 104]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 2883735854
	or	ecx, edx
	or	esi, 2883735854
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 188], ecx
	mov	ecx, dword ptr [rbp - 188]
	mov	edx, dword ptr [rbp - 176]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 1912071930
	mov	r8d, eax
	xor	r8d, 1912071930
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 1912071930
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 192], esi
	mov	ecx, dword ptr [rbp - 144]
	mov	edx, dword ptr [rbp - 96]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 161715099
	mov	r8d, eax
	xor	r8d, 161715099
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 161715099
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 196], esi
	mov	ecx, dword ptr [rbp - 152]
	mov	edx, dword ptr [rbp - 192]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 200], r8d
	mov	ecx, dword ptr [rbp - 164]
	mov	edx, dword ptr [rbp - 184]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 2901484527
	mov	r8d, eax
	xor	r8d, 2901484527
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -1393482769
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 204], esi
	mov	ecx, dword ptr [rbp - 172]
	mov	edx, dword ptr [rbp - 192]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 208], r8d
	mov	ecx, dword ptr [rbp - 196]
	mov	edx, dword ptr [rbp - 184]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 1321776774
	mov	r8d, eax
	xor	r8d, 1321776774
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 1321776774
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 212], esi
	mov	ecx, dword ptr [rbp - 200]
	mov	edx, dword ptr [rbp - 120]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 1081616864
	mov	r8d, eax
	xor	r8d, 1081616864
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 1081616864
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 216], esi
	mov	ecx, dword ptr [rbp - 204]
	mov	edx, dword ptr [rbp - 128]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 220], r8d
	mov	ecx, dword ptr [rbp - 208]
	mov	edx, dword ptr [rbp - 132]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 3156208280
	mov	r8d, eax
	xor	r8d, 3156208280
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -1138759016
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 224], esi
	mov	ecx, dword ptr [rbp - 212]
	mov	edx, dword ptr [rbp - 216]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 3046373083
	mov	r8d, eax
	xor	r8d, 3046373083
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -1248594213
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 228], esi
	mov	ecx, dword ptr [rbp - 212]
	mov	edx, dword ptr [rbp - 220]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 648270348
	or	ecx, edx
	or	esi, 648270348
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 232], ecx
	mov	ecx, dword ptr [rbp - 224]
	mov	edx, dword ptr [rbp - 232]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 236], r8d
	mov	ecx, dword ptr [rbp - 228]
	mov	edx, dword ptr [rbp - 236]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 240], esi
	mov	ecx, dword ptr [rbp - 240]
	mov	edx, dword ptr [rbp - 216]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 244], r8d
	mov	ecx, dword ptr [rbp - 220]
	mov	edx, dword ptr [rbp - 224]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 2838197959
	mov	r8d, eax
	xor	r8d, 2838197959
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -1456769337
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 248], esi
	mov	ecx, dword ptr [rbp - 216]
	mov	edx, dword ptr [rbp - 232]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 252], r8d
	mov	ecx, dword ptr [rbp - 252]
	mov	edx, dword ptr [rbp - 248]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 256], esi
	mov	ecx, dword ptr [rbp - 256]
	mov	edx, dword ptr [rbp - 224]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 260], r8d
	mov	ecx, dword ptr [rbp - 220]
	mov	edx, dword ptr [rbp - 260]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 264], r8d
	mov	ecx, dword ptr [rbp - 236]
	mov	edx, dword ptr [rbp - 260]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 268], r8d
	mov	ecx, dword ptr [rbp - 224]
	mov	edx, dword ptr [rbp - 268]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 1860341227
	or	ecx, edx
	or	esi, 1860341227
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 272], ecx
	mov	ecx, dword ptr [rbp - 272]
	mov	edx, dword ptr [rbp - 264]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 276], r8d
	mov	ecx, dword ptr [rbp - 236]
	mov	edx, dword ptr [rbp - 272]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 280], r8d
	mov	ecx, dword ptr [rbp - 244]
	mov	edx, dword ptr [rbp - 280]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 284], esi
	mov	ecx, dword ptr [rbp - 228]
	mov	edx, dword ptr [rbp - 284]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 288], r8d
	mov	ecx, dword ptr [rbp - 288]
	mov	edx, dword ptr [rbp - 276]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 1531147386
	mov	r8d, eax
	xor	r8d, 1531147386
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 1531147386
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 292], esi
	mov	ecx, dword ptr [rbp - 244]
	mov	edx, dword ptr [rbp - 260]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 296], r8d
	mov	ecx, dword ptr [rbp - 244]
	mov	edx, dword ptr [rbp - 288]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 300], r8d
	mov	ecx, dword ptr [rbp - 260]
	mov	edx, dword ptr [rbp - 276]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 304], r8d
	mov	ecx, dword ptr [rbp - 296]
	mov	edx, dword ptr [rbp - 292]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 2931299546
	mov	r8d, eax
	xor	r8d, 2931299546
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -1363667750
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 308], esi
	mov	ecx, dword ptr [rbp - 304]
	mov	edx, dword ptr [rbp - 92]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 3011651840
	or	ecx, edx
	or	esi, 3011651840
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 312], ecx
	mov	ecx, dword ptr [rbp - 276]
	mov	edx, dword ptr [rbp - 100]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 2525894690
	or	ecx, edx
	or	esi, 2525894690
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 316], ecx
	mov	ecx, dword ptr [rbp - 260]
	mov	edx, dword ptr [rbp - 40]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 320], esi
	mov	ecx, dword ptr [rbp - 300]
	mov	edx, dword ptr [rbp - 124]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 324], esi
	mov	ecx, dword ptr [rbp - 288]
	mov	edx, dword ptr [rbp - 64]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 1473911463
	or	ecx, edx
	or	esi, 1473911463
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 328], ecx
	mov	ecx, dword ptr [rbp - 244]
	mov	edx, dword ptr [rbp - 112]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 2057067286
	or	ecx, edx
	or	esi, 2057067286
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 332], ecx
	mov	ecx, dword ptr [rbp - 296]
	mov	edx, dword ptr [rbp - 108]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 2905628325
	or	ecx, edx
	or	esi, 2905628325
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 336], ecx
	mov	ecx, dword ptr [rbp - 308]
	mov	edx, dword ptr [rbp - 116]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 850009092
	or	ecx, edx
	or	esi, 850009092
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 340], ecx
	mov	ecx, dword ptr [rbp - 292]
	mov	edx, dword ptr [rbp - 104]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 725107198
	or	ecx, edx
	or	esi, 725107198
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 344], ecx
	mov	ecx, dword ptr [rbp - 304]
	mov	edx, dword ptr [rbp - 72]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 1292572042
	or	ecx, edx
	or	esi, 1292572042
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 348], ecx
	mov	ecx, dword ptr [rbp - 276]
	mov	edx, dword ptr [rbp - 84]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 352], esi
	mov	ecx, dword ptr [rbp - 260]
	mov	edx, dword ptr [rbp - 68]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 356], esi
	mov	ecx, dword ptr [rbp - 300]
	mov	edx, dword ptr [rbp - 48]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 360], esi
	mov	ecx, dword ptr [rbp - 288]
	mov	edx, dword ptr [rbp - 80]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 364], esi
	mov	ecx, dword ptr [rbp - 244]
	mov	edx, dword ptr [rbp - 76]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 319522833
	or	ecx, edx
	or	esi, 319522833
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 368], ecx
	mov	ecx, dword ptr [rbp - 296]
	mov	edx, dword ptr [rbp - 52]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 2377500715
	or	ecx, edx
	or	esi, 2377500715
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 372], ecx
	mov	ecx, dword ptr [rbp - 308]
	mov	edx, dword ptr [rbp - 44]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 376], esi
	mov	ecx, dword ptr [rbp - 292]
	mov	edx, dword ptr [rbp - 56]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 459346674
	or	ecx, edx
	or	esi, 459346674
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 380], ecx
	mov	ecx, dword ptr [rbp - 372]
	mov	edx, dword ptr [rbp - 376]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 384], r8d
	mov	ecx, dword ptr [rbp - 352]
	mov	edx, dword ptr [rbp - 384]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 931967489
	mov	r8d, eax
	xor	r8d, 931967489
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 931967489
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 388], esi
	mov	ecx, dword ptr [rbp - 348]
	mov	edx, dword ptr [rbp - 388]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 4104168505
	mov	r8d, eax
	xor	r8d, 4104168505
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -190798791
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 392], esi
	mov	ecx, dword ptr [rbp - 312]
	mov	edx, dword ptr [rbp - 320]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 3947345094
	mov	r8d, eax
	xor	r8d, 3947345094
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -347622202
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 396], esi
	mov	ecx, dword ptr [rbp - 316]
	mov	edx, dword ptr [rbp - 312]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 3338326172
	mov	r8d, eax
	xor	r8d, 3338326172
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -956641124
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 400], esi
	mov	ecx, dword ptr [rbp - 324]
	mov	edx, dword ptr [rbp - 328]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 404], r8d
	mov	ecx, dword ptr [rbp - 360]
	mov	edx, dword ptr [rbp - 396]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 3460967832
	mov	r8d, eax
	xor	r8d, 3460967832
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -833999464
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 408], esi
	mov	ecx, dword ptr [rbp - 340]
	mov	edx, dword ptr [rbp - 404]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 4067181691
	mov	r8d, eax
	xor	r8d, 4067181691
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -227785605
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 412], esi
	mov	ecx, dword ptr [rbp - 344]
	mov	edx, dword ptr [rbp - 408]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 1456139385
	mov	r8d, eax
	xor	r8d, 1456139385
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 1456139385
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 416], esi
	mov	ecx, dword ptr [rbp - 412]
	mov	edx, dword ptr [rbp - 416]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 420], r8d
	mov	ecx, dword ptr [rbp - 404]
	mov	edx, dword ptr [rbp - 400]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 424], r8d
	mov	ecx, dword ptr [rbp - 324]
	mov	edx, dword ptr [rbp - 332]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 1338971363
	mov	r8d, eax
	xor	r8d, 1338971363
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 1338971363
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 428], esi
	mov	ecx, dword ptr [rbp - 364]
	mov	edx, dword ptr [rbp - 384]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 432], r8d
	mov	ecx, dword ptr [rbp - 396]
	mov	edx, dword ptr [rbp - 428]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 436], r8d
	mov	ecx, dword ptr [rbp - 392]
	mov	edx, dword ptr [rbp - 424]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 440], r8d
	mov	ecx, dword ptr [rbp - 336]
	mov	edx, dword ptr [rbp - 412]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 444], r8d
	mov	ecx, dword ptr [rbp - 368]
	mov	edx, dword ptr [rbp - 420]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 448], r8d
	mov	ecx, dword ptr [rbp - 432]
	mov	edx, ecx
	xor	edx, -1
	and	edx, 4294967295
	mov	esi, eax
	xor	esi, 4294967295
	and	ecx, esi
	or	edx, ecx
	mov	ecx, dword ptr [rbp - 436]
	mov	esi, edx
	xor	esi, -1
	and	esi, 140874311
	mov	r8d, eax
	xor	r8d, 140874311
	and	edx, r8d
	mov	r9d, ecx
	xor	r9d, -1
	and	r9d, 140874311
	and	ecx, r8d
	or	esi, edx
	or	r9d, ecx
	xor	esi, r9d
	mov	dword ptr [rbp - 452], esi
	mov	ecx, dword ptr [rbp - 360]
	mov	edx, dword ptr [rbp - 452]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 3347174702
	mov	r8d, eax
	xor	r8d, 3347174702
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -947792594
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 456], esi
	mov	ecx, dword ptr [rbp - 372]
	mov	edx, dword ptr [rbp - 444]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 460], r8d
	mov	ecx, dword ptr [rbp - 388]
	mov	edx, dword ptr [rbp - 356]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 464], r8d
	mov	ecx, dword ptr [rbp - 392]
	mov	edx, dword ptr [rbp - 444]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 468], r8d
	mov	ecx, dword ptr [rbp - 420]
	mov	edx, dword ptr [rbp - 452]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 1042743314
	mov	r8d, eax
	xor	r8d, 1042743314
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 1042743314
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 472], esi
	mov	ecx, dword ptr [rbp - 436]
	mov	edx, dword ptr [rbp - 440]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 476], r8d
	mov	ecx, dword ptr [rbp - 440]
	mov	edx, dword ptr [rbp - 444]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	ecx, r8d
	xor	ecx, -1
	and	ecx, 4294967295
	mov	edx, eax
	xor	edx, 4294967295
	and	r8d, edx
	or	ecx, r8d
	mov	dword ptr [rbp - 480], ecx
	mov	ecx, dword ptr [rbp - 448]
	mov	edx, dword ptr [rbp - 460]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 2574613354
	mov	r8d, eax
	xor	r8d, 2574613354
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -1720353942
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 484], esi
	mov	ecx, dword ptr [rbp - 484]
	mov	edx, dword ptr [rbp - 380]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	ecx, r8d
	xor	ecx, -1
	and	ecx, 2091986383
	mov	edx, eax
	xor	edx, 2091986383
	and	r8d, edx
	mov	esi, eax
	xor	esi, 4294967295
	and	esi, 2091986383
	and	edx, 4294967295
	or	ecx, r8d
	or	esi, edx
	xor	ecx, esi
	mov	dword ptr [rbp - 488], ecx
	mov	ecx, dword ptr [rbp - 464]
	mov	edx, dword ptr [rbp - 448]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 1844481862
	xor	eax, 1844481862
	and	ecx, eax
	mov	r8d, edx
	xor	r8d, -1
	and	r8d, 1844481862
	and	edx, eax
	or	esi, ecx
	or	r8d, edx
	xor	esi, r8d
	mov	dword ptr [rbp - 492], esi
	mov	eax, dword ptr [rbp - 468]
	mov	rdi, qword ptr [rbp - 8]
	mov	dword ptr [rdi], eax
	mov	eax, dword ptr [rbp - 480]
	mov	rdi, qword ptr [rbp - 8]
	mov	dword ptr [rdi + 4], eax
	mov	eax, dword ptr [rbp - 488]
	mov	rdi, qword ptr [rbp - 8]
	mov	dword ptr [rdi + 8], eax
	mov	eax, dword ptr [rbp - 440]
	mov	rdi, qword ptr [rbp - 8]
	mov	dword ptr [rdi + 12], eax
	mov	eax, dword ptr [rbp - 476]
	mov	rdi, qword ptr [rbp - 8]
	mov	dword ptr [rdi + 16], eax
	mov	eax, dword ptr [rbp - 492]
	mov	rdi, qword ptr [rbp - 8]
	mov	dword ptr [rdi + 20], eax
	mov	eax, dword ptr [rbp - 472]
	mov	rdi, qword ptr [rbp - 8]
	mov	dword ptr [rdi + 24], eax
	mov	eax, dword ptr [rbp - 456]
	mov	rdi, qword ptr [rbp - 8]
	mov	dword ptr [rdi + 28], eax
	add	rsp, 368
	pop	rbp
	ret
.Lfunc_end67:
	.size	_ZN5Botan12_GLOBAL__N_18AES_SBOXEPj, .Lfunc_end67-_ZN5Botan12_GLOBAL__N_18AES_SBOXEPj

	.p2align	4, 0x90         
	.type	_ZN5Botan12_GLOBAL__N_110shift_rowsEPj,@function
_ZN5Botan12_GLOBAL__N_110shift_rowsEPj: 
	.cfi_startproc

	push	rbp
.Lcfi241:
	.cfi_def_cfa_offset 16
.Lcfi242:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi243:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 72
.Lcfi244:
	.cfi_offset rbx, -56
.Lcfi245:
	.cfi_offset r12, -48
.Lcfi246:
	.cfi_offset r13, -40
.Lcfi247:
	.cfi_offset r14, -32
.Lcfi248:
	.cfi_offset r15, -24
	mov	qword ptr [rbp - 48], rdi
	mov	qword ptr [rbp - 56], 0
	mov	dword ptr [rbp - 68], 572254983
.LBB68_1:                               
	mov	eax, dword ptr [rbp - 68]
	mov	ecx, eax
	sub	ecx, -1762462395
	mov	dword ptr [rbp - 72], eax 
	mov	dword ptr [rbp - 76], ecx 
	je	.LBB68_11
	jmp	.LBB68_14
.LBB68_14:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, -864913949
	mov	dword ptr [rbp - 80], eax 
	je	.LBB68_9
	jmp	.LBB68_15
.LBB68_15:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, -108099484
	mov	dword ptr [rbp - 84], eax 
	je	.LBB68_5
	jmp	.LBB68_16
.LBB68_16:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, -27872996
	mov	dword ptr [rbp - 88], eax 
	je	.LBB68_4
	jmp	.LBB68_17
.LBB68_17:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, 8951591
	mov	dword ptr [rbp - 92], eax 
	je	.LBB68_6
	jmp	.LBB68_18
.LBB68_18:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, 572254983
	mov	dword ptr [rbp - 96], eax 
	je	.LBB68_3
	jmp	.LBB68_19
.LBB68_19:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, 947239383
	mov	dword ptr [rbp - 100], eax 
	je	.LBB68_7
	jmp	.LBB68_20
.LBB68_20:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, 975318671
	mov	dword ptr [rbp - 104], eax 
	je	.LBB68_12
	jmp	.LBB68_21
.LBB68_21:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, 1538883755
	mov	dword ptr [rbp - 108], eax 
	je	.LBB68_10
	jmp	.LBB68_22
.LBB68_22:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, 1553794990
	mov	dword ptr [rbp - 112], eax 
	je	.LBB68_8
	jmp	.LBB68_2
.LBB68_2:                               
	jmp	.LBB68_13
.LBB68_3:                               
	mov	eax, 1553794990
	mov	ecx, 4267094300
	cmp	qword ptr [rbp - 56], 8
	cmovne	eax, ecx
	mov	dword ptr [rbp - 68], eax
	jmp	.LBB68_13
.LBB68_4:                               
	mov	eax, 2532504901
	mov	ecx, 4186867812
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.134]
	mov	r8d, dword ptr [y.135]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 0
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, 0
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 0
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 68], eax
	jmp	.LBB68_13
.LBB68_5:                               
	movabs	rsi, 9626297317864209
	mov	eax, 2
	mov	edx, eax
	movabs	rcx, 675715009194629162
	mov	rdi, qword ptr [rbp - 48]
	mov	r8, qword ptr [rbp - 56]
	mov	eax, dword ptr [rdi + 4*r8]
	mov	edi, eax
	shl	rdi, 32
	mov	r8, qword ptr [rbp - 48]
	mov	r9, qword ptr [rbp - 56]
	sub	r9, rcx
	add	r9, 1
	add	r9, rcx
	shl	r9, 2
	add	r8, r9
	mov	eax, dword ptr [r8]
	mov	ecx, eax
	mov	r8, rdi
	and	r8, rcx
	xor	rdi, rcx
	or	r8, rdi
	mov	qword ptr [rbp - 64], r8
	mov	rdi, qword ptr [rbp - 64]
	call	_ZN5Botan16bit_permute_stepImEET_S1_S1_m
	movabs	rsi, 23925738098196565
	mov	r10d, 1
	mov	edx, r10d
	mov	qword ptr [rbp - 64], rax
	mov	rdi, qword ptr [rbp - 64]
	call	_ZN5Botan16bit_permute_stepImEET_S1_S1_m
	mov	r10d, 2532504901
	mov	r11d, 8951591
	mov	bl, 1
	xor	r14d, r14d
	mov	ecx, r14d
	mov	qword ptr [rbp - 64], rax
	mov	rax, qword ptr [rbp - 64]
	shr	rax, 32
	mov	r14d, eax
	mov	rax, qword ptr [rbp - 48]
	mov	rdx, qword ptr [rbp - 56]
	mov	dword ptr [rax + 4*rdx], r14d
	mov	rax, qword ptr [rbp - 64]
	mov	r14d, eax
	mov	rax, qword ptr [rbp - 48]
	mov	rdx, qword ptr [rbp - 56]
	sub	rcx, 1
	sub	rdx, rcx
	mov	dword ptr [rax + 4*rdx], r14d
	mov	r14d, dword ptr [x.134]
	mov	r15d, dword ptr [y.135]
	mov	r12d, r14d
	sub	r12d, -1936681794
	sub	r12d, 1
	add	r12d, -1936681794
	imul	r14d, r12d
	and	r14d, 1
	cmp	r14d, 0
	sete	r13b
	cmp	r15d, 10
	setl	al
	mov	cl, r13b
	xor	cl, -1
	mov	dl, al
	xor	dl, -1
	xor	bl, 0
	mov	sil, cl
	and	sil, 0
	and	r13b, bl
	mov	dil, dl
	and	dil, 0
	and	al, bl
	or	sil, r13b
	or	dil, al
	xor	sil, dil
	or	cl, dl
	xor	cl, -1
	or	bl, 0
	and	cl, bl
	or	sil, cl
	test	sil, 1
	cmovne	r10d, r11d
	mov	dword ptr [rbp - 68], r10d
	jmp	.LBB68_13
.LBB68_6:                               
	mov	dword ptr [rbp - 68], 947239383
	jmp	.LBB68_13
.LBB68_7:                               
	xor	eax, eax
	mov	ecx, eax
	mov	rdx, qword ptr [rbp - 56]
	sub	rcx, 2
	sub	rdx, rcx
	mov	qword ptr [rbp - 56], rdx
	mov	dword ptr [rbp - 68], 572254983
	jmp	.LBB68_13
.LBB68_8:                               
	mov	eax, 975318671
	mov	ecx, 3430053347
	mov	edx, dword ptr [x.134]
	mov	esi, dword ptr [y.135]
	mov	edi, edx
	sub	edi, -1639518328
	sub	edi, 1
	add	edi, -1639518328
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 68], eax
	jmp	.LBB68_13
.LBB68_9:                               
	mov	eax, 975318671
	mov	ecx, 1538883755
	mov	edx, dword ptr [x.134]
	mov	esi, dword ptr [y.135]
	mov	edi, edx
	sub	edi, -582513596
	sub	edi, 1
	add	edi, -582513596
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 68], eax
	jmp	.LBB68_13
.LBB68_10:
	add	rsp, 72
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB68_11:                              
	movabs	rsi, 9626297317864209
	mov	eax, 2
	mov	edx, eax
	movabs	rcx, -1138862139147858587
	mov	rdi, -1
	movabs	r8, -1689889647126642999
	mov	r9, qword ptr [rbp - 48]
	mov	r10, qword ptr [rbp - 56]
	mov	eax, dword ptr [r9 + 4*r10]
	mov	r9d, eax
	shl	r9, 32
	mov	r10, qword ptr [rbp - 48]
	mov	r11, qword ptr [rbp - 56]
	add	r11, r8
	add	r11, 1
	sub	r11, r8
	mov	eax, dword ptr [r10 + 4*r11]
	mov	r8d, eax
	mov	r10, r9
	xor	r10, -1
	mov	r11, r8
	xor	r11, -1
	xor	rdi, rcx
	mov	rbx, r10
	and	rbx, rcx
	and	r9, rdi
	mov	r14, r11
	and	r14, rcx
	and	r8, rdi
	or	rbx, r9
	or	r14, r8
	xor	rbx, r14
	or	r10, r11
	xor	r10, -1
	or	rdi, rcx
	and	r10, rdi
	or	rbx, r10
	mov	qword ptr [rbp - 64], rbx
	mov	rdi, qword ptr [rbp - 64]
	call	_ZN5Botan16bit_permute_stepImEET_S1_S1_m
	movabs	rsi, 23925738098196565
	mov	r15d, 1
	mov	edx, r15d
	mov	qword ptr [rbp - 64], rax
	mov	rdi, qword ptr [rbp - 64]
	call	_ZN5Botan16bit_permute_stepImEET_S1_S1_m
	movabs	rcx, -7175671353465537076
	mov	qword ptr [rbp - 64], rax
	mov	rax, qword ptr [rbp - 64]
	shr	rax, 32
	mov	r15d, eax
	mov	rax, qword ptr [rbp - 48]
	mov	rdx, qword ptr [rbp - 56]
	mov	dword ptr [rax + 4*rdx], r15d
	mov	rax, qword ptr [rbp - 64]
	mov	r15d, eax
	mov	rax, qword ptr [rbp - 48]
	mov	rdx, qword ptr [rbp - 56]
	sub	rdx, rcx
	add	rdx, 1
	add	rdx, rcx
	shl	rdx, 2
	add	rax, rdx
	mov	dword ptr [rax], r15d
	mov	dword ptr [rbp - 68], -108099484
	jmp	.LBB68_13
.LBB68_12:                              
	mov	dword ptr [rbp - 68], -864913949
.LBB68_13:                              
	jmp	.LBB68_1
.Lfunc_end68:
	.size	_ZN5Botan12_GLOBAL__N_110shift_rowsEPj, .Lfunc_end68-_ZN5Botan12_GLOBAL__N_110shift_rowsEPj
	.cfi_endproc

	.p2align	4, 0x90         
	.type	_ZN5Botan12_GLOBAL__N_111mix_columnsEPj,@function
_ZN5Botan12_GLOBAL__N_111mix_columnsEPj: 
	.cfi_startproc

	push	rbp
.Lcfi249:
	.cfi_def_cfa_offset 16
.Lcfi250:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi251:
	.cfi_def_cfa_register rbp
	sub	rsp, 96
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	eax, dword ptr [rdi + 4]
	mov	dword ptr [rbp - 48], eax
	mov	rdi, qword ptr [rbp - 8]
	mov	eax, dword ptr [rdi + 8]
	mov	dword ptr [rbp - 44], eax
	mov	rdi, qword ptr [rbp - 8]
	mov	eax, dword ptr [rdi + 12]
	mov	dword ptr [rbp - 40], eax
	mov	rdi, qword ptr [rbp - 8]
	mov	eax, dword ptr [rdi + 16]
	mov	rdi, qword ptr [rbp - 8]
	mov	ecx, dword ptr [rdi]
	mov	edx, eax
	xor	edx, -1
	mov	esi, ecx
	and	esi, edx
	xor	ecx, -1
	and	eax, ecx
	or	esi, eax
	mov	dword ptr [rbp - 36], esi
	mov	rdi, qword ptr [rbp - 8]
	mov	eax, dword ptr [rdi + 20]
	mov	rdi, qword ptr [rbp - 8]
	mov	ecx, dword ptr [rdi]
	mov	edx, eax
	xor	edx, -1
	mov	esi, ecx
	and	esi, edx
	xor	ecx, -1
	and	eax, ecx
	or	esi, eax
	mov	dword ptr [rbp - 32], esi
	mov	rdi, qword ptr [rbp - 8]
	mov	eax, dword ptr [rdi + 24]
	mov	dword ptr [rbp - 28], eax
	mov	rdi, qword ptr [rbp - 8]
	mov	eax, dword ptr [rdi + 28]
	mov	rdi, qword ptr [rbp - 8]
	mov	ecx, dword ptr [rdi]
	mov	edx, eax
	xor	edx, -1
	mov	esi, ecx
	and	esi, edx
	xor	ecx, -1
	and	eax, ecx
	or	esi, eax
	mov	dword ptr [rbp - 24], esi
	mov	rdi, qword ptr [rbp - 8]
	mov	eax, dword ptr [rdi]
	mov	dword ptr [rbp - 20], eax
	mov	qword ptr [rbp - 56], 0
	mov	dword ptr [rbp - 64], 1780318055
.LBB69_1:                               
	mov	eax, dword ptr [rbp - 64]
	mov	ecx, eax
	sub	ecx, -1972199185
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB69_5
	jmp	.LBB69_8
.LBB69_8:                               
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -795757662
	mov	dword ptr [rbp - 76], eax 
	je	.LBB69_6
	jmp	.LBB69_9
.LBB69_9:                               
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 905639930
	mov	dword ptr [rbp - 80], eax 
	je	.LBB69_4
	jmp	.LBB69_10
.LBB69_10:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1780318055
	mov	dword ptr [rbp - 84], eax 
	je	.LBB69_3
	jmp	.LBB69_2
.LBB69_2:                               
	jmp	.LBB69_7
.LBB69_3:                               
	mov	eax, 3499209634
	mov	ecx, 905639930
	cmp	qword ptr [rbp - 56], 8
	cmovne	eax, ecx
	mov	dword ptr [rbp - 64], eax
	jmp	.LBB69_7
.LBB69_4:                               
	mov	rax, qword ptr [rbp - 8]
	mov	rcx, qword ptr [rbp - 56]
	mov	edx, dword ptr [rax + 4*rcx]
	mov	rax, qword ptr [rbp - 56]
	mov	esi, dword ptr [rbp + 4*rax - 48]
	mov	edi, edx
	xor	edi, -1
	mov	r8d, esi
	and	r8d, edi
	xor	esi, -1
	and	edx, esi
	or	r8d, edx
	mov	dword ptr [rbp - 60], r8d
	mov	rax, qword ptr [rbp - 56]
	mov	edx, dword ptr [rbp + 4*rax - 48]
	mov	rax, qword ptr [rbp - 8]
	mov	rcx, qword ptr [rbp - 56]
	mov	edi, dword ptr [rax + 4*rcx]
	mov	dword ptr [rbp - 88], edx 
	call	_ZN5Botan4rotrILm8EjEET0_S1_
	mov	edx, dword ptr [rbp - 88] 
	xor	edx, -1
	mov	esi, eax
	and	esi, edx
	xor	eax, -1
	mov	edx, dword ptr [rbp - 88] 
	and	edx, eax
	or	esi, edx
	mov	rcx, qword ptr [rbp - 8]
	mov	r9, qword ptr [rbp - 56]
	mov	edi, dword ptr [rcx + 4*r9]
	mov	dword ptr [rbp - 92], esi 
	call	_ZN5Botan4rotrILm16EjEET0_S1_
	mov	edx, dword ptr [rbp - 92] 
	xor	edx, -1
	mov	esi, eax
	and	esi, edx
	xor	eax, -1
	mov	edx, dword ptr [rbp - 92] 
	and	edx, eax
	or	esi, edx
	mov	edi, dword ptr [rbp - 60]
	mov	dword ptr [rbp - 96], esi 
	call	_ZN5Botan4rotrILm24EjEET0_S1_
	mov	edx, 4294967295
	mov	esi, dword ptr [rbp - 96] 
	xor	esi, -1
	and	esi, 3408506659
	xor	edx, 3408506659
	mov	edi, dword ptr [rbp - 96] 
	and	edi, edx
	mov	r8d, eax
	xor	r8d, -1
	and	r8d, -886460637
	and	eax, edx
	or	esi, edi
	or	r8d, eax
	xor	esi, r8d
	mov	rcx, qword ptr [rbp - 8]
	mov	r9, qword ptr [rbp - 56]
	mov	dword ptr [rcx + 4*r9], esi
	mov	dword ptr [rbp - 64], -1972199185
	jmp	.LBB69_7
.LBB69_5:                               
	xor	eax, eax
	mov	ecx, eax
	mov	rdx, qword ptr [rbp - 56]
	mov	rsi, rcx
	sub	rsi, rdx
	mov	rdx, rcx
	sub	rdx, 1
	add	rsi, rdx
	sub	rcx, rsi
	mov	qword ptr [rbp - 56], rcx
	mov	dword ptr [rbp - 64], 1780318055
	jmp	.LBB69_7
.LBB69_6:
	add	rsp, 96
	pop	rbp
	ret
.LBB69_7:                               
	jmp	.LBB69_1
.Lfunc_end69:
	.size	_ZN5Botan12_GLOBAL__N_111mix_columnsEPj, .Lfunc_end69-_ZN5Botan12_GLOBAL__N_111mix_columnsEPj
	.cfi_endproc

	.section	.text._ZN5Botan2CT8unpoisonIjEEvPKT_m,"axG",@progbits,_ZN5Botan2CT8unpoisonIjEEvPKT_m,comdat
	.weak	_ZN5Botan2CT8unpoisonIjEEvPKT_m 
	.p2align	4, 0x90
	.type	_ZN5Botan2CT8unpoisonIjEEvPKT_m,@function
_ZN5Botan2CT8unpoisonIjEEvPKT_m:        

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	pop	rbp
	ret
.Lfunc_end70:
	.size	_ZN5Botan2CT8unpoisonIjEEvPKT_m, .Lfunc_end70-_ZN5Botan2CT8unpoisonIjEEvPKT_m

	.section	.text._ZN5Botan11copy_out_beIjEEvPhmPKT_,"axG",@progbits,_ZN5Botan11copy_out_beIjEEvPhmPKT_,comdat
	.weak	_ZN5Botan11copy_out_beIjEEvPhmPKT_ 
	.p2align	4, 0x90
	.type	_ZN5Botan11copy_out_beIjEEvPhmPKT_,@function
_ZN5Botan11copy_out_beIjEEvPhmPKT_:     
	.cfi_startproc

	push	rbp
.Lcfi252:
	.cfi_def_cfa_offset 16
.Lcfi253:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi254:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 104
.Lcfi255:
	.cfi_offset rbx, -56
.Lcfi256:
	.cfi_offset r12, -48
.Lcfi257:
	.cfi_offset r13, -40
.Lcfi258:
	.cfi_offset r14, -32
.Lcfi259:
	.cfi_offset r15, -24
	mov	qword ptr [rbp - 48], rdi
	mov	qword ptr [rbp - 56], rsi
	mov	qword ptr [rbp - 64], rdx
	mov	dword ptr [rbp - 76], 783176197
.LBB71_1:                               
	mov	eax, dword ptr [rbp - 76]
	mov	ecx, eax
	sub	ecx, -1762858962
	mov	dword ptr [rbp - 80], eax 
	mov	dword ptr [rbp - 84], ecx 
	je	.LBB71_10
	jmp	.LBB71_17
.LBB71_17:                              
	mov	eax, dword ptr [rbp - 80] 
	sub	eax, -1727272853
	mov	dword ptr [rbp - 88], eax 
	je	.LBB71_6
	jmp	.LBB71_18
.LBB71_18:                              
	mov	eax, dword ptr [rbp - 80] 
	sub	eax, -1082929644
	mov	dword ptr [rbp - 92], eax 
	je	.LBB71_9
	jmp	.LBB71_19
.LBB71_19:                              
	mov	eax, dword ptr [rbp - 80] 
	sub	eax, -494113577
	mov	dword ptr [rbp - 96], eax 
	je	.LBB71_13
	jmp	.LBB71_20
.LBB71_20:                              
	mov	eax, dword ptr [rbp - 80] 
	sub	eax, -436483058
	mov	dword ptr [rbp - 100], eax 
	je	.LBB71_5
	jmp	.LBB71_21
.LBB71_21:                              
	mov	eax, dword ptr [rbp - 80] 
	sub	eax, -287164079
	mov	dword ptr [rbp - 104], eax 
	je	.LBB71_15
	jmp	.LBB71_22
.LBB71_22:                              
	mov	eax, dword ptr [rbp - 80] 
	sub	eax, 34345193
	mov	dword ptr [rbp - 108], eax 
	je	.LBB71_11
	jmp	.LBB71_23
.LBB71_23:                              
	mov	eax, dword ptr [rbp - 80] 
	sub	eax, 783176197
	mov	dword ptr [rbp - 112], eax 
	je	.LBB71_3
	jmp	.LBB71_24
.LBB71_24:                              
	mov	eax, dword ptr [rbp - 80] 
	sub	eax, 933635989
	mov	dword ptr [rbp - 116], eax 
	je	.LBB71_12
	jmp	.LBB71_25
.LBB71_25:                              
	mov	eax, dword ptr [rbp - 80] 
	sub	eax, 1231265845
	mov	dword ptr [rbp - 120], eax 
	je	.LBB71_7
	jmp	.LBB71_26
.LBB71_26:                              
	mov	eax, dword ptr [rbp - 80] 
	sub	eax, 1389094864
	mov	dword ptr [rbp - 124], eax 
	je	.LBB71_4
	jmp	.LBB71_27
.LBB71_27:                              
	mov	eax, dword ptr [rbp - 80] 
	sub	eax, 2035048875
	mov	dword ptr [rbp - 128], eax 
	je	.LBB71_14
	jmp	.LBB71_28
.LBB71_28:                              
	mov	eax, dword ptr [rbp - 80] 
	sub	eax, 2119733635
	mov	dword ptr [rbp - 132], eax 
	je	.LBB71_8
	jmp	.LBB71_2
.LBB71_2:                               
	jmp	.LBB71_16
.LBB71_3:                               
	mov	eax, 1231265845
	mov	ecx, 1389094864
	cmp	qword ptr [rbp - 56], 4
	cmovae	eax, ecx
	mov	dword ptr [rbp - 76], eax
	jmp	.LBB71_16
.LBB71_4:                               
	mov	eax, 2035048875
	mov	ecx, 3858484238
	mov	dl, 1
	mov	esi, dword ptr [x.140]
	mov	edi, dword ptr [y.141]
	mov	r8d, esi
	add	r8d, -1983280980
	sub	r8d, 1
	sub	r8d, -1983280980
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 1
	mov	r14b, r11b
	and	r14b, -1
	and	r9b, dl
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 1
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 76], eax
	jmp	.LBB71_16
.LBB71_5:                               
	mov	rax, qword ptr [rbp - 64]
	mov	edi, dword ptr [rax]
	mov	rsi, qword ptr [rbp - 48]
	call	_ZN5Botan8store_beEjPh
	mov	edi, 2035048875
	mov	ecx, 2567694443
	xor	edx, edx
	mov	eax, edx
	mov	rsi, qword ptr [rbp - 48]
	add	rsi, 4
	mov	qword ptr [rbp - 48], rsi
	mov	rsi, qword ptr [rbp - 56]
	sub	rax, 4
	add	rsi, rax
	mov	qword ptr [rbp - 56], rsi
	mov	rax, qword ptr [rbp - 64]
	add	rax, 4
	mov	qword ptr [rbp - 64], rax
	mov	edx, dword ptr [x.140]
	mov	r8d, dword ptr [y.141]
	mov	r9d, edx
	add	r9d, -328274613
	sub	r9d, 1
	sub	r9d, -328274613
	imul	edx, r9d
	and	edx, 1
	cmp	edx, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	and	bl, r11b
	xor	r10b, r11b
	or	bl, r10b
	test	bl, 1
	cmovne	edi, ecx
	mov	dword ptr [rbp - 76], edi
	jmp	.LBB71_16
.LBB71_6:                               
	mov	dword ptr [rbp - 76], 783176197
	jmp	.LBB71_16
.LBB71_7:                               
	mov	qword ptr [rbp - 72], 0
	mov	dword ptr [rbp - 76], 2119733635
	jmp	.LBB71_16
.LBB71_8:                               
	mov	eax, 3800853719
	mov	ecx, 3212037652
	mov	rdx, qword ptr [rbp - 72]
	cmp	rdx, qword ptr [rbp - 56]
	cmovne	eax, ecx
	mov	dword ptr [rbp - 76], eax
	jmp	.LBB71_16
.LBB71_9:                               
	mov	eax, 4007803217
	mov	ecx, 2532108334
	mov	dl, 1
	mov	esi, dword ptr [x.140]
	mov	edi, dword ptr [y.141]
	mov	r8d, esi
	sub	r8d, -198995303
	sub	r8d, 1
	add	r8d, -198995303
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 1
	mov	r14b, r11b
	and	r14b, -1
	and	r9b, dl
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 1
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 76], eax
	jmp	.LBB71_16
.LBB71_10:                              
	mov	rax, qword ptr [rbp - 72]
	and	rax, 7
	mov	rcx, qword ptr [rbp - 64]
	mov	esi, dword ptr [rcx]
	mov	rdi, rax
	call	_ZN5Botan8get_byteIjEEhmT_
	mov	esi, 4007803217
	mov	edx, 34345193
	mov	r8b, 1
	mov	rcx, qword ptr [rbp - 48]
	mov	rdi, qword ptr [rbp - 72]
	mov	byte ptr [rcx + rdi], al
	mov	r9d, dword ptr [x.140]
	mov	r10d, dword ptr [y.141]
	mov	r11d, r9d
	sub	r11d, -600337864
	sub	r11d, 1
	add	r11d, -600337864
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	al
	cmp	r10d, 10
	setl	bl
	mov	r14b, al
	xor	r14b, -1
	mov	r15b, bl
	xor	r15b, -1
	xor	r8b, 1
	mov	r12b, r14b
	and	r12b, -1
	and	al, r8b
	mov	r13b, r15b
	and	r13b, -1
	and	bl, r8b
	or	r12b, al
	or	r13b, bl
	xor	r12b, r13b
	or	r14b, r15b
	xor	r14b, -1
	or	r8b, 1
	and	r14b, r8b
	or	r12b, r14b
	test	r12b, 1
	cmovne	esi, edx
	mov	dword ptr [rbp - 76], esi
	jmp	.LBB71_16
.LBB71_11:                              
	mov	dword ptr [rbp - 76], 933635989
	jmp	.LBB71_16
.LBB71_12:                              
	movabs	rax, -446376988177091149
	mov	rcx, qword ptr [rbp - 72]
	add	rcx, rax
	add	rcx, 1
	sub	rcx, rax
	mov	qword ptr [rbp - 72], rcx
	mov	dword ptr [rbp - 76], 2119733635
	jmp	.LBB71_16
.LBB71_13:
	add	rsp, 104
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB71_14:                              
	mov	rax, qword ptr [rbp - 64]
	mov	edi, dword ptr [rax]
	mov	rsi, qword ptr [rbp - 48]
	call	_ZN5Botan8store_beEjPh
	xor	edi, edi
	mov	eax, edi
	mov	rsi, qword ptr [rbp - 48]
	add	rsi, 4
	mov	qword ptr [rbp - 48], rsi
	mov	rsi, qword ptr [rbp - 56]
	sub	rax, 4
	add	rsi, rax
	mov	qword ptr [rbp - 56], rsi
	mov	rax, qword ptr [rbp - 64]
	add	rax, 4
	mov	qword ptr [rbp - 64], rax
	mov	dword ptr [rbp - 76], -436483058
	jmp	.LBB71_16
.LBB71_15:                              
	mov	rax, qword ptr [rbp - 72]
	and	rax, 7
	mov	rcx, qword ptr [rbp - 64]
	mov	esi, dword ptr [rcx]
	mov	rdi, rax
	call	_ZN5Botan8get_byteIjEEhmT_
	mov	rcx, qword ptr [rbp - 48]
	mov	rdi, qword ptr [rbp - 72]
	mov	byte ptr [rcx + rdi], al
	mov	dword ptr [rbp - 76], -1762858962
.LBB71_16:                              
	jmp	.LBB71_1
.Lfunc_end71:
	.size	_ZN5Botan11copy_out_beIjEEvPhmPKT_, .Lfunc_end71-_ZN5Botan11copy_out_beIjEEvPhmPKT_
	.cfi_endproc

	.section	.text._ZN5Botan9swap_bitsIjEEvRT_S2_S1_m,"axG",@progbits,_ZN5Botan9swap_bitsIjEEvRT_S2_S1_m,comdat
	.weak	_ZN5Botan9swap_bitsIjEEvRT_S2_S1_m 
	.p2align	4, 0x90
	.type	_ZN5Botan9swap_bitsIjEEvRT_S2_S1_m,@function
_ZN5Botan9swap_bitsIjEEvRT_S2_S1_m:     

	push	rbp
	mov	rbp, rsp
	mov	eax, 4294967295
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	dword ptr [rbp - 20], edx
	mov	qword ptr [rbp - 32], rcx
	mov	rcx, qword ptr [rbp - 8]
	mov	edx, dword ptr [rcx]
	mov	rcx, qword ptr [rbp - 32]
	mov	r8d, ecx
	mov	ecx, r8d

	shr	edx, cl
	mov	rsi, qword ptr [rbp - 16]
	mov	r8d, dword ptr [rsi]
	mov	r9d, edx
	xor	r9d, -1
	mov	r10d, r8d
	and	r10d, r9d
	xor	r8d, -1
	and	edx, r8d
	or	r10d, edx
	mov	edx, dword ptr [rbp - 20]
	xor	r10d, -1
	xor	edx, -1
	mov	r8d, eax
	xor	r8d, 3464936358
	or	r10d, edx
	or	r8d, 3464936358
	xor	r10d, -1
	and	r10d, r8d
	mov	dword ptr [rbp - 36], r10d
	mov	edx, dword ptr [rbp - 36]
	mov	rsi, qword ptr [rbp - 32]
	mov	r8d, esi
	mov	ecx, r8d

	shl	edx, cl
	mov	rsi, qword ptr [rbp - 8]
	mov	r8d, dword ptr [rsi]
	mov	r9d, r8d
	xor	r9d, -1
	mov	r10d, edx
	and	r10d, r9d
	xor	edx, -1
	and	r8d, edx
	or	r10d, r8d
	mov	dword ptr [rsi], r10d
	mov	edx, dword ptr [rbp - 36]
	mov	rsi, qword ptr [rbp - 16]
	mov	r8d, dword ptr [rsi]
	mov	r9d, r8d
	xor	r9d, -1
	and	r9d, 263687576
	xor	eax, 263687576
	and	r8d, eax
	mov	r10d, edx
	xor	r10d, -1
	and	r10d, 263687576
	and	edx, eax
	or	r9d, r8d
	or	r10d, edx
	xor	r9d, r10d
	mov	dword ptr [rsi], r9d
	pop	rbp
	ret
.Lfunc_end72:
	.size	_ZN5Botan9swap_bitsIjEEvRT_S2_S1_m, .Lfunc_end72-_ZN5Botan9swap_bitsIjEEvRT_S2_S1_m

	.section	.text._ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE11_M_data_ptrIjEEPT_S6_,"axG",@progbits,_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE11_M_data_ptrIjEEPT_S6_,comdat
	.weak	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE11_M_data_ptrIjEEPT_S6_ 
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE11_M_data_ptrIjEEPT_S6_,@function
_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE11_M_data_ptrIjEEPT_S6_: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 56
	xor	eax, eax
	mov	ecx, dword ptr [x.144]
	mov	edx, dword ptr [y.145]
	sub	eax, 1
	mov	r8d, ecx
	add	r8d, eax
	imul	ecx, r8d
	and	ecx, 1
	cmp	ecx, 0
	sete	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 34], r9b
	cmp	edx, 10
	setl	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 33], r9b
	mov	dword ptr [rbp - 40], 699988435
	mov	qword ptr [rbp - 48], rdi 
	mov	qword ptr [rbp - 56], rsi 
.LBB73_1:                               
	mov	eax, dword ptr [rbp - 40]
	mov	ecx, eax
	sub	ecx, -2120754284
	mov	dword ptr [rbp - 60], eax 
	mov	dword ptr [rbp - 64], ecx 
	je	.LBB73_5
	jmp	.LBB73_8
.LBB73_8:                               
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, -62605175
	mov	dword ptr [rbp - 68], eax 
	je	.LBB73_6
	jmp	.LBB73_9
.LBB73_9:                               
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 51436135
	mov	dword ptr [rbp - 72], eax 
	je	.LBB73_4
	jmp	.LBB73_10
.LBB73_10:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 699988435
	mov	dword ptr [rbp - 76], eax 
	je	.LBB73_3
	jmp	.LBB73_2
.LBB73_2:                               
	jmp	.LBB73_7
.LBB73_3:                               
	mov	eax, 4232362121
	mov	ecx, 51436135
	mov	dl, 1
	mov	sil, byte ptr [rbp - 34]
	mov	dil, byte ptr [rbp - 33]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 0
	mov	r10b, r8b
	and	r10b, 0
	and	sil, dl
	mov	r11b, r9b
	and	r11b, 0
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 0
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 40], eax
	jmp	.LBB73_7
.LBB73_4:                               
	mov	eax, 4232362121
	mov	ecx, 2174213012
	xor	edx, edx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	r8, qword ptr [rbp - 48] 
	mov	qword ptr [rsi], r8
	mov	rsi, qword ptr [rbp - 56] 
	mov	qword ptr [rdi], rsi
	mov	rdi, qword ptr [rdi]
	mov	qword ptr [rbp - 32], rdi
	mov	r9d, dword ptr [x.144]
	mov	r10d, dword ptr [y.145]
	sub	edx, 1
	mov	r11d, r9d
	add	r11d, edx
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	bl
	cmp	r10d, 10
	setl	r14b
	mov	r15b, bl
	and	r15b, r14b
	xor	bl, r14b
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 40], eax
	jmp	.LBB73_7
.LBB73_5:
	mov	rax, qword ptr [rbp - 32]
	lea	rsp, [rbp - 24]
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB73_6:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 48] 
	mov	qword ptr [rax], rdx
	mov	rax, qword ptr [rbp - 56] 
	mov	qword ptr [rcx], rax
	mov	dword ptr [rbp - 40], 51436135
.LBB73_7:                               
	jmp	.LBB73_1
.Lfunc_end73:
	.size	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE11_M_data_ptrIjEEPT_S6_, .Lfunc_end73-_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE11_M_data_ptrIjEEPT_S6_

	.section	.text._ZN5Botan13typecast_copyIjEEvPT_PKhm,"axG",@progbits,_ZN5Botan13typecast_copyIjEEvPT_PKhm,comdat
	.weak	_ZN5Botan13typecast_copyIjEEvPT_PKhm 
	.p2align	4, 0x90
	.type	_ZN5Botan13typecast_copyIjEEvPT_PKhm,@function
_ZN5Botan13typecast_copyIjEEvPT_PKhm:   

	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	rdx, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rbp - 16]
	mov	rdi, qword ptr [rbp - 24]
	shl	rdi, 2
	mov	qword ptr [rbp - 32], rdi 
	mov	rdi, rdx
	mov	rdx, qword ptr [rbp - 32] 
	call	memcpy
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end74:
	.size	_ZN5Botan13typecast_copyIjEEvPT_PKhm, .Lfunc_end74-_ZN5Botan13typecast_copyIjEEvPT_PKhm

	.section	.text._ZN5Botan7bswap_4IjEEvPT_,"axG",@progbits,_ZN5Botan7bswap_4IjEEvPT_,comdat
	.weak	_ZN5Botan7bswap_4IjEEvPT_ 
	.p2align	4, 0x90
	.type	_ZN5Botan7bswap_4IjEEvPT_,@function
_ZN5Botan7bswap_4IjEEvPT_:              
	.cfi_startproc

	push	rbp
.Lcfi260:
	.cfi_def_cfa_offset 16
.Lcfi261:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi262:
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	edi, dword ptr [rdi]
	call	_ZN5Botan13reverse_bytesEj
	mov	rcx, qword ptr [rbp - 8]
	mov	dword ptr [rcx], eax
	mov	rcx, qword ptr [rbp - 8]
	mov	edi, dword ptr [rcx + 4]
	call	_ZN5Botan13reverse_bytesEj
	mov	rcx, qword ptr [rbp - 8]
	mov	dword ptr [rcx + 4], eax
	mov	rcx, qword ptr [rbp - 8]
	mov	edi, dword ptr [rcx + 8]
	call	_ZN5Botan13reverse_bytesEj
	mov	rcx, qword ptr [rbp - 8]
	mov	dword ptr [rcx + 8], eax
	mov	rcx, qword ptr [rbp - 8]
	mov	edi, dword ptr [rcx + 12]
	call	_ZN5Botan13reverse_bytesEj
	mov	rcx, qword ptr [rbp - 8]
	mov	dword ptr [rcx + 12], eax
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end75:
	.size	_ZN5Botan7bswap_4IjEEvPT_, .Lfunc_end75-_ZN5Botan7bswap_4IjEEvPT_
	.cfi_endproc

	.section	.text._ZN5Botan13reverse_bytesEj,"axG",@progbits,_ZN5Botan13reverse_bytesEj,comdat
	.weak	_ZN5Botan13reverse_bytesEj 
	.p2align	4, 0x90
	.type	_ZN5Botan13reverse_bytesEj,@function
_ZN5Botan13reverse_bytesEj:             

	push	rbp
	mov	rbp, rsp
	mov	dword ptr [rbp - 4], edi
	mov	edi, dword ptr [rbp - 4]
	bswap	edi
	mov	eax, edi
	pop	rbp
	ret
.Lfunc_end76:
	.size	_ZN5Botan13reverse_bytesEj, .Lfunc_end76-_ZN5Botan13reverse_bytesEj

	.section	.text._ZN5Botan16bit_permute_stepImEET_S1_S1_m,"axG",@progbits,_ZN5Botan16bit_permute_stepImEET_S1_S1_m,comdat
	.weak	_ZN5Botan16bit_permute_stepImEET_S1_S1_m 
	.p2align	4, 0x90
	.type	_ZN5Botan16bit_permute_stepImEET_S1_S1_m,@function
_ZN5Botan16bit_permute_stepImEET_S1_S1_m: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 88
	xor	eax, eax
	mov	ecx, dword ptr [x.152]
	mov	r8d, dword ptr [y.153]
	sub	eax, 1
	mov	r9d, ecx
	add	r9d, eax
	imul	ecx, r9d
	and	ecx, 1
	cmp	ecx, 0
	sete	r10b
	and	r10b, 1
	mov	byte ptr [rbp - 50], r10b
	cmp	r8d, 10
	setl	r10b
	and	r10b, 1
	mov	byte ptr [rbp - 49], r10b
	mov	dword ptr [rbp - 56], 975179942
	mov	qword ptr [rbp - 64], rsi 
	mov	qword ptr [rbp - 72], rdi 
	mov	qword ptr [rbp - 80], rdx 
.LBB77_1:                               
	mov	eax, dword ptr [rbp - 56]
	mov	ecx, eax
	sub	ecx, -1711360135
	mov	dword ptr [rbp - 84], eax 
	mov	dword ptr [rbp - 88], ecx 
	je	.LBB77_5
	jmp	.LBB77_8
.LBB77_8:                               
	mov	eax, dword ptr [rbp - 84] 
	sub	eax, 571007136
	mov	dword ptr [rbp - 92], eax 
	je	.LBB77_4
	jmp	.LBB77_9
.LBB77_9:                               
	mov	eax, dword ptr [rbp - 84] 
	sub	eax, 975179942
	mov	dword ptr [rbp - 96], eax 
	je	.LBB77_3
	jmp	.LBB77_10
.LBB77_10:                              
	mov	eax, dword ptr [rbp - 84] 
	sub	eax, 1132313743
	mov	dword ptr [rbp - 100], eax 
	je	.LBB77_6
	jmp	.LBB77_2
.LBB77_2:                               
	jmp	.LBB77_7
.LBB77_3:                               
	mov	eax, 1132313743
	mov	ecx, 571007136
	mov	dl, 1
	mov	sil, byte ptr [rbp - 50]
	mov	dil, byte ptr [rbp - 49]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB77_7
.LBB77_4:                               
	mov	eax, 1132313743
	mov	ecx, 2583607161
	movabs	rdx, -6069541873029514575
	mov	rsi, -1
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	r8, rsp
	add	r8, -16
	mov	rsp, r8
	mov	r9, rsp
	add	r9, -16
	mov	rsp, r9
	mov	r10, rsp
	add	r10, -16
	mov	rsp, r10
	mov	r11, qword ptr [rbp - 72] 
	mov	qword ptr [rdi], r11
	mov	rbx, qword ptr [rbp - 64] 
	mov	qword ptr [r8], rbx
	mov	r14, qword ptr [rbp - 80] 
	mov	qword ptr [r9], r14
	mov	r15, qword ptr [rdi]
	mov	r12, qword ptr [r9]
	mov	dword ptr [rbp - 104], ecx 
	mov	rcx, r12

	shr	r15, cl
	mov	r12, qword ptr [rdi]
	mov	r13, r15
	xor	r13, -1
	mov	rcx, r12
	and	rcx, r13
	xor	r12, -1
	and	r15, r12
	or	rcx, r15
	mov	r8, qword ptr [r8]
	xor	r8, -1
	mov	r15, rcx
	xor	r15, r8
	and	r15, rcx
	mov	qword ptr [r10], r15
	mov	rcx, qword ptr [rdi]
	mov	rdi, qword ptr [r10]
	mov	r8, rcx
	xor	r8, -1
	and	r8, rdx
	xor	rsi, rdx
	and	rcx, rsi
	mov	r15, rdi
	xor	r15, -1
	and	r15, rdx
	and	rdi, rsi
	or	r8, rcx
	or	r15, rdi
	xor	r8, r15
	mov	rcx, qword ptr [r10]
	mov	rdx, qword ptr [r9]
	mov	qword ptr [rbp - 112], rcx 
	mov	rcx, rdx

	mov	rdx, qword ptr [rbp - 112] 
	shl	rdx, cl
	mov	rsi, r8
	xor	rsi, -1
	mov	rdi, rdx
	and	rdi, rsi
	xor	rdx, -1
	and	r8, rdx
	or	rdi, r8
	mov	qword ptr [rbp - 48], rdi
	mov	ecx, dword ptr [x.152]
	mov	esi, dword ptr [y.153]
	mov	edi, ecx
	add	edi, -26344588
	sub	edi, 1
	sub	edi, -26344588
	imul	ecx, edi
	and	ecx, 1
	cmp	ecx, 0
	sete	cl
	cmp	esi, 10
	setl	dl
	mov	sil, cl
	and	sil, dl
	xor	cl, dl
	or	sil, cl
	test	sil, 1
	mov	edi, dword ptr [rbp - 104] 
	cmovne	eax, edi
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB77_7
.LBB77_5:
	mov	rax, qword ptr [rbp - 48]
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB77_6:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 72] 
	mov	qword ptr [rax], rdi
	mov	r8, qword ptr [rbp - 64] 
	mov	qword ptr [rcx], r8
	mov	r9, qword ptr [rbp - 80] 
	mov	qword ptr [rdx], r9
	mov	r10, qword ptr [rax]
	mov	rdx, qword ptr [rdx]
	mov	qword ptr [rbp - 120], rcx 
	mov	rcx, rdx

	shr	r10, cl
	mov	rax, qword ptr [rax]
	mov	rdx, r10
	xor	rdx, -1
	mov	r11, rax
	and	r11, rdx
	xor	rax, -1
	and	r10, rax
	or	r11, r10
	mov	rax, qword ptr [rbp - 120] 
	mov	rdx, qword ptr [rax]
	xor	rdx, -1
	mov	r10, r11
	xor	r10, rdx
	and	r10, r11
	mov	qword ptr [rsi], r10
	mov	dword ptr [rbp - 56], 571007136
.LBB77_7:                               
	jmp	.LBB77_1
.Lfunc_end77:
	.size	_ZN5Botan16bit_permute_stepImEET_S1_S1_m, .Lfunc_end77-_ZN5Botan16bit_permute_stepImEET_S1_S1_m

	.section	.text._ZN5Botan4rotrILm8EjEET0_S1_,"axG",@progbits,_ZN5Botan4rotrILm8EjEET0_S1_,comdat
	.weak	_ZN5Botan4rotrILm8EjEET0_S1_ 
	.p2align	4, 0x90
	.type	_ZN5Botan4rotrILm8EjEET0_S1_,@function
_ZN5Botan4rotrILm8EjEET0_S1_:           

	push	rbp
	mov	rbp, rsp
	mov	dword ptr [rbp - 4], edi
	mov	edi, dword ptr [rbp - 4]
	shr	edi, 8
	mov	eax, dword ptr [rbp - 4]
	shl	eax, 24
	mov	ecx, edi
	and	ecx, eax
	xor	edi, eax
	or	ecx, edi
	mov	eax, ecx
	pop	rbp
	ret
.Lfunc_end78:
	.size	_ZN5Botan4rotrILm8EjEET0_S1_, .Lfunc_end78-_ZN5Botan4rotrILm8EjEET0_S1_

	.section	.text._ZN5Botan4rotrILm16EjEET0_S1_,"axG",@progbits,_ZN5Botan4rotrILm16EjEET0_S1_,comdat
	.weak	_ZN5Botan4rotrILm16EjEET0_S1_ 
	.p2align	4, 0x90
	.type	_ZN5Botan4rotrILm16EjEET0_S1_,@function
_ZN5Botan4rotrILm16EjEET0_S1_:          

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 40
	mov	eax, dword ptr [x.156]
	mov	ecx, dword ptr [y.157]
	mov	edx, eax
	sub	edx, -1813742879
	sub	edx, 1
	add	edx, -1813742879
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 46], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 45], sil
	mov	dword ptr [rbp - 52], 1881380454
	mov	dword ptr [rbp - 56], edi 
.LBB79_1:                               
	mov	eax, dword ptr [rbp - 52]
	mov	ecx, eax
	sub	ecx, -1397123236
	mov	dword ptr [rbp - 60], eax 
	mov	dword ptr [rbp - 64], ecx 
	je	.LBB79_5
	jmp	.LBB79_8
.LBB79_8:                               
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, -644570944
	mov	dword ptr [rbp - 68], eax 
	je	.LBB79_4
	jmp	.LBB79_9
.LBB79_9:                               
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 1282419427
	mov	dword ptr [rbp - 72], eax 
	je	.LBB79_6
	jmp	.LBB79_10
.LBB79_10:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 1881380454
	mov	dword ptr [rbp - 76], eax 
	je	.LBB79_3
	jmp	.LBB79_2
.LBB79_2:                               
	jmp	.LBB79_7
.LBB79_3:                               
	mov	eax, 1282419427
	mov	ecx, 3650396352
	mov	dl, 1
	mov	sil, byte ptr [rbp - 46]
	mov	dil, byte ptr [rbp - 45]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 0
	mov	r10b, r8b
	and	r10b, 0
	and	sil, dl
	mov	r11b, r9b
	and	r11b, 0
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 0
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 52], eax
	jmp	.LBB79_7
.LBB79_4:                               
	mov	eax, 1282419427
	mov	ecx, 2897844060
	mov	dl, 1
	xor	esi, esi
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	r8d, dword ptr [rbp - 56] 
	mov	dword ptr [rdi], r8d
	mov	r9d, dword ptr [rdi]
	shr	r9d, 16
	mov	r10d, dword ptr [rdi]
	shl	r10d, 16
	mov	r11d, r9d
	and	r11d, r10d
	xor	r9d, r10d
	or	r11d, r9d
	mov	dword ptr [rbp - 44], r11d
	mov	r9d, dword ptr [x.156]
	mov	r10d, dword ptr [y.157]
	sub	esi, 1
	mov	r11d, r9d
	add	r11d, esi
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	bl
	cmp	r10d, 10
	setl	r14b
	mov	r15b, bl
	xor	r15b, -1
	mov	r12b, r14b
	xor	r12b, -1
	xor	dl, 0
	mov	r13b, r15b
	and	r13b, 0
	and	bl, dl
	mov	sil, r12b
	and	sil, 0
	and	r14b, dl
	or	r13b, bl
	or	sil, r14b
	xor	r13b, sil
	or	r15b, r12b
	xor	r15b, -1
	or	dl, 0
	and	r15b, dl
	or	r13b, r15b
	test	r13b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 52], eax
	jmp	.LBB79_7
.LBB79_5:
	mov	eax, dword ptr [rbp - 44]
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB79_6:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	ecx, dword ptr [rbp - 56] 
	mov	dword ptr [rax], ecx
	mov	dword ptr [rbp - 52], -644570944
.LBB79_7:                               
	jmp	.LBB79_1
.Lfunc_end79:
	.size	_ZN5Botan4rotrILm16EjEET0_S1_, .Lfunc_end79-_ZN5Botan4rotrILm16EjEET0_S1_

	.section	.text._ZN5Botan4rotrILm24EjEET0_S1_,"axG",@progbits,_ZN5Botan4rotrILm24EjEET0_S1_,comdat
	.weak	_ZN5Botan4rotrILm24EjEET0_S1_ 
	.p2align	4, 0x90
	.type	_ZN5Botan4rotrILm24EjEET0_S1_,@function
_ZN5Botan4rotrILm24EjEET0_S1_:          

	push	rbp
	mov	rbp, rsp
	mov	eax, 4294967295
	mov	dword ptr [rbp - 4], edi
	mov	edi, dword ptr [rbp - 4]
	shr	edi, 24
	mov	ecx, dword ptr [rbp - 4]
	shl	ecx, 8
	mov	edx, edi
	xor	edx, -1
	mov	esi, ecx
	xor	esi, -1
	xor	eax, 1386459797
	mov	r8d, edx
	and	r8d, 1386459797
	and	edi, eax
	mov	r9d, esi
	and	r9d, 1386459797
	and	ecx, eax
	or	r8d, edi
	or	r9d, ecx
	xor	r8d, r9d
	or	edx, esi
	xor	edx, -1
	or	eax, 1386459797
	and	edx, eax
	or	r8d, edx
	mov	eax, r8d
	pop	rbp
	ret
.Lfunc_end80:
	.size	_ZN5Botan4rotrILm24EjEET0_S1_, .Lfunc_end80-_ZN5Botan4rotrILm24EjEET0_S1_

	.section	.text._ZN5Botan8store_beEjPh,"axG",@progbits,_ZN5Botan8store_beEjPh,comdat
	.weak	_ZN5Botan8store_beEjPh  
	.p2align	4, 0x90
	.type	_ZN5Botan8store_beEjPh,@function
_ZN5Botan8store_beEjPh:                 
	.cfi_startproc

	push	rbp
.Lcfi263:
	.cfi_def_cfa_offset 16
.Lcfi264:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi265:
	.cfi_def_cfa_register rbp
	sub	rsp, 32
	mov	dword ptr [rbp - 4], edi
	mov	qword ptr [rbp - 16], rsi
	mov	edi, dword ptr [rbp - 4]
	call	_ZN5Botan13reverse_bytesEj
	mov	dword ptr [rbp - 20], eax
	mov	rdi, qword ptr [rbp - 16]
	mov	esi, dword ptr [rbp - 20]
	call	_ZN5Botan13typecast_copyIjEEvPhT_
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end81:
	.size	_ZN5Botan8store_beEjPh, .Lfunc_end81-_ZN5Botan8store_beEjPh
	.cfi_endproc

	.section	.text._ZN5Botan8get_byteIjEEhmT_,"axG",@progbits,_ZN5Botan8get_byteIjEEhmT_,comdat
	.weak	_ZN5Botan8get_byteIjEEhmT_ 
	.p2align	4, 0x90
	.type	_ZN5Botan8get_byteIjEEhmT_,@function
_ZN5Botan8get_byteIjEEhmT_:             

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 56
	mov	eax, dword ptr [x.162]
	mov	ecx, dword ptr [y.163]
	mov	edx, eax
	sub	edx, 1295769264
	sub	edx, 1
	add	edx, 1295769264
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 43], r8b
	cmp	ecx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 42], r8b
	mov	dword ptr [rbp - 48], -1959572840
	mov	qword ptr [rbp - 56], rdi 
	mov	dword ptr [rbp - 60], esi 
.LBB82_1:                               
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -1959572840
	mov	dword ptr [rbp - 64], eax 
	mov	dword ptr [rbp - 68], ecx 
	je	.LBB82_3
	jmp	.LBB82_8
.LBB82_8:                               
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, -1883676889
	mov	dword ptr [rbp - 72], eax 
	je	.LBB82_6
	jmp	.LBB82_9
.LBB82_9:                               
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, -235466764
	mov	dword ptr [rbp - 76], eax 
	je	.LBB82_4
	jmp	.LBB82_10
.LBB82_10:                              
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, 884396029
	mov	dword ptr [rbp - 80], eax 
	je	.LBB82_5
	jmp	.LBB82_2
.LBB82_2:                               
	jmp	.LBB82_7
.LBB82_3:                               
	mov	eax, 2411290407
	mov	ecx, 4059500532
	mov	dl, byte ptr [rbp - 43]
	mov	sil, byte ptr [rbp - 42]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB82_7
.LBB82_4:                               
	mov	eax, 2411290407
	mov	ecx, 884396029
	movabs	rdx, 7878794726547685423
	mov	rsi, -1
	movabs	rdi, -8787468367961143333
	mov	r8, rsp
	add	r8, -16
	mov	rsp, r8
	mov	r9, rsp
	add	r9, -16
	mov	rsp, r9
	mov	r10, qword ptr [rbp - 56] 
	mov	qword ptr [r8], r10
	mov	r11d, dword ptr [rbp - 60] 
	mov	dword ptr [r9], r11d
	mov	ebx, dword ptr [r9]
	mov	r8, qword ptr [r8]
	mov	r9, r8
	xor	r9, -1
	and	r9, rdi
	mov	r14, rsi
	xor	r14, rdi
	and	r8, r14
	mov	r15, rsi
	xor	r15, -1
	and	r15, rdi
	and	r14, -1
	or	r9, r8
	or	r15, r14
	xor	r9, r15
	xor	r9, -1
	mov	rdi, rsi
	xor	rdi, 3
	xor	rsi, rdx
	or	r9, rdi
	or	rsi, rdx
	xor	r9, -1
	and	r9, rsi
	shl	r9, 3
	mov	r12d, r9d
	mov	dword ptr [rbp - 84], ecx 
	mov	ecx, r12d

	shr	ebx, cl
	mov	cl, bl
	mov	byte ptr [rbp - 41], cl
	mov	ebx, dword ptr [x.162]
	mov	r12d, dword ptr [y.163]
	mov	r13d, ebx
	add	r13d, 1915847944
	sub	r13d, 1
	sub	r13d, 1915847944
	imul	ebx, r13d
	and	ebx, 1
	cmp	ebx, 0
	sete	cl
	cmp	r12d, 10
	setl	dl
	mov	sil, cl
	and	sil, dl
	xor	cl, dl
	or	sil, cl
	test	sil, 1
	mov	ebx, dword ptr [rbp - 84] 
	cmovne	eax, ebx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB82_7
.LBB82_5:
	mov	al, byte ptr [rbp - 41]
	movzx	eax, al
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB82_6:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rdx
	mov	esi, dword ptr [rbp - 60] 
	mov	dword ptr [rcx], esi
	mov	dword ptr [rbp - 48], -235466764
.LBB82_7:                               
	jmp	.LBB82_1
.Lfunc_end82:
	.size	_ZN5Botan8get_byteIjEEhmT_, .Lfunc_end82-_ZN5Botan8get_byteIjEEhmT_

	.section	.text._ZN5Botan13typecast_copyIjEEvPhT_,"axG",@progbits,_ZN5Botan13typecast_copyIjEEvPhT_,comdat
	.weak	_ZN5Botan13typecast_copyIjEEvPhT_ 
	.p2align	4, 0x90
	.type	_ZN5Botan13typecast_copyIjEEvPhT_,@function
_ZN5Botan13typecast_copyIjEEvPhT_:      
	.cfi_startproc

	push	rbp
.Lcfi266:
	.cfi_def_cfa_offset 16
.Lcfi267:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi268:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 40
.Lcfi269:
	.cfi_offset rbx, -40
.Lcfi270:
	.cfi_offset r14, -32
.Lcfi271:
	.cfi_offset r15, -24
	mov	eax, dword ptr [x.164]
	mov	ecx, dword ptr [y.165]
	mov	edx, eax
	add	edx, 1674095877
	sub	edx, 1
	sub	edx, 1674095877
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 26], r8b
	cmp	ecx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 25], r8b
	mov	dword ptr [rbp - 32], -237466087
	mov	qword ptr [rbp - 40], rdi 
	mov	dword ptr [rbp - 44], esi 
.LBB83_1:                               
	mov	eax, dword ptr [rbp - 32]
	mov	ecx, eax
	sub	ecx, -2002352040
	mov	dword ptr [rbp - 48], eax 
	mov	dword ptr [rbp - 52], ecx 
	je	.LBB83_6
	jmp	.LBB83_8
.LBB83_8:                               
	mov	eax, dword ptr [rbp - 48] 
	sub	eax, -1823861854
	mov	dword ptr [rbp - 56], eax 
	je	.LBB83_5
	jmp	.LBB83_9
.LBB83_9:                               
	mov	eax, dword ptr [rbp - 48] 
	sub	eax, -759658739
	mov	dword ptr [rbp - 60], eax 
	je	.LBB83_4
	jmp	.LBB83_10
.LBB83_10:                              
	mov	eax, dword ptr [rbp - 48] 
	sub	eax, -237466087
	mov	dword ptr [rbp - 64], eax 
	je	.LBB83_3
	jmp	.LBB83_2
.LBB83_2:                               
	jmp	.LBB83_7
.LBB83_3:                               
	mov	eax, 2292615256
	mov	ecx, 3535308557
	mov	dl, 1
	mov	sil, byte ptr [rbp - 26]
	mov	dil, byte ptr [rbp - 25]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 0
	mov	r10b, r8b
	and	r10b, 0
	and	sil, dl
	mov	r11b, r9b
	and	r11b, 0
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 0
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB83_7
.LBB83_4:                               
	mov	eax, 1
	mov	edx, eax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 40] 
	mov	qword ptr [rcx], rdi
	mov	eax, dword ptr [rbp - 44] 
	mov	dword ptr [rsi], eax
	mov	rdi, qword ptr [rcx]
	call	_ZN5Botan13typecast_copyIjEEvPhPT_m
	mov	eax, 2292615256
	mov	r8d, 2471105442
	mov	r9d, dword ptr [x.164]
	mov	r10d, dword ptr [y.165]
	mov	r11d, r9d
	sub	r11d, 907448217
	sub	r11d, 1
	add	r11d, 907448217
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	bl
	cmp	r10d, 10
	setl	r14b
	mov	r15b, bl
	and	r15b, r14b
	xor	bl, r14b
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, r8d
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB83_7
.LBB83_5:
	lea	rsp, [rbp - 24]
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB83_6:                               
	mov	eax, 1
	mov	edx, eax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 40] 
	mov	qword ptr [rcx], rdi
	mov	eax, dword ptr [rbp - 44] 
	mov	dword ptr [rsi], eax
	mov	rdi, qword ptr [rcx]
	call	_ZN5Botan13typecast_copyIjEEvPhPT_m
	mov	dword ptr [rbp - 32], -759658739
.LBB83_7:                               
	jmp	.LBB83_1
.Lfunc_end83:
	.size	_ZN5Botan13typecast_copyIjEEvPhT_, .Lfunc_end83-_ZN5Botan13typecast_copyIjEEvPhT_
	.cfi_endproc

	.section	.text._ZN5Botan13typecast_copyIjEEvPhPT_m,"axG",@progbits,_ZN5Botan13typecast_copyIjEEvPhPT_m,comdat
	.weak	_ZN5Botan13typecast_copyIjEEvPhPT_m 
	.p2align	4, 0x90
	.type	_ZN5Botan13typecast_copyIjEEvPhPT_m,@function
_ZN5Botan13typecast_copyIjEEvPhPT_m:    

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 72
	xor	eax, eax
	mov	ecx, dword ptr [x.166]
	mov	r8d, dword ptr [y.167]
	sub	eax, 1
	mov	r9d, ecx
	add	r9d, eax
	imul	ecx, r9d
	and	ecx, 1
	cmp	ecx, 0
	sete	r10b
	and	r10b, 1
	mov	byte ptr [rbp - 26], r10b
	cmp	r8d, 10
	setl	r10b
	and	r10b, 1
	mov	byte ptr [rbp - 25], r10b
	mov	dword ptr [rbp - 32], -1606520987
	mov	qword ptr [rbp - 40], rsi 
	mov	qword ptr [rbp - 48], rdi 
	mov	qword ptr [rbp - 56], rdx 
.LBB84_1:                               
	mov	eax, dword ptr [rbp - 32]
	mov	ecx, eax
	sub	ecx, -1606520987
	mov	dword ptr [rbp - 60], eax 
	mov	dword ptr [rbp - 64], ecx 
	je	.LBB84_3
	jmp	.LBB84_8
.LBB84_8:                               
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, -623335158
	mov	dword ptr [rbp - 68], eax 
	je	.LBB84_6
	jmp	.LBB84_9
.LBB84_9:                               
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, -521214848
	mov	dword ptr [rbp - 72], eax 
	je	.LBB84_4
	jmp	.LBB84_10
.LBB84_10:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 1101937157
	mov	dword ptr [rbp - 76], eax 
	je	.LBB84_5
	jmp	.LBB84_2
.LBB84_2:                               
	jmp	.LBB84_7
.LBB84_3:                               
	mov	eax, 3671632138
	mov	ecx, 3773752448
	mov	dl, 1
	mov	sil, byte ptr [rbp - 26]
	mov	dil, byte ptr [rbp - 25]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB84_7
.LBB84_4:                               
	mov	eax, 3671632138
	mov	ecx, 1101937157
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	r8, qword ptr [rbp - 48] 
	mov	qword ptr [rdx], r8
	mov	r9, qword ptr [rbp - 40] 
	mov	qword ptr [rsi], r9
	mov	r10, qword ptr [rbp - 56] 
	mov	qword ptr [rdi], r10
	mov	rdx, qword ptr [rdx]
	mov	rsi, qword ptr [rsi]
	mov	rdi, qword ptr [rdi]
	shl	rdi, 2
	mov	qword ptr [rbp - 88], rdi 
	mov	rdi, rdx
	mov	rdx, qword ptr [rbp - 88] 
	mov	dword ptr [rbp - 92], eax 
	mov	dword ptr [rbp - 96], ecx 
	call	memcpy
	mov	eax, dword ptr [x.166]
	mov	ecx, dword ptr [y.167]
	mov	r11d, eax
	add	r11d, -341692281
	sub	r11d, 1
	sub	r11d, -341692281
	imul	eax, r11d
	and	eax, 1
	cmp	eax, 0
	sete	bl
	cmp	ecx, 10
	setl	r14b
	mov	r15b, bl
	and	r15b, r14b
	xor	bl, r14b
	or	r15b, bl
	test	r15b, 1
	mov	eax, dword ptr [rbp - 92] 
	mov	ecx, dword ptr [rbp - 96] 
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB84_7
.LBB84_5:
	lea	rsp, [rbp - 24]
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB84_6:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, qword ptr [rbp - 48] 
	mov	qword ptr [rax], rsi
	mov	rdi, qword ptr [rbp - 40] 
	mov	qword ptr [rcx], rdi
	mov	r8, qword ptr [rbp - 56] 
	mov	qword ptr [rdx], r8
	mov	rdi, qword ptr [rax]
	mov	rax, qword ptr [rcx]
	mov	rcx, qword ptr [rdx]
	shl	rcx, 2
	mov	rsi, rax
	mov	rdx, rcx
	call	memcpy
	mov	dword ptr [rbp - 32], -521214848
.LBB84_7:                               
	jmp	.LBB84_1
.Lfunc_end84:
	.size	_ZN5Botan13typecast_copyIjEEvPhPT_m, .Lfunc_end84-_ZN5Botan13typecast_copyIjEEvPhPT_m

	.text
	.p2align	4, 0x90         
	.type	_ZN5Botan12_GLOBAL__N_112AES_INV_SBOXEPj,@function
_ZN5Botan12_GLOBAL__N_112AES_INV_SBOXEPj: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 400
	mov	eax, 4294967295
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	ecx, dword ptr [rdi]
	mov	dword ptr [rbp - 12], ecx
	mov	rdi, qword ptr [rbp - 8]
	mov	ecx, dword ptr [rdi + 4]
	mov	dword ptr [rbp - 16], ecx
	mov	rdi, qword ptr [rbp - 8]
	mov	ecx, dword ptr [rdi + 8]
	mov	dword ptr [rbp - 20], ecx
	mov	rdi, qword ptr [rbp - 8]
	mov	ecx, dword ptr [rdi + 12]
	mov	dword ptr [rbp - 24], ecx
	mov	rdi, qword ptr [rbp - 8]
	mov	ecx, dword ptr [rdi + 16]
	mov	dword ptr [rbp - 28], ecx
	mov	rdi, qword ptr [rbp - 8]
	mov	ecx, dword ptr [rdi + 20]
	mov	dword ptr [rbp - 32], ecx
	mov	rdi, qword ptr [rbp - 8]
	mov	ecx, dword ptr [rdi + 24]
	mov	dword ptr [rbp - 36], ecx
	mov	rdi, qword ptr [rbp - 8]
	mov	ecx, dword ptr [rdi + 28]
	mov	dword ptr [rbp - 40], ecx
	mov	ecx, dword ptr [rbp - 12]
	mov	edx, dword ptr [rbp - 24]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 3866359364
	mov	r8d, eax
	xor	r8d, 3866359364
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -428607932
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 44], esi
	mov	ecx, dword ptr [rbp - 16]
	mov	edx, dword ptr [rbp - 24]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	ecx, r8d
	xor	ecx, -1
	and	ecx, 2903496322
	mov	edx, eax
	xor	edx, 2903496322
	and	r8d, edx
	mov	esi, eax
	xor	esi, 4294967295
	and	esi, -1391470974
	and	edx, 4294967295
	or	ecx, r8d
	or	esi, edx
	xor	ecx, esi
	mov	dword ptr [rbp - 48], ecx
	mov	ecx, dword ptr [rbp - 12]
	mov	edx, dword ptr [rbp - 48]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 1938725845
	mov	r8d, eax
	xor	r8d, 1938725845
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 1938725845
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 52], esi
	mov	ecx, dword ptr [rbp - 36]
	mov	edx, dword ptr [rbp - 40]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 152912750
	mov	r8d, eax
	xor	r8d, 152912750
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 152912750
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 56], esi
	mov	ecx, dword ptr [rbp - 48]
	mov	edx, dword ptr [rbp - 56]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 3025326938
	mov	r8d, eax
	xor	r8d, 3025326938
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -1269640358
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 60], esi
	mov	ecx, dword ptr [rbp - 20]
	mov	edx, dword ptr [rbp - 60]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 3670560767
	mov	r8d, eax
	xor	r8d, 3670560767
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -624406529
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	ecx, esi
	xor	ecx, -1
	and	ecx, 4249679967
	mov	edx, eax
	xor	edx, 4249679967
	and	esi, edx
	mov	r8d, eax
	xor	r8d, 4294967295
	and	r8d, -45287329
	and	edx, 4294967295
	or	ecx, esi
	or	r8d, edx
	xor	ecx, r8d
	mov	dword ptr [rbp - 64], ecx
	mov	ecx, dword ptr [rbp - 24]
	mov	edx, dword ptr [rbp - 28]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 68], r8d
	mov	ecx, dword ptr [rbp - 40]
	mov	edx, dword ptr [rbp - 68]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	ecx, r8d
	xor	ecx, -1
	and	ecx, 4294967295
	mov	edx, eax
	xor	edx, 4294967295
	and	r8d, edx
	or	ecx, r8d
	mov	dword ptr [rbp - 72], ecx
	mov	ecx, dword ptr [rbp - 60]
	mov	edx, dword ptr [rbp - 68]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 1469856669
	mov	r8d, eax
	xor	r8d, 1469856669
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 1469856669
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 76], esi
	mov	ecx, dword ptr [rbp - 12]
	mov	edx, dword ptr [rbp - 20]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 3736461348
	mov	r8d, eax
	xor	r8d, 3736461348
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -558505948
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	ecx, esi
	xor	ecx, -1
	and	ecx, 2422040821
	mov	edx, eax
	xor	edx, 2422040821
	and	esi, edx
	mov	r8d, eax
	xor	r8d, 4294967295
	and	r8d, -1872926475
	and	edx, 4294967295
	or	ecx, esi
	or	r8d, edx
	xor	ecx, r8d
	mov	dword ptr [rbp - 80], ecx
	mov	ecx, dword ptr [rbp - 32]
	mov	edx, dword ptr [rbp - 80]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 84], r8d
	mov	ecx, dword ptr [rbp - 44]
	mov	edx, dword ptr [rbp - 48]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 3221391933
	mov	r8d, eax
	xor	r8d, 3221391933
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -1073575363
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 88], esi
	mov	ecx, dword ptr [rbp - 60]
	mov	edx, dword ptr [rbp - 76]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 902979040
	mov	r8d, eax
	xor	r8d, 902979040
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 902979040
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 92], esi
	mov	ecx, dword ptr [rbp - 52]
	mov	edx, dword ptr [rbp - 72]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 1136386332
	mov	r8d, eax
	xor	r8d, 1136386332
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 1136386332
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 96], esi
	mov	ecx, dword ptr [rbp - 84]
	mov	edx, dword ptr [rbp - 64]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 1129973898
	mov	r8d, eax
	xor	r8d, 1129973898
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 1129973898
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 100], esi
	mov	ecx, dword ptr [rbp - 44]
	mov	edx, dword ptr [rbp - 60]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 104], r8d
	mov	ecx, dword ptr [rbp - 48]
	mov	edx, dword ptr [rbp - 76]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 108], r8d
	mov	ecx, dword ptr [rbp - 92]
	mov	edx, dword ptr [rbp - 88]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 112], r8d
	mov	ecx, dword ptr [rbp - 52]
	mov	edx, dword ptr [rbp - 84]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 2804578836
	mov	r8d, eax
	xor	r8d, 2804578836
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -1490388460
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 116], esi
	mov	ecx, dword ptr [rbp - 72]
	mov	edx, dword ptr [rbp - 64]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 1707288532
	mov	r8d, eax
	xor	r8d, 1707288532
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 1707288532
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 120], esi
	mov	ecx, dword ptr [rbp - 100]
	mov	edx, dword ptr [rbp - 96]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 1311083956
	mov	r8d, eax
	xor	r8d, 1311083956
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 1311083956
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 124], esi
	mov	ecx, dword ptr [rbp - 92]
	mov	edx, dword ptr [rbp - 100]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 128], r8d
	mov	ecx, dword ptr [rbp - 108]
	mov	edx, dword ptr [rbp - 120]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 3428232922
	mov	r8d, eax
	xor	r8d, 3428232922
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -866734374
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 132], esi
	mov	ecx, dword ptr [rbp - 76]
	mov	edx, dword ptr [rbp - 64]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 136], r8d
	mov	ecx, dword ptr [rbp - 88]
	mov	edx, dword ptr [rbp - 96]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 2186465468
	mov	r8d, eax
	xor	r8d, 2186465468
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -2108501828
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 140], esi
	mov	ecx, dword ptr [rbp - 104]
	mov	edx, dword ptr [rbp - 116]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 3351464643
	or	ecx, edx
	or	esi, 3351464643
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 144], ecx
	mov	ecx, dword ptr [rbp - 44]
	mov	edx, dword ptr [rbp - 52]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 148], esi
	mov	ecx, dword ptr [rbp - 128]
	mov	edx, dword ptr [rbp - 144]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 2434277859
	mov	r8d, eax
	xor	r8d, 2434277859
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -1860689437
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 152], esi
	mov	ecx, dword ptr [rbp - 60]
	mov	edx, dword ptr [rbp - 84]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 3273745885
	or	ecx, edx
	or	esi, 3273745885
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 156], ecx
	mov	ecx, dword ptr [rbp - 156]
	mov	edx, dword ptr [rbp - 144]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 160], r8d
	mov	ecx, dword ptr [rbp - 108]
	mov	edx, dword ptr [rbp - 120]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 164], esi
	mov	ecx, dword ptr [rbp - 48]
	mov	edx, dword ptr [rbp - 72]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 133555944
	or	ecx, edx
	or	esi, 133555944
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 168], ecx
	mov	ecx, dword ptr [rbp - 132]
	mov	edx, dword ptr [rbp - 164]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 123786824
	mov	r8d, eax
	xor	r8d, 123786824
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 123786824
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 172], esi
	mov	ecx, dword ptr [rbp - 76]
	mov	edx, dword ptr [rbp - 64]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 176], esi
	mov	ecx, dword ptr [rbp - 176]
	mov	edx, dword ptr [rbp - 164]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 180], r8d
	mov	ecx, dword ptr [rbp - 92]
	mov	edx, dword ptr [rbp - 100]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 1397172816
	or	ecx, edx
	or	esi, 1397172816
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 184], ecx
	mov	ecx, dword ptr [rbp - 112]
	mov	edx, dword ptr [rbp - 124]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 188], esi
	mov	ecx, dword ptr [rbp - 188]
	mov	edx, dword ptr [rbp - 184]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 192], r8d
	mov	ecx, dword ptr [rbp - 88]
	mov	edx, dword ptr [rbp - 96]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 3014434976
	or	ecx, edx
	or	esi, 3014434976
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 196], ecx
	mov	ecx, dword ptr [rbp - 196]
	mov	edx, dword ptr [rbp - 184]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 200], r8d
	mov	ecx, dword ptr [rbp - 152]
	mov	edx, dword ptr [rbp - 148]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 506691294
	mov	r8d, eax
	xor	r8d, 506691294
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 506691294
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 204], esi
	mov	ecx, dword ptr [rbp - 160]
	mov	edx, dword ptr [rbp - 140]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 3660190108
	mov	r8d, eax
	xor	r8d, 3660190108
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -634777188
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 208], esi
	mov	ecx, dword ptr [rbp - 172]
	mov	edx, dword ptr [rbp - 168]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 65971372
	mov	r8d, eax
	xor	r8d, 65971372
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 65971372
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 212], esi
	mov	ecx, dword ptr [rbp - 180]
	mov	edx, dword ptr [rbp - 200]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 216], r8d
	mov	ecx, dword ptr [rbp - 204]
	mov	edx, dword ptr [rbp - 192]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 220], r8d
	mov	ecx, dword ptr [rbp - 208]
	mov	edx, dword ptr [rbp - 200]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 224], r8d
	mov	ecx, dword ptr [rbp - 212]
	mov	edx, dword ptr [rbp - 192]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 4207609969
	mov	r8d, eax
	xor	r8d, 4207609969
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -87357327
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 228], esi
	mov	ecx, dword ptr [rbp - 216]
	mov	edx, dword ptr [rbp - 136]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 67367545
	mov	r8d, eax
	xor	r8d, 67367545
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 67367545
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 232], esi
	mov	ecx, dword ptr [rbp - 228]
	mov	edx, dword ptr [rbp - 232]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 236], r8d
	mov	ecx, dword ptr [rbp - 228]
	mov	edx, dword ptr [rbp - 220]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 341255
	or	ecx, edx
	or	esi, 341255
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 240], ecx
	mov	ecx, dword ptr [rbp - 224]
	mov	edx, dword ptr [rbp - 240]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 2022252351
	mov	r8d, eax
	xor	r8d, 2022252351
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 2022252351
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 244], esi
	mov	ecx, dword ptr [rbp - 220]
	mov	edx, dword ptr [rbp - 224]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 2940529044
	mov	r8d, eax
	xor	r8d, 2940529044
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -1354438252
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 248], esi
	mov	ecx, dword ptr [rbp - 232]
	mov	edx, dword ptr [rbp - 240]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 252], r8d
	mov	ecx, dword ptr [rbp - 252]
	mov	edx, dword ptr [rbp - 248]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 3258903393
	or	ecx, edx
	or	esi, 3258903393
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 256], ecx
	mov	ecx, dword ptr [rbp - 244]
	mov	edx, dword ptr [rbp - 236]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 1014013766
	or	ecx, edx
	or	esi, 1014013766
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 260], ecx
	mov	ecx, dword ptr [rbp - 232]
	mov	edx, dword ptr [rbp - 260]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 1768869914
	mov	r8d, eax
	xor	r8d, 1768869914
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 1768869914
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 264], esi
	mov	ecx, dword ptr [rbp - 224]
	mov	edx, dword ptr [rbp - 256]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 4215284084
	mov	r8d, eax
	xor	r8d, 4215284084
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -79683212
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 268], esi
	mov	ecx, dword ptr [rbp - 220]
	mov	edx, dword ptr [rbp - 232]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 272], esi
	mov	ecx, dword ptr [rbp - 248]
	mov	edx, dword ptr [rbp - 272]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 365951555
	or	ecx, edx
	or	esi, 365951555
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 276], ecx
	mov	ecx, dword ptr [rbp - 248]
	mov	edx, dword ptr [rbp - 240]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 2684535374
	mov	r8d, eax
	xor	r8d, 2684535374
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -1610431922
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 280], esi
	mov	ecx, dword ptr [rbp - 276]
	mov	edx, dword ptr [rbp - 280]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 284], r8d
	mov	ecx, dword ptr [rbp - 224]
	mov	edx, dword ptr [rbp - 228]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 77438510
	or	ecx, edx
	or	esi, 77438510
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 288], ecx
	mov	ecx, dword ptr [rbp - 236]
	mov	edx, dword ptr [rbp - 288]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 292], esi
	mov	ecx, dword ptr [rbp - 236]
	mov	edx, dword ptr [rbp - 240]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 3540929968
	mov	r8d, eax
	xor	r8d, 3540929968
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -754037328
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 296], esi
	mov	ecx, dword ptr [rbp - 292]
	mov	edx, dword ptr [rbp - 296]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 300], r8d
	mov	ecx, dword ptr [rbp - 284]
	mov	edx, dword ptr [rbp - 300]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 975875797
	mov	r8d, eax
	xor	r8d, 975875797
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 975875797
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 304], esi
	mov	ecx, dword ptr [rbp - 268]
	mov	edx, dword ptr [rbp - 264]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 308], r8d
	mov	ecx, dword ptr [rbp - 268]
	mov	edx, dword ptr [rbp - 284]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 312], r8d
	mov	ecx, dword ptr [rbp - 264]
	mov	edx, dword ptr [rbp - 300]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 316], r8d
	mov	ecx, dword ptr [rbp - 308]
	mov	edx, dword ptr [rbp - 304]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 3988408881
	mov	r8d, eax
	xor	r8d, 3988408881
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -306558415
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 320], esi
	mov	ecx, dword ptr [rbp - 316]
	mov	edx, dword ptr [rbp - 116]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 324], esi
	mov	ecx, dword ptr [rbp - 300]
	mov	edx, dword ptr [rbp - 52]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 328], esi
	mov	ecx, dword ptr [rbp - 264]
	mov	edx, dword ptr [rbp - 84]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 332], esi
	mov	ecx, dword ptr [rbp - 312]
	mov	edx, dword ptr [rbp - 120]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 1625295067
	or	ecx, edx
	or	esi, 1625295067
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 336], ecx
	mov	ecx, dword ptr [rbp - 284]
	mov	edx, dword ptr [rbp - 72]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 340], esi
	mov	ecx, dword ptr [rbp - 268]
	mov	edx, dword ptr [rbp - 64]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 3424263306
	or	ecx, edx
	or	esi, 3424263306
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 344], ecx
	mov	ecx, dword ptr [rbp - 308]
	mov	edx, dword ptr [rbp - 100]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 348], esi
	mov	ecx, dword ptr [rbp - 320]
	mov	edx, dword ptr [rbp - 124]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 490735068
	or	ecx, edx
	or	esi, 490735068
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 352], ecx
	mov	ecx, dword ptr [rbp - 304]
	mov	edx, dword ptr [rbp - 96]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 356], esi
	mov	ecx, dword ptr [rbp - 316]
	mov	edx, dword ptr [rbp - 104]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 360], esi
	mov	ecx, dword ptr [rbp - 300]
	mov	edx, dword ptr [rbp - 44]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 631179287
	or	ecx, edx
	or	esi, 631179287
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 364], ecx
	mov	ecx, dword ptr [rbp - 264]
	mov	edx, dword ptr [rbp - 60]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 368], esi
	mov	ecx, dword ptr [rbp - 312]
	mov	edx, dword ptr [rbp - 108]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 2390988134
	or	ecx, edx
	or	esi, 2390988134
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 372], ecx
	mov	ecx, dword ptr [rbp - 284]
	mov	edx, dword ptr [rbp - 48]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 376], esi
	mov	ecx, dword ptr [rbp - 268]
	mov	edx, dword ptr [rbp - 76]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 380], esi
	mov	ecx, dword ptr [rbp - 308]
	mov	edx, dword ptr [rbp - 92]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 1332875182
	or	ecx, edx
	or	esi, 1332875182
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 384], ecx
	mov	ecx, dword ptr [rbp - 320]
	mov	edx, dword ptr [rbp - 112]
	xor	ecx, -1
	xor	edx, -1
	mov	esi, eax
	xor	esi, 1283933198
	or	ecx, edx
	or	esi, 1283933198
	xor	ecx, -1
	and	ecx, esi
	mov	dword ptr [rbp - 388], ecx
	mov	ecx, dword ptr [rbp - 304]
	mov	edx, dword ptr [rbp - 88]
	xor	edx, -1
	mov	esi, ecx
	xor	esi, edx
	and	esi, ecx
	mov	dword ptr [rbp - 392], esi
	mov	ecx, dword ptr [rbp - 328]
	mov	edx, dword ptr [rbp - 324]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 396], r8d
	mov	ecx, dword ptr [rbp - 332]
	mov	edx, dword ptr [rbp - 324]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 400], r8d
	mov	ecx, dword ptr [rbp - 340]
	mov	edx, dword ptr [rbp - 336]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 4233466628
	mov	r8d, eax
	xor	r8d, 4233466628
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -61500668
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 404], esi
	mov	ecx, dword ptr [rbp - 344]
	mov	edx, dword ptr [rbp - 336]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 553591142
	mov	r8d, eax
	xor	r8d, 553591142
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 553591142
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 408], esi
	mov	ecx, dword ptr [rbp - 352]
	mov	edx, dword ptr [rbp - 348]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 2550829466
	mov	r8d, eax
	xor	r8d, 2550829466
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -1744137830
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 412], esi
	mov	ecx, dword ptr [rbp - 356]
	mov	edx, dword ptr [rbp - 348]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 3996742032
	mov	r8d, eax
	xor	r8d, 3996742032
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -298225264
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 416], esi
	mov	ecx, dword ptr [rbp - 396]
	mov	edx, dword ptr [rbp - 412]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 1027745704
	mov	r8d, eax
	xor	r8d, 1027745704
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 1027745704
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 420], esi
	mov	ecx, dword ptr [rbp - 400]
	mov	edx, dword ptr [rbp - 416]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 3475625836
	mov	r8d, eax
	xor	r8d, 3475625836
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -819341460
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 424], esi
	mov	ecx, dword ptr [rbp - 404]
	mov	edx, dword ptr [rbp - 412]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 2646525799
	mov	r8d, eax
	xor	r8d, 2646525799
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -1648441497
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 428], esi
	mov	ecx, dword ptr [rbp - 408]
	mov	edx, dword ptr [rbp - 416]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 3562494441
	mov	r8d, eax
	xor	r8d, 3562494441
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -732472855
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 432], esi
	mov	ecx, dword ptr [rbp - 364]
	mov	edx, dword ptr [rbp - 360]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 3210858359
	mov	r8d, eax
	xor	r8d, 3210858359
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -1084108937
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 436], esi
	mov	ecx, dword ptr [rbp - 368]
	mov	edx, dword ptr [rbp - 360]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 665444992
	mov	r8d, eax
	xor	r8d, 665444992
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 665444992
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 440], esi
	mov	ecx, dword ptr [rbp - 376]
	mov	edx, dword ptr [rbp - 372]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 2890894835
	mov	r8d, eax
	xor	r8d, 2890894835
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -1404072461
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 444], esi
	mov	ecx, dword ptr [rbp - 380]
	mov	edx, dword ptr [rbp - 372]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 448], r8d
	mov	ecx, dword ptr [rbp - 388]
	mov	edx, dword ptr [rbp - 384]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 452], r8d
	mov	ecx, dword ptr [rbp - 392]
	mov	edx, dword ptr [rbp - 384]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 456], r8d
	mov	ecx, dword ptr [rbp - 436]
	mov	edx, dword ptr [rbp - 452]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 1915066461
	mov	r8d, eax
	xor	r8d, 1915066461
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 1915066461
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 460], esi
	mov	ecx, dword ptr [rbp - 440]
	mov	edx, dword ptr [rbp - 456]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 2008905709
	mov	r8d, eax
	xor	r8d, 2008905709
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 2008905709
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 464], esi
	mov	ecx, dword ptr [rbp - 444]
	mov	edx, dword ptr [rbp - 452]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 1951813860
	mov	r8d, eax
	xor	r8d, 1951813860
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 1951813860
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 468], esi
	mov	ecx, dword ptr [rbp - 448]
	mov	edx, dword ptr [rbp - 456]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 472], r8d
	mov	ecx, dword ptr [rbp - 424]
	mov	edx, dword ptr [rbp - 468]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 783266669
	mov	r8d, eax
	xor	r8d, 783266669
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 783266669
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 476], esi
	mov	ecx, dword ptr [rbp - 428]
	mov	edx, dword ptr [rbp - 468]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 480], r8d
	mov	ecx, dword ptr [rbp - 432]
	mov	edx, dword ptr [rbp - 468]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 265622377
	mov	r8d, eax
	xor	r8d, 265622377
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 265622377
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 484], esi
	mov	ecx, dword ptr [rbp - 420]
	mov	edx, dword ptr [rbp - 428]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 2486860617
	mov	r8d, eax
	xor	r8d, 2486860617
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -1808106679
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 488], esi
	mov	ecx, dword ptr [rbp - 484]
	mov	edx, dword ptr [rbp - 488]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 492], r8d
	mov	ecx, dword ptr [rbp - 460]
	mov	edx, dword ptr [rbp - 472]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 3613577297
	mov	r8d, eax
	xor	r8d, 3613577297
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, -681389999
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 496], esi
	mov	ecx, dword ptr [rbp - 488]
	mov	edx, dword ptr [rbp - 496]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 500], r8d
	mov	ecx, dword ptr [rbp - 476]
	mov	edx, dword ptr [rbp - 500]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 504], r8d
	mov	ecx, dword ptr [rbp - 424]
	mov	edx, dword ptr [rbp - 464]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 1062653405
	mov	r8d, eax
	xor	r8d, 1062653405
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 1062653405
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 508], esi
	mov	ecx, dword ptr [rbp - 500]
	mov	edx, dword ptr [rbp - 508]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 512], r8d
	mov	ecx, dword ptr [rbp - 420]
	mov	edx, dword ptr [rbp - 460]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 636992722
	mov	r8d, eax
	xor	r8d, 636992722
	and	ecx, r8d
	mov	r9d, edx
	xor	r9d, -1
	and	r9d, 636992722
	and	edx, r8d
	or	esi, ecx
	or	r9d, edx
	xor	esi, r9d
	mov	dword ptr [rbp - 516], esi
	mov	ecx, dword ptr [rbp - 492]
	mov	edx, dword ptr [rbp - 508]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 520], r8d
	mov	ecx, dword ptr [rbp - 516]
	mov	edx, dword ptr [rbp - 520]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 302762811
	xor	eax, 302762811
	and	ecx, eax
	mov	r8d, edx
	xor	r8d, -1
	and	r8d, 302762811
	and	edx, eax
	or	esi, ecx
	or	r8d, edx
	xor	esi, r8d
	mov	dword ptr [rbp - 524], esi
	mov	eax, dword ptr [rbp - 484]
	mov	rdi, qword ptr [rbp - 8]
	mov	dword ptr [rdi], eax
	mov	eax, dword ptr [rbp - 504]
	mov	rdi, qword ptr [rbp - 8]
	mov	dword ptr [rdi + 4], eax
	mov	eax, dword ptr [rbp - 512]
	mov	rdi, qword ptr [rbp - 8]
	mov	dword ptr [rdi + 8], eax
	mov	eax, dword ptr [rbp - 476]
	mov	rdi, qword ptr [rbp - 8]
	mov	dword ptr [rdi + 12], eax
	mov	eax, dword ptr [rbp - 524]
	mov	rdi, qword ptr [rbp - 8]
	mov	dword ptr [rdi + 16], eax
	mov	eax, dword ptr [rbp - 492]
	mov	rdi, qword ptr [rbp - 8]
	mov	dword ptr [rdi + 20], eax
	mov	eax, dword ptr [rbp - 480]
	mov	rdi, qword ptr [rbp - 8]
	mov	dword ptr [rdi + 24], eax
	mov	eax, dword ptr [rbp - 464]
	mov	rdi, qword ptr [rbp - 8]
	mov	dword ptr [rdi + 28], eax
	add	rsp, 400
	pop	rbp
	ret
.Lfunc_end85:
	.size	_ZN5Botan12_GLOBAL__N_112AES_INV_SBOXEPj, .Lfunc_end85-_ZN5Botan12_GLOBAL__N_112AES_INV_SBOXEPj

	.p2align	4, 0x90         
	.type	_ZN5Botan12_GLOBAL__N_114inv_shift_rowsEPj,@function
_ZN5Botan12_GLOBAL__N_114inv_shift_rowsEPj: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r12
	push	rbx
	sub	rsp, 80
	mov	qword ptr [rbp - 48], rdi
	mov	qword ptr [rbp - 56], 0
	mov	dword ptr [rbp - 68], 997637
.LBB86_1:                               
	mov	eax, dword ptr [rbp - 68]
	mov	ecx, eax
	sub	ecx, -2126916168
	mov	dword ptr [rbp - 72], eax 
	mov	dword ptr [rbp - 76], ecx 
	je	.LBB86_8
	jmp	.LBB86_11
.LBB86_11:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, -1769751641
	mov	dword ptr [rbp - 80], eax 
	je	.LBB86_5
	jmp	.LBB86_12
.LBB86_12:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, 997637
	mov	dword ptr [rbp - 84], eax 
	je	.LBB86_3
	jmp	.LBB86_13
.LBB86_13:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, 18861715
	mov	dword ptr [rbp - 88], eax 
	je	.LBB86_4
	jmp	.LBB86_14
.LBB86_14:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, 34578317
	mov	dword ptr [rbp - 92], eax 
	je	.LBB86_6
	jmp	.LBB86_15
.LBB86_15:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, 183265477
	mov	dword ptr [rbp - 96], eax 
	je	.LBB86_9
	jmp	.LBB86_16
.LBB86_16:                              
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, 546629089
	mov	dword ptr [rbp - 100], eax 
	je	.LBB86_7
	jmp	.LBB86_2
.LBB86_2:                               
	jmp	.LBB86_10
.LBB86_3:                               
	mov	eax, 183265477
	mov	ecx, 18861715
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.170]
	mov	r8d, dword ptr [y.171]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 0
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, 0
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 0
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 68], eax
	jmp	.LBB86_10
.LBB86_4:                               
	mov	eax, 183265477
	mov	ecx, 2525215655
	cmp	qword ptr [rbp - 56], 8
	setne	dl
	and	dl, 1
	mov	byte ptr [rbp - 33], dl
	mov	esi, dword ptr [x.170]
	mov	edi, dword ptr [y.171]
	mov	r8d, esi
	add	r8d, 868700240
	sub	r8d, 1
	sub	r8d, 868700240
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	dl
	cmp	edi, 10
	setl	r9b
	mov	r10b, dl
	and	r10b, r9b
	xor	dl, r9b
	or	r10b, dl
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 68], eax
	jmp	.LBB86_10
.LBB86_5:                               
	mov	eax, 2168051128
	mov	ecx, 34578317
	mov	dl, byte ptr [rbp - 33]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 68], eax
	jmp	.LBB86_10
.LBB86_6:                               
	movabs	rsi, 23925738098196565
	mov	eax, 1
	mov	edx, eax
	movabs	rcx, 6657651356580634066
	mov	rdi, -1
	xor	eax, eax
	mov	r8d, eax
	mov	r9, qword ptr [rbp - 48]
	mov	r10, qword ptr [rbp - 56]
	mov	eax, dword ptr [r9 + 4*r10]
	mov	r9d, eax
	shl	r9, 32
	mov	r10, qword ptr [rbp - 48]
	mov	r11, qword ptr [rbp - 56]
	mov	rbx, r8
	sub	rbx, r11
	mov	r11, r8
	sub	r11, 1
	add	rbx, r11
	sub	r8, rbx
	mov	eax, dword ptr [r10 + 4*r8]
	mov	r8d, eax
	mov	r10, r9
	xor	r10, -1
	mov	r11, r8
	xor	r11, -1
	xor	rdi, rcx
	mov	rbx, r10
	and	rbx, rcx
	and	r9, rdi
	mov	r14, r11
	and	r14, rcx
	and	r8, rdi
	or	rbx, r9
	or	r14, r8
	xor	rbx, r14
	or	r10, r11
	xor	r10, -1
	or	rdi, rcx
	and	r10, rdi
	or	rbx, r10
	mov	qword ptr [rbp - 64], rbx
	mov	rdi, qword ptr [rbp - 64]
	call	_ZN5Botan16bit_permute_stepImEET_S1_S1_m
	movabs	rsi, 9626297317864209
	mov	r15d, 2
	mov	edx, r15d
	mov	qword ptr [rbp - 64], rax
	mov	rdi, qword ptr [rbp - 64]
	call	_ZN5Botan16bit_permute_stepImEET_S1_S1_m
	movabs	rcx, 3347406370989641053
	mov	qword ptr [rbp - 64], rax
	mov	rax, qword ptr [rbp - 64]
	shr	rax, 32
	mov	r15d, eax
	mov	rax, qword ptr [rbp - 48]
	mov	rdx, qword ptr [rbp - 56]
	mov	dword ptr [rax + 4*rdx], r15d
	mov	rax, qword ptr [rbp - 64]
	mov	r15d, eax
	mov	rax, qword ptr [rbp - 48]
	mov	rdx, qword ptr [rbp - 56]
	sub	rdx, rcx
	add	rdx, 1
	add	rdx, rcx
	shl	rdx, 2
	add	rax, rdx
	mov	dword ptr [rax], r15d
	mov	dword ptr [rbp - 68], 546629089
	jmp	.LBB86_10
.LBB86_7:                               
	movabs	rax, -3215327632738951912
	mov	rcx, qword ptr [rbp - 56]
	sub	rcx, rax
	add	rcx, 2
	add	rcx, rax
	mov	qword ptr [rbp - 56], rcx
	mov	dword ptr [rbp - 68], 997637
	jmp	.LBB86_10
.LBB86_8:
	add	rsp, 80
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB86_9:                               
	mov	dword ptr [rbp - 68], 18861715
.LBB86_10:                              
	jmp	.LBB86_1
.Lfunc_end86:
	.size	_ZN5Botan12_GLOBAL__N_114inv_shift_rowsEPj, .Lfunc_end86-_ZN5Botan12_GLOBAL__N_114inv_shift_rowsEPj

	.p2align	4, 0x90         
	.type	_ZN5Botan12_GLOBAL__N_115inv_mix_columnsEPj,@function
_ZN5Botan12_GLOBAL__N_115inv_mix_columnsEPj: 
	.cfi_startproc

	push	rbp
.Lcfi272:
	.cfi_def_cfa_offset 16
.Lcfi273:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi274:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	sub	rsp, 128
.Lcfi275:
	.cfi_offset rbx, -48
.Lcfi276:
	.cfi_offset r12, -40
.Lcfi277:
	.cfi_offset r14, -32
.Lcfi278:
	.cfi_offset r15, -24
	mov	eax, 4294967295
	mov	qword ptr [rbp - 48], rdi
	mov	rdi, qword ptr [rbp - 48]
	mov	ecx, dword ptr [rdi + 8]
	mov	dword ptr [rbp - 80], ecx
	mov	rdi, qword ptr [rbp - 48]
	mov	ecx, dword ptr [rdi + 12]
	mov	dword ptr [rbp - 76], ecx
	mov	rdi, qword ptr [rbp - 48]
	mov	ecx, dword ptr [rdi + 16]
	mov	rdi, qword ptr [rbp - 48]
	mov	edx, dword ptr [rdi]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 72], r8d
	mov	rdi, qword ptr [rbp - 48]
	mov	ecx, dword ptr [rdi + 20]
	mov	rdi, qword ptr [rbp - 48]
	mov	edx, dword ptr [rdi]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	rdi, qword ptr [rbp - 48]
	mov	ecx, dword ptr [rdi + 4]
	mov	edx, r8d
	xor	edx, -1
	mov	esi, ecx
	and	esi, edx
	xor	ecx, -1
	and	r8d, ecx
	or	esi, r8d
	mov	dword ptr [rbp - 68], esi
	mov	rdi, qword ptr [rbp - 48]
	mov	ecx, dword ptr [rdi + 24]
	mov	rdi, qword ptr [rbp - 48]
	mov	edx, dword ptr [rdi + 4]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 64], r8d
	mov	rdi, qword ptr [rbp - 48]
	mov	ecx, dword ptr [rdi + 28]
	mov	rdi, qword ptr [rbp - 48]
	mov	edx, dword ptr [rdi]
	mov	esi, ecx
	xor	esi, -1
	mov	r8d, edx
	and	r8d, esi
	xor	edx, -1
	and	ecx, edx
	or	r8d, ecx
	mov	dword ptr [rbp - 60], r8d
	mov	rdi, qword ptr [rbp - 48]
	mov	ecx, dword ptr [rdi]
	mov	rdi, qword ptr [rbp - 48]
	mov	edx, dword ptr [rdi + 4]
	mov	esi, ecx
	xor	esi, -1
	and	esi, 1948088708
	xor	eax, 1948088708
	and	ecx, eax
	mov	r8d, edx
	xor	r8d, -1
	and	r8d, 1948088708
	and	edx, eax
	or	esi, ecx
	or	r8d, edx
	xor	esi, r8d
	mov	dword ptr [rbp - 56], esi
	mov	rdi, qword ptr [rbp - 48]
	mov	eax, dword ptr [rdi + 4]
	mov	dword ptr [rbp - 52], eax
	mov	qword ptr [rbp - 88], 0
	mov	dword ptr [rbp - 96], 2133315212
.LBB87_1:                               
	mov	eax, dword ptr [rbp - 96]
	mov	ecx, eax
	sub	ecx, -2124945318
	mov	dword ptr [rbp - 100], eax 
	mov	dword ptr [rbp - 104], ecx 
	je	.LBB87_8
	jmp	.LBB87_17
.LBB87_17:                              
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, -2109534367
	mov	dword ptr [rbp - 108], eax 
	je	.LBB87_10
	jmp	.LBB87_18
.LBB87_18:                              
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, -1046028585
	mov	dword ptr [rbp - 112], eax 
	je	.LBB87_14
	jmp	.LBB87_19
.LBB87_19:                              
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, -808918408
	mov	dword ptr [rbp - 116], eax 
	je	.LBB87_4
	jmp	.LBB87_20
.LBB87_20:                              
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, -432363792
	mov	dword ptr [rbp - 120], eax 
	je	.LBB87_6
	jmp	.LBB87_21
.LBB87_21:                              
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, -330851199
	mov	dword ptr [rbp - 124], eax 
	je	.LBB87_9
	jmp	.LBB87_22
.LBB87_22:                              
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, -168172977
	mov	dword ptr [rbp - 128], eax 
	je	.LBB87_11
	jmp	.LBB87_23
.LBB87_23:                              
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, 57799775
	mov	dword ptr [rbp - 132], eax 
	je	.LBB87_13
	jmp	.LBB87_24
.LBB87_24:                              
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, 149650336
	mov	dword ptr [rbp - 136], eax 
	je	.LBB87_5
	jmp	.LBB87_25
.LBB87_25:                              
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, 542791353
	mov	dword ptr [rbp - 140], eax 
	je	.LBB87_7
	jmp	.LBB87_26
.LBB87_26:                              
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, 1139625396
	mov	dword ptr [rbp - 144], eax 
	je	.LBB87_15
	jmp	.LBB87_27
.LBB87_27:                              
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, 1636795122
	mov	dword ptr [rbp - 148], eax 
	je	.LBB87_12
	jmp	.LBB87_28
.LBB87_28:                              
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, 2133315212
	mov	dword ptr [rbp - 152], eax 
	je	.LBB87_3
	jmp	.LBB87_2
.LBB87_2:                               
	jmp	.LBB87_16
.LBB87_3:                               
	mov	eax, 57799775
	mov	ecx, 3486048888
	mov	dl, 1
	mov	esi, dword ptr [x.172]
	mov	edi, dword ptr [y.173]
	mov	r8d, esi
	sub	r8d, -1259797094
	sub	r8d, 1
	add	r8d, -1259797094
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 1
	mov	r14b, r11b
	and	r14b, -1
	and	r9b, dl
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 1
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 96], eax
	jmp	.LBB87_16
.LBB87_4:                               
	mov	eax, 57799775
	mov	ecx, 149650336
	mov	dl, 1
	xor	esi, esi
	cmp	qword ptr [rbp - 88], 8
	setne	dil
	and	dil, 1
	mov	byte ptr [rbp - 33], dil
	mov	r8d, dword ptr [x.172]
	mov	r9d, dword ptr [y.173]
	sub	esi, 1
	mov	r10d, r8d
	add	r10d, esi
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	dil
	cmp	r9d, 10
	setl	r11b
	mov	bl, dil
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 1
	mov	r15b, bl
	and	r15b, -1
	and	dil, dl
	mov	r12b, r14b
	and	r12b, -1
	and	r11b, dl
	or	r15b, dil
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 1
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 96], eax
	jmp	.LBB87_16
.LBB87_5:                               
	mov	eax, 2185432929
	mov	ecx, 3862603504
	mov	dl, byte ptr [rbp - 33]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 96], eax
	jmp	.LBB87_16
.LBB87_6:                               
	mov	eax, 3248938711
	mov	ecx, 542791353
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.172]
	mov	r8d, dword ptr [y.173]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 1
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, -1
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 1
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 96], eax
	jmp	.LBB87_16
.LBB87_7:                               
	mov	eax, 4294967295
	mov	rcx, qword ptr [rbp - 88]
	mov	edx, dword ptr [rbp + 4*rcx - 80]
	mov	rcx, qword ptr [rbp - 48]
	mov	rsi, qword ptr [rbp - 88]
	mov	edi, dword ptr [rcx + 4*rsi]
	mov	r8d, edx
	xor	r8d, -1
	and	r8d, 1814921769
	xor	eax, 1814921769
	and	edx, eax
	mov	r9d, edi
	xor	r9d, -1
	and	r9d, 1814921769
	and	edi, eax
	or	r8d, edx
	or	r9d, edi
	xor	r8d, r9d
	mov	dword ptr [rbp - 92], r8d
	mov	eax, dword ptr [rbp - 92]
	mov	rcx, qword ptr [rbp - 88]
	mov	edi, dword ptr [rbp + 4*rcx - 80]
	mov	dword ptr [rbp - 156], eax 
	call	_ZN5Botan4rotrILm16EjEET0_S1_
	mov	edx, 3248938711
	mov	edi, 2170021978
	xor	r8d, r8d
	mov	r9d, dword ptr [rbp - 156] 
	xor	r9d, -1
	mov	r10d, eax
	and	r10d, r9d
	xor	eax, -1
	mov	r9d, dword ptr [rbp - 156] 
	and	r9d, eax
	or	r10d, r9d
	mov	rcx, qword ptr [rbp - 48]
	mov	rsi, qword ptr [rbp - 88]
	mov	dword ptr [rcx + 4*rsi], r10d
	mov	eax, dword ptr [x.172]
	mov	r9d, dword ptr [y.173]
	sub	r8d, 1
	mov	r10d, eax
	add	r10d, r8d
	imul	eax, r10d
	and	eax, 1
	cmp	eax, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	edx, edi
	mov	dword ptr [rbp - 96], edx
	jmp	.LBB87_16
.LBB87_8:                               
	mov	dword ptr [rbp - 96], -330851199
	jmp	.LBB87_16
.LBB87_9:                               
	movabs	rax, 7728313620925247516
	mov	rcx, qword ptr [rbp - 88]
	add	rcx, rax
	add	rcx, 1
	sub	rcx, rax
	mov	qword ptr [rbp - 88], rcx
	mov	dword ptr [rbp - 96], 2133315212
	jmp	.LBB87_16
.LBB87_10:                              
	mov	eax, 1139625396
	mov	ecx, 4126794319
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.172]
	mov	r8d, dword ptr [y.173]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 1
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, -1
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 1
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 96], eax
	jmp	.LBB87_16
.LBB87_11:                              
	mov	rdi, qword ptr [rbp - 48]
	call	_ZN5Botan12_GLOBAL__N_111mix_columnsEPj
	mov	eax, 1139625396
	mov	ecx, 1636795122
	mov	edx, dword ptr [x.172]
	mov	esi, dword ptr [y.173]
	mov	r8d, edx
	sub	r8d, -69412222
	sub	r8d, 1
	add	r8d, -69412222
	imul	edx, r8d
	and	edx, 1
	cmp	edx, 0
	sete	r9b
	cmp	esi, 10
	setl	r10b
	mov	r11b, r9b
	and	r11b, r10b
	xor	r9b, r10b
	or	r11b, r9b
	test	r11b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 96], eax
	jmp	.LBB87_16
.LBB87_12:
	add	rsp, 128
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB87_13:                              
	mov	dword ptr [rbp - 96], -808918408
	jmp	.LBB87_16
.LBB87_14:                              
	mov	rax, qword ptr [rbp - 88]
	mov	ecx, dword ptr [rbp + 4*rax - 80]
	mov	rax, qword ptr [rbp - 48]
	mov	rdx, qword ptr [rbp - 88]
	mov	esi, dword ptr [rax + 4*rdx]
	mov	edi, ecx
	xor	edi, -1
	mov	r8d, esi
	and	r8d, edi
	xor	esi, -1
	and	ecx, esi
	or	r8d, ecx
	mov	dword ptr [rbp - 92], r8d
	mov	ecx, dword ptr [rbp - 92]
	mov	rax, qword ptr [rbp - 88]
	mov	edi, dword ptr [rbp + 4*rax - 80]
	mov	dword ptr [rbp - 160], ecx 
	call	_ZN5Botan4rotrILm16EjEET0_S1_
	mov	ecx, 4294967295
	mov	esi, dword ptr [rbp - 160] 
	xor	esi, -1
	and	esi, 383550867
	xor	ecx, 383550867
	mov	edi, dword ptr [rbp - 160] 
	and	edi, ecx
	mov	r8d, eax
	xor	r8d, -1
	and	r8d, 383550867
	and	eax, ecx
	or	esi, edi
	or	r8d, eax
	xor	esi, r8d
	mov	rdx, qword ptr [rbp - 48]
	mov	r9, qword ptr [rbp - 88]
	mov	dword ptr [rdx + 4*r9], esi
	mov	dword ptr [rbp - 96], 542791353
	jmp	.LBB87_16
.LBB87_15:                              
	mov	rdi, qword ptr [rbp - 48]
	call	_ZN5Botan12_GLOBAL__N_111mix_columnsEPj
	mov	dword ptr [rbp - 96], -168172977
.LBB87_16:                              
	jmp	.LBB87_1
.Lfunc_end87:
	.size	_ZN5Botan12_GLOBAL__N_115inv_mix_columnsEPj, .Lfunc_end87-_ZN5Botan12_GLOBAL__N_115inv_mix_columnsEPj
	.cfi_endproc

	.section	.text._ZN5Botan2CT6poisonIhEEvPKT_m,"axG",@progbits,_ZN5Botan2CT6poisonIhEEvPKT_m,comdat
	.weak	_ZN5Botan2CT6poisonIhEEvPKT_m 
	.p2align	4, 0x90
	.type	_ZN5Botan2CT6poisonIhEEvPKT_m,@function
_ZN5Botan2CT6poisonIhEEvPKT_m:          

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 56
	mov	eax, dword ptr [x.174]
	mov	ecx, dword ptr [y.175]
	mov	edx, eax
	add	edx, 519988224
	sub	edx, 1
	sub	edx, 519988224
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 42], r8b
	cmp	ecx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 41], r8b
	mov	dword ptr [rbp - 48], -1298682420
	mov	qword ptr [rbp - 56], rdi 
	mov	qword ptr [rbp - 64], rsi 
.LBB88_1:                               
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -1781586639
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB88_4
	jmp	.LBB88_8
.LBB88_8:                               
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -1298682420
	mov	dword ptr [rbp - 76], eax 
	je	.LBB88_3
	jmp	.LBB88_9
.LBB88_9:                               
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 157841094
	mov	dword ptr [rbp - 80], eax 
	je	.LBB88_6
	jmp	.LBB88_10
.LBB88_10:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1370231633
	mov	dword ptr [rbp - 84], eax 
	je	.LBB88_5
	jmp	.LBB88_2
.LBB88_2:                               
	jmp	.LBB88_7
.LBB88_3:                               
	mov	eax, 157841094
	mov	ecx, 2513380657
	mov	dl, byte ptr [rbp - 42]
	mov	sil, byte ptr [rbp - 41]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB88_7
.LBB88_4:                               
	mov	eax, 157841094
	mov	ecx, 1370231633
	mov	dl, 1
	xor	esi, esi
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	r8, rsp
	add	r8, -16
	mov	rsp, r8
	mov	r9, qword ptr [rbp - 56] 
	mov	qword ptr [rdi], r9
	mov	rdi, qword ptr [rbp - 64] 
	mov	qword ptr [r8], rdi
	mov	r10d, dword ptr [x.174]
	mov	r11d, dword ptr [y.175]
	sub	esi, 1
	mov	ebx, r10d
	add	ebx, esi
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r14b
	cmp	r11d, 10
	setl	r15b
	mov	r12b, r14b
	xor	r12b, -1
	mov	r13b, r15b
	xor	r13b, -1
	xor	dl, 1
	mov	sil, r12b
	and	sil, -1
	and	r14b, dl
	mov	dil, r13b
	and	dil, -1
	and	r15b, dl
	or	sil, r14b
	or	dil, r15b
	xor	sil, dil
	or	r12b, r13b
	xor	r12b, -1
	or	dl, 1
	and	r12b, dl
	or	sil, r12b
	test	sil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB88_7
.LBB88_5:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB88_6:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rdx
	mov	rax, qword ptr [rbp - 64] 
	mov	qword ptr [rcx], rax
	mov	dword ptr [rbp - 48], -1781586639
.LBB88_7:                               
	jmp	.LBB88_1
.Lfunc_end88:
	.size	_ZN5Botan2CT6poisonIhEEvPKT_m, .Lfunc_end88-_ZN5Botan2CT6poisonIhEEvPKT_m

	.section	.text._ZNSt6vectorIjN5Botan16secure_allocatorIjEEE6resizeEm,"axG",@progbits,_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE6resizeEm,comdat
	.weak	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE6resizeEm 
	.p2align	4, 0x90
	.type	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE6resizeEm,@function
_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE6resizeEm: 
	.cfi_startproc

	push	rbp
.Lcfi279:
	.cfi_def_cfa_offset 16
.Lcfi280:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi281:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 120
.Lcfi282:
	.cfi_offset rbx, -56
.Lcfi283:
	.cfi_offset r12, -48
.Lcfi284:
	.cfi_offset r13, -40
.Lcfi285:
	.cfi_offset r14, -32
.Lcfi286:
	.cfi_offset r15, -24
	mov	eax, dword ptr [x.176]
	mov	ecx, dword ptr [y.177]
	mov	edx, eax
	sub	edx, -541967988
	sub	edx, 1
	add	edx, -541967988
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 66], r8b
	cmp	ecx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 65], r8b
	mov	dword ptr [rbp - 72], -770509919
	mov	qword ptr [rbp - 80], rdi 
	mov	qword ptr [rbp - 88], rsi 
.LBB89_1:                               
	mov	eax, dword ptr [rbp - 72]
	mov	ecx, eax
	sub	ecx, -1811043357
	mov	dword ptr [rbp - 92], eax 
	mov	dword ptr [rbp - 96], ecx 
	je	.LBB89_8
	jmp	.LBB89_13
.LBB89_13:                              
	mov	eax, dword ptr [rbp - 92] 
	sub	eax, -770509919
	mov	dword ptr [rbp - 100], eax 
	je	.LBB89_3
	jmp	.LBB89_14
.LBB89_14:                              
	mov	eax, dword ptr [rbp - 92] 
	sub	eax, -527857178
	mov	dword ptr [rbp - 104], eax 
	je	.LBB89_9
	jmp	.LBB89_15
.LBB89_15:                              
	mov	eax, dword ptr [rbp - 92] 
	sub	eax, -288365390
	mov	dword ptr [rbp - 108], eax 
	je	.LBB89_11
	jmp	.LBB89_16
.LBB89_16:                              
	mov	eax, dword ptr [rbp - 92] 
	sub	eax, -276586725
	mov	dword ptr [rbp - 112], eax 
	je	.LBB89_10
	jmp	.LBB89_17
.LBB89_17:                              
	mov	eax, dword ptr [rbp - 92] 
	sub	eax, 1526379545
	mov	dword ptr [rbp - 116], eax 
	je	.LBB89_5
	jmp	.LBB89_18
.LBB89_18:                              
	mov	eax, dword ptr [rbp - 92] 
	sub	eax, 1848840947
	mov	dword ptr [rbp - 120], eax 
	je	.LBB89_7
	jmp	.LBB89_19
.LBB89_19:                              
	mov	eax, dword ptr [rbp - 92] 
	sub	eax, 1934187319
	mov	dword ptr [rbp - 124], eax 
	je	.LBB89_4
	jmp	.LBB89_20
.LBB89_20:                              
	mov	eax, dword ptr [rbp - 92] 
	sub	eax, 2130979256
	mov	dword ptr [rbp - 128], eax 
	je	.LBB89_6
	jmp	.LBB89_2
.LBB89_2:                               
	jmp	.LBB89_12
.LBB89_3:                               
	mov	eax, 4006601906
	mov	ecx, 1934187319
	mov	dl, 1
	mov	sil, byte ptr [rbp - 66]
	mov	dil, byte ptr [rbp - 65]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 72], eax
	jmp	.LBB89_12
.LBB89_4:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	qword ptr [rbp - 64], rcx
	mov	rcx, qword ptr [rbp - 80] 
	mov	qword ptr [rax], rcx
	mov	rdx, qword ptr [rbp - 64]
	mov	rsi, qword ptr [rbp - 88] 
	mov	qword ptr [rdx], rsi
	mov	rax, qword ptr [rax]
	mov	qword ptr [rbp - 56], rax
	mov	rax, qword ptr [rbp - 64]
	mov	rax, qword ptr [rax]
	mov	rdi, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 136], rax 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	mov	r8d, 4006601906
	mov	r9d, 1526379545
	xor	r10d, r10d
	mov	rcx, qword ptr [rbp - 136] 
	cmp	rcx, rax
	seta	r11b
	and	r11b, 1
	mov	byte ptr [rbp - 41], r11b
	mov	ebx, dword ptr [x.176]
	mov	r14d, dword ptr [y.177]
	sub	r10d, 1
	mov	r15d, ebx
	add	r15d, r10d
	imul	ebx, r15d
	and	ebx, 1
	cmp	ebx, 0
	sete	r11b
	cmp	r14d, 10
	setl	r12b
	mov	r13b, r11b
	and	r13b, r12b
	xor	r11b, r12b
	or	r13b, r11b
	test	r13b, 1
	cmovne	r8d, r9d
	mov	dword ptr [rbp - 72], r8d
	jmp	.LBB89_12
.LBB89_5:                               
	mov	eax, 1848840947
	mov	ecx, 2130979256
	mov	dl, byte ptr [rbp - 41]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 72], eax
	jmp	.LBB89_12
.LBB89_6:                               
	mov	rax, qword ptr [rbp - 64]
	mov	rax, qword ptr [rax]
	mov	rdi, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 144], rax 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	movabs	rdi, -8794039583909509929
	mov	rcx, qword ptr [rbp - 144] 
	add	rcx, rdi
	sub	rcx, rax
	sub	rcx, rdi
	mov	rdi, qword ptr [rbp - 56]
	mov	rsi, rcx
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE17_M_default_appendEm
	mov	dword ptr [rbp - 72], -276586725
	jmp	.LBB89_12
.LBB89_7:                               
	mov	rax, qword ptr [rbp - 64]
	mov	rax, qword ptr [rax]
	mov	rdi, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 152], rax 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	mov	ecx, 3767110118
	mov	edx, 2483923939
	mov	rdi, qword ptr [rbp - 152] 
	cmp	rdi, rax
	cmovb	ecx, edx
	mov	dword ptr [rbp - 72], ecx
	jmp	.LBB89_12
.LBB89_8:                               
	mov	rax, qword ptr [rbp - 56]
	mov	rax, qword ptr [rax]
	mov	rcx, qword ptr [rbp - 64]
	mov	rcx, qword ptr [rcx]
	shl	rcx, 2
	add	rax, rcx
	mov	rdi, qword ptr [rbp - 56]
	mov	rsi, rax
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE15_M_erase_at_endEPj
	mov	dword ptr [rbp - 72], -527857178
	jmp	.LBB89_12
.LBB89_9:                               
	mov	dword ptr [rbp - 72], -276586725
	jmp	.LBB89_12
.LBB89_10:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB89_11:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 80] 
	mov	qword ptr [rax], rdx
	mov	rsi, qword ptr [rbp - 88] 
	mov	qword ptr [rcx], rsi
	mov	rdi, qword ptr [rax]
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	mov	dword ptr [rbp - 72], 1934187319
	mov	qword ptr [rbp - 160], rax 
.LBB89_12:                              
	jmp	.LBB89_1
.Lfunc_end89:
	.size	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE6resizeEm, .Lfunc_end89-_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE6resizeEm
	.cfi_endproc

	.section	.text._ZN5Botan7load_beIjEET_PKhm,"axG",@progbits,_ZN5Botan7load_beIjEET_PKhm,comdat
	.weak	_ZN5Botan7load_beIjEET_PKhm 
	.p2align	4, 0x90
	.type	_ZN5Botan7load_beIjEET_PKhm,@function
_ZN5Botan7load_beIjEET_PKhm:            
	.cfi_startproc

	push	rbp
.Lcfi287:
	.cfi_def_cfa_offset 16
.Lcfi288:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi289:
	.cfi_def_cfa_register rbp
	sub	rsp, 32
	lea	rax, [rbp - 20]
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rsi, qword ptr [rbp - 16]
	shl	rsi, 2
	add	rsi, qword ptr [rbp - 8]
	mov	qword ptr [rbp - 8], rsi
	mov	dword ptr [rbp - 20], 0
	mov	rsi, qword ptr [rbp - 8]
	mov	rdi, rax
	call	_ZN5Botan13typecast_copyIjEEvRT_PKh
	mov	edi, dword ptr [rbp - 20]
	call	_ZN5Botan13reverse_bytesEj
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end90:
	.size	_ZN5Botan7load_beIjEET_PKhm, .Lfunc_end90-_ZN5Botan7load_beIjEET_PKhm
	.cfi_endproc

	.section	.text._ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm,"axG",@progbits,_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm,comdat
	.weak	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm 
	.p2align	4, 0x90
	.type	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm,@function
_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rsi, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rsi]
	mov	rdi, qword ptr [rbp - 16]
	shl	rdi, 2
	add	rsi, rdi
	mov	rax, rsi
	pop	rbp
	ret
.Lfunc_end91:
	.size	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm, .Lfunc_end91-_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEixEm

	.section	.text._ZN5Botan4rotlILm8EjEET0_S1_,"axG",@progbits,_ZN5Botan4rotlILm8EjEET0_S1_,comdat
	.weak	_ZN5Botan4rotlILm8EjEET0_S1_ 
	.p2align	4, 0x90
	.type	_ZN5Botan4rotlILm8EjEET0_S1_,@function
_ZN5Botan4rotlILm8EjEET0_S1_:           

	push	rbp
	mov	rbp, rsp
	push	r14
	push	rbx
	sub	rsp, 48
	xor	eax, eax
	mov	ecx, dword ptr [x.182]
	mov	edx, dword ptr [y.183]
	sub	eax, 1
	mov	esi, ecx
	add	esi, eax
	imul	ecx, esi
	and	ecx, 1
	cmp	ecx, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 22], r8b
	cmp	edx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 21], r8b
	mov	dword ptr [rbp - 28], -1824642173
	mov	dword ptr [rbp - 32], edi 
.LBB92_1:                               
	mov	eax, dword ptr [rbp - 28]
	mov	ecx, eax
	sub	ecx, -1824642173
	mov	dword ptr [rbp - 36], eax 
	mov	dword ptr [rbp - 40], ecx 
	je	.LBB92_3
	jmp	.LBB92_8
.LBB92_8:                               
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, -1270301927
	mov	dword ptr [rbp - 44], eax 
	je	.LBB92_4
	jmp	.LBB92_9
.LBB92_9:                               
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, -1150607096
	mov	dword ptr [rbp - 48], eax 
	je	.LBB92_5
	jmp	.LBB92_10
.LBB92_10:                              
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, -380148102
	mov	dword ptr [rbp - 52], eax 
	je	.LBB92_6
	jmp	.LBB92_2
.LBB92_2:                               
	jmp	.LBB92_7
.LBB92_3:                               
	mov	eax, 3914819194
	mov	ecx, 3024665369
	mov	dl, byte ptr [rbp - 22]
	mov	sil, byte ptr [rbp - 21]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 28], eax
	jmp	.LBB92_7
.LBB92_4:                               
	mov	eax, 3914819194
	mov	ecx, 3144360200
	xor	edx, edx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	edi, dword ptr [rbp - 32] 
	mov	dword ptr [rsi], edi
	mov	r8d, dword ptr [rsi]
	shl	r8d, 8
	mov	r9d, dword ptr [rsi]
	shr	r9d, 24
	mov	r10d, r8d
	and	r10d, r9d
	xor	r8d, r9d
	or	r10d, r8d
	mov	dword ptr [rbp - 20], r10d
	mov	r8d, dword ptr [x.182]
	mov	r9d, dword ptr [y.183]
	sub	edx, 1
	mov	r10d, r8d
	add	r10d, edx
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 28], eax
	jmp	.LBB92_7
.LBB92_5:
	mov	eax, dword ptr [rbp - 20]
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
.LBB92_6:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	ecx, dword ptr [rbp - 32] 
	mov	dword ptr [rax], ecx
	mov	dword ptr [rbp - 28], -1270301927
.LBB92_7:                               
	jmp	.LBB92_1
.Lfunc_end92:
	.size	_ZN5Botan4rotlILm8EjEET0_S1_, .Lfunc_end92-_ZN5Botan4rotlILm8EjEET0_S1_

	.text
	.p2align	4, 0x90         
	.type	_ZN5Botan12_GLOBAL__N_17SE_wordEj,@function
_ZN5Botan12_GLOBAL__N_17SE_wordEj:      

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 136
	xor	esi, esi
	mov	eax, 32
	mov	edx, eax
	lea	rcx, [rbp - 64]
	mov	dword ptr [rbp - 32], edi
	mov	rdi, rcx
	call	memset
	mov	qword ptr [rbp - 72], 0
	mov	dword ptr [rbp - 84], 1400102531
.LBB93_1:                               
	mov	eax, dword ptr [rbp - 84]
	mov	ecx, eax
	sub	ecx, -2126178872
	mov	dword ptr [rbp - 88], eax 
	mov	dword ptr [rbp - 92], ecx 
	je	.LBB93_16
	jmp	.LBB93_21
.LBB93_21:                              
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, -1374673045
	mov	dword ptr [rbp - 96], eax 
	je	.LBB93_17
	jmp	.LBB93_22
.LBB93_22:                              
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, -1012803345
	mov	dword ptr [rbp - 100], eax 
	je	.LBB93_13
	jmp	.LBB93_23
.LBB93_23:                              
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, -763995641
	mov	dword ptr [rbp - 104], eax 
	je	.LBB93_12
	jmp	.LBB93_24
.LBB93_24:                              
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, -540250224
	mov	dword ptr [rbp - 108], eax 
	je	.LBB93_14
	jmp	.LBB93_25
.LBB93_25:                              
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, -210619656
	mov	dword ptr [rbp - 112], eax 
	je	.LBB93_10
	jmp	.LBB93_26
.LBB93_26:                              
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, -22926713
	mov	dword ptr [rbp - 116], eax 
	je	.LBB93_4
	jmp	.LBB93_27
.LBB93_27:                              
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 35130603
	mov	dword ptr [rbp - 120], eax 
	je	.LBB93_15
	jmp	.LBB93_28
.LBB93_28:                              
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 532267909
	mov	dword ptr [rbp - 124], eax 
	je	.LBB93_8
	jmp	.LBB93_29
.LBB93_29:                              
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 579779576
	mov	dword ptr [rbp - 128], eax 
	je	.LBB93_18
	jmp	.LBB93_30
.LBB93_30:                              
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 1059259146
	mov	dword ptr [rbp - 132], eax 
	je	.LBB93_5
	jmp	.LBB93_31
.LBB93_31:                              
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 1153769096
	mov	dword ptr [rbp - 136], eax 
	je	.LBB93_19
	jmp	.LBB93_32
.LBB93_32:                              
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 1375544122
	mov	dword ptr [rbp - 140], eax 
	je	.LBB93_6
	jmp	.LBB93_33
.LBB93_33:                              
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 1400102531
	mov	dword ptr [rbp - 144], eax 
	je	.LBB93_3
	jmp	.LBB93_34
.LBB93_34:                              
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 1503024008
	mov	dword ptr [rbp - 148], eax 
	je	.LBB93_7
	jmp	.LBB93_35
.LBB93_35:                              
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 1651645340
	mov	dword ptr [rbp - 152], eax 
	je	.LBB93_9
	jmp	.LBB93_36
.LBB93_36:                              
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 1667255946
	mov	dword ptr [rbp - 156], eax 
	je	.LBB93_11
	jmp	.LBB93_2
.LBB93_2:                               
	jmp	.LBB93_20
.LBB93_3:                               
	mov	eax, 2920294251
	mov	ecx, 4272040583
	mov	edx, dword ptr [x.184]
	mov	esi, dword ptr [y.185]
	mov	edi, edx
	add	edi, -523821640
	sub	edi, 1
	sub	edi, -523821640
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 84], eax
	jmp	.LBB93_20
.LBB93_4:                               
	mov	eax, 2920294251
	mov	ecx, 1059259146
	cmp	qword ptr [rbp - 72], 8
	setne	dl
	and	dl, 1
	mov	byte ptr [rbp - 25], dl
	mov	esi, dword ptr [x.184]
	mov	edi, dword ptr [y.185]
	mov	r8d, esi
	add	r8d, -974357656
	sub	r8d, 1
	sub	r8d, -974357656
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	dl
	cmp	edi, 10
	setl	r9b
	mov	r10b, dl
	and	r10b, r9b
	xor	dl, r9b
	or	r10b, dl
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 84], eax
	jmp	.LBB93_20
.LBB93_5:                               
	mov	eax, 532267909
	mov	ecx, 1375544122
	mov	dl, byte ptr [rbp - 25]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 84], eax
	jmp	.LBB93_20
.LBB93_6:                               
	mov	eax, 4294967295
	movabs	rcx, 7726185996623528489
	mov	edx, 7
	mov	esi, edx
	mov	edx, dword ptr [rbp - 32]
	mov	rdi, qword ptr [rbp - 72]
	sub	rsi, rcx
	sub	rsi, rdi
	add	rsi, rcx
	mov	r8d, esi
	mov	ecx, r8d

	shr	edx, cl
	xor	eax, 16843009
	mov	r8d, edx
	xor	r8d, eax
	and	r8d, edx
	mov	rsi, qword ptr [rbp - 72]
	mov	dword ptr [rbp + 4*rsi - 64], r8d
	mov	dword ptr [rbp - 84], 1503024008
	jmp	.LBB93_20
.LBB93_7:                               
	movabs	rax, 6791617293439827383
	mov	rcx, qword ptr [rbp - 72]
	add	rcx, rax
	add	rcx, 1
	sub	rcx, rax
	mov	qword ptr [rbp - 72], rcx
	mov	dword ptr [rbp - 84], 1400102531
	jmp	.LBB93_20
.LBB93_8:                               
	mov	eax, 579779576
	mov	ecx, 1651645340
	mov	dl, 1
	mov	esi, dword ptr [x.184]
	mov	edi, dword ptr [y.185]
	mov	r8d, esi
	sub	r8d, -911806109
	sub	r8d, 1
	add	r8d, -911806109
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 0
	mov	r14b, r11b
	and	r14b, 0
	and	r9b, dl
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 0
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 84], eax
	jmp	.LBB93_20
.LBB93_9:                               
	lea	rdi, [rbp - 64]
	call	_ZN5Botan12_GLOBAL__N_18AES_SBOXEPj
	mov	eax, 579779576
	mov	ecx, 4084347640
	mov	dword ptr [rbp - 32], 0
	mov	qword ptr [rbp - 80], 0
	mov	edx, dword ptr [x.184]
	mov	esi, dword ptr [y.185]
	mov	r8d, edx
	sub	r8d, -2084118573
	sub	r8d, 1
	add	r8d, -2084118573
	imul	edx, r8d
	and	edx, 1
	cmp	edx, 0
	sete	r9b
	cmp	esi, 10
	setl	r10b
	mov	r11b, r9b
	and	r11b, r10b
	xor	r9b, r10b
	or	r11b, r9b
	test	r11b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 84], eax
	jmp	.LBB93_20
.LBB93_10:                              
	mov	dword ptr [rbp - 84], 1667255946
	jmp	.LBB93_20
.LBB93_11:                              
	mov	eax, 2168788424
	mov	ecx, 3530971655
	cmp	qword ptr [rbp - 80], 8
	cmovne	eax, ecx
	mov	dword ptr [rbp - 84], eax
	jmp	.LBB93_20
.LBB93_12:                              
	mov	eax, 4294967295
	xor	ecx, ecx
	mov	edx, ecx
	mov	rsi, qword ptr [rbp - 80]
	mov	ecx, dword ptr [rbp + 4*rsi - 64]
	mov	edi, eax
	xor	edi, 16843009
	mov	r8d, ecx
	xor	r8d, edi
	and	r8d, ecx
	mov	rsi, qword ptr [rbp - 80]
	sub	rdx, rsi
	add	rdx, 7
	mov	ecx, edx

	shl	r8d, cl
	mov	edi, dword ptr [rbp - 32]
	mov	r9d, edi
	xor	r9d, -1
	mov	r10d, r8d
	xor	r10d, -1
	xor	eax, 2597108091
	mov	r11d, r9d
	and	r11d, -1697859205
	and	edi, eax
	mov	ebx, r10d
	and	ebx, -1697859205
	and	r8d, eax
	or	r11d, edi
	or	ebx, r8d
	xor	r11d, ebx
	or	r9d, r10d
	xor	r9d, -1
	or	eax, 2597108091
	and	r9d, eax
	or	r11d, r9d
	mov	dword ptr [rbp - 32], r11d
	mov	dword ptr [rbp - 84], -1012803345
	jmp	.LBB93_20
.LBB93_13:                              
	mov	eax, 1153769096
	mov	ecx, 3754717072
	xor	edx, edx
	mov	esi, dword ptr [x.184]
	mov	edi, dword ptr [y.185]
	sub	edx, 1
	mov	r8d, esi
	add	r8d, edx
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	and	r11b, r10b
	xor	r9b, r10b
	or	r11b, r9b
	test	r11b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 84], eax
	jmp	.LBB93_20
.LBB93_14:                              
	mov	eax, 1153769096
	mov	ecx, 35130603
	xor	edx, edx
	mov	esi, edx
	mov	rdi, qword ptr [rbp - 80]
	sub	rsi, 1
	sub	rdi, rsi
	mov	qword ptr [rbp - 80], rdi
	mov	edx, dword ptr [x.184]
	mov	r8d, dword ptr [y.185]
	mov	r9d, edx
	sub	r9d, -1344834591
	sub	r9d, 1
	add	r9d, -1344834591
	imul	edx, r9d
	and	edx, 1
	cmp	edx, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	and	bl, r11b
	xor	r10b, r11b
	or	bl, r10b
	test	bl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 84], eax
	jmp	.LBB93_20
.LBB93_15:                              
	mov	dword ptr [rbp - 84], 1667255946
	jmp	.LBB93_20
.LBB93_16:
	mov	eax, dword ptr [rbp - 32]
	add	rsp, 136
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB93_17:                              
	mov	dword ptr [rbp - 84], -22926713
	jmp	.LBB93_20
.LBB93_18:                              
	lea	rdi, [rbp - 64]
	call	_ZN5Botan12_GLOBAL__N_18AES_SBOXEPj
	mov	dword ptr [rbp - 32], 0
	mov	qword ptr [rbp - 80], 0
	mov	dword ptr [rbp - 84], 1651645340
	jmp	.LBB93_20
.LBB93_19:                              
	xor	eax, eax
	mov	ecx, eax
	mov	rdx, qword ptr [rbp - 80]
	sub	rcx, 1
	sub	rdx, rcx
	mov	qword ptr [rbp - 80], rdx
	mov	dword ptr [rbp - 84], -540250224
.LBB93_20:                              
	jmp	.LBB93_1
.Lfunc_end93:
	.size	_ZN5Botan12_GLOBAL__N_17SE_wordEj, .Lfunc_end93-_ZN5Botan12_GLOBAL__N_17SE_wordEj

	.p2align	4, 0x90         
	.type	_ZN5Botan12_GLOBAL__N_115InvMixColumn_x4EPj,@function
_ZN5Botan12_GLOBAL__N_115InvMixColumn_x4EPj: 
	.cfi_startproc

	push	rbp
.Lcfi290:
	.cfi_def_cfa_offset 16
.Lcfi291:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi292:
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	edi, dword ptr [rdi]
	call	_ZN5Botan12_GLOBAL__N_112InvMixColumnEj
	mov	rcx, qword ptr [rbp - 8]
	mov	dword ptr [rcx], eax
	mov	rcx, qword ptr [rbp - 8]
	mov	edi, dword ptr [rcx + 4]
	call	_ZN5Botan12_GLOBAL__N_112InvMixColumnEj
	mov	rcx, qword ptr [rbp - 8]
	mov	dword ptr [rcx + 4], eax
	mov	rcx, qword ptr [rbp - 8]
	mov	edi, dword ptr [rcx + 8]
	call	_ZN5Botan12_GLOBAL__N_112InvMixColumnEj
	mov	rcx, qword ptr [rbp - 8]
	mov	dword ptr [rcx + 8], eax
	mov	rcx, qword ptr [rbp - 8]
	mov	edi, dword ptr [rcx + 12]
	call	_ZN5Botan12_GLOBAL__N_112InvMixColumnEj
	mov	rcx, qword ptr [rbp - 8]
	mov	dword ptr [rcx + 12], eax
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end94:
	.size	_ZN5Botan12_GLOBAL__N_115InvMixColumn_x4EPj, .Lfunc_end94-_ZN5Botan12_GLOBAL__N_115InvMixColumn_x4EPj
	.cfi_endproc

	.section	.text._ZNSt6vectorIjN5Botan16secure_allocatorIjEEE4dataEv,"axG",@progbits,_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE4dataEv,comdat
	.weak	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE4dataEv 
	.p2align	4, 0x90
	.type	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE4dataEv,@function
_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE4dataEv: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 56
	mov	eax, dword ptr [x.188]
	mov	ecx, dword ptr [y.189]
	mov	edx, eax
	add	edx, 1413269614
	sub	edx, 1
	sub	edx, 1413269614
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 50], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 49], sil
	mov	dword ptr [rbp - 56], 888464456
	mov	qword ptr [rbp - 64], rdi 
.LBB95_1:                               
	mov	eax, dword ptr [rbp - 56]
	mov	ecx, eax
	sub	ecx, -782750104
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB95_6
	jmp	.LBB95_8
.LBB95_8:                               
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -702889884
	mov	dword ptr [rbp - 76], eax 
	je	.LBB95_4
	jmp	.LBB95_9
.LBB95_9:                               
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 888464456
	mov	dword ptr [rbp - 80], eax 
	je	.LBB95_3
	jmp	.LBB95_10
.LBB95_10:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 2027735250
	mov	dword ptr [rbp - 84], eax 
	je	.LBB95_5
	jmp	.LBB95_2
.LBB95_2:                               
	jmp	.LBB95_7
.LBB95_3:                               
	mov	eax, 3512217192
	mov	ecx, 3592077412
	mov	dl, byte ptr [rbp - 50]
	mov	sil, byte ptr [rbp - 49]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB95_7
.LBB95_4:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rsi, qword ptr [rax]
	mov	rdi, rax
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE11_M_data_ptrIjEEPT_S6_
	mov	edx, 3512217192
	mov	r8d, 2027735250
	mov	r9b, 1
	mov	qword ptr [rbp - 48], rax
	mov	r10d, dword ptr [x.188]
	mov	r11d, dword ptr [y.189]
	mov	ebx, r10d
	add	ebx, 18968906
	sub	ebx, 1
	sub	ebx, 18968906
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r14b
	cmp	r11d, 10
	setl	r15b
	mov	r12b, r14b
	xor	r12b, -1
	mov	r13b, r15b
	xor	r13b, -1
	xor	r9b, 1
	mov	al, r12b
	and	al, -1
	and	r14b, r9b
	mov	cl, r13b
	and	cl, -1
	and	r15b, r9b
	or	al, r14b
	or	cl, r15b
	xor	al, cl
	or	r12b, r13b
	xor	r12b, -1
	or	r9b, 1
	and	r12b, r9b
	or	al, r12b
	test	al, 1
	cmovne	edx, r8d
	mov	dword ptr [rbp - 56], edx
	jmp	.LBB95_7
.LBB95_5:
	mov	rax, qword ptr [rbp - 48]
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB95_6:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rsi, qword ptr [rax]
	mov	rdi, rax
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE11_M_data_ptrIjEEPT_S6_
	mov	dword ptr [rbp - 56], -702889884
	mov	qword ptr [rbp - 96], rax 
.LBB95_7:                               
	jmp	.LBB95_1
.Lfunc_end95:
	.size	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE4dataEv, .Lfunc_end95-_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE4dataEv

	.section	.text._ZN5Botan2CT8unpoisonIhEEvPKT_m,"axG",@progbits,_ZN5Botan2CT8unpoisonIhEEvPKT_m,comdat
	.weak	_ZN5Botan2CT8unpoisonIhEEvPKT_m 
	.p2align	4, 0x90
	.type	_ZN5Botan2CT8unpoisonIhEEvPKT_m,@function
_ZN5Botan2CT8unpoisonIhEEvPKT_m:        

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 56
	mov	eax, dword ptr [x.190]
	mov	ecx, dword ptr [y.191]
	mov	edx, eax
	add	edx, -426957925
	sub	edx, 1
	sub	edx, -426957925
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 42], r8b
	cmp	ecx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 41], r8b
	mov	dword ptr [rbp - 48], -573610105
	mov	qword ptr [rbp - 56], rdi 
	mov	qword ptr [rbp - 64], rsi 
.LBB96_1:                               
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -573610105
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB96_3
	jmp	.LBB96_8
.LBB96_8:                               
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1527574972
	mov	dword ptr [rbp - 76], eax 
	je	.LBB96_5
	jmp	.LBB96_9
.LBB96_9:                               
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1535619350
	mov	dword ptr [rbp - 80], eax 
	je	.LBB96_6
	jmp	.LBB96_10
.LBB96_10:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1823799399
	mov	dword ptr [rbp - 84], eax 
	je	.LBB96_4
	jmp	.LBB96_2
.LBB96_2:                               
	jmp	.LBB96_7
.LBB96_3:                               
	mov	eax, 1535619350
	mov	ecx, 1823799399
	mov	dl, 1
	mov	sil, byte ptr [rbp - 42]
	mov	dil, byte ptr [rbp - 41]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB96_7
.LBB96_4:                               
	mov	eax, 1535619350
	mov	ecx, 1527574972
	mov	dl, 1
	xor	esi, esi
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	r8, rsp
	add	r8, -16
	mov	rsp, r8
	mov	r9, qword ptr [rbp - 56] 
	mov	qword ptr [rdi], r9
	mov	rdi, qword ptr [rbp - 64] 
	mov	qword ptr [r8], rdi
	mov	r10d, dword ptr [x.190]
	mov	r11d, dword ptr [y.191]
	sub	esi, 1
	mov	ebx, r10d
	add	ebx, esi
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r14b
	cmp	r11d, 10
	setl	r15b
	mov	r12b, r14b
	xor	r12b, -1
	mov	r13b, r15b
	xor	r13b, -1
	xor	dl, 1
	mov	sil, r12b
	and	sil, -1
	and	r14b, dl
	mov	dil, r13b
	and	dil, -1
	and	r15b, dl
	or	sil, r14b
	or	dil, r15b
	xor	sil, dil
	or	r12b, r13b
	xor	r12b, -1
	or	dl, 1
	and	r12b, dl
	or	sil, r12b
	test	sil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB96_7
.LBB96_5:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB96_6:                               
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rdx
	mov	rax, qword ptr [rbp - 64] 
	mov	qword ptr [rcx], rax
	mov	dword ptr [rbp - 48], 1823799399
.LBB96_7:                               
	jmp	.LBB96_1
.Lfunc_end96:
	.size	_ZN5Botan2CT8unpoisonIhEEvPKT_m, .Lfunc_end96-_ZN5Botan2CT8unpoisonIhEEvPKT_m

	.section	.text._ZNSt6vectorIjN5Botan16secure_allocatorIjEEE17_M_default_appendEm,"axG",@progbits,_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE17_M_default_appendEm,comdat
	.weak	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE17_M_default_appendEm 
	.p2align	4, 0x90
	.type	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE17_M_default_appendEm,@function
_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE17_M_default_appendEm: 
.Lfunc_begin8:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception8

	push	rbp
.Lcfi293:
	.cfi_def_cfa_offset 16
.Lcfi294:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi295:
	.cfi_def_cfa_register rbp
	sub	rsp, 192
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rsi, qword ptr [rbp - 8]
	cmp	qword ptr [rbp - 16], 0
	mov	qword ptr [rbp - 72], rsi 
	je	.LBB97_16

	movabs	rax, 6837221640968871052
	mov	rcx, qword ptr [rbp - 72] 
	mov	rdx, qword ptr [rcx + 16]
	mov	rsi, qword ptr [rcx + 8]
	add	rdx, rax
	sub	rdx, rsi
	sub	rdx, rax
	sar	rdx, 2
	cmp	rdx, qword ptr [rbp - 16]
	jb	.LBB97_3

	mov	rax, qword ptr [rbp - 72] 
	mov	rdi, qword ptr [rax + 8]
	mov	rsi, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 80], rdi 
	mov	rdi, rax
	mov	qword ptr [rbp - 88], rsi 
	call	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE19_M_get_Tp_allocatorEv
	mov	rdi, qword ptr [rbp - 80] 
	mov	rsi, qword ptr [rbp - 88] 
	mov	rdx, rax
	call	_ZSt27__uninitialized_default_n_aIPjmN5Botan16secure_allocatorIjEEET_S4_T0_RT1_
	mov	rdx, qword ptr [rbp - 72] 
	mov	qword ptr [rdx + 8], rax
	jmp	.LBB97_15
.LBB97_3:
	mov	rsi, qword ptr [rbp - 16]
	mov	eax, .L.str.10
	mov	edx, eax
	mov	rdi, qword ptr [rbp - 72] 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE12_M_check_lenEmPKc
	mov	qword ptr [rbp - 24], rax
	mov	rdi, qword ptr [rbp - 72] 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	mov	qword ptr [rbp - 32], rax
	mov	rsi, qword ptr [rbp - 24]
	mov	rdi, qword ptr [rbp - 72] 
	call	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE11_M_allocateEm
	mov	qword ptr [rbp - 40], rax
	mov	qword ptr [rbp - 48], 0
	mov	rax, qword ptr [rbp - 40]
	mov	rdx, qword ptr [rbp - 32]
	lea	rdi, [rax + 4*rdx]
	mov	rsi, qword ptr [rbp - 16]
	mov	rax, qword ptr [rbp - 72] 
	mov	qword ptr [rbp - 96], rdi 
	mov	rdi, rax
	mov	qword ptr [rbp - 104], rsi 
	call	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE19_M_get_Tp_allocatorEv
.Ltmp26:
	mov	rdi, qword ptr [rbp - 96] 
	mov	rsi, qword ptr [rbp - 104] 
	mov	rdx, rax
	call	_ZSt27__uninitialized_default_n_aIPjmN5Botan16secure_allocatorIjEEET_S4_T0_RT1_
.Ltmp27:
	mov	qword ptr [rbp - 112], rax 
	jmp	.LBB97_4
.LBB97_4:
	mov	rax, qword ptr [rbp - 40]
	mov	rcx, qword ptr [rbp - 32]
	lea	rcx, [rax + 4*rcx]
	mov	qword ptr [rbp - 48], rcx
	mov	rcx, qword ptr [rbp - 72] 
	mov	rdi, qword ptr [rcx]
	mov	rsi, qword ptr [rcx + 8]
	mov	qword ptr [rbp - 120], rdi 
	mov	rdi, rcx
	mov	qword ptr [rbp - 128], rax 
	mov	qword ptr [rbp - 136], rsi 
	call	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE19_M_get_Tp_allocatorEv
.Ltmp28:
	mov	rdi, qword ptr [rbp - 120] 
	mov	rsi, qword ptr [rbp - 136] 
	mov	rdx, qword ptr [rbp - 128] 
	mov	rcx, rax
	call	_ZSt34__uninitialized_move_if_noexcept_aIPjS0_N5Botan16secure_allocatorIjEEET0_T_S5_S4_RT1_
.Ltmp29:
	mov	qword ptr [rbp - 144], rax 
	jmp	.LBB97_5
.LBB97_5:
	jmp	.LBB97_14
.LBB97_6:
.Ltmp30:
	mov	ecx, edx
	mov	qword ptr [rbp - 56], rax
	mov	dword ptr [rbp - 60], ecx

	mov	rdi, qword ptr [rbp - 56]
	call	__cxa_begin_catch
	cmp	qword ptr [rbp - 48], 0
	mov	qword ptr [rbp - 152], rax 
	je	.LBB97_11

	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rbp - 16]
	lea	rsi, [rax + 4*rcx]
	mov	rdi, qword ptr [rbp - 72] 
	mov	qword ptr [rbp - 160], rax 
	mov	qword ptr [rbp - 168], rsi 
	call	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE19_M_get_Tp_allocatorEv
.Ltmp31:
	mov	rdi, qword ptr [rbp - 160] 
	mov	rsi, qword ptr [rbp - 168] 
	mov	rdx, rax
	call	_ZSt8_DestroyIPjN5Botan16secure_allocatorIjEEEvT_S4_RT0_
.Ltmp32:
	jmp	.LBB97_9
.LBB97_9:
	jmp	.LBB97_11
.LBB97_10:
.Ltmp37:
	mov	ecx, edx
	mov	qword ptr [rbp - 56], rax
	mov	dword ptr [rbp - 60], ecx
.Ltmp38:
	call	__cxa_end_catch
.Ltmp39:
	jmp	.LBB97_13
.LBB97_11:
	mov	rsi, qword ptr [rbp - 40]
	mov	rdx, qword ptr [rbp - 24]
.Ltmp33:
	mov	rdi, qword ptr [rbp - 72] 
	call	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE13_M_deallocateEPjm
.Ltmp34:
	jmp	.LBB97_12
.LBB97_12:
.Ltmp35:
	call	__cxa_rethrow
.Ltmp36:
	jmp	.LBB97_19
.LBB97_13:
	jmp	.LBB97_17
.LBB97_14:
	mov	rax, qword ptr [rbp - 72] 
	mov	rdi, qword ptr [rax]
	mov	rsi, qword ptr [rax + 8]
	mov	qword ptr [rbp - 176], rdi 
	mov	rdi, rax
	mov	qword ptr [rbp - 184], rsi 
	call	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE19_M_get_Tp_allocatorEv
	mov	rdi, qword ptr [rbp - 176] 
	mov	rsi, qword ptr [rbp - 184] 
	mov	rdx, rax
	call	_ZSt8_DestroyIPjN5Botan16secure_allocatorIjEEEvT_S4_RT0_
	movabs	rax, -3810490847815548749
	mov	rdx, qword ptr [rbp - 72] 
	mov	rsi, qword ptr [rbp - 72] 
	mov	rsi, qword ptr [rsi]
	mov	rdi, qword ptr [rbp - 72] 
	mov	rcx, qword ptr [rdi + 16]
	mov	r8, qword ptr [rdi]
	add	rcx, rax
	sub	rcx, r8
	sub	rcx, rax
	sar	rcx, 2
	mov	rdi, rdx
	mov	rdx, rcx
	call	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE13_M_deallocateEPjm
	mov	rax, qword ptr [rbp - 40]
	mov	rcx, qword ptr [rbp - 72] 
	mov	qword ptr [rcx], rax
	mov	rax, qword ptr [rbp - 40]
	mov	rdx, qword ptr [rbp - 32]
	shl	rdx, 2
	add	rax, rdx
	mov	rdx, qword ptr [rbp - 16]
	shl	rdx, 2
	add	rax, rdx
	mov	qword ptr [rcx + 8], rax
	mov	rax, qword ptr [rbp - 40]
	mov	rdx, qword ptr [rbp - 24]
	shl	rdx, 2
	add	rax, rdx
	mov	qword ptr [rcx + 16], rax
.LBB97_15:
	jmp	.LBB97_16
.LBB97_16:
	add	rsp, 192
	pop	rbp
	ret
.LBB97_17:
	mov	rdi, qword ptr [rbp - 56]
	call	_Unwind_Resume
.LBB97_18:
.Ltmp40:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 188], ecx 
	call	__clang_call_terminate
.LBB97_19:
.Lfunc_end97:
	.size	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE17_M_default_appendEm, .Lfunc_end97-_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE17_M_default_appendEm
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table97:
.Lexception8:
	.byte	255                     
	.byte	3                       
	.asciz	"\343\200"              
	.byte	3                       
	.byte	91                      
	.long	.Lfunc_begin8-.Lfunc_begin8 
	.long	.Ltmp26-.Lfunc_begin8   
	.long	0                       
	.byte	0                       
	.long	.Ltmp26-.Lfunc_begin8   
	.long	.Ltmp29-.Ltmp26         
	.long	.Ltmp30-.Lfunc_begin8   
	.byte	1                       
	.long	.Ltmp29-.Lfunc_begin8   
	.long	.Ltmp31-.Ltmp29         
	.long	0                       
	.byte	0                       
	.long	.Ltmp31-.Lfunc_begin8   
	.long	.Ltmp32-.Ltmp31         
	.long	.Ltmp37-.Lfunc_begin8   
	.byte	0                       
	.long	.Ltmp38-.Lfunc_begin8   
	.long	.Ltmp39-.Ltmp38         
	.long	.Ltmp40-.Lfunc_begin8   
	.byte	1                       
	.long	.Ltmp33-.Lfunc_begin8   
	.long	.Ltmp36-.Ltmp33         
	.long	.Ltmp37-.Lfunc_begin8   
	.byte	0                       
	.long	.Ltmp36-.Lfunc_begin8   
	.long	.Lfunc_end97-.Ltmp36    
	.long	0                       
	.byte	0                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZNSt6vectorIjN5Botan16secure_allocatorIjEEE15_M_erase_at_endEPj,"axG",@progbits,_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE15_M_erase_at_endEPj,comdat
	.weak	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE15_M_erase_at_endEPj 
	.p2align	4, 0x90
	.type	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE15_M_erase_at_endEPj,@function
_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE15_M_erase_at_endEPj: 
.Lfunc_begin9:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception9

	push	rbp
	mov	rbp, rsp
	sub	rsp, 48
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rsi, qword ptr [rbp - 8]
	mov	rdi, qword ptr [rbp - 16]
	mov	rax, qword ptr [rsi + 8]
	mov	qword ptr [rbp - 24], rdi 
	mov	rdi, rsi
	mov	qword ptr [rbp - 32], rsi 
	mov	qword ptr [rbp - 40], rax 
	call	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE19_M_get_Tp_allocatorEv
.Ltmp41:
	mov	rdi, qword ptr [rbp - 24] 
	mov	rsi, qword ptr [rbp - 40] 
	mov	rdx, rax
	call	_ZSt8_DestroyIPjN5Botan16secure_allocatorIjEEEvT_S4_RT0_
.Ltmp42:
	jmp	.LBB98_1
.LBB98_1:
	mov	rax, qword ptr [rbp - 16]
	mov	rcx, qword ptr [rbp - 32] 
	mov	qword ptr [rcx + 8], rax
	add	rsp, 48
	pop	rbp
	ret
.LBB98_2:
.Ltmp43:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 44], ecx 
	call	__clang_call_terminate
.Lfunc_end98:
	.size	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE15_M_erase_at_endEPj, .Lfunc_end98-_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE15_M_erase_at_endEPj
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table98:
.Lexception9:
	.byte	255                     
	.byte	3                       
	.byte	21                      
	.byte	3                       
	.byte	13                      
	.long	.Ltmp41-.Lfunc_begin9   
	.long	.Ltmp42-.Ltmp41         
	.long	.Ltmp43-.Lfunc_begin9   
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZSt27__uninitialized_default_n_aIPjmN5Botan16secure_allocatorIjEEET_S4_T0_RT1_,"axG",@progbits,_ZSt27__uninitialized_default_n_aIPjmN5Botan16secure_allocatorIjEEET_S4_T0_RT1_,comdat
	.weak	_ZSt27__uninitialized_default_n_aIPjmN5Botan16secure_allocatorIjEEET_S4_T0_RT1_ 
	.p2align	4, 0x90
	.type	_ZSt27__uninitialized_default_n_aIPjmN5Botan16secure_allocatorIjEEET_S4_T0_RT1_,@function
_ZSt27__uninitialized_default_n_aIPjmN5Botan16secure_allocatorIjEEET_S4_T0_RT1_: 
.Lfunc_begin10:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception10

	push	rbp
.Lcfi296:
	.cfi_def_cfa_offset 16
.Lcfi297:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi298:
	.cfi_def_cfa_register rbp
	sub	rsp, 80
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	rdx, qword ptr [rbp - 8]
	mov	qword ptr [rbp - 32], rdx
.LBB99_1:                               
	cmp	qword ptr [rbp - 16], 0
	jbe	.LBB99_8

	mov	rdi, qword ptr [rbp - 24]
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [rbp - 56], rdi 
	mov	rdi, rax
	call	_ZSt11__addressofIjEPT_RS0_
.Ltmp44:
	mov	rdi, qword ptr [rbp - 56] 
	mov	rsi, rax
	call	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE9constructIjJEEEDTcl12_S_constructfp_fp0_spclsr3stdE7forwardIT0_Efp1_EEERS2_PT_DpOS5_
.Ltmp45:
	jmp	.LBB99_3
.LBB99_3:                               
	jmp	.LBB99_4
.LBB99_4:                               
	xor	eax, eax
	mov	ecx, eax
	mov	rdx, qword ptr [rbp - 16]
	sub	rcx, -1
	sub	rdx, rcx
	mov	qword ptr [rbp - 16], rdx
	mov	rcx, qword ptr [rbp - 32]
	add	rcx, 4
	mov	qword ptr [rbp - 32], rcx
	jmp	.LBB99_1
.LBB99_5:
.Ltmp46:
	mov	ecx, edx
	mov	qword ptr [rbp - 40], rax
	mov	dword ptr [rbp - 44], ecx

	mov	rdi, qword ptr [rbp - 40]
	call	__cxa_begin_catch
	mov	rdi, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rbp - 32]
	mov	rdx, qword ptr [rbp - 24]
.Ltmp47:
	mov	qword ptr [rbp - 64], rax 
	call	_ZSt8_DestroyIPjN5Botan16secure_allocatorIjEEEvT_S4_RT0_
.Ltmp48:
	jmp	.LBB99_7
.LBB99_7:
.Ltmp49:
	call	__cxa_rethrow
.Ltmp50:
	jmp	.LBB99_13
.LBB99_8:
	mov	rax, qword ptr [rbp - 32]
	add	rsp, 80
	pop	rbp
	ret
.LBB99_9:
.Ltmp51:
	mov	ecx, edx
	mov	qword ptr [rbp - 40], rax
	mov	dword ptr [rbp - 44], ecx
.Ltmp52:
	call	__cxa_end_catch
.Ltmp53:
	jmp	.LBB99_10
.LBB99_10:
	jmp	.LBB99_11
.LBB99_11:
	mov	rdi, qword ptr [rbp - 40]
	call	_Unwind_Resume
.LBB99_12:
.Ltmp54:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 68], ecx 
	call	__clang_call_terminate
.LBB99_13:
.Lfunc_end99:
	.size	_ZSt27__uninitialized_default_n_aIPjmN5Botan16secure_allocatorIjEEET_S4_T0_RT1_, .Lfunc_end99-_ZSt27__uninitialized_default_n_aIPjmN5Botan16secure_allocatorIjEEET_S4_T0_RT1_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table99:
.Lexception10:
	.byte	255                     
	.byte	3                       
	.byte	73                      
	.byte	3                       
	.byte	65                      
	.long	.Ltmp44-.Lfunc_begin10  
	.long	.Ltmp45-.Ltmp44         
	.long	.Ltmp46-.Lfunc_begin10  
	.byte	1                       
	.long	.Ltmp45-.Lfunc_begin10  
	.long	.Ltmp47-.Ltmp45         
	.long	0                       
	.byte	0                       
	.long	.Ltmp47-.Lfunc_begin10  
	.long	.Ltmp50-.Ltmp47         
	.long	.Ltmp51-.Lfunc_begin10  
	.byte	0                       
	.long	.Ltmp52-.Lfunc_begin10  
	.long	.Ltmp53-.Ltmp52         
	.long	.Ltmp54-.Lfunc_begin10  
	.byte	1                       
	.long	.Ltmp53-.Lfunc_begin10  
	.long	.Lfunc_end99-.Ltmp53    
	.long	0                       
	.byte	0                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE19_M_get_Tp_allocatorEv 
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE19_M_get_Tp_allocatorEv: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	rax, rdi
	pop	rbp
	ret
.Lfunc_end100:
	.size	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE19_M_get_Tp_allocatorEv, .Lfunc_end100-_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE19_M_get_Tp_allocatorEv

	.section	.text._ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE12_M_check_lenEmPKc,"axG",@progbits,_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE12_M_check_lenEmPKc,comdat
	.weak	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE12_M_check_lenEmPKc 
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE12_M_check_lenEmPKc,@function
_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE12_M_check_lenEmPKc: 
	.cfi_startproc

	push	rbp
.Lcfi299:
	.cfi_def_cfa_offset 16
.Lcfi300:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi301:
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	sub	rsp, 208
.Lcfi302:
	.cfi_offset rbx, -32
.Lcfi303:
	.cfi_offset r14, -24
	mov	qword ptr [rbp - 64], rdi
	mov	qword ptr [rbp - 72], rsi
	mov	qword ptr [rbp - 80], rdx
	mov	rdx, qword ptr [rbp - 64]
	mov	qword ptr [rbp - 56], rdx
	mov	rdi, qword ptr [rbp - 56]
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE8max_sizeEv
	mov	rdi, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 120], rax 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	xor	ecx, ecx
	mov	edx, ecx
	sub	rdx, rax
	mov	rax, qword ptr [rbp - 120] 
	add	rax, rdx
	mov	qword ptr [rbp - 48], rax
	mov	rax, qword ptr [rbp - 72]
	mov	qword ptr [rbp - 40], rax
	mov	dword ptr [rbp - 100], -582962464
.LBB101_1:                              
	mov	eax, dword ptr [rbp - 100]
	mov	ecx, eax
	sub	ecx, -1774535993
	mov	dword ptr [rbp - 124], eax 
	mov	dword ptr [rbp - 128], ecx 
	je	.LBB101_8
	jmp	.LBB101_17
.LBB101_17:                             
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, -1587134744
	mov	dword ptr [rbp - 132], eax 
	je	.LBB101_14
	jmp	.LBB101_18
.LBB101_18:                             
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, -1385519246
	mov	dword ptr [rbp - 136], eax 
	je	.LBB101_7
	jmp	.LBB101_19
.LBB101_19:                             
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, -1373920866
	mov	dword ptr [rbp - 140], eax 
	je	.LBB101_9
	jmp	.LBB101_20
.LBB101_20:                             
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, -1291337054
	mov	dword ptr [rbp - 144], eax 
	je	.LBB101_6
	jmp	.LBB101_21
.LBB101_21:                             
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, -967515481
	mov	dword ptr [rbp - 148], eax 
	je	.LBB101_12
	jmp	.LBB101_22
.LBB101_22:                             
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, -766692378
	mov	dword ptr [rbp - 152], eax 
	je	.LBB101_4
	jmp	.LBB101_23
.LBB101_23:                             
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, -582962464
	mov	dword ptr [rbp - 156], eax 
	je	.LBB101_3
	jmp	.LBB101_24
.LBB101_24:                             
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, -462219664
	mov	dword ptr [rbp - 160], eax 
	je	.LBB101_13
	jmp	.LBB101_25
.LBB101_25:                             
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, 586183208
	mov	dword ptr [rbp - 164], eax 
	je	.LBB101_11
	jmp	.LBB101_26
.LBB101_26:                             
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, 1298834818
	mov	dword ptr [rbp - 168], eax 
	je	.LBB101_5
	jmp	.LBB101_27
.LBB101_27:                             
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, 1372568930
	mov	dword ptr [rbp - 172], eax 
	je	.LBB101_10
	jmp	.LBB101_28
.LBB101_28:                             
	mov	eax, dword ptr [rbp - 124] 
	sub	eax, 2059953023
	mov	dword ptr [rbp - 176], eax 
	je	.LBB101_15
	jmp	.LBB101_2
.LBB101_2:                              
	jmp	.LBB101_16
.LBB101_3:                              
	mov	eax, 1298834818
	mov	ecx, 3528274918
	mov	rdx, qword ptr [rbp - 48]
	mov	rsi, qword ptr [rbp - 40]
	cmp	rdx, rsi
	cmovb	eax, ecx
	mov	dword ptr [rbp - 100], eax
	jmp	.LBB101_16
.LBB101_4:
	mov	rdi, qword ptr [rbp - 80]
	call	_ZSt20__throw_length_errorPKc
.LBB101_5:                              
	mov	eax, 2707832552
	mov	ecx, 3003630242
	mov	edx, dword ptr [x.194]
	mov	esi, dword ptr [y.195]
	mov	edi, edx
	sub	edi, 74976391
	sub	edi, 1
	add	edi, 74976391
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 100], eax
	jmp	.LBB101_16
.LBB101_6:                              
	mov	rdi, qword ptr [rbp - 56]
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	mov	rdi, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 184], rax 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	lea	rdi, [rbp - 96]
	lea	rsi, [rbp - 72]
	mov	qword ptr [rbp - 96], rax
	call	_ZSt3maxImERKT_S2_S2_
	xor	ecx, ecx
	mov	esi, ecx
	mov	rax, qword ptr [rax]
	sub	rsi, rax
	mov	rax, qword ptr [rbp - 184] 
	sub	rax, rsi
	mov	qword ptr [rbp - 88], rax
	mov	rax, qword ptr [rbp - 88]
	mov	rdi, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 192], rax 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	mov	ecx, 2707832552
	mov	edx, 2909448050
	mov	rsi, qword ptr [rbp - 192] 
	cmp	rsi, rax
	setb	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 25], r8b
	mov	r9d, dword ptr [x.194]
	mov	r10d, dword ptr [y.195]
	mov	r11d, r9d
	sub	r11d, 1849618319
	sub	r11d, 1
	add	r11d, 1849618319
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	r8b
	cmp	r10d, 10
	setl	bl
	mov	r14b, r8b
	and	r14b, bl
	xor	r8b, bl
	or	r14b, r8b
	test	r14b, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 100], ecx
	jmp	.LBB101_16
.LBB101_7:                              
	mov	eax, 2520431303
	mov	ecx, 2921046430
	mov	dl, byte ptr [rbp - 25]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 100], eax
	jmp	.LBB101_16
.LBB101_8:                              
	mov	rax, qword ptr [rbp - 88]
	mov	rdi, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 200], rax 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE8max_sizeEv
	mov	ecx, 1372568930
	mov	edx, 2921046430
	mov	rdi, qword ptr [rbp - 200] 
	cmp	rdi, rax
	cmova	ecx, edx
	mov	dword ptr [rbp - 100], ecx
	jmp	.LBB101_16
.LBB101_9:                              
	mov	rdi, qword ptr [rbp - 56]
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE8max_sizeEv
	mov	dword ptr [rbp - 100], -462219664
	mov	qword ptr [rbp - 112], rax
	jmp	.LBB101_16
.LBB101_10:                             
	mov	eax, 2059953023
	mov	ecx, 586183208
	mov	edx, dword ptr [x.194]
	mov	esi, dword ptr [y.195]
	mov	edi, edx
	add	edi, 533878094
	sub	edi, 1
	sub	edi, 533878094
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 100], eax
	jmp	.LBB101_16
.LBB101_11:                             
	mov	eax, 2059953023
	mov	ecx, 3327451815
	mov	rdx, qword ptr [rbp - 88]
	mov	qword ptr [rbp - 24], rdx
	mov	esi, dword ptr [x.194]
	mov	edi, dword ptr [y.195]
	mov	r8d, esi
	sub	r8d, 387776140
	sub	r8d, 1
	add	r8d, 387776140
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	and	r11b, r10b
	xor	r9b, r10b
	or	r11b, r9b
	test	r11b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 100], eax
	jmp	.LBB101_16
.LBB101_12:                             
	mov	dword ptr [rbp - 100], -462219664
	mov	rax, qword ptr [rbp - 24]
	mov	qword ptr [rbp - 112], rax
	jmp	.LBB101_16
.LBB101_13:
	mov	rax, qword ptr [rbp - 112]
	add	rsp, 208
	pop	rbx
	pop	r14
	pop	rbp
	ret
.LBB101_14:                             
	mov	rdi, qword ptr [rbp - 56]
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	mov	rdi, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 208], rax 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	lea	rdi, [rbp - 96]
	lea	rsi, [rbp - 72]
	mov	qword ptr [rbp - 96], rax
	call	_ZSt3maxImERKT_S2_S2_
	movabs	rsi, 7324648647406401562
	mov	rax, qword ptr [rax]
	mov	rdi, qword ptr [rbp - 208] 
	add	rdi, rsi
	add	rdi, rax
	sub	rdi, rsi
	mov	qword ptr [rbp - 88], rdi
	mov	rdi, qword ptr [rbp - 56]
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	mov	dword ptr [rbp - 100], -1291337054
	mov	qword ptr [rbp - 216], rax 
	jmp	.LBB101_16
.LBB101_15:                             
	mov	dword ptr [rbp - 100], 586183208
.LBB101_16:                             
	jmp	.LBB101_1
.Lfunc_end101:
	.size	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE12_M_check_lenEmPKc, .Lfunc_end101-_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE12_M_check_lenEmPKc
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE11_M_allocateEm,comdat
	.weak	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE11_M_allocateEm 
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE11_M_allocateEm,@function
_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE11_M_allocateEm: 
	.cfi_startproc

	push	rbp
.Lcfi304:
	.cfi_def_cfa_offset 16
.Lcfi305:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi306:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 120
.Lcfi307:
	.cfi_offset rbx, -40
.Lcfi308:
	.cfi_offset r14, -32
.Lcfi309:
	.cfi_offset r15, -24
	mov	qword ptr [rbp - 56], rdi
	mov	qword ptr [rbp - 64], rsi
	mov	rsi, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 48], rsi
	mov	rsi, qword ptr [rbp - 64]
	mov	qword ptr [rbp - 40], rsi
	mov	dword ptr [rbp - 68], 949688406
.LBB102_1:                              
	mov	eax, dword ptr [rbp - 68]
	mov	ecx, eax
	sub	ecx, -1792004890
	mov	dword ptr [rbp - 84], eax 
	mov	dword ptr [rbp - 88], ecx 
	je	.LBB102_8
	jmp	.LBB102_14
.LBB102_14:                             
	mov	eax, dword ptr [rbp - 84] 
	sub	eax, -1197494224
	mov	dword ptr [rbp - 92], eax 
	je	.LBB102_6
	jmp	.LBB102_15
.LBB102_15:                             
	mov	eax, dword ptr [rbp - 84] 
	sub	eax, -1095694479
	mov	dword ptr [rbp - 96], eax 
	je	.LBB102_9
	jmp	.LBB102_16
.LBB102_16:                             
	mov	eax, dword ptr [rbp - 84] 
	sub	eax, -1046250467
	mov	dword ptr [rbp - 100], eax 
	je	.LBB102_5
	jmp	.LBB102_17
.LBB102_17:                             
	mov	eax, dword ptr [rbp - 84] 
	sub	eax, -486016211
	mov	dword ptr [rbp - 104], eax 
	je	.LBB102_7
	jmp	.LBB102_18
.LBB102_18:                             
	mov	eax, dword ptr [rbp - 84] 
	sub	eax, 667131142
	mov	dword ptr [rbp - 108], eax 
	je	.LBB102_10
	jmp	.LBB102_19
.LBB102_19:                             
	mov	eax, dword ptr [rbp - 84] 
	sub	eax, 819566543
	mov	dword ptr [rbp - 112], eax 
	je	.LBB102_11
	jmp	.LBB102_20
.LBB102_20:                             
	mov	eax, dword ptr [rbp - 84] 
	sub	eax, 949688406
	mov	dword ptr [rbp - 116], eax 
	je	.LBB102_3
	jmp	.LBB102_21
.LBB102_21:                             
	mov	eax, dword ptr [rbp - 84] 
	sub	eax, 1199916891
	mov	dword ptr [rbp - 120], eax 
	je	.LBB102_4
	jmp	.LBB102_22
.LBB102_22:                             
	mov	eax, dword ptr [rbp - 84] 
	sub	eax, 1348722288
	mov	dword ptr [rbp - 124], eax 
	je	.LBB102_12
	jmp	.LBB102_2
.LBB102_2:                              
	jmp	.LBB102_13
.LBB102_3:                              
	mov	eax, 3808951085
	mov	ecx, 1199916891
	mov	rdx, qword ptr [rbp - 40]
	cmp	rdx, 0
	cmovne	eax, ecx
	mov	dword ptr [rbp - 68], eax
	jmp	.LBB102_13
.LBB102_4:                              
	mov	eax, 819566543
	mov	ecx, 3248716829
	xor	edx, edx
	mov	esi, dword ptr [x.196]
	mov	edi, dword ptr [y.197]
	sub	edx, 1
	mov	r8d, esi
	add	r8d, edx
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	and	r11b, r10b
	xor	r9b, r10b
	or	r11b, r9b
	test	r11b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 68], eax
	jmp	.LBB102_13
.LBB102_5:                              
	mov	rax, qword ptr [rbp - 48]
	mov	rsi, qword ptr [rbp - 64]
	mov	rdi, rax
	call	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE8allocateERS2_m
	mov	ecx, 819566543
	mov	edx, 3097473072
	mov	qword ptr [rbp - 32], rax
	mov	r8d, dword ptr [x.196]
	mov	r9d, dword ptr [y.197]
	mov	r10d, r8d
	sub	r10d, -270937133
	sub	r10d, 1
	add	r10d, -270937133
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 68], ecx
	jmp	.LBB102_13
.LBB102_6:                              
	mov	dword ptr [rbp - 68], 667131142
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [rbp - 80], rax
	jmp	.LBB102_13
.LBB102_7:                              
	mov	eax, 1348722288
	mov	ecx, 2502962406
	xor	edx, edx
	mov	esi, dword ptr [x.196]
	mov	edi, dword ptr [y.197]
	sub	edx, 1
	mov	r8d, esi
	add	r8d, edx
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	and	r11b, r10b
	xor	r9b, r10b
	or	r11b, r9b
	test	r11b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 68], eax
	jmp	.LBB102_13
.LBB102_8:                              
	mov	eax, 1348722288
	mov	ecx, 3199272817
	mov	dl, 1
	mov	esi, dword ptr [x.196]
	mov	edi, dword ptr [y.197]
	mov	r8d, esi
	sub	r8d, -404337279
	sub	r8d, 1
	add	r8d, -404337279
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 0
	mov	r14b, r11b
	and	r14b, 0
	and	r9b, dl
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 0
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 68], eax
	jmp	.LBB102_13
.LBB102_9:                              
	mov	dword ptr [rbp - 68], 667131142
	mov	qword ptr [rbp - 80], 0
	jmp	.LBB102_13
.LBB102_10:
	mov	rax, qword ptr [rbp - 80]
	add	rsp, 120
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB102_11:                             
	mov	rax, qword ptr [rbp - 48]
	mov	rsi, qword ptr [rbp - 64]
	mov	rdi, rax
	call	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE8allocateERS2_m
	mov	dword ptr [rbp - 68], -1046250467
	mov	qword ptr [rbp - 136], rax 
	jmp	.LBB102_13
.LBB102_12:                             
	mov	dword ptr [rbp - 68], -1792004890
.LBB102_13:                             
	jmp	.LBB102_1
.Lfunc_end102:
	.size	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE11_M_allocateEm, .Lfunc_end102-_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE11_M_allocateEm
	.cfi_endproc

	.section	.text._ZSt34__uninitialized_move_if_noexcept_aIPjS0_N5Botan16secure_allocatorIjEEET0_T_S5_S4_RT1_,"axG",@progbits,_ZSt34__uninitialized_move_if_noexcept_aIPjS0_N5Botan16secure_allocatorIjEEET0_T_S5_S4_RT1_,comdat
	.weak	_ZSt34__uninitialized_move_if_noexcept_aIPjS0_N5Botan16secure_allocatorIjEEET0_T_S5_S4_RT1_ 
	.p2align	4, 0x90
	.type	_ZSt34__uninitialized_move_if_noexcept_aIPjS0_N5Botan16secure_allocatorIjEEET0_T_S5_S4_RT1_,@function
_ZSt34__uninitialized_move_if_noexcept_aIPjS0_N5Botan16secure_allocatorIjEEET0_T_S5_S4_RT1_: 
	.cfi_startproc

	push	rbp
.Lcfi310:
	.cfi_def_cfa_offset 16
.Lcfi311:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi312:
	.cfi_def_cfa_register rbp
	sub	rsp, 48
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	qword ptr [rbp - 32], rcx
	mov	rdi, qword ptr [rbp - 8]
	call	_ZSt32__make_move_if_noexcept_iteratorIjSt13move_iteratorIPjEET0_PT_
	mov	qword ptr [rbp - 40], rax
	mov	rdi, qword ptr [rbp - 16]
	call	_ZSt32__make_move_if_noexcept_iteratorIjSt13move_iteratorIPjEET0_PT_
	mov	qword ptr [rbp - 48], rax
	mov	rdx, qword ptr [rbp - 24]
	mov	rcx, qword ptr [rbp - 32]
	mov	rdi, qword ptr [rbp - 40]
	mov	rsi, qword ptr [rbp - 48]
	call	_ZSt22__uninitialized_copy_aISt13move_iteratorIPjES1_N5Botan16secure_allocatorIjEEET0_T_S7_S6_RT1_
	add	rsp, 48
	pop	rbp
	ret
.Lfunc_end103:
	.size	_ZSt34__uninitialized_move_if_noexcept_aIPjS0_N5Botan16secure_allocatorIjEEET0_T_S5_S4_RT1_, .Lfunc_end103-_ZSt34__uninitialized_move_if_noexcept_aIPjS0_N5Botan16secure_allocatorIjEEET0_T_S5_S4_RT1_
	.cfi_endproc

	.section	.text._ZSt8_DestroyIPjN5Botan16secure_allocatorIjEEEvT_S4_RT0_,"axG",@progbits,_ZSt8_DestroyIPjN5Botan16secure_allocatorIjEEEvT_S4_RT0_,comdat
	.weak	_ZSt8_DestroyIPjN5Botan16secure_allocatorIjEEEvT_S4_RT0_ 
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPjN5Botan16secure_allocatorIjEEEvT_S4_RT0_,@function
_ZSt8_DestroyIPjN5Botan16secure_allocatorIjEEEvT_S4_RT0_: 
	.cfi_startproc

	push	rbp
.Lcfi313:
	.cfi_def_cfa_offset 16
.Lcfi314:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi315:
	.cfi_def_cfa_register rbp
	sub	rsp, 80
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	dword ptr [rbp - 28], -1494190553
.LBB104_1:                              
	mov	eax, dword ptr [rbp - 28]
	mov	ecx, eax
	sub	ecx, -1494190553
	mov	dword ptr [rbp - 32], eax 
	mov	dword ptr [rbp - 36], ecx 
	je	.LBB104_3
	jmp	.LBB104_11
.LBB104_11:                             
	mov	eax, dword ptr [rbp - 32] 
	sub	eax, -784105982
	mov	dword ptr [rbp - 40], eax 
	je	.LBB104_5
	jmp	.LBB104_12
.LBB104_12:                             
	mov	eax, dword ptr [rbp - 32] 
	sub	eax, -652620397
	mov	dword ptr [rbp - 44], eax 
	je	.LBB104_4
	jmp	.LBB104_13
.LBB104_13:                             
	mov	eax, dword ptr [rbp - 32] 
	sub	eax, -621856647
	mov	dword ptr [rbp - 48], eax 
	je	.LBB104_6
	jmp	.LBB104_14
.LBB104_14:                             
	mov	eax, dword ptr [rbp - 32] 
	sub	eax, -133085036
	mov	dword ptr [rbp - 52], eax 
	je	.LBB104_7
	jmp	.LBB104_15
.LBB104_15:                             
	mov	eax, dword ptr [rbp - 32] 
	sub	eax, 137602432
	mov	dword ptr [rbp - 56], eax 
	je	.LBB104_9
	jmp	.LBB104_16
.LBB104_16:                             
	mov	eax, dword ptr [rbp - 32] 
	sub	eax, 1342187581
	mov	dword ptr [rbp - 60], eax 
	je	.LBB104_8
	jmp	.LBB104_2
.LBB104_2:                              
	jmp	.LBB104_10
.LBB104_3:                              
	mov	eax, 3673110649
	mov	ecx, 3642346899
	mov	rdx, qword ptr [rbp - 8]
	cmp	rdx, qword ptr [rbp - 16]
	cmovne	eax, ecx
	mov	dword ptr [rbp - 28], eax
	jmp	.LBB104_10
.LBB104_4:                              
	mov	rdi, qword ptr [rbp - 24]
	mov	rax, qword ptr [rbp - 8]
	mov	qword ptr [rbp - 72], rdi 
	mov	rdi, rax
	call	_ZSt11__addressofIjEPT_RS0_
	mov	rdi, qword ptr [rbp - 72] 
	mov	rsi, rax
	call	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE7destroyIjEEvRS2_PT_
	mov	dword ptr [rbp - 28], -784105982
	jmp	.LBB104_10
.LBB104_5:                              
	mov	rax, qword ptr [rbp - 8]
	add	rax, 4
	mov	qword ptr [rbp - 8], rax
	mov	dword ptr [rbp - 28], -1494190553
	jmp	.LBB104_10
.LBB104_6:                              
	mov	eax, 137602432
	mov	ecx, 4161882260
	mov	edx, dword ptr [x.200]
	mov	esi, dword ptr [y.201]
	mov	edi, edx
	add	edi, -528421679
	sub	edi, 1
	sub	edi, -528421679
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 28], eax
	jmp	.LBB104_10
.LBB104_7:                              
	mov	eax, 137602432
	mov	ecx, 1342187581
	mov	edx, dword ptr [x.200]
	mov	esi, dword ptr [y.201]
	mov	edi, edx
	add	edi, 359984927
	sub	edi, 1
	sub	edi, 359984927
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 28], eax
	jmp	.LBB104_10
.LBB104_8:
	add	rsp, 80
	pop	rbp
	ret
.LBB104_9:                              
	mov	dword ptr [rbp - 28], -133085036
.LBB104_10:                             
	jmp	.LBB104_1
.Lfunc_end104:
	.size	_ZSt8_DestroyIPjN5Botan16secure_allocatorIjEEEvT_S4_RT0_, .Lfunc_end104-_ZSt8_DestroyIPjN5Botan16secure_allocatorIjEEEvT_S4_RT0_
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE13_M_deallocateEPjm,"axG",@progbits,_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE13_M_deallocateEPjm,comdat
	.weak	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE13_M_deallocateEPjm 
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE13_M_deallocateEPjm,@function
_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE13_M_deallocateEPjm: 
	.cfi_startproc

	push	rbp
.Lcfi316:
	.cfi_def_cfa_offset 16
.Lcfi317:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi318:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 88
.Lcfi319:
	.cfi_offset rbx, -56
.Lcfi320:
	.cfi_offset r12, -48
.Lcfi321:
	.cfi_offset r13, -40
.Lcfi322:
	.cfi_offset r14, -32
.Lcfi323:
	.cfi_offset r15, -24
	mov	qword ptr [rbp - 64], rdi
	mov	qword ptr [rbp - 72], rsi
	mov	qword ptr [rbp - 80], rdx
	mov	rdx, qword ptr [rbp - 64]
	mov	qword ptr [rbp - 56], rdx
	mov	rdx, qword ptr [rbp - 72]
	mov	qword ptr [rbp - 48], rdx
	mov	dword ptr [rbp - 84], -808616280
.LBB105_1:                              
	mov	eax, dword ptr [rbp - 84]
	mov	ecx, eax
	sub	ecx, -808616280
	mov	dword ptr [rbp - 88], eax 
	mov	dword ptr [rbp - 92], ecx 
	je	.LBB105_3
	jmp	.LBB105_13
.LBB105_13:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, -706701495
	mov	dword ptr [rbp - 96], eax 
	je	.LBB105_4
	jmp	.LBB105_14
.LBB105_14:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 568197128
	mov	dword ptr [rbp - 100], eax 
	je	.LBB105_11
	jmp	.LBB105_15
.LBB105_15:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 616886592
	mov	dword ptr [rbp - 104], eax 
	je	.LBB105_9
	jmp	.LBB105_16
.LBB105_16:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 1293789193
	mov	dword ptr [rbp - 108], eax 
	je	.LBB105_10
	jmp	.LBB105_17
.LBB105_17:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 1303680894
	mov	dword ptr [rbp - 112], eax 
	je	.LBB105_7
	jmp	.LBB105_18
.LBB105_18:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 1639273759
	mov	dword ptr [rbp - 116], eax 
	je	.LBB105_5
	jmp	.LBB105_19
.LBB105_19:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 1829838118
	mov	dword ptr [rbp - 120], eax 
	je	.LBB105_6
	jmp	.LBB105_20
.LBB105_20:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 1931564677
	mov	dword ptr [rbp - 124], eax 
	je	.LBB105_8
	jmp	.LBB105_2
.LBB105_2:                              
	jmp	.LBB105_12
.LBB105_3:                              
	mov	eax, 1303680894
	mov	ecx, 3588265801
	mov	rdx, qword ptr [rbp - 48]
	cmp	rdx, 0
	cmovne	eax, ecx
	mov	dword ptr [rbp - 84], eax
	jmp	.LBB105_12
.LBB105_4:                              
	mov	eax, 1293789193
	mov	ecx, 1639273759
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.202]
	mov	r8d, dword ptr [y.203]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 1
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, -1
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 1
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 84], eax
	jmp	.LBB105_12
.LBB105_5:                              
	mov	rax, qword ptr [rbp - 56]
	mov	rsi, qword ptr [rbp - 72]
	mov	rdx, qword ptr [rbp - 80]
	mov	rdi, rax
	call	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE10deallocateERS2_Pjm
	mov	ecx, 1293789193
	mov	r8d, 1829838118
	mov	r9b, 1
	mov	r10d, dword ptr [x.202]
	mov	r11d, dword ptr [y.203]
	mov	ebx, r10d
	sub	ebx, -553633984
	sub	ebx, 1
	add	ebx, -553633984
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r14b
	cmp	r11d, 10
	setl	r15b
	mov	r12b, r14b
	xor	r12b, -1
	mov	r13b, r15b
	xor	r13b, -1
	xor	r9b, 1
	mov	al, r12b
	and	al, -1
	and	r14b, r9b
	mov	dl, r13b
	and	dl, -1
	and	r15b, r9b
	or	al, r14b
	or	dl, r15b
	xor	al, dl
	or	r12b, r13b
	xor	r12b, -1
	or	r9b, 1
	and	r12b, r9b
	or	al, r12b
	test	al, 1
	cmovne	ecx, r8d
	mov	dword ptr [rbp - 84], ecx
	jmp	.LBB105_12
.LBB105_6:                              
	mov	dword ptr [rbp - 84], 1303680894
	jmp	.LBB105_12
.LBB105_7:                              
	mov	eax, 568197128
	mov	ecx, 1931564677
	mov	edx, dword ptr [x.202]
	mov	esi, dword ptr [y.203]
	mov	edi, edx
	add	edi, -1113930545
	sub	edi, 1
	sub	edi, -1113930545
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 84], eax
	jmp	.LBB105_12
.LBB105_8:                              
	mov	eax, 568197128
	mov	ecx, 616886592
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.202]
	mov	r8d, dword ptr [y.203]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 0
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, 0
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 0
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 84], eax
	jmp	.LBB105_12
.LBB105_9:
	add	rsp, 88
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB105_10:                             
	mov	rax, qword ptr [rbp - 56]
	mov	rsi, qword ptr [rbp - 72]
	mov	rdx, qword ptr [rbp - 80]
	mov	rdi, rax
	call	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE10deallocateERS2_Pjm
	mov	dword ptr [rbp - 84], 1639273759
	jmp	.LBB105_12
.LBB105_11:                             
	mov	dword ptr [rbp - 84], 1931564677
.LBB105_12:                             
	jmp	.LBB105_1
.Lfunc_end105:
	.size	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE13_M_deallocateEPjm, .Lfunc_end105-_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE13_M_deallocateEPjm
	.cfi_endproc

	.section	.text.__clang_call_terminate,"axG",@progbits,__clang_call_terminate,comdat
	.hidden	__clang_call_terminate  
	.weak	__clang_call_terminate
	.p2align	4, 0x90
	.type	__clang_call_terminate,@function
__clang_call_terminate:                 

	push	rax
	call	__cxa_begin_catch
	mov	qword ptr [rsp], rax    
	call	_ZSt9terminatev
.Lfunc_end106:
	.size	__clang_call_terminate, .Lfunc_end106-__clang_call_terminate

	.section	.text._ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE9constructIjJEEEDTcl12_S_constructfp_fp0_spclsr3stdE7forwardIT0_Efp1_EEERS2_PT_DpOS5_,"axG",@progbits,_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE9constructIjJEEEDTcl12_S_constructfp_fp0_spclsr3stdE7forwardIT0_Efp1_EEERS2_PT_DpOS5_,comdat
	.weak	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE9constructIjJEEEDTcl12_S_constructfp_fp0_spclsr3stdE7forwardIT0_Efp1_EEERS2_PT_DpOS5_ 
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE9constructIjJEEEDTcl12_S_constructfp_fp0_spclsr3stdE7forwardIT0_Efp1_EEERS2_PT_DpOS5_,@function
_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE9constructIjJEEEDTcl12_S_constructfp_fp0_spclsr3stdE7forwardIT0_Efp1_EEERS2_PT_DpOS5_: 
	.cfi_startproc

	push	rbp
.Lcfi324:
	.cfi_def_cfa_offset 16
.Lcfi325:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi326:
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rdi, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rbp - 16]
	call	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE12_S_constructIjJEEENSt9enable_ifIXsr6__and_ISt6__and_IJSt6__not_INS3_18__construct_helperIT_JDpT0_EE4typeEESt16is_constructibleIS9_JSB_EEEEEE5valueEvE4typeERS2_PS9_DpOSA_
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end107:
	.size	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE9constructIjJEEEDTcl12_S_constructfp_fp0_spclsr3stdE7forwardIT0_Efp1_EEERS2_PT_DpOS5_, .Lfunc_end107-_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE9constructIjJEEEDTcl12_S_constructfp_fp0_spclsr3stdE7forwardIT0_Efp1_EEERS2_PT_DpOS5_
	.cfi_endproc

	.section	.text._ZSt11__addressofIjEPT_RS0_,"axG",@progbits,_ZSt11__addressofIjEPT_RS0_,comdat
	.weak	_ZSt11__addressofIjEPT_RS0_ 
	.p2align	4, 0x90
	.type	_ZSt11__addressofIjEPT_RS0_,@function
_ZSt11__addressofIjEPT_RS0_:            

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	pop	rbp
	ret
.Lfunc_end108:
	.size	_ZSt11__addressofIjEPT_RS0_, .Lfunc_end108-_ZSt11__addressofIjEPT_RS0_

	.section	.text._ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE12_S_constructIjJEEENSt9enable_ifIXsr6__and_ISt6__and_IJSt6__not_INS3_18__construct_helperIT_JDpT0_EE4typeEESt16is_constructibleIS9_JSB_EEEEEE5valueEvE4typeERS2_PS9_DpOSA_,"axG",@progbits,_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE12_S_constructIjJEEENSt9enable_ifIXsr6__and_ISt6__and_IJSt6__not_INS3_18__construct_helperIT_JDpT0_EE4typeEESt16is_constructibleIS9_JSB_EEEEEE5valueEvE4typeERS2_PS9_DpOSA_,comdat
	.weak	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE12_S_constructIjJEEENSt9enable_ifIXsr6__and_ISt6__and_IJSt6__not_INS3_18__construct_helperIT_JDpT0_EE4typeEESt16is_constructibleIS9_JSB_EEEEEE5valueEvE4typeERS2_PS9_DpOSA_ 
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE12_S_constructIjJEEENSt9enable_ifIXsr6__and_ISt6__and_IJSt6__not_INS3_18__construct_helperIT_JDpT0_EE4typeEESt16is_constructibleIS9_JSB_EEEEEE5valueEvE4typeERS2_PS9_DpOSA_,@function
_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE12_S_constructIjJEEENSt9enable_ifIXsr6__and_ISt6__and_IJSt6__not_INS3_18__construct_helperIT_JDpT0_EE4typeEESt16is_constructibleIS9_JSB_EEEEEE5valueEvE4typeERS2_PS9_DpOSA_: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rsi, qword ptr [rbp - 16]
	mov	dword ptr [rsi], 0
	pop	rbp
	ret
.Lfunc_end109:
	.size	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE12_S_constructIjJEEENSt9enable_ifIXsr6__and_ISt6__and_IJSt6__not_INS3_18__construct_helperIT_JDpT0_EE4typeEESt16is_constructibleIS9_JSB_EEEEEE5valueEvE4typeERS2_PS9_DpOSA_, .Lfunc_end109-_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE12_S_constructIjJEEENSt9enable_ifIXsr6__and_ISt6__and_IJSt6__not_INS3_18__construct_helperIT_JDpT0_EE4typeEESt16is_constructibleIS9_JSB_EEEEEE5valueEvE4typeERS2_PS9_DpOSA_

	.section	.text._ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE8max_sizeEv,"axG",@progbits,_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE8max_sizeEv,comdat
	.weak	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE8max_sizeEv 
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE8max_sizeEv,@function
_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE8max_sizeEv: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNKSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE19_M_get_Tp_allocatorEv
	mov	rdi, rax
	call	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE8max_sizeERKS2_
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end110:
	.size	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE8max_sizeEv, .Lfunc_end110-_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE8max_sizeEv

	.section	.text._ZSt3maxImERKT_S2_S2_,"axG",@progbits,_ZSt3maxImERKT_S2_S2_,comdat
	.weak	_ZSt3maxImERKT_S2_S2_   
	.p2align	4, 0x90
	.type	_ZSt3maxImERKT_S2_S2_,@function
_ZSt3maxImERKT_S2_S2_:                  

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 88
	mov	eax, dword ptr [x.214]
	mov	ecx, dword ptr [y.215]
	mov	edx, eax
	add	edx, 711889885
	sub	edx, 1
	sub	edx, 711889885
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 74], r8b
	cmp	ecx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 73], r8b
	mov	dword ptr [rbp - 80], 403683727
	mov	qword ptr [rbp - 88], rdi 
	mov	qword ptr [rbp - 96], rsi 
.LBB111_1:                              
	mov	eax, dword ptr [rbp - 80]
	mov	ecx, eax
	sub	ecx, -2016993096
	mov	dword ptr [rbp - 100], eax 
	mov	dword ptr [rbp - 104], ecx 
	je	.LBB111_8
	jmp	.LBB111_11
.LBB111_11:                             
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, -1960058575
	mov	dword ptr [rbp - 108], eax 
	je	.LBB111_6
	jmp	.LBB111_12
.LBB111_12:                             
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, -567605189
	mov	dword ptr [rbp - 112], eax 
	je	.LBB111_4
	jmp	.LBB111_13
.LBB111_13:                             
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, -188868818
	mov	dword ptr [rbp - 116], eax 
	je	.LBB111_9
	jmp	.LBB111_14
.LBB111_14:                             
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, 403683727
	mov	dword ptr [rbp - 120], eax 
	je	.LBB111_3
	jmp	.LBB111_15
.LBB111_15:                             
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, 552811517
	mov	dword ptr [rbp - 124], eax 
	je	.LBB111_5
	jmp	.LBB111_16
.LBB111_16:                             
	mov	eax, dword ptr [rbp - 100] 
	sub	eax, 2084644780
	mov	dword ptr [rbp - 128], eax 
	je	.LBB111_7
	jmp	.LBB111_2
.LBB111_2:                              
	jmp	.LBB111_10
.LBB111_3:                              
	mov	eax, 4106098478
	mov	ecx, 3727362107
	mov	dl, byte ptr [rbp - 74]
	mov	sil, byte ptr [rbp - 73]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 80], eax
	jmp	.LBB111_10
.LBB111_4:                              
	mov	eax, 4106098478
	mov	ecx, 552811517
	mov	dl, 1
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	qword ptr [rbp - 72], rsi
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	qword ptr [rbp - 64], rsi
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	qword ptr [rbp - 56], rsi
	mov	rsi, qword ptr [rbp - 64]
	mov	rdi, qword ptr [rbp - 88] 
	mov	qword ptr [rsi], rdi
	mov	rsi, qword ptr [rbp - 56]
	mov	r8, qword ptr [rbp - 96] 
	mov	qword ptr [rsi], r8
	mov	rsi, qword ptr [rbp - 64]
	mov	rsi, qword ptr [rsi]
	mov	rsi, qword ptr [rsi]
	mov	r9, qword ptr [rbp - 56]
	mov	r9, qword ptr [r9]
	cmp	rsi, qword ptr [r9]
	setb	r10b
	and	r10b, 1
	mov	byte ptr [rbp - 41], r10b
	mov	r11d, dword ptr [x.214]
	mov	ebx, dword ptr [y.215]
	mov	r14d, r11d
	add	r14d, -931141483
	sub	r14d, 1
	sub	r14d, -931141483
	imul	r11d, r14d
	and	r11d, 1
	cmp	r11d, 0
	sete	r10b
	cmp	ebx, 10
	setl	r15b
	mov	r12b, r10b
	xor	r12b, -1
	mov	r13b, r15b
	xor	r13b, -1
	xor	dl, 1
	mov	sil, r12b
	and	sil, -1
	and	r10b, dl
	mov	dil, r13b
	and	dil, -1
	and	r15b, dl
	or	sil, r10b
	or	dil, r15b
	xor	sil, dil
	or	r12b, r13b
	xor	r12b, -1
	or	dl, 1
	and	r12b, dl
	or	sil, r12b
	test	sil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 80], eax
	jmp	.LBB111_10
.LBB111_5:                              
	mov	eax, 2084644780
	mov	ecx, 2334908721
	mov	dl, byte ptr [rbp - 41]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 80], eax
	jmp	.LBB111_10
.LBB111_6:                              
	mov	rax, qword ptr [rbp - 56]
	mov	rax, qword ptr [rax]
	mov	rcx, qword ptr [rbp - 72]
	mov	qword ptr [rcx], rax
	mov	dword ptr [rbp - 80], -2016993096
	jmp	.LBB111_10
.LBB111_7:                              
	mov	rax, qword ptr [rbp - 64]
	mov	rax, qword ptr [rax]
	mov	rcx, qword ptr [rbp - 72]
	mov	qword ptr [rcx], rax
	mov	dword ptr [rbp - 80], -2016993096
	jmp	.LBB111_10
.LBB111_8:
	mov	rax, qword ptr [rbp - 72]
	mov	rax, qword ptr [rax]
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB111_9:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 88] 
	mov	qword ptr [rax], rdx
	mov	rax, qword ptr [rbp - 96] 
	mov	qword ptr [rcx], rax
	mov	dword ptr [rbp - 80], -567605189
.LBB111_10:                             
	jmp	.LBB111_1
.Lfunc_end111:
	.size	_ZSt3maxImERKT_S2_S2_, .Lfunc_end111-_ZSt3maxImERKT_S2_S2_

	.section	.text._ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE8max_sizeERKS2_,"axG",@progbits,_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE8max_sizeERKS2_,comdat
	.weak	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE8max_sizeERKS2_ 
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE8max_sizeERKS2_,@function
_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE8max_sizeERKS2_: 
.Lfunc_begin11:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception11

	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
.Ltmp55:
	xor	eax, eax
	mov	cl, al
	mov	esi, eax
	mov	al, cl
	call	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE11_S_max_sizeIKS2_EEmRT_z
.Ltmp56:
	mov	qword ptr [rbp - 16], rax 
	jmp	.LBB112_1
.LBB112_1:
	mov	rax, qword ptr [rbp - 16] 
	add	rsp, 32
	pop	rbp
	ret
.LBB112_2:
.Ltmp57:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 20], ecx 
	call	__clang_call_terminate
.Lfunc_end112:
	.size	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE8max_sizeERKS2_, .Lfunc_end112-_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE8max_sizeERKS2_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table112:
.Lexception11:
	.byte	255                     
	.byte	3                       
	.byte	21                      
	.byte	3                       
	.byte	13                      
	.long	.Ltmp55-.Lfunc_begin11  
	.long	.Ltmp56-.Ltmp55         
	.long	.Ltmp57-.Lfunc_begin11  
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZNKSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNKSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNKSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE19_M_get_Tp_allocatorEv 
	.p2align	4, 0x90
	.type	_ZNKSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE19_M_get_Tp_allocatorEv,@function
_ZNKSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE19_M_get_Tp_allocatorEv: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	rax, rdi
	pop	rbp
	ret
.Lfunc_end113:
	.size	_ZNKSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE19_M_get_Tp_allocatorEv, .Lfunc_end113-_ZNKSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE19_M_get_Tp_allocatorEv

	.section	.text._ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE11_S_max_sizeIKS2_EEmRT_z,"axG",@progbits,_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE11_S_max_sizeIKS2_EEmRT_z,comdat
	.weak	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE11_S_max_sizeIKS2_EEmRT_z 
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE11_S_max_sizeIKS2_EEmRT_z,@function
_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE11_S_max_sizeIKS2_EEmRT_z: 

	push	rbp
	mov	rbp, rsp
	push	r14
	push	rbx
	sub	rsp, 48
	mov	eax, dword ptr [x.218]
	mov	ecx, dword ptr [y.219]
	mov	edx, eax
	sub	edx, -1042645693
	sub	edx, 1
	add	edx, -1042645693
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 18], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 17], sil
	mov	dword ptr [rbp - 24], -1269620207
	mov	qword ptr [rbp - 32], rdi 
.LBB114_1:                              
	mov	eax, dword ptr [rbp - 24]
	mov	ecx, eax
	sub	ecx, -1927924179
	mov	dword ptr [rbp - 36], eax 
	mov	dword ptr [rbp - 40], ecx 
	je	.LBB114_6
	jmp	.LBB114_8
.LBB114_8:                              
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, -1269620207
	mov	dword ptr [rbp - 44], eax 
	je	.LBB114_3
	jmp	.LBB114_9
.LBB114_9:                              
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, 1603115086
	mov	dword ptr [rbp - 48], eax 
	je	.LBB114_4
	jmp	.LBB114_10
.LBB114_10:                             
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, 2028795305
	mov	dword ptr [rbp - 52], eax 
	je	.LBB114_5
	jmp	.LBB114_2
.LBB114_2:                              
	jmp	.LBB114_7
.LBB114_3:                              
	mov	eax, 2367043117
	mov	ecx, 1603115086
	mov	dl, byte ptr [rbp - 18]
	mov	sil, byte ptr [rbp - 17]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 24], eax
	jmp	.LBB114_7
.LBB114_4:                              
	mov	eax, 2367043117
	mov	ecx, 2028795305
	xor	edx, edx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 32] 
	mov	qword ptr [rsi], rdi
	mov	r8d, dword ptr [x.218]
	mov	r9d, dword ptr [y.219]
	sub	edx, 1
	mov	r10d, r8d
	add	r10d, edx
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 24], eax
	jmp	.LBB114_7
.LBB114_5:
	movabs	rax, 4611686018427387903
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
.LBB114_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 32] 
	mov	qword ptr [rax], rcx
	mov	dword ptr [rbp - 24], 1603115086
.LBB114_7:                              
	jmp	.LBB114_1
.Lfunc_end114:
	.size	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE11_S_max_sizeIKS2_EEmRT_z, .Lfunc_end114-_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE11_S_max_sizeIKS2_EEmRT_z

	.section	.text._ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE8allocateERS2_m,"axG",@progbits,_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE8allocateERS2_m,comdat
	.weak	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE8allocateERS2_m 
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE8allocateERS2_m,@function
_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE8allocateERS2_m: 
	.cfi_startproc

	push	rbp
.Lcfi327:
	.cfi_def_cfa_offset 16
.Lcfi328:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi329:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 72
.Lcfi330:
	.cfi_offset rbx, -56
.Lcfi331:
	.cfi_offset r12, -48
.Lcfi332:
	.cfi_offset r13, -40
.Lcfi333:
	.cfi_offset r14, -32
.Lcfi334:
	.cfi_offset r15, -24
	mov	eax, dword ptr [x.220]
	mov	ecx, dword ptr [y.221]
	mov	edx, eax
	sub	edx, -2058537426
	sub	edx, 1
	add	edx, -2058537426
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 50], r8b
	cmp	ecx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 49], r8b
	mov	dword ptr [rbp - 56], 502095294
	mov	qword ptr [rbp - 64], rdi 
	mov	qword ptr [rbp - 72], rsi 
.LBB115_1:                              
	mov	eax, dword ptr [rbp - 56]
	mov	ecx, eax
	sub	ecx, -2005684760
	mov	dword ptr [rbp - 76], eax 
	mov	dword ptr [rbp - 80], ecx 
	je	.LBB115_4
	jmp	.LBB115_8
.LBB115_8:                              
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, 502095294
	mov	dword ptr [rbp - 84], eax 
	je	.LBB115_3
	jmp	.LBB115_9
.LBB115_9:                              
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, 1707622725
	mov	dword ptr [rbp - 88], eax 
	je	.LBB115_6
	jmp	.LBB115_10
.LBB115_10:                             
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, 1941218833
	mov	dword ptr [rbp - 92], eax 
	je	.LBB115_5
	jmp	.LBB115_2
.LBB115_2:                              
	jmp	.LBB115_7
.LBB115_3:                              
	mov	eax, 1707622725
	mov	ecx, 2289282536
	mov	dl, byte ptr [rbp - 50]
	mov	sil, byte ptr [rbp - 49]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB115_7
.LBB115_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rdx
	mov	rsi, qword ptr [rbp - 72] 
	mov	qword ptr [rcx], rsi
	mov	rdi, qword ptr [rax]
	mov	rsi, qword ptr [rcx]
	call	_ZN5Botan16secure_allocatorIjE8allocateEm
	mov	r8d, 1707622725
	mov	r9d, 1941218833
	mov	r10b, 1
	mov	qword ptr [rbp - 48], rax
	mov	r11d, dword ptr [x.220]
	mov	ebx, dword ptr [y.221]
	mov	r14d, r11d
	sub	r14d, 664089799
	sub	r14d, 1
	add	r14d, 664089799
	imul	r11d, r14d
	and	r11d, 1
	cmp	r11d, 0
	sete	r15b
	cmp	ebx, 10
	setl	r12b
	mov	r13b, r15b
	xor	r13b, -1
	mov	al, r12b
	xor	al, -1
	xor	r10b, 0
	mov	cl, r13b
	and	cl, 0
	and	r15b, r10b
	mov	dl, al
	and	dl, 0
	and	r12b, r10b
	or	cl, r15b
	or	dl, r12b
	xor	cl, dl
	or	r13b, al
	xor	r13b, -1
	or	r10b, 0
	and	r13b, r10b
	or	cl, r13b
	test	cl, 1
	cmovne	r8d, r9d
	mov	dword ptr [rbp - 56], r8d
	jmp	.LBB115_7
.LBB115_5:
	mov	rax, qword ptr [rbp - 48]
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB115_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rdx
	mov	rsi, qword ptr [rbp - 72] 
	mov	qword ptr [rcx], rsi
	mov	rdi, qword ptr [rax]
	mov	rsi, qword ptr [rcx]
	call	_ZN5Botan16secure_allocatorIjE8allocateEm
	mov	dword ptr [rbp - 56], -2005684760
	mov	qword ptr [rbp - 104], rax 
.LBB115_7:                              
	jmp	.LBB115_1
.Lfunc_end115:
	.size	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE8allocateERS2_m, .Lfunc_end115-_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE8allocateERS2_m
	.cfi_endproc

	.section	.text._ZN5Botan16secure_allocatorIjE8allocateEm,"axG",@progbits,_ZN5Botan16secure_allocatorIjE8allocateEm,comdat
	.weak	_ZN5Botan16secure_allocatorIjE8allocateEm 
	.p2align	4, 0x90
	.type	_ZN5Botan16secure_allocatorIjE8allocateEm,@function
_ZN5Botan16secure_allocatorIjE8allocateEm: 
	.cfi_startproc

	push	rbp
.Lcfi335:
	.cfi_def_cfa_offset 16
.Lcfi336:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi337:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	sub	rsp, 64
.Lcfi338:
	.cfi_offset rbx, -48
.Lcfi339:
	.cfi_offset r12, -40
.Lcfi340:
	.cfi_offset r14, -32
.Lcfi341:
	.cfi_offset r15, -24
	mov	eax, dword ptr [x.222]
	mov	ecx, dword ptr [y.223]
	mov	edx, eax
	sub	edx, -1094421475
	sub	edx, 1
	add	edx, -1094421475
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 42], r8b
	cmp	ecx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 41], r8b
	mov	dword ptr [rbp - 48], 42179060
	mov	qword ptr [rbp - 56], rdi 
	mov	qword ptr [rbp - 64], rsi 
.LBB116_1:                              
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -1175118745
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB116_5
	jmp	.LBB116_8
.LBB116_8:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -55123714
	mov	dword ptr [rbp - 76], eax 
	je	.LBB116_6
	jmp	.LBB116_9
.LBB116_9:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 42179060
	mov	dword ptr [rbp - 80], eax 
	je	.LBB116_3
	jmp	.LBB116_10
.LBB116_10:                             
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 373591848
	mov	dword ptr [rbp - 84], eax 
	je	.LBB116_4
	jmp	.LBB116_2
.LBB116_2:                              
	jmp	.LBB116_7
.LBB116_3:                              
	mov	eax, 4239843582
	mov	ecx, 373591848
	mov	dl, byte ptr [rbp - 42]
	mov	sil, byte ptr [rbp - 41]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB116_7
.LBB116_4:                              
	mov	eax, 4
	mov	esi, eax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rdi, qword ptr [rbp - 56] 
	mov	qword ptr [rcx], rdi
	mov	rcx, qword ptr [rbp - 64] 
	mov	qword ptr [rdx], rcx
	mov	rdi, qword ptr [rdx]
	call	_ZN5Botan15allocate_memoryEmm
	mov	r8d, 4239843582
	mov	r9d, 3119848551
	mov	qword ptr [rbp - 40], rax
	mov	r10d, dword ptr [x.222]
	mov	r11d, dword ptr [y.223]
	mov	ebx, r10d
	sub	ebx, 962584514
	sub	ebx, 1
	add	ebx, 962584514
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r14b
	cmp	r11d, 10
	setl	r15b
	mov	r12b, r14b
	and	r12b, r15b
	xor	r14b, r15b
	or	r12b, r14b
	test	r12b, 1
	cmovne	r8d, r9d
	mov	dword ptr [rbp - 48], r8d
	jmp	.LBB116_7
.LBB116_5:
	mov	rax, qword ptr [rbp - 40]
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB116_6:                              
	mov	eax, 4
	mov	esi, eax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rdi, qword ptr [rbp - 56] 
	mov	qword ptr [rcx], rdi
	mov	rcx, qword ptr [rbp - 64] 
	mov	qword ptr [rdx], rcx
	mov	rdi, qword ptr [rdx]
	call	_ZN5Botan15allocate_memoryEmm
	mov	dword ptr [rbp - 48], 373591848
	mov	qword ptr [rbp - 96], rax 
.LBB116_7:                              
	jmp	.LBB116_1
.Lfunc_end116:
	.size	_ZN5Botan16secure_allocatorIjE8allocateEm, .Lfunc_end116-_ZN5Botan16secure_allocatorIjE8allocateEm
	.cfi_endproc

	.section	.text._ZSt22__uninitialized_copy_aISt13move_iteratorIPjES1_N5Botan16secure_allocatorIjEEET0_T_S7_S6_RT1_,"axG",@progbits,_ZSt22__uninitialized_copy_aISt13move_iteratorIPjES1_N5Botan16secure_allocatorIjEEET0_T_S7_S6_RT1_,comdat
	.weak	_ZSt22__uninitialized_copy_aISt13move_iteratorIPjES1_N5Botan16secure_allocatorIjEEET0_T_S7_S6_RT1_ 
	.p2align	4, 0x90
	.type	_ZSt22__uninitialized_copy_aISt13move_iteratorIPjES1_N5Botan16secure_allocatorIjEEET0_T_S7_S6_RT1_,@function
_ZSt22__uninitialized_copy_aISt13move_iteratorIPjES1_N5Botan16secure_allocatorIjEEET0_T_S7_S6_RT1_: 
.Lfunc_begin12:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception12

	push	rbp
.Lcfi342:
	.cfi_def_cfa_offset 16
.Lcfi343:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi344:
	.cfi_def_cfa_register rbp
	sub	rsp, 112
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	qword ptr [rbp - 32], rcx
	mov	rcx, qword ptr [rbp - 24]
	mov	qword ptr [rbp - 40], rcx
.LBB117_1:                              
.Ltmp58:
	lea	rdi, [rbp - 8]
	lea	rsi, [rbp - 16]
	call	_ZStneIPjEbRKSt13move_iteratorIT_ES5_
.Ltmp59:
	mov	byte ptr [rbp - 53], al 
	jmp	.LBB117_2
.LBB117_2:                              
	mov	al, byte ptr [rbp - 53] 
	test	al, 1
	jne	.LBB117_3
	jmp	.LBB117_11
.LBB117_3:                              
	mov	rdi, qword ptr [rbp - 32]
	mov	rax, qword ptr [rbp - 40]
	mov	qword ptr [rbp - 64], rdi 
	mov	rdi, rax
	call	_ZSt11__addressofIjEPT_RS0_
.Ltmp60:
	lea	rdi, [rbp - 8]
	mov	qword ptr [rbp - 72], rax 
	call	_ZNKSt13move_iteratorIPjEdeEv
.Ltmp61:
	mov	qword ptr [rbp - 80], rax 
	jmp	.LBB117_4
.LBB117_4:                              
.Ltmp62:
	mov	rdi, qword ptr [rbp - 64] 
	mov	rsi, qword ptr [rbp - 72] 
	mov	rdx, qword ptr [rbp - 80] 
	call	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE9constructIjJjEEEDTcl12_S_constructfp_fp0_spclsr3stdE7forwardIT0_Efp1_EEERS2_PT_DpOS5_
.Ltmp63:
	jmp	.LBB117_5
.LBB117_5:                              
	jmp	.LBB117_6
.LBB117_6:                              
.Ltmp64:
	lea	rdi, [rbp - 8]
	call	_ZNSt13move_iteratorIPjEppEv
.Ltmp65:
	mov	qword ptr [rbp - 88], rax 
	jmp	.LBB117_7
.LBB117_7:                              
	mov	rax, qword ptr [rbp - 40]
	add	rax, 4
	mov	qword ptr [rbp - 40], rax
	jmp	.LBB117_1
.LBB117_8:
.Ltmp66:
	mov	ecx, edx
	mov	qword ptr [rbp - 48], rax
	mov	dword ptr [rbp - 52], ecx

	mov	rdi, qword ptr [rbp - 48]
	call	__cxa_begin_catch
	mov	rdi, qword ptr [rbp - 24]
	mov	rsi, qword ptr [rbp - 40]
	mov	rdx, qword ptr [rbp - 32]
.Ltmp67:
	mov	qword ptr [rbp - 96], rax 
	call	_ZSt8_DestroyIPjN5Botan16secure_allocatorIjEEEvT_S4_RT0_
.Ltmp68:
	jmp	.LBB117_10
.LBB117_10:
.Ltmp69:
	call	__cxa_rethrow
.Ltmp70:
	jmp	.LBB117_16
.LBB117_11:
	mov	rax, qword ptr [rbp - 40]
	add	rsp, 112
	pop	rbp
	ret
.LBB117_12:
.Ltmp71:
	mov	ecx, edx
	mov	qword ptr [rbp - 48], rax
	mov	dword ptr [rbp - 52], ecx
.Ltmp72:
	call	__cxa_end_catch
.Ltmp73:
	jmp	.LBB117_13
.LBB117_13:
	jmp	.LBB117_14
.LBB117_14:
	mov	rdi, qword ptr [rbp - 48]
	call	_Unwind_Resume
.LBB117_15:
.Ltmp74:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 100], ecx 
	call	__clang_call_terminate
.LBB117_16:
.Lfunc_end117:
	.size	_ZSt22__uninitialized_copy_aISt13move_iteratorIPjES1_N5Botan16secure_allocatorIjEEET0_T_S7_S6_RT1_, .Lfunc_end117-_ZSt22__uninitialized_copy_aISt13move_iteratorIPjES1_N5Botan16secure_allocatorIjEEET0_T_S7_S6_RT1_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table117:
.Lexception12:
	.byte	255                     
	.byte	3                       
	.byte	73                      
	.byte	3                       
	.byte	65                      
	.long	.Ltmp58-.Lfunc_begin12  
	.long	.Ltmp65-.Ltmp58         
	.long	.Ltmp66-.Lfunc_begin12  
	.byte	1                       
	.long	.Ltmp65-.Lfunc_begin12  
	.long	.Ltmp67-.Ltmp65         
	.long	0                       
	.byte	0                       
	.long	.Ltmp67-.Lfunc_begin12  
	.long	.Ltmp70-.Ltmp67         
	.long	.Ltmp71-.Lfunc_begin12  
	.byte	0                       
	.long	.Ltmp72-.Lfunc_begin12  
	.long	.Ltmp73-.Ltmp72         
	.long	.Ltmp74-.Lfunc_begin12  
	.byte	1                       
	.long	.Ltmp73-.Lfunc_begin12  
	.long	.Lfunc_end117-.Ltmp73   
	.long	0                       
	.byte	0                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZSt32__make_move_if_noexcept_iteratorIjSt13move_iteratorIPjEET0_PT_,"axG",@progbits,_ZSt32__make_move_if_noexcept_iteratorIjSt13move_iteratorIPjEET0_PT_,comdat
	.weak	_ZSt32__make_move_if_noexcept_iteratorIjSt13move_iteratorIPjEET0_PT_ 
	.p2align	4, 0x90
	.type	_ZSt32__make_move_if_noexcept_iteratorIjSt13move_iteratorIPjEET0_PT_,@function
_ZSt32__make_move_if_noexcept_iteratorIjSt13move_iteratorIPjEET0_PT_: 
	.cfi_startproc

	push	rbp
.Lcfi345:
	.cfi_def_cfa_offset 16
.Lcfi346:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi347:
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	lea	rax, [rbp - 8]
	mov	qword ptr [rbp - 16], rdi
	mov	rsi, qword ptr [rbp - 16]
	mov	rdi, rax
	call	_ZNSt13move_iteratorIPjEC2ES0_
	mov	rax, qword ptr [rbp - 8]
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end118:
	.size	_ZSt32__make_move_if_noexcept_iteratorIjSt13move_iteratorIPjEET0_PT_, .Lfunc_end118-_ZSt32__make_move_if_noexcept_iteratorIjSt13move_iteratorIPjEET0_PT_
	.cfi_endproc

	.section	.text._ZStneIPjEbRKSt13move_iteratorIT_ES5_,"axG",@progbits,_ZStneIPjEbRKSt13move_iteratorIT_ES5_,comdat
	.weak	_ZStneIPjEbRKSt13move_iteratorIT_ES5_ 
	.p2align	4, 0x90
	.type	_ZStneIPjEbRKSt13move_iteratorIT_ES5_,@function
_ZStneIPjEbRKSt13move_iteratorIT_ES5_:  
	.cfi_startproc

	push	rbp
.Lcfi348:
	.cfi_def_cfa_offset 16
.Lcfi349:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi350:
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rdi, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rbp - 16]
	call	_ZSteqIPjEbRKSt13move_iteratorIT_ES5_
	mov	cl, 1
	mov	dl, al
	xor	dl, -1
	and	dl, 1
	xor	cl, 1
	and	al, cl
	or	dl, al
	and	dl, 1
	movzx	eax, dl
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end119:
	.size	_ZStneIPjEbRKSt13move_iteratorIT_ES5_, .Lfunc_end119-_ZStneIPjEbRKSt13move_iteratorIT_ES5_
	.cfi_endproc

	.section	.text._ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE9constructIjJjEEEDTcl12_S_constructfp_fp0_spclsr3stdE7forwardIT0_Efp1_EEERS2_PT_DpOS5_,"axG",@progbits,_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE9constructIjJjEEEDTcl12_S_constructfp_fp0_spclsr3stdE7forwardIT0_Efp1_EEERS2_PT_DpOS5_,comdat
	.weak	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE9constructIjJjEEEDTcl12_S_constructfp_fp0_spclsr3stdE7forwardIT0_Efp1_EEERS2_PT_DpOS5_ 
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE9constructIjJjEEEDTcl12_S_constructfp_fp0_spclsr3stdE7forwardIT0_Efp1_EEERS2_PT_DpOS5_,@function
_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE9constructIjJjEEEDTcl12_S_constructfp_fp0_spclsr3stdE7forwardIT0_Efp1_EEERS2_PT_DpOS5_: 
	.cfi_startproc

	push	rbp
.Lcfi351:
	.cfi_def_cfa_offset 16
.Lcfi352:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi353:
	.cfi_def_cfa_register rbp
	sub	rsp, 48
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	rdi, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rbp - 16]
	mov	rdx, qword ptr [rbp - 24]
	mov	qword ptr [rbp - 32], rdi 
	mov	rdi, rdx
	mov	qword ptr [rbp - 40], rsi 
	call	_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE
	mov	rdi, qword ptr [rbp - 32] 
	mov	rsi, qword ptr [rbp - 40] 
	mov	rdx, rax
	call	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE12_S_constructIjJjEEENSt9enable_ifIXsr6__and_ISt6__and_IJSt6__not_INS3_18__construct_helperIT_JDpT0_EE4typeEESt16is_constructibleIS9_JSB_EEEEEE5valueEvE4typeERS2_PS9_DpOSA_
	add	rsp, 48
	pop	rbp
	ret
.Lfunc_end120:
	.size	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE9constructIjJjEEEDTcl12_S_constructfp_fp0_spclsr3stdE7forwardIT0_Efp1_EEERS2_PT_DpOS5_, .Lfunc_end120-_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE9constructIjJjEEEDTcl12_S_constructfp_fp0_spclsr3stdE7forwardIT0_Efp1_EEERS2_PT_DpOS5_
	.cfi_endproc

	.section	.text._ZNKSt13move_iteratorIPjEdeEv,"axG",@progbits,_ZNKSt13move_iteratorIPjEdeEv,comdat
	.weak	_ZNKSt13move_iteratorIPjEdeEv 
	.p2align	4, 0x90
	.type	_ZNKSt13move_iteratorIPjEdeEv,@function
_ZNKSt13move_iteratorIPjEdeEv:          

	push	rbp
	mov	rbp, rsp
	push	rbx
	sub	rsp, 56
	xor	eax, eax
	mov	ecx, dword ptr [x.230]
	mov	edx, dword ptr [y.231]
	sub	eax, 1
	mov	esi, ecx
	add	esi, eax
	imul	ecx, esi
	and	ecx, 1
	cmp	ecx, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 18], r8b
	cmp	edx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 17], r8b
	mov	dword ptr [rbp - 24], 849502195
	mov	qword ptr [rbp - 32], rdi 
.LBB121_1:                              
	mov	eax, dword ptr [rbp - 24]
	mov	ecx, eax
	sub	ecx, -1899112543
	mov	dword ptr [rbp - 36], eax 
	mov	dword ptr [rbp - 40], ecx 
	je	.LBB121_6
	jmp	.LBB121_8
.LBB121_8:                              
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, -910230312
	mov	dword ptr [rbp - 44], eax 
	je	.LBB121_5
	jmp	.LBB121_9
.LBB121_9:                              
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, -588558530
	mov	dword ptr [rbp - 48], eax 
	je	.LBB121_4
	jmp	.LBB121_10
.LBB121_10:                             
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, 849502195
	mov	dword ptr [rbp - 52], eax 
	je	.LBB121_3
	jmp	.LBB121_2
.LBB121_2:                              
	jmp	.LBB121_7
.LBB121_3:                              
	mov	eax, 2395854753
	mov	ecx, 3706408766
	mov	dl, 1
	mov	sil, byte ptr [rbp - 18]
	mov	dil, byte ptr [rbp - 17]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 24], eax
	jmp	.LBB121_7
.LBB121_4:                              
	mov	eax, 2395854753
	mov	ecx, 3384736984
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, qword ptr [rbp - 32] 
	mov	qword ptr [rdx], rsi
	mov	rdx, qword ptr [rdx]
	mov	rdx, qword ptr [rdx]
	mov	qword ptr [rbp - 16], rdx
	mov	edi, dword ptr [x.230]
	mov	r8d, dword ptr [y.231]
	mov	r9d, edi
	sub	r9d, -595430199
	sub	r9d, 1
	add	r9d, -595430199
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	and	bl, r11b
	xor	r10b, r11b
	or	bl, r10b
	test	bl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 24], eax
	jmp	.LBB121_7
.LBB121_5:
	mov	rax, qword ptr [rbp - 16]
	lea	rsp, [rbp - 8]
	pop	rbx
	pop	rbp
	ret
.LBB121_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 32] 
	mov	qword ptr [rax], rcx
	mov	dword ptr [rbp - 24], -588558530
.LBB121_7:                              
	jmp	.LBB121_1
.Lfunc_end121:
	.size	_ZNKSt13move_iteratorIPjEdeEv, .Lfunc_end121-_ZNKSt13move_iteratorIPjEdeEv

	.section	.text._ZNSt13move_iteratorIPjEppEv,"axG",@progbits,_ZNSt13move_iteratorIPjEppEv,comdat
	.weak	_ZNSt13move_iteratorIPjEppEv 
	.p2align	4, 0x90
	.type	_ZNSt13move_iteratorIPjEppEv,@function
_ZNSt13move_iteratorIPjEppEv:           

	push	rbp
	mov	rbp, rsp
	push	r14
	push	rbx
	sub	rsp, 48
	mov	eax, dword ptr [x.232]
	mov	ecx, dword ptr [y.233]
	mov	edx, eax
	add	edx, -520873731
	sub	edx, 1
	sub	edx, -520873731
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 26], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 25], sil
	mov	dword ptr [rbp - 32], 673365215
	mov	qword ptr [rbp - 40], rdi 
.LBB122_1:                              
	mov	eax, dword ptr [rbp - 32]
	mov	ecx, eax
	sub	ecx, -945587915
	mov	dword ptr [rbp - 44], eax 
	mov	dword ptr [rbp - 48], ecx 
	je	.LBB122_5
	jmp	.LBB122_8
.LBB122_8:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 673365215
	mov	dword ptr [rbp - 52], eax 
	je	.LBB122_3
	jmp	.LBB122_9
.LBB122_9:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 1292427549
	mov	dword ptr [rbp - 56], eax 
	je	.LBB122_4
	jmp	.LBB122_10
.LBB122_10:                             
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 2108500920
	mov	dword ptr [rbp - 60], eax 
	je	.LBB122_6
	jmp	.LBB122_2
.LBB122_2:                              
	jmp	.LBB122_7
.LBB122_3:                              
	mov	eax, 2108500920
	mov	ecx, 1292427549
	mov	dl, byte ptr [rbp - 26]
	mov	sil, byte ptr [rbp - 25]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB122_7
.LBB122_4:                              
	mov	eax, 2108500920
	mov	ecx, 3349379381
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, qword ptr [rbp - 40] 
	mov	qword ptr [rdx], rsi
	mov	rdx, qword ptr [rdx]
	mov	qword ptr [rbp - 24], rdx
	mov	rdx, qword ptr [rbp - 24]
	mov	rdi, qword ptr [rdx]
	add	rdi, 4
	mov	qword ptr [rdx], rdi
	mov	r8d, dword ptr [x.232]
	mov	r9d, dword ptr [y.233]
	mov	r10d, r8d
	sub	r10d, 42589265
	sub	r10d, 1
	add	r10d, 42589265
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB122_7
.LBB122_5:
	mov	rax, qword ptr [rbp - 24]
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
.LBB122_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdx, qword ptr [rax]
	add	rdx, 4
	mov	qword ptr [rax], rdx
	mov	dword ptr [rbp - 32], 1292427549
.LBB122_7:                              
	jmp	.LBB122_1
.Lfunc_end122:
	.size	_ZNSt13move_iteratorIPjEppEv, .Lfunc_end122-_ZNSt13move_iteratorIPjEppEv

	.section	.text._ZSteqIPjEbRKSt13move_iteratorIT_ES5_,"axG",@progbits,_ZSteqIPjEbRKSt13move_iteratorIT_ES5_,comdat
	.weak	_ZSteqIPjEbRKSt13move_iteratorIT_ES5_ 
	.p2align	4, 0x90
	.type	_ZSteqIPjEbRKSt13move_iteratorIT_ES5_,@function
_ZSteqIPjEbRKSt13move_iteratorIT_ES5_:  
	.cfi_startproc

	push	rbp
.Lcfi354:
	.cfi_def_cfa_offset 16
.Lcfi355:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi356:
	.cfi_def_cfa_register rbp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNKSt13move_iteratorIPjE4baseEv
	mov	rdi, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 24], rax 
	call	_ZNKSt13move_iteratorIPjE4baseEv
	mov	rsi, qword ptr [rbp - 24] 
	cmp	rsi, rax
	sete	cl
	and	cl, 1
	movzx	eax, cl
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end123:
	.size	_ZSteqIPjEbRKSt13move_iteratorIT_ES5_, .Lfunc_end123-_ZSteqIPjEbRKSt13move_iteratorIT_ES5_
	.cfi_endproc

	.section	.text._ZNKSt13move_iteratorIPjE4baseEv,"axG",@progbits,_ZNKSt13move_iteratorIPjE4baseEv,comdat
	.weak	_ZNKSt13move_iteratorIPjE4baseEv 
	.p2align	4, 0x90
	.type	_ZNKSt13move_iteratorIPjE4baseEv,@function
_ZNKSt13move_iteratorIPjE4baseEv:       

	push	rbp
	mov	rbp, rsp
	push	r14
	push	rbx
	sub	rsp, 48
	mov	eax, dword ptr [x.236]
	mov	ecx, dword ptr [y.237]
	mov	edx, eax
	sub	edx, -1325780574
	sub	edx, 1
	add	edx, -1325780574
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 26], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 25], sil
	mov	dword ptr [rbp - 32], -1573348181
	mov	qword ptr [rbp - 40], rdi 
.LBB124_1:                              
	mov	eax, dword ptr [rbp - 32]
	mov	ecx, eax
	sub	ecx, -1573348181
	mov	dword ptr [rbp - 44], eax 
	mov	dword ptr [rbp - 48], ecx 
	je	.LBB124_3
	jmp	.LBB124_8
.LBB124_8:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, -1238748211
	mov	dword ptr [rbp - 52], eax 
	je	.LBB124_5
	jmp	.LBB124_9
.LBB124_9:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, -769434684
	mov	dword ptr [rbp - 56], eax 
	je	.LBB124_4
	jmp	.LBB124_10
.LBB124_10:                             
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 181649493
	mov	dword ptr [rbp - 60], eax 
	je	.LBB124_6
	jmp	.LBB124_2
.LBB124_2:                              
	jmp	.LBB124_7
.LBB124_3:                              
	mov	eax, 181649493
	mov	ecx, 3525532612
	mov	dl, 1
	mov	sil, byte ptr [rbp - 26]
	mov	dil, byte ptr [rbp - 25]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB124_7
.LBB124_4:                              
	mov	eax, 181649493
	mov	ecx, 3056219085
	xor	edx, edx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 40] 
	mov	qword ptr [rsi], rdi
	mov	rsi, qword ptr [rsi]
	mov	rsi, qword ptr [rsi]
	mov	qword ptr [rbp - 24], rsi
	mov	r8d, dword ptr [x.236]
	mov	r9d, dword ptr [y.237]
	sub	edx, 1
	mov	r10d, r8d
	add	r10d, edx
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB124_7
.LBB124_5:
	mov	rax, qword ptr [rbp - 24]
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
.LBB124_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	dword ptr [rbp - 32], -769434684
.LBB124_7:                              
	jmp	.LBB124_1
.Lfunc_end124:
	.size	_ZNKSt13move_iteratorIPjE4baseEv, .Lfunc_end124-_ZNKSt13move_iteratorIPjE4baseEv

	.section	.text._ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE12_S_constructIjJjEEENSt9enable_ifIXsr6__and_ISt6__and_IJSt6__not_INS3_18__construct_helperIT_JDpT0_EE4typeEESt16is_constructibleIS9_JSB_EEEEEE5valueEvE4typeERS2_PS9_DpOSA_,"axG",@progbits,_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE12_S_constructIjJjEEENSt9enable_ifIXsr6__and_ISt6__and_IJSt6__not_INS3_18__construct_helperIT_JDpT0_EE4typeEESt16is_constructibleIS9_JSB_EEEEEE5valueEvE4typeERS2_PS9_DpOSA_,comdat
	.weak	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE12_S_constructIjJjEEENSt9enable_ifIXsr6__and_ISt6__and_IJSt6__not_INS3_18__construct_helperIT_JDpT0_EE4typeEESt16is_constructibleIS9_JSB_EEEEEE5valueEvE4typeERS2_PS9_DpOSA_ 
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE12_S_constructIjJjEEENSt9enable_ifIXsr6__and_ISt6__and_IJSt6__not_INS3_18__construct_helperIT_JDpT0_EE4typeEESt16is_constructibleIS9_JSB_EEEEEE5valueEvE4typeERS2_PS9_DpOSA_,@function
_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE12_S_constructIjJjEEENSt9enable_ifIXsr6__and_ISt6__and_IJSt6__not_INS3_18__construct_helperIT_JDpT0_EE4typeEESt16is_constructibleIS9_JSB_EEEEEE5valueEvE4typeERS2_PS9_DpOSA_: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	rdx, qword ptr [rbp - 16]
	mov	rdi, qword ptr [rbp - 24]
	mov	qword ptr [rbp - 32], rdx 
	call	_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE
	mov	ecx, dword ptr [rax]
	mov	rax, qword ptr [rbp - 32] 
	mov	dword ptr [rax], ecx
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end125:
	.size	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE12_S_constructIjJjEEENSt9enable_ifIXsr6__and_ISt6__and_IJSt6__not_INS3_18__construct_helperIT_JDpT0_EE4typeEESt16is_constructibleIS9_JSB_EEEEEE5valueEvE4typeERS2_PS9_DpOSA_, .Lfunc_end125-_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE12_S_constructIjJjEEENSt9enable_ifIXsr6__and_ISt6__and_IJSt6__not_INS3_18__construct_helperIT_JDpT0_EE4typeEESt16is_constructibleIS9_JSB_EEEEEE5valueEvE4typeERS2_PS9_DpOSA_

	.section	.text._ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE,"axG",@progbits,_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE,comdat
	.weak	_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE 
	.p2align	4, 0x90
	.type	_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE,@function
_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	pop	rbp
	ret
.Lfunc_end126:
	.size	_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE, .Lfunc_end126-_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE

	.section	.text._ZNSt13move_iteratorIPjEC2ES0_,"axG",@progbits,_ZNSt13move_iteratorIPjEC2ES0_,comdat
	.weak	_ZNSt13move_iteratorIPjEC2ES0_ 
	.p2align	4, 0x90
	.type	_ZNSt13move_iteratorIPjEC2ES0_,@function
_ZNSt13move_iteratorIPjEC2ES0_:         

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 56
	mov	eax, dword ptr [x.242]
	mov	ecx, dword ptr [y.243]
	mov	edx, eax
	add	edx, 476611342
	sub	edx, 1
	sub	edx, 476611342
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 26], r8b
	cmp	ecx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 25], r8b
	mov	dword ptr [rbp - 32], -726669714
	mov	qword ptr [rbp - 40], rdi 
	mov	qword ptr [rbp - 48], rsi 
.LBB127_1:                              
	mov	eax, dword ptr [rbp - 32]
	mov	ecx, eax
	sub	ecx, -1630979406
	mov	dword ptr [rbp - 52], eax 
	mov	dword ptr [rbp - 56], ecx 
	je	.LBB127_4
	jmp	.LBB127_8
.LBB127_8:                              
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, -726669714
	mov	dword ptr [rbp - 60], eax 
	je	.LBB127_3
	jmp	.LBB127_9
.LBB127_9:                              
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, 623941846
	mov	dword ptr [rbp - 64], eax 
	je	.LBB127_6
	jmp	.LBB127_10
.LBB127_10:                             
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, 2115907057
	mov	dword ptr [rbp - 68], eax 
	je	.LBB127_5
	jmp	.LBB127_2
.LBB127_2:                              
	jmp	.LBB127_7
.LBB127_3:                              
	mov	eax, 623941846
	mov	ecx, 2663987890
	mov	dl, byte ptr [rbp - 26]
	mov	sil, byte ptr [rbp - 25]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB127_7
.LBB127_4:                              
	mov	eax, 623941846
	mov	ecx, 2115907057
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 40] 
	mov	qword ptr [rdx], rdi
	mov	r8, qword ptr [rbp - 48] 
	mov	qword ptr [rsi], r8
	mov	rdx, qword ptr [rdx]
	mov	rsi, qword ptr [rsi]
	mov	qword ptr [rdx], rsi
	mov	r9d, dword ptr [x.242]
	mov	r10d, dword ptr [y.243]
	mov	r11d, r9d
	sub	r11d, 500888868
	sub	r11d, 1
	add	r11d, 500888868
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	bl
	cmp	r10d, 10
	setl	r14b
	mov	r15b, bl
	and	r15b, r14b
	xor	bl, r14b
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB127_7
.LBB127_5:
	lea	rsp, [rbp - 24]
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB127_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rdx
	mov	rsi, qword ptr [rbp - 48] 
	mov	qword ptr [rcx], rsi
	mov	rax, qword ptr [rax]
	mov	rcx, qword ptr [rcx]
	mov	qword ptr [rax], rcx
	mov	dword ptr [rbp - 32], -1630979406
.LBB127_7:                              
	jmp	.LBB127_1
.Lfunc_end127:
	.size	_ZNSt13move_iteratorIPjEC2ES0_, .Lfunc_end127-_ZNSt13move_iteratorIPjEC2ES0_

	.section	.text._ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE7destroyIjEEvRS2_PT_,"axG",@progbits,_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE7destroyIjEEvRS2_PT_,comdat
	.weak	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE7destroyIjEEvRS2_PT_ 
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE7destroyIjEEvRS2_PT_,@function
_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE7destroyIjEEvRS2_PT_: 
	.cfi_startproc

	push	rbp
.Lcfi357:
	.cfi_def_cfa_offset 16
.Lcfi358:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi359:
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	xor	edx, edx
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rdi, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rbp - 16]
	mov	al, 0
	call	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE10_S_destroyIS2_jEEvRT_PT0_z
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end128:
	.size	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE7destroyIjEEvRS2_PT_, .Lfunc_end128-_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE7destroyIjEEvRS2_PT_
	.cfi_endproc

	.section	.text._ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE10_S_destroyIS2_jEEvRT_PT0_z,"axG",@progbits,_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE10_S_destroyIS2_jEEvRT_PT0_z,comdat
	.weak	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE10_S_destroyIS2_jEEvRT_PT0_z 
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE10_S_destroyIS2_jEEvRT_PT0_z,@function
_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE10_S_destroyIS2_jEEvRT_PT0_z: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	pop	rbp
	ret
.Lfunc_end129:
	.size	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE10_S_destroyIS2_jEEvRT_PT0_z, .Lfunc_end129-_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE10_S_destroyIS2_jEEvRT_PT0_z

	.section	.text._ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE10deallocateERS2_Pjm,"axG",@progbits,_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE10deallocateERS2_Pjm,comdat
	.weak	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE10deallocateERS2_Pjm 
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE10deallocateERS2_Pjm,@function
_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE10deallocateERS2_Pjm: 
	.cfi_startproc

	push	rbp
.Lcfi360:
	.cfi_def_cfa_offset 16
.Lcfi361:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi362:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 56
.Lcfi363:
	.cfi_offset rbx, -56
.Lcfi364:
	.cfi_offset r12, -48
.Lcfi365:
	.cfi_offset r13, -40
.Lcfi366:
	.cfi_offset r14, -32
.Lcfi367:
	.cfi_offset r15, -24
	xor	eax, eax
	mov	ecx, dword ptr [x.248]
	mov	r8d, dword ptr [y.249]
	sub	eax, 1
	mov	r9d, ecx
	add	r9d, eax
	imul	ecx, r9d
	and	ecx, 1
	cmp	ecx, 0
	sete	r10b
	and	r10b, 1
	mov	byte ptr [rbp - 42], r10b
	cmp	r8d, 10
	setl	r10b
	and	r10b, 1
	mov	byte ptr [rbp - 41], r10b
	mov	dword ptr [rbp - 48], -518361996
	mov	qword ptr [rbp - 56], rsi 
	mov	qword ptr [rbp - 64], rdi 
	mov	qword ptr [rbp - 72], rdx 
.LBB130_1:                              
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -2087110667
	mov	dword ptr [rbp - 76], eax 
	mov	dword ptr [rbp - 80], ecx 
	je	.LBB130_5
	jmp	.LBB130_8
.LBB130_8:                              
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, -518361996
	mov	dword ptr [rbp - 84], eax 
	je	.LBB130_3
	jmp	.LBB130_9
.LBB130_9:                              
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, -277768199
	mov	dword ptr [rbp - 88], eax 
	je	.LBB130_6
	jmp	.LBB130_10
.LBB130_10:                             
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, 441567441
	mov	dword ptr [rbp - 92], eax 
	je	.LBB130_4
	jmp	.LBB130_2
.LBB130_2:                              
	jmp	.LBB130_7
.LBB130_3:                              
	mov	eax, 4017199097
	mov	ecx, 441567441
	mov	dl, 1
	mov	sil, byte ptr [rbp - 42]
	mov	dil, byte ptr [rbp - 41]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB130_7
.LBB130_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rsi
	mov	rdi, qword ptr [rbp - 56] 
	mov	qword ptr [rcx], rdi
	mov	r8, qword ptr [rbp - 72] 
	mov	qword ptr [rdx], r8
	mov	rdi, qword ptr [rax]
	mov	rsi, qword ptr [rcx]
	mov	rdx, qword ptr [rdx]
	call	_ZN5Botan16secure_allocatorIjE10deallocateEPjm
	mov	r9d, 4017199097
	mov	r10d, 2207856629
	mov	r11b, 1
	xor	ebx, ebx
	mov	r14d, dword ptr [x.248]
	mov	r15d, dword ptr [y.249]
	sub	ebx, 1
	mov	r12d, r14d
	add	r12d, ebx
	imul	r14d, r12d
	and	r14d, 1
	cmp	r14d, 0
	sete	r13b
	cmp	r15d, 10
	setl	al
	mov	cl, r13b
	xor	cl, -1
	mov	dl, al
	xor	dl, -1
	xor	r11b, 1
	mov	sil, cl
	and	sil, -1
	and	r13b, r11b
	mov	dil, dl
	and	dil, -1
	and	al, r11b
	or	sil, r13b
	or	dil, al
	xor	sil, dil
	or	cl, dl
	xor	cl, -1
	or	r11b, 1
	and	cl, r11b
	or	sil, cl
	test	sil, 1
	cmovne	r9d, r10d
	mov	dword ptr [rbp - 48], r9d
	jmp	.LBB130_7
.LBB130_5:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB130_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rsi
	mov	rdi, qword ptr [rbp - 56] 
	mov	qword ptr [rcx], rdi
	mov	r8, qword ptr [rbp - 72] 
	mov	qword ptr [rdx], r8
	mov	rdi, qword ptr [rax]
	mov	rsi, qword ptr [rcx]
	mov	rdx, qword ptr [rdx]
	call	_ZN5Botan16secure_allocatorIjE10deallocateEPjm
	mov	dword ptr [rbp - 48], 441567441
.LBB130_7:                              
	jmp	.LBB130_1
.Lfunc_end130:
	.size	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE10deallocateERS2_Pjm, .Lfunc_end130-_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE10deallocateERS2_Pjm
	.cfi_endproc

	.section	.text._ZN5Botan16secure_allocatorIjE10deallocateEPjm,"axG",@progbits,_ZN5Botan16secure_allocatorIjE10deallocateEPjm,comdat
	.weak	_ZN5Botan16secure_allocatorIjE10deallocateEPjm 
	.p2align	4, 0x90
	.type	_ZN5Botan16secure_allocatorIjE10deallocateEPjm,@function
_ZN5Botan16secure_allocatorIjE10deallocateEPjm: 
	.cfi_startproc

	push	rbp
.Lcfi368:
	.cfi_def_cfa_offset 16
.Lcfi369:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi370:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 72
.Lcfi371:
	.cfi_offset rbx, -56
.Lcfi372:
	.cfi_offset r12, -48
.Lcfi373:
	.cfi_offset r13, -40
.Lcfi374:
	.cfi_offset r14, -32
.Lcfi375:
	.cfi_offset r15, -24
	xor	eax, eax
	mov	ecx, dword ptr [x.250]
	mov	r8d, dword ptr [y.251]
	sub	eax, 1
	mov	r9d, ecx
	add	r9d, eax
	imul	ecx, r9d
	and	ecx, 1
	cmp	ecx, 0
	sete	r10b
	and	r10b, 1
	mov	byte ptr [rbp - 42], r10b
	cmp	r8d, 10
	setl	r10b
	and	r10b, 1
	mov	byte ptr [rbp - 41], r10b
	mov	dword ptr [rbp - 48], -630194874
	mov	qword ptr [rbp - 56], rsi 
	mov	qword ptr [rbp - 64], rdi 
	mov	qword ptr [rbp - 72], rdx 
.LBB131_1:                              
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -2086270666
	mov	dword ptr [rbp - 76], eax 
	mov	dword ptr [rbp - 80], ecx 
	je	.LBB131_5
	jmp	.LBB131_8
.LBB131_8:                              
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, -1056982991
	mov	dword ptr [rbp - 84], eax 
	je	.LBB131_6
	jmp	.LBB131_9
.LBB131_9:                              
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, -630194874
	mov	dword ptr [rbp - 88], eax 
	je	.LBB131_3
	jmp	.LBB131_10
.LBB131_10:                             
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, 1998608462
	mov	dword ptr [rbp - 92], eax 
	je	.LBB131_4
	jmp	.LBB131_2
.LBB131_2:                              
	jmp	.LBB131_7
.LBB131_3:                              
	mov	eax, 3237984305
	mov	ecx, 1998608462
	mov	dl, byte ptr [rbp - 42]
	mov	sil, byte ptr [rbp - 41]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB131_7
.LBB131_4:                              
	mov	eax, 4
	mov	edx, eax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	r8, qword ptr [rbp - 64] 
	mov	qword ptr [rcx], r8
	mov	rcx, qword ptr [rbp - 56] 
	mov	qword ptr [rsi], rcx
	mov	r9, qword ptr [rbp - 72] 
	mov	qword ptr [rdi], r9
	mov	rsi, qword ptr [rsi]
	mov	rdi, qword ptr [rdi]
	mov	qword ptr [rbp - 104], rdi 
	mov	rdi, rsi
	mov	rsi, qword ptr [rbp - 104] 
	call	_ZN5Botan17deallocate_memoryEPvmm
	mov	eax, 3237984305
	mov	r10d, 2208696630
	mov	r11d, dword ptr [x.250]
	mov	ebx, dword ptr [y.251]
	mov	r14d, r11d
	add	r14d, -1822859657
	sub	r14d, 1
	sub	r14d, -1822859657
	imul	r11d, r14d
	and	r11d, 1
	cmp	r11d, 0
	sete	r15b
	cmp	ebx, 10
	setl	r12b
	mov	r13b, r15b
	and	r13b, r12b
	xor	r15b, r12b
	or	r13b, r15b
	test	r13b, 1
	cmovne	eax, r10d
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB131_7
.LBB131_5:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB131_6:                              
	mov	eax, 4
	mov	edx, eax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	r8, qword ptr [rbp - 64] 
	mov	qword ptr [rcx], r8
	mov	rcx, qword ptr [rbp - 56] 
	mov	qword ptr [rsi], rcx
	mov	r9, qword ptr [rbp - 72] 
	mov	qword ptr [rdi], r9
	mov	rsi, qword ptr [rsi]
	mov	rdi, qword ptr [rdi]
	mov	qword ptr [rbp - 112], rdi 
	mov	rdi, rsi
	mov	rsi, qword ptr [rbp - 112] 
	call	_ZN5Botan17deallocate_memoryEPvmm
	mov	dword ptr [rbp - 48], 1998608462
.LBB131_7:                              
	jmp	.LBB131_1
.Lfunc_end131:
	.size	_ZN5Botan16secure_allocatorIjE10deallocateEPjm, .Lfunc_end131-_ZN5Botan16secure_allocatorIjE10deallocateEPjm
	.cfi_endproc

	.section	.text._ZN5Botan13typecast_copyIjEEvRT_PKh,"axG",@progbits,_ZN5Botan13typecast_copyIjEEvRT_PKh,comdat
	.weak	_ZN5Botan13typecast_copyIjEEvRT_PKh 
	.p2align	4, 0x90
	.type	_ZN5Botan13typecast_copyIjEEvRT_PKh,@function
_ZN5Botan13typecast_copyIjEEvRT_PKh:    

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	eax, 1
	mov	edx, eax
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rdi, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rbp - 16]
	call	_ZN5Botan13typecast_copyIjEEvPT_PKhm
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end132:
	.size	_ZN5Botan13typecast_copyIjEEvRT_PKh, .Lfunc_end132-_ZN5Botan13typecast_copyIjEEvRT_PKh

	.text
	.p2align	4, 0x90         
	.type	_ZN5Botan12_GLOBAL__N_112InvMixColumnEj,@function
_ZN5Botan12_GLOBAL__N_112InvMixColumnEj: 
	.cfi_startproc

	push	rbp
.Lcfi376:
	.cfi_def_cfa_offset 16
.Lcfi377:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi378:
	.cfi_def_cfa_register rbp
	sub	rsp, 48
	mov	dword ptr [rbp - 4], edi
	mov	edi, dword ptr [rbp - 4]
	call	_ZN5Botan12_GLOBAL__N_17xtime32Ej
	mov	dword ptr [rbp - 8], eax
	mov	edi, dword ptr [rbp - 8]
	call	_ZN5Botan12_GLOBAL__N_17xtime32Ej
	mov	dword ptr [rbp - 12], eax
	mov	edi, dword ptr [rbp - 12]
	call	_ZN5Botan12_GLOBAL__N_17xtime32Ej
	mov	edi, 4294967295
	mov	dword ptr [rbp - 16], eax
	mov	eax, dword ptr [rbp - 16]
	mov	ecx, dword ptr [rbp - 4]
	mov	edx, eax
	xor	edx, -1
	and	edx, 397364785
	mov	esi, edi
	xor	esi, 397364785
	and	eax, esi
	mov	r8d, ecx
	xor	r8d, -1
	and	r8d, 397364785
	and	ecx, esi
	or	edx, eax
	or	r8d, ecx
	xor	edx, r8d
	mov	dword ptr [rbp - 20], edx
	mov	eax, dword ptr [rbp - 20]
	mov	ecx, dword ptr [rbp - 8]
	mov	edx, eax
	xor	edx, -1
	mov	esi, ecx
	and	esi, edx
	xor	ecx, -1
	and	eax, ecx
	or	esi, eax
	mov	dword ptr [rbp - 24], esi
	mov	eax, dword ptr [rbp - 20]
	mov	ecx, dword ptr [rbp - 12]
	mov	edx, eax
	xor	edx, -1
	and	edx, 3122789711
	mov	esi, edi
	xor	esi, 3122789711
	and	eax, esi
	mov	r8d, ecx
	xor	r8d, -1
	and	r8d, -1172177585
	and	ecx, esi
	or	edx, eax
	or	r8d, ecx
	xor	edx, r8d
	mov	dword ptr [rbp - 28], edx
	mov	eax, dword ptr [rbp - 16]
	mov	ecx, dword ptr [rbp - 12]
	mov	edx, eax
	xor	edx, -1
	mov	esi, ecx
	and	esi, edx
	xor	ecx, -1
	and	eax, ecx
	or	esi, eax
	mov	eax, dword ptr [rbp - 8]
	mov	ecx, esi
	xor	ecx, -1
	and	ecx, 4289439948
	xor	edi, 4289439948
	and	esi, edi
	mov	edx, eax
	xor	edx, -1
	and	edx, -5527348
	and	eax, edi
	or	ecx, esi
	or	edx, eax
	xor	ecx, edx
	mov	dword ptr [rbp - 32], ecx
	mov	eax, dword ptr [rbp - 32]
	mov	edi, dword ptr [rbp - 20]
	mov	dword ptr [rbp - 36], eax 
	call	_ZN5Botan4rotrILm8EjEET0_S1_
	mov	ecx, 4294967295
	mov	edx, dword ptr [rbp - 36] 
	xor	edx, -1
	and	edx, 2425994742
	xor	ecx, 2425994742
	mov	esi, dword ptr [rbp - 36] 
	and	esi, ecx
	mov	edi, eax
	xor	edi, -1
	and	edi, -1868972554
	and	eax, ecx
	or	edx, esi
	or	edi, eax
	xor	edx, edi
	mov	edi, dword ptr [rbp - 28]
	mov	dword ptr [rbp - 40], edx 
	call	_ZN5Botan4rotrILm16EjEET0_S1_
	mov	ecx, 4294967295
	mov	edx, dword ptr [rbp - 40] 
	xor	edx, -1
	and	edx, 2529587378
	xor	ecx, 2529587378
	mov	esi, dword ptr [rbp - 40] 
	and	esi, ecx
	mov	edi, eax
	xor	edi, -1
	and	edi, -1765379918
	and	eax, ecx
	or	edx, esi
	or	edi, eax
	xor	edx, edi
	mov	edi, dword ptr [rbp - 24]
	mov	dword ptr [rbp - 44], edx 
	call	_ZN5Botan4rotrILm24EjEET0_S1_
	mov	ecx, dword ptr [rbp - 44] 
	xor	ecx, -1
	mov	edx, eax
	and	edx, ecx
	xor	eax, -1
	mov	ecx, dword ptr [rbp - 44] 
	and	ecx, eax
	or	edx, ecx
	mov	eax, edx
	add	rsp, 48
	pop	rbp
	ret
.Lfunc_end133:
	.size	_ZN5Botan12_GLOBAL__N_112InvMixColumnEj, .Lfunc_end133-_ZN5Botan12_GLOBAL__N_112InvMixColumnEj
	.cfi_endproc

	.p2align	4, 0x90         
	.type	_ZN5Botan12_GLOBAL__N_17xtime32Ej,@function
_ZN5Botan12_GLOBAL__N_17xtime32Ej:      

	push	rbp
	mov	rbp, rsp
	mov	eax, 4294967295
	mov	dword ptr [rbp - 4], edi
	mov	dword ptr [rbp - 8], 16843009
	mov	dword ptr [rbp - 12], 2139062143
	mov	dword ptr [rbp - 16], 27
	mov	edi, dword ptr [rbp - 4]
	xor	edi, -1
	mov	ecx, eax
	xor	ecx, 2139062143
	mov	edx, eax
	xor	edx, 4193695398
	or	edi, ecx
	or	edx, 4193695398
	xor	edi, -1
	and	edi, edx
	shl	edi, 1
	mov	ecx, dword ptr [rbp - 4]
	shr	ecx, 7
	xor	eax, 16843009
	mov	edx, ecx
	xor	edx, eax
	and	edx, ecx
	imul	eax, edx, 27
	mov	ecx, edi
	xor	ecx, -1
	mov	edx, eax
	and	edx, ecx
	xor	eax, -1
	and	edi, eax
	or	edx, edi
	mov	eax, edx
	pop	rbp
	ret
.Lfunc_end134:
	.size	_ZN5Botan12_GLOBAL__N_17xtime32Ej, .Lfunc_end134-_ZN5Botan12_GLOBAL__N_17xtime32Ej

	.section	.text._ZNSt6vectorIjN5Botan16secure_allocatorIjEEED2Ev,"axG",@progbits,_ZNSt6vectorIjN5Botan16secure_allocatorIjEEED2Ev,comdat
	.weak	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEED2Ev 
	.p2align	4, 0x90
	.type	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEED2Ev,@function
_ZNSt6vectorIjN5Botan16secure_allocatorIjEEED2Ev: 
.Lfunc_begin13:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception13

	push	rbp
	mov	rbp, rsp
	sub	rsp, 48
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	rax, qword ptr [rdi]
	mov	rsi, qword ptr [rdi + 8]
	mov	qword ptr [rbp - 32], rdi 
	mov	qword ptr [rbp - 40], rsi 
	mov	qword ptr [rbp - 48], rax 
	call	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE19_M_get_Tp_allocatorEv
.Ltmp75:
	mov	rdi, qword ptr [rbp - 48] 
	mov	rsi, qword ptr [rbp - 40] 
	mov	rdx, rax
	call	_ZSt8_DestroyIPjN5Botan16secure_allocatorIjEEEvT_S4_RT0_
.Ltmp76:
	jmp	.LBB135_1
.LBB135_1:
	mov	rax, qword ptr [rbp - 32] 
	mov	rdi, rax
	call	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEED2Ev
	add	rsp, 48
	pop	rbp
	ret
.LBB135_2:
.Ltmp77:
	mov	ecx, edx
	mov	qword ptr [rbp - 16], rax
	mov	dword ptr [rbp - 20], ecx
	mov	rax, qword ptr [rbp - 32] 
	mov	rdi, rax
	call	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEED2Ev

	mov	rdi, qword ptr [rbp - 16]
	call	__clang_call_terminate
.Lfunc_end135:
	.size	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEED2Ev, .Lfunc_end135-_ZNSt6vectorIjN5Botan16secure_allocatorIjEEED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table135:
.Lexception13:
	.byte	255                     
	.byte	3                       
	.byte	21                      
	.byte	3                       
	.byte	13                      
	.long	.Ltmp75-.Lfunc_begin13  
	.long	.Ltmp76-.Ltmp75         
	.long	.Ltmp77-.Lfunc_begin13  
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEED2Ev,comdat
	.weak	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEED2Ev 
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEED2Ev,@function
_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEED2Ev: 
.Lfunc_begin14:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception14

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	rax, qword ptr [rdi]
	mov	rcx, qword ptr [rdi + 16]
	sub	rcx, rax
	sar	rcx, 2
.Ltmp78:
	mov	rsi, rax
	mov	rdx, rcx
	call	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE13_M_deallocateEPjm
.Ltmp79:
	jmp	.LBB136_1
.LBB136_1:
	add	rsp, 16
	pop	rbp
	ret
.LBB136_2:
.Ltmp80:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 12], ecx 
	call	__clang_call_terminate
.Lfunc_end136:
	.size	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEED2Ev, .Lfunc_end136-_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table136:
.Lexception14:
	.byte	255                     
	.byte	3                       
	.byte	21                      
	.byte	3                       
	.byte	13                      
	.long	.Ltmp78-.Lfunc_begin14  
	.long	.Ltmp79-.Ltmp78         
	.long	.Ltmp80-.Lfunc_begin14  
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZSt11make_uniqueIN5Botan7AES_128EJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_,"axG",@progbits,_ZSt11make_uniqueIN5Botan7AES_128EJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_,comdat
	.weak	_ZSt11make_uniqueIN5Botan7AES_128EJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_ 
	.p2align	4, 0x90
	.type	_ZSt11make_uniqueIN5Botan7AES_128EJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_,@function
_ZSt11make_uniqueIN5Botan7AES_128EJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_: 
	.cfi_startproc

	push	rbp
.Lcfi379:
	.cfi_def_cfa_offset 16
.Lcfi380:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi381:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 72
.Lcfi382:
	.cfi_offset rbx, -40
.Lcfi383:
	.cfi_offset r14, -32
.Lcfi384:
	.cfi_offset r15, -24
	mov	rax, rdi
	xor	ecx, ecx
	mov	edx, dword ptr [x.258]
	mov	esi, dword ptr [y.259]
	sub	ecx, 1
	mov	r8d, edx
	add	r8d, ecx
	imul	edx, r8d
	and	edx, 1
	cmp	edx, 0
	sete	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 26], r9b
	cmp	esi, 10
	setl	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 25], r9b
	mov	dword ptr [rbp - 32], -1196375885
	mov	qword ptr [rbp - 40], rax 
	mov	qword ptr [rbp - 48], rdi 
.LBB137_1:                              
	mov	eax, dword ptr [rbp - 32]
	mov	ecx, eax
	sub	ecx, -1964996702
	mov	dword ptr [rbp - 52], eax 
	mov	dword ptr [rbp - 56], ecx 
	je	.LBB137_4
	jmp	.LBB137_8
.LBB137_8:                              
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, -1587859168
	mov	dword ptr [rbp - 60], eax 
	je	.LBB137_6
	jmp	.LBB137_9
.LBB137_9:                              
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, -1196375885
	mov	dword ptr [rbp - 64], eax 
	je	.LBB137_3
	jmp	.LBB137_10
.LBB137_10:                             
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, 1505201191
	mov	dword ptr [rbp - 68], eax 
	je	.LBB137_5
	jmp	.LBB137_2
.LBB137_2:                              
	jmp	.LBB137_7
.LBB137_3:                              
	mov	eax, 2707108128
	mov	ecx, 2329970594
	mov	dl, byte ptr [rbp - 26]
	mov	sil, byte ptr [rbp - 25]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB137_7
.LBB137_4:                              
	mov	eax, 56
	mov	edi, eax
	call	_Znwm
	xor	esi, esi
	mov	ecx, 56
	mov	edx, ecx
	mov	rdi, rax
	mov	qword ptr [rbp - 80], rax 
	call	memset
	mov	rdi, qword ptr [rbp - 80] 
	call	_ZN5Botan7AES_128C2Ev
	mov	rdi, qword ptr [rbp - 48] 
	mov	rsi, qword ptr [rbp - 80] 
	call	_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EEC2IS3_vEEPS1_
	mov	ecx, 2707108128
	mov	r8d, 1505201191
	mov	r9d, dword ptr [x.258]
	mov	r10d, dword ptr [y.259]
	mov	r11d, r9d
	sub	r11d, 2069938419
	sub	r11d, 1
	add	r11d, 2069938419
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	bl
	cmp	r10d, 10
	setl	r14b
	mov	r15b, bl
	and	r15b, r14b
	xor	bl, r14b
	or	r15b, bl
	test	r15b, 1
	cmovne	ecx, r8d
	mov	dword ptr [rbp - 32], ecx
	jmp	.LBB137_7
.LBB137_5:
	mov	rax, qword ptr [rbp - 40] 
	add	rsp, 72
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB137_6:                              
	mov	eax, 56
	mov	edi, eax
	call	_Znwm
	xor	esi, esi
	mov	ecx, 56
	mov	edx, ecx
	mov	rdi, rax
	mov	qword ptr [rbp - 88], rax 
	call	memset
	mov	rdi, qword ptr [rbp - 88] 
	call	_ZN5Botan7AES_128C2Ev
	mov	rdi, qword ptr [rbp - 48] 
	mov	rsi, qword ptr [rbp - 88] 
	call	_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EEC2IS3_vEEPS1_
	mov	dword ptr [rbp - 32], -1964996702
.LBB137_7:                              
	jmp	.LBB137_1
.Lfunc_end137:
	.size	_ZSt11make_uniqueIN5Botan7AES_128EJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_, .Lfunc_end137-_ZSt11make_uniqueIN5Botan7AES_128EJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_
	.cfi_endproc

	.section	.text._ZNSt10unique_ptrIN5Botan11BlockCipherESt14default_deleteIS1_EEC2INS0_7AES_128ES2_IS6_EvEEOS_IT_T0_E,"axG",@progbits,_ZNSt10unique_ptrIN5Botan11BlockCipherESt14default_deleteIS1_EEC2INS0_7AES_128ES2_IS6_EvEEOS_IT_T0_E,comdat
	.weak	_ZNSt10unique_ptrIN5Botan11BlockCipherESt14default_deleteIS1_EEC2INS0_7AES_128ES2_IS6_EvEEOS_IT_T0_E 
	.p2align	4, 0x90
	.type	_ZNSt10unique_ptrIN5Botan11BlockCipherESt14default_deleteIS1_EEC2INS0_7AES_128ES2_IS6_EvEEOS_IT_T0_E,@function
_ZNSt10unique_ptrIN5Botan11BlockCipherESt14default_deleteIS1_EEC2INS0_7AES_128ES2_IS6_EvEEOS_IT_T0_E: 
.Lfunc_begin15:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception15

	push	rbp
	mov	rbp, rsp
	sub	rsp, 48
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rdi, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 24], rdi 
	mov	rdi, rsi
	call	_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EE7releaseEv
	mov	rdi, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 32], rax 
	call	_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EE11get_deleterEv
	mov	rdi, rax
	call	_ZSt7forwardISt14default_deleteIN5Botan7AES_128EEEOT_RNSt16remove_referenceIS4_E4typeE
.Ltmp81:
	mov	rdi, qword ptr [rbp - 24] 
	mov	rsi, qword ptr [rbp - 32] 
	mov	rdx, rax
	call	_ZNSt15__uniq_ptr_implIN5Botan11BlockCipherESt14default_deleteIS1_EEC2IS2_INS0_7AES_128EEEEPS1_OT_
.Ltmp82:
	jmp	.LBB138_1
.LBB138_1:
	add	rsp, 48
	pop	rbp
	ret
.LBB138_2:
.Ltmp83:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 36], ecx 
	call	__clang_call_terminate
.Lfunc_end138:
	.size	_ZNSt10unique_ptrIN5Botan11BlockCipherESt14default_deleteIS1_EEC2INS0_7AES_128ES2_IS6_EvEEOS_IT_T0_E, .Lfunc_end138-_ZNSt10unique_ptrIN5Botan11BlockCipherESt14default_deleteIS1_EEC2INS0_7AES_128ES2_IS6_EvEEOS_IT_T0_E
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table138:
.Lexception15:
	.byte	255                     
	.byte	3                       
	.byte	21                      
	.byte	3                       
	.byte	13                      
	.long	.Ltmp81-.Lfunc_begin15  
	.long	.Ltmp82-.Ltmp81         
	.long	.Ltmp83-.Lfunc_begin15  
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EED2Ev,"axG",@progbits,_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EED2Ev,comdat
	.weak	_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EED2Ev 
	.p2align	4, 0x90
	.type	_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EED2Ev,@function
_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EED2Ev: 
.Lfunc_begin16:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception16

	push	rbp
	mov	rbp, rsp
	sub	rsp, 48
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
.Ltmp84:
	mov	qword ptr [rbp - 24], rdi 
	call	_ZNSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EE6_M_ptrEv
.Ltmp85:
	mov	qword ptr [rbp - 32], rax 
	jmp	.LBB139_1
.LBB139_1:
	mov	rax, qword ptr [rbp - 32] 
	mov	qword ptr [rbp - 16], rax
	mov	rcx, qword ptr [rbp - 16]
	cmp	qword ptr [rcx], 0
	je	.LBB139_4

	mov	rdi, qword ptr [rbp - 24] 
	call	_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EE11get_deleterEv
	mov	rdi, qword ptr [rbp - 16]
	mov	rsi, qword ptr [rdi]
.Ltmp86:
	mov	rdi, rax
	call	_ZNKSt14default_deleteIN5Botan7AES_128EEclEPS1_
.Ltmp87:
	jmp	.LBB139_3
.LBB139_3:
	jmp	.LBB139_4
.LBB139_4:
	mov	rax, qword ptr [rbp - 16]
	mov	qword ptr [rax], 0
	add	rsp, 48
	pop	rbp
	ret
.LBB139_5:
.Ltmp88:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 36], ecx 
	call	__clang_call_terminate
.Lfunc_end139:
	.size	_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EED2Ev, .Lfunc_end139-_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table139:
.Lexception16:
	.byte	255                     
	.byte	3                       
	.byte	21                      
	.byte	3                       
	.byte	13                      
	.long	.Ltmp84-.Lfunc_begin16  
	.long	.Ltmp87-.Ltmp84         
	.long	.Ltmp88-.Lfunc_begin16  
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZN5Botan7AES_128C2Ev,"axG",@progbits,_ZN5Botan7AES_128C2Ev,comdat
	.weak	_ZN5Botan7AES_128C2Ev   
	.p2align	4, 0x90
	.type	_ZN5Botan7AES_128C2Ev,@function
_ZN5Botan7AES_128C2Ev:                  

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 56
	xor	eax, eax
	mov	ecx, dword ptr [x.260]
	mov	edx, dword ptr [y.261]
	sub	eax, 1
	mov	esi, ecx
	add	esi, eax
	imul	ecx, esi
	and	ecx, 1
	cmp	ecx, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 26], r8b
	cmp	edx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 25], r8b
	mov	dword ptr [rbp - 32], -1991486285
	mov	qword ptr [rbp - 40], rdi 
.LBB140_1:                              
	mov	eax, dword ptr [rbp - 32]
	mov	ecx, eax
	sub	ecx, -1991486285
	mov	dword ptr [rbp - 44], eax 
	mov	dword ptr [rbp - 48], ecx 
	je	.LBB140_3
	jmp	.LBB140_8
.LBB140_8:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 83762047
	mov	dword ptr [rbp - 52], eax 
	je	.LBB140_6
	jmp	.LBB140_9
.LBB140_9:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 740191555
	mov	dword ptr [rbp - 56], eax 
	je	.LBB140_4
	jmp	.LBB140_10
.LBB140_10:                             
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 1120674337
	mov	dword ptr [rbp - 60], eax 
	je	.LBB140_5
	jmp	.LBB140_2
.LBB140_2:                              
	jmp	.LBB140_7
.LBB140_3:                              
	mov	eax, 83762047
	mov	ecx, 740191555
	mov	dl, byte ptr [rbp - 26]
	mov	sil, byte ptr [rbp - 25]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB140_7
.LBB140_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdx, rax
	mov	rdi, rdx
	mov	qword ptr [rbp - 72], rax 
	call	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEC2Ev
	movabs	rax, _ZTVN5Botan7AES_128E
	add	rax, 16
	mov	rcx, qword ptr [rbp - 72] 
	mov	qword ptr [rcx], rax
	add	rcx, 8
	mov	rdi, rcx
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEC2Ev
	mov	rax, qword ptr [rbp - 72] 
	add	rax, 32
	mov	rdi, rax
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEC2Ev
	mov	esi, 83762047
	mov	r8d, 1120674337
	mov	r9d, dword ptr [x.260]
	mov	r10d, dword ptr [y.261]
	mov	r11d, r9d
	sub	r11d, 2052293348
	sub	r11d, 1
	add	r11d, 2052293348
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	bl
	cmp	r10d, 10
	setl	r14b
	mov	r15b, bl
	and	r15b, r14b
	xor	bl, r14b
	or	r15b, bl
	test	r15b, 1
	cmovne	esi, r8d
	mov	dword ptr [rbp - 32], esi
	jmp	.LBB140_7
.LBB140_5:
	lea	rsp, [rbp - 24]
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB140_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdx, rax
	mov	rdi, rdx
	mov	qword ptr [rbp - 80], rax 
	call	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEC2Ev
	movabs	rax, _ZTVN5Botan7AES_128E
	add	rax, 16
	mov	rcx, qword ptr [rbp - 80] 
	mov	qword ptr [rcx], rax
	add	rcx, 8
	mov	rdi, rcx
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEC2Ev
	mov	rax, qword ptr [rbp - 80] 
	add	rax, 32
	mov	rdi, rax
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEC2Ev
	mov	dword ptr [rbp - 32], 740191555
.LBB140_7:                              
	jmp	.LBB140_1
.Lfunc_end140:
	.size	_ZN5Botan7AES_128C2Ev, .Lfunc_end140-_ZN5Botan7AES_128C2Ev

	.section	.text._ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EEC2IS3_vEEPS1_,"axG",@progbits,_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EEC2IS3_vEEPS1_,comdat
	.weak	_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EEC2IS3_vEEPS1_ 
	.p2align	4, 0x90
	.type	_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EEC2IS3_vEEPS1_,@function
_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EEC2IS3_vEEPS1_: 
.Lfunc_begin17:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception17

	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rdi, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rbp - 16]
.Ltmp89:
	call	_ZNSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EEC2EPS1_
.Ltmp90:
	jmp	.LBB141_1
.LBB141_1:
	add	rsp, 32
	pop	rbp
	ret
.LBB141_2:
.Ltmp91:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 20], ecx 
	call	__clang_call_terminate
.Lfunc_end141:
	.size	_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EEC2IS3_vEEPS1_, .Lfunc_end141-_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EEC2IS3_vEEPS1_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table141:
.Lexception17:
	.byte	255                     
	.byte	3                       
	.byte	21                      
	.byte	3                       
	.byte	13                      
	.long	.Ltmp89-.Lfunc_begin17  
	.long	.Ltmp90-.Ltmp89         
	.long	.Ltmp91-.Lfunc_begin17  
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEC2Ev,"axG",@progbits,_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEC2Ev,comdat
	.weak	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEC2Ev 
	.p2align	4, 0x90
	.type	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEC2Ev,@function
_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEC2Ev: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	rax, rdi
	mov	qword ptr [rbp - 16], rdi 
	mov	rdi, rax
	call	_ZN5Botan11BlockCipherC2Ev
	movabs	rax, _ZTVN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEE
	add	rax, 16
	mov	rdi, qword ptr [rbp - 16] 
	mov	qword ptr [rdi], rax
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end142:
	.size	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEC2Ev, .Lfunc_end142-_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEC2Ev

	.section	.text._ZNSt6vectorIjN5Botan16secure_allocatorIjEEEC2Ev,"axG",@progbits,_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEC2Ev,comdat
	.weak	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEC2Ev 
	.p2align	4, 0x90
	.type	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEC2Ev,@function
_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEC2Ev: 
.Lfunc_begin18:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception18

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
.Ltmp92:
	call	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEEC2Ev
.Ltmp93:
	jmp	.LBB143_1
.LBB143_1:
	add	rsp, 16
	pop	rbp
	ret
.LBB143_2:
.Ltmp94:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 12], ecx 
	call	__clang_call_terminate
.Lfunc_end143:
	.size	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEC2Ev, .Lfunc_end143-_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEC2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table143:
.Lexception18:
	.byte	255                     
	.byte	3                       
	.byte	21                      
	.byte	3                       
	.byte	13                      
	.long	.Ltmp92-.Lfunc_begin18  
	.long	.Ltmp93-.Ltmp92         
	.long	.Ltmp94-.Lfunc_begin18  
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZN5Botan11BlockCipherC2Ev,"axG",@progbits,_ZN5Botan11BlockCipherC2Ev,comdat
	.weak	_ZN5Botan11BlockCipherC2Ev 
	.p2align	4, 0x90
	.type	_ZN5Botan11BlockCipherC2Ev,@function
_ZN5Botan11BlockCipherC2Ev:             

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	rax, rdi
	mov	qword ptr [rbp - 16], rdi 
	mov	rdi, rax
	call	_ZN5Botan18SymmetricAlgorithmC2Ev
	movabs	rax, _ZTVN5Botan11BlockCipherE
	add	rax, 16
	mov	rdi, qword ptr [rbp - 16] 
	mov	qword ptr [rdi], rax
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end144:
	.size	_ZN5Botan11BlockCipherC2Ev, .Lfunc_end144-_ZN5Botan11BlockCipherC2Ev

	.section	.text._ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEED2Ev,"axG",@progbits,_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEED2Ev,comdat
	.weak	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEED2Ev 
	.p2align	4, 0x90
	.type	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEED2Ev,@function
_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEED2Ev: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZN5Botan11BlockCipherD2Ev
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end145:
	.size	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEED2Ev, .Lfunc_end145-_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEED2Ev

	.section	.text._ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEED0Ev,"axG",@progbits,_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEED0Ev,comdat
	.weak	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEED0Ev 
	.p2align	4, 0x90
	.type	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEED0Ev,@function
_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEED0Ev: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r12
	push	rbx
	mov	qword ptr [rbp - 40], rdi
	ud2
	mov	dword ptr [rbp - 44], -843621760
.LBB146_1:                              
	mov	eax, dword ptr [rbp - 44]
	mov	ecx, eax
	sub	ecx, -1344635098
	mov	dword ptr [rbp - 48], eax 
	mov	dword ptr [rbp - 52], ecx 
	je	.LBB146_5
	jmp	.LBB146_8
.LBB146_8:                              
	mov	eax, dword ptr [rbp - 48] 
	sub	eax, -1092058311
	mov	dword ptr [rbp - 56], eax 
	je	.LBB146_4
	jmp	.LBB146_9
.LBB146_9:                              
	mov	eax, dword ptr [rbp - 48] 
	sub	eax, -843621760
	mov	dword ptr [rbp - 60], eax 
	je	.LBB146_3
	jmp	.LBB146_10
.LBB146_10:                             
	mov	eax, dword ptr [rbp - 48] 
	sub	eax, 1346180141
	mov	dword ptr [rbp - 64], eax 
	je	.LBB146_6
	jmp	.LBB146_2
.LBB146_2:                              
	jmp	.LBB146_7
.LBB146_3:                              
	mov	eax, 1346180141
	mov	ecx, 3202908985
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.268]
	mov	r8d, dword ptr [y.269]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 0
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, 0
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 0
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 44], eax
	jmp	.LBB146_7
.LBB146_4:                              
	mov	eax, 1346180141
	mov	ecx, 2950332198
	mov	edx, dword ptr [x.268]
	mov	esi, dword ptr [y.269]
	mov	edi, edx
	sub	edi, -1352654860
	sub	edi, 1
	add	edi, -1352654860
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 44], eax
	jmp	.LBB146_7
.LBB146_5:
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB146_6:                              
	mov	dword ptr [rbp - 44], -1092058311
.LBB146_7:                              
	jmp	.LBB146_1
.Lfunc_end146:
	.size	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEED0Ev, .Lfunc_end146-_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEED0Ev

	.section	.text._ZNK5Botan11BlockCipher11parallelismEv,"axG",@progbits,_ZNK5Botan11BlockCipher11parallelismEv,comdat
	.weak	_ZNK5Botan11BlockCipher11parallelismEv 
	.p2align	4, 0x90
	.type	_ZNK5Botan11BlockCipher11parallelismEv,@function
_ZNK5Botan11BlockCipher11parallelismEv: 

	push	rbp
	mov	rbp, rsp
	mov	eax, 1

	mov	qword ptr [rbp - 8], rdi
	pop	rbp
	ret
.Lfunc_end147:
	.size	_ZNK5Botan11BlockCipher11parallelismEv, .Lfunc_end147-_ZNK5Botan11BlockCipher11parallelismEv

	.section	.text._ZNK5Botan11BlockCipher8providerB5cxx11Ev,"axG",@progbits,_ZNK5Botan11BlockCipher8providerB5cxx11Ev,comdat
	.weak	_ZNK5Botan11BlockCipher8providerB5cxx11Ev 
	.p2align	4, 0x90
	.type	_ZNK5Botan11BlockCipher8providerB5cxx11Ev,@function
_ZNK5Botan11BlockCipher8providerB5cxx11Ev: 
.Lfunc_begin19:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception19

	push	rbp
.Lcfi385:
	.cfi_def_cfa_offset 16
.Lcfi386:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi387:
	.cfi_def_cfa_register rbp
	sub	rsp, 64
	mov	rax, rdi
	mov	qword ptr [rbp - 8], rsi
	lea	rsi, [rbp - 16]
	mov	qword ptr [rbp - 40], rdi 
	mov	rdi, rsi
	mov	qword ptr [rbp - 48], rax 
	mov	qword ptr [rbp - 56], rsi 
	call	_ZNSaIcEC1Ev
.Ltmp95:
	mov	ecx, .L.str.2
	mov	esi, ecx
	mov	rdi, qword ptr [rbp - 40] 
	mov	rdx, qword ptr [rbp - 56] 
	call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_
.Ltmp96:
	jmp	.LBB148_1
.LBB148_1:
	lea	rdi, [rbp - 16]
	call	_ZNSaIcED1Ev
	mov	rax, qword ptr [rbp - 48] 
	add	rsp, 64
	pop	rbp
	ret
.LBB148_2:
.Ltmp97:
	lea	rdi, [rbp - 16]
	mov	ecx, edx
	mov	qword ptr [rbp - 24], rax
	mov	dword ptr [rbp - 28], ecx
	call	_ZNSaIcED1Ev

	mov	rdi, qword ptr [rbp - 24]
	call	_Unwind_Resume
.Lfunc_end148:
	.size	_ZNK5Botan11BlockCipher8providerB5cxx11Ev, .Lfunc_end148-_ZNK5Botan11BlockCipher8providerB5cxx11Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table148:
.Lexception19:
	.byte	255                     
	.byte	3                       
	.asciz	"\234"                  
	.byte	3                       
	.byte	26                      
	.long	.Ltmp95-.Lfunc_begin19  
	.long	.Ltmp96-.Ltmp95         
	.long	.Ltmp97-.Lfunc_begin19  
	.byte	0                       
	.long	.Ltmp96-.Lfunc_begin19  
	.long	.Lfunc_end148-.Ltmp96   
	.long	0                       
	.byte	0                       
	.p2align	2

	.section	.text._ZN5Botan18SymmetricAlgorithmC2Ev,"axG",@progbits,_ZN5Botan18SymmetricAlgorithmC2Ev,comdat
	.weak	_ZN5Botan18SymmetricAlgorithmC2Ev 
	.p2align	4, 0x90
	.type	_ZN5Botan18SymmetricAlgorithmC2Ev,@function
_ZN5Botan18SymmetricAlgorithmC2Ev:      

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 40
	xor	eax, eax
	mov	ecx, dword ptr [x.272]
	mov	edx, dword ptr [y.273]
	sub	eax, 1
	mov	esi, ecx
	add	esi, eax
	imul	ecx, esi
	and	ecx, 1
	cmp	ecx, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 42], r8b
	cmp	edx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 41], r8b
	mov	dword ptr [rbp - 48], -1283493900
	mov	qword ptr [rbp - 56], rdi 
.LBB149_1:                              
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -1283493900
	mov	dword ptr [rbp - 60], eax 
	mov	dword ptr [rbp - 64], ecx 
	je	.LBB149_3
	jmp	.LBB149_8
.LBB149_8:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, -483177231
	mov	dword ptr [rbp - 68], eax 
	je	.LBB149_4
	jmp	.LBB149_9
.LBB149_9:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, -89365607
	mov	dword ptr [rbp - 72], eax 
	je	.LBB149_5
	jmp	.LBB149_10
.LBB149_10:                             
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 2108214463
	mov	dword ptr [rbp - 76], eax 
	je	.LBB149_6
	jmp	.LBB149_2
.LBB149_2:                              
	jmp	.LBB149_7
.LBB149_3:                              
	mov	eax, 2108214463
	mov	ecx, 3811790065
	mov	dl, byte ptr [rbp - 42]
	mov	sil, byte ptr [rbp - 41]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB149_7
.LBB149_4:                              
	mov	eax, 2108214463
	mov	ecx, 4205601689
	mov	dl, 1
	movabs	rsi, _ZTVN5Botan18SymmetricAlgorithmE
	add	rsi, 16
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	r8, qword ptr [rbp - 56] 
	mov	qword ptr [rdi], r8
	mov	rdi, qword ptr [rdi]
	mov	qword ptr [rdi], rsi
	mov	r9d, dword ptr [x.272]
	mov	r10d, dword ptr [y.273]
	mov	r11d, r9d
	sub	r11d, 709241781
	sub	r11d, 1
	add	r11d, 709241781
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	bl
	cmp	r10d, 10
	setl	r14b
	mov	r15b, bl
	xor	r15b, -1
	mov	r12b, r14b
	xor	r12b, -1
	xor	dl, 1
	mov	r13b, r15b
	and	r13b, -1
	and	bl, dl
	mov	sil, r12b
	and	sil, -1
	and	r14b, dl
	or	r13b, bl
	or	sil, r14b
	xor	r13b, sil
	or	r15b, r12b
	xor	r15b, -1
	or	dl, 1
	and	r15b, dl
	or	r13b, r15b
	test	r13b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB149_7
.LBB149_5:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB149_6:                              
	movabs	rax, _ZTVN5Botan18SymmetricAlgorithmE
	add	rax, 16
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 56] 
	mov	qword ptr [rcx], rdx
	mov	rcx, qword ptr [rcx]
	mov	qword ptr [rcx], rax
	mov	dword ptr [rbp - 48], -483177231
.LBB149_7:                              
	jmp	.LBB149_1
.Lfunc_end149:
	.size	_ZN5Botan18SymmetricAlgorithmC2Ev, .Lfunc_end149-_ZN5Botan18SymmetricAlgorithmC2Ev

	.section	.text._ZN5Botan11BlockCipherD2Ev,"axG",@progbits,_ZN5Botan11BlockCipherD2Ev,comdat
	.weak	_ZN5Botan11BlockCipherD2Ev 
	.p2align	4, 0x90
	.type	_ZN5Botan11BlockCipherD2Ev,@function
_ZN5Botan11BlockCipherD2Ev:             

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZN5Botan18SymmetricAlgorithmD2Ev
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end150:
	.size	_ZN5Botan11BlockCipherD2Ev, .Lfunc_end150-_ZN5Botan11BlockCipherD2Ev

	.section	.text._ZN5Botan11BlockCipherD0Ev,"axG",@progbits,_ZN5Botan11BlockCipherD0Ev,comdat
	.weak	_ZN5Botan11BlockCipherD0Ev 
	.p2align	4, 0x90
	.type	_ZN5Botan11BlockCipherD0Ev,@function
_ZN5Botan11BlockCipherD0Ev:             

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	ud2
	mov	dword ptr [rbp - 12], 59420494
.LBB151_1:                              
	mov	eax, dword ptr [rbp - 12]
	sub	eax, 59420494
	mov	dword ptr [rbp - 16], eax 
	je	.LBB151_3
	jmp	.LBB151_2
.LBB151_2:                              
	jmp	.LBB151_4
.LBB151_3:
	pop	rbp
	ret
.LBB151_4:                              
	jmp	.LBB151_1
.Lfunc_end151:
	.size	_ZN5Botan11BlockCipherD0Ev, .Lfunc_end151-_ZN5Botan11BlockCipherD0Ev

	.section	.text._ZNK5Botan11BlockCipher13encrypt_n_xexEPhPKhm,"axG",@progbits,_ZNK5Botan11BlockCipher13encrypt_n_xexEPhPKhm,comdat
	.weak	_ZNK5Botan11BlockCipher13encrypt_n_xexEPhPKhm 
	.p2align	4, 0x90
	.type	_ZNK5Botan11BlockCipher13encrypt_n_xexEPhPKhm,@function
_ZNK5Botan11BlockCipher13encrypt_n_xexEPhPKhm: 
	.cfi_startproc

	push	rbp
.Lcfi388:
	.cfi_def_cfa_offset 16
.Lcfi389:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi390:
	.cfi_def_cfa_register rbp
	sub	rsp, 64
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	qword ptr [rbp - 32], rcx
	mov	rcx, qword ptr [rbp - 8]
	mov	rdx, qword ptr [rcx]
	mov	rdi, rcx
	mov	qword ptr [rbp - 48], rcx 
	call	qword ptr [rdx + 48]
	mov	qword ptr [rbp - 40], rax
	mov	rdi, qword ptr [rbp - 16]
	mov	rsi, qword ptr [rbp - 24]
	mov	rax, qword ptr [rbp - 32]
	imul	rax, qword ptr [rbp - 40]
	mov	rdx, rax
	call	_ZN5Botan7xor_bufEPhPKhm
	mov	rax, qword ptr [rbp - 48] 
	mov	rcx, qword ptr [rax]
	mov	rcx, qword ptr [rcx + 72]
	mov	rsi, qword ptr [rbp - 16]
	mov	rdx, qword ptr [rbp - 16]
	mov	rdi, qword ptr [rbp - 32]
	mov	qword ptr [rbp - 56], rdi 
	mov	rdi, rax
	mov	r8, qword ptr [rbp - 56] 
	mov	qword ptr [rbp - 64], rcx 
	mov	rcx, r8
	mov	r9, qword ptr [rbp - 64] 
	call	r9
	mov	rdi, qword ptr [rbp - 16]
	mov	rsi, qword ptr [rbp - 24]
	mov	rax, qword ptr [rbp - 32]
	imul	rax, qword ptr [rbp - 40]
	mov	rdx, rax
	call	_ZN5Botan7xor_bufEPhPKhm
	add	rsp, 64
	pop	rbp
	ret
.Lfunc_end152:
	.size	_ZNK5Botan11BlockCipher13encrypt_n_xexEPhPKhm, .Lfunc_end152-_ZNK5Botan11BlockCipher13encrypt_n_xexEPhPKhm
	.cfi_endproc

	.section	.text._ZNK5Botan11BlockCipher13decrypt_n_xexEPhPKhm,"axG",@progbits,_ZNK5Botan11BlockCipher13decrypt_n_xexEPhPKhm,comdat
	.weak	_ZNK5Botan11BlockCipher13decrypt_n_xexEPhPKhm 
	.p2align	4, 0x90
	.type	_ZNK5Botan11BlockCipher13decrypt_n_xexEPhPKhm,@function
_ZNK5Botan11BlockCipher13decrypt_n_xexEPhPKhm: 
	.cfi_startproc

	push	rbp
.Lcfi391:
	.cfi_def_cfa_offset 16
.Lcfi392:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi393:
	.cfi_def_cfa_register rbp
	sub	rsp, 64
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	qword ptr [rbp - 32], rcx
	mov	rcx, qword ptr [rbp - 8]
	mov	rdx, qword ptr [rcx]
	mov	rdi, rcx
	mov	qword ptr [rbp - 48], rcx 
	call	qword ptr [rdx + 48]
	mov	qword ptr [rbp - 40], rax
	mov	rdi, qword ptr [rbp - 16]
	mov	rsi, qword ptr [rbp - 24]
	mov	rax, qword ptr [rbp - 32]
	imul	rax, qword ptr [rbp - 40]
	mov	rdx, rax
	call	_ZN5Botan7xor_bufEPhPKhm
	mov	rax, qword ptr [rbp - 48] 
	mov	rcx, qword ptr [rax]
	mov	rcx, qword ptr [rcx + 80]
	mov	rsi, qword ptr [rbp - 16]
	mov	rdx, qword ptr [rbp - 16]
	mov	rdi, qword ptr [rbp - 32]
	mov	qword ptr [rbp - 56], rdi 
	mov	rdi, rax
	mov	r8, qword ptr [rbp - 56] 
	mov	qword ptr [rbp - 64], rcx 
	mov	rcx, r8
	mov	r9, qword ptr [rbp - 64] 
	call	r9
	mov	rdi, qword ptr [rbp - 16]
	mov	rsi, qword ptr [rbp - 24]
	mov	rax, qword ptr [rbp - 32]
	imul	rax, qword ptr [rbp - 40]
	mov	rdx, rax
	call	_ZN5Botan7xor_bufEPhPKhm
	add	rsp, 64
	pop	rbp
	ret
.Lfunc_end153:
	.size	_ZNK5Botan11BlockCipher13decrypt_n_xexEPhPKhm, .Lfunc_end153-_ZNK5Botan11BlockCipher13decrypt_n_xexEPhPKhm
	.cfi_endproc

	.section	.text._ZN5Botan18SymmetricAlgorithmD2Ev,"axG",@progbits,_ZN5Botan18SymmetricAlgorithmD2Ev,comdat
	.weak	_ZN5Botan18SymmetricAlgorithmD2Ev 
	.p2align	4, 0x90
	.type	_ZN5Botan18SymmetricAlgorithmD2Ev,@function
_ZN5Botan18SymmetricAlgorithmD2Ev:      

	push	rbp
	mov	rbp, rsp
	push	rbx
	sub	rsp, 40
	xor	eax, eax
	mov	ecx, dword ptr [x.282]
	mov	edx, dword ptr [y.283]
	sub	eax, 1
	mov	esi, ecx
	add	esi, eax
	imul	ecx, esi
	and	ecx, 1
	cmp	ecx, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 10], r8b
	cmp	edx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 9], r8b
	mov	dword ptr [rbp - 16], 438188336
	mov	qword ptr [rbp - 24], rdi 
.LBB154_1:                              
	mov	eax, dword ptr [rbp - 16]
	mov	ecx, eax
	sub	ecx, -1542405801
	mov	dword ptr [rbp - 28], eax 
	mov	dword ptr [rbp - 32], ecx 
	je	.LBB154_6
	jmp	.LBB154_8
.LBB154_8:                              
	mov	eax, dword ptr [rbp - 28] 
	sub	eax, -1070630200
	mov	dword ptr [rbp - 36], eax 
	je	.LBB154_4
	jmp	.LBB154_9
.LBB154_9:                              
	mov	eax, dword ptr [rbp - 28] 
	sub	eax, -54226902
	mov	dword ptr [rbp - 40], eax 
	je	.LBB154_5
	jmp	.LBB154_10
.LBB154_10:                             
	mov	eax, dword ptr [rbp - 28] 
	sub	eax, 438188336
	mov	dword ptr [rbp - 44], eax 
	je	.LBB154_3
	jmp	.LBB154_2
.LBB154_2:                              
	jmp	.LBB154_7
.LBB154_3:                              
	mov	eax, 2752561495
	mov	ecx, 3224337096
	mov	dl, 1
	mov	sil, byte ptr [rbp - 10]
	mov	dil, byte ptr [rbp - 9]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 16], eax
	jmp	.LBB154_7
.LBB154_4:                              
	mov	eax, 2752561495
	mov	ecx, 4240740394
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, qword ptr [rbp - 24] 
	mov	qword ptr [rdx], rsi
	mov	edi, dword ptr [x.282]
	mov	r8d, dword ptr [y.283]
	mov	r9d, edi
	add	r9d, 1987144429
	sub	r9d, 1
	sub	r9d, 1987144429
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	and	bl, r11b
	xor	r10b, r11b
	or	bl, r10b
	test	bl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 16], eax
	jmp	.LBB154_7
.LBB154_5:
	lea	rsp, [rbp - 8]
	pop	rbx
	pop	rbp
	ret
.LBB154_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 24] 
	mov	qword ptr [rax], rcx
	mov	dword ptr [rbp - 16], -1070630200
.LBB154_7:                              
	jmp	.LBB154_1
.Lfunc_end154:
	.size	_ZN5Botan18SymmetricAlgorithmD2Ev, .Lfunc_end154-_ZN5Botan18SymmetricAlgorithmD2Ev

	.section	.text._ZN5Botan18SymmetricAlgorithmD0Ev,"axG",@progbits,_ZN5Botan18SymmetricAlgorithmD0Ev,comdat
	.weak	_ZN5Botan18SymmetricAlgorithmD0Ev 
	.p2align	4, 0x90
	.type	_ZN5Botan18SymmetricAlgorithmD0Ev,@function
_ZN5Botan18SymmetricAlgorithmD0Ev:      

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	ud2
	mov	dword ptr [rbp - 12], -743287040
.LBB155_1:                              
	mov	eax, dword ptr [rbp - 12]
	sub	eax, -743287040
	mov	dword ptr [rbp - 16], eax 
	je	.LBB155_3
	jmp	.LBB155_2
.LBB155_2:                              
	jmp	.LBB155_4
.LBB155_3:
	pop	rbp
	ret
.LBB155_4:                              
	jmp	.LBB155_1
.Lfunc_end155:
	.size	_ZN5Botan18SymmetricAlgorithmD0Ev, .Lfunc_end155-_ZN5Botan18SymmetricAlgorithmD0Ev

	.section	.text._ZN5Botan7xor_bufEPhPKhm,"axG",@progbits,_ZN5Botan7xor_bufEPhPKhm,comdat
	.weak	_ZN5Botan7xor_bufEPhPKhm 
	.p2align	4, 0x90
	.type	_ZN5Botan7xor_bufEPhPKhm,@function
_ZN5Botan7xor_bufEPhPKhm:               
	.cfi_startproc

	push	rbp
.Lcfi394:
	.cfi_def_cfa_offset 16
.Lcfi395:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi396:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 200
.Lcfi397:
	.cfi_offset rbx, -56
.Lcfi398:
	.cfi_offset r12, -48
.Lcfi399:
	.cfi_offset r13, -40
.Lcfi400:
	.cfi_offset r14, -32
.Lcfi401:
	.cfi_offset r15, -24
	mov	eax, dword ptr [x.286]
	mov	ecx, dword ptr [y.287]
	mov	r8d, eax
	sub	r8d, -866858560
	sub	r8d, 1
	add	r8d, -866858560
	imul	eax, r8d
	and	eax, 1
	cmp	eax, 0
	sete	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 114], r9b
	cmp	ecx, 10
	setl	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 113], r9b
	mov	dword ptr [rbp - 120], 73778791
	mov	qword ptr [rbp - 128], rsi 
	mov	qword ptr [rbp - 136], rdi 
	mov	qword ptr [rbp - 144], rdx 
.LBB156_1:                              
	mov	eax, dword ptr [rbp - 120]
	mov	ecx, eax
	sub	ecx, -1928082136
	mov	dword ptr [rbp - 148], eax 
	mov	dword ptr [rbp - 152], ecx 
	je	.LBB156_6
	jmp	.LBB156_22
.LBB156_22:                             
	mov	eax, dword ptr [rbp - 148] 
	sub	eax, -1733173171
	mov	dword ptr [rbp - 156], eax 
	je	.LBB156_5
	jmp	.LBB156_23
.LBB156_23:                             
	mov	eax, dword ptr [rbp - 148] 
	sub	eax, -1532154603
	mov	dword ptr [rbp - 160], eax 
	je	.LBB156_13
	jmp	.LBB156_24
.LBB156_24:                             
	mov	eax, dword ptr [rbp - 148] 
	sub	eax, -1256339544
	mov	dword ptr [rbp - 164], eax 
	je	.LBB156_10
	jmp	.LBB156_25
.LBB156_25:                             
	mov	eax, dword ptr [rbp - 148] 
	sub	eax, -1057047206
	mov	dword ptr [rbp - 168], eax 
	je	.LBB156_8
	jmp	.LBB156_26
.LBB156_26:                             
	mov	eax, dword ptr [rbp - 148] 
	sub	eax, -999816247
	mov	dword ptr [rbp - 172], eax 
	je	.LBB156_11
	jmp	.LBB156_27
.LBB156_27:                             
	mov	eax, dword ptr [rbp - 148] 
	sub	eax, -788572549
	mov	dword ptr [rbp - 176], eax 
	je	.LBB156_7
	jmp	.LBB156_28
.LBB156_28:                             
	mov	eax, dword ptr [rbp - 148] 
	sub	eax, -657701660
	mov	dword ptr [rbp - 180], eax 
	je	.LBB156_9
	jmp	.LBB156_29
.LBB156_29:                             
	mov	eax, dword ptr [rbp - 148] 
	sub	eax, -603978067
	mov	dword ptr [rbp - 184], eax 
	je	.LBB156_14
	jmp	.LBB156_30
.LBB156_30:                             
	mov	eax, dword ptr [rbp - 148] 
	sub	eax, -470666657
	mov	dword ptr [rbp - 188], eax 
	je	.LBB156_16
	jmp	.LBB156_31
.LBB156_31:                             
	mov	eax, dword ptr [rbp - 148] 
	sub	eax, 73778791
	mov	dword ptr [rbp - 192], eax 
	je	.LBB156_3
	jmp	.LBB156_32
.LBB156_32:                             
	mov	eax, dword ptr [rbp - 148] 
	sub	eax, 719854683
	mov	dword ptr [rbp - 196], eax 
	je	.LBB156_17
	jmp	.LBB156_33
.LBB156_33:                             
	mov	eax, dword ptr [rbp - 148] 
	sub	eax, 980092915
	mov	dword ptr [rbp - 200], eax 
	je	.LBB156_20
	jmp	.LBB156_34
.LBB156_34:                             
	mov	eax, dword ptr [rbp - 148] 
	sub	eax, 1249016617
	mov	dword ptr [rbp - 204], eax 
	je	.LBB156_4
	jmp	.LBB156_35
.LBB156_35:                             
	mov	eax, dword ptr [rbp - 148] 
	sub	eax, 1480761317
	mov	dword ptr [rbp - 208], eax 
	je	.LBB156_15
	jmp	.LBB156_36
.LBB156_36:                             
	mov	eax, dword ptr [rbp - 148] 
	sub	eax, 1879268284
	mov	dword ptr [rbp - 212], eax 
	je	.LBB156_12
	jmp	.LBB156_37
.LBB156_37:                             
	mov	eax, dword ptr [rbp - 148] 
	sub	eax, 1980828721
	mov	dword ptr [rbp - 216], eax 
	je	.LBB156_19
	jmp	.LBB156_38
.LBB156_38:                             
	mov	eax, dword ptr [rbp - 148] 
	sub	eax, 2140735097
	mov	dword ptr [rbp - 220], eax 
	je	.LBB156_18
	jmp	.LBB156_2
.LBB156_2:                              
	jmp	.LBB156_21
.LBB156_3:                              
	mov	eax, 2140735097
	mov	ecx, 1249016617
	mov	dl, 1
	mov	sil, byte ptr [rbp - 114]
	mov	dil, byte ptr [rbp - 113]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 120], eax
	jmp	.LBB156_21
.LBB156_4:                              
	mov	eax, 2140735097
	mov	ecx, 2561794125
	xor	edx, edx
	mov	esi, edx
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	qword ptr [rbp - 112], rdi
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	qword ptr [rbp - 104], rdi
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	qword ptr [rbp - 96], rdi
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	qword ptr [rbp - 88], rdi
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	qword ptr [rbp - 80], rdi
	mov	rdi, rsp
	add	rdi, -32
	mov	rsp, rdi
	mov	qword ptr [rbp - 72], rdi
	mov	rdi, rsp
	add	rdi, -32
	mov	rsp, rdi
	mov	qword ptr [rbp - 64], rdi
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	qword ptr [rbp - 56], rdi
	mov	rdi, qword ptr [rbp - 112]
	mov	r8, qword ptr [rbp - 136] 
	mov	qword ptr [rdi], r8
	mov	rdi, qword ptr [rbp - 104]
	mov	r9, qword ptr [rbp - 128] 
	mov	qword ptr [rdi], r9
	mov	rdi, qword ptr [rbp - 96]
	mov	r10, qword ptr [rbp - 144] 
	mov	qword ptr [rdi], r10
	mov	rdi, qword ptr [rbp - 96]
	mov	rdi, qword ptr [rdi]
	mov	r11, qword ptr [rbp - 96]
	mov	r11, qword ptr [r11]
	and	r11, 31
	sub	rsi, r11
	add	rdi, rsi
	mov	rsi, qword ptr [rbp - 88]
	mov	qword ptr [rsi], rdi
	mov	rsi, qword ptr [rbp - 80]
	mov	qword ptr [rsi], 0
	mov	edx, dword ptr [x.286]
	mov	ebx, dword ptr [y.287]
	mov	r14d, edx
	sub	r14d, -1128848955
	sub	r14d, 1
	add	r14d, -1128848955
	imul	edx, r14d
	and	edx, 1
	cmp	edx, 0
	sete	r15b
	cmp	ebx, 10
	setl	r12b
	mov	r13b, r15b
	and	r13b, r12b
	xor	r15b, r12b
	or	r13b, r15b
	test	r13b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 120], eax
	jmp	.LBB156_21
.LBB156_5:                              
	mov	dword ptr [rbp - 120], -1928082136
	jmp	.LBB156_21
.LBB156_6:                              
	mov	eax, 3637265636
	mov	ecx, 3506394747
	mov	rdx, qword ptr [rbp - 80]
	mov	rdx, qword ptr [rdx]
	mov	rsi, qword ptr [rbp - 88]
	cmp	rdx, qword ptr [rsi]
	cmovne	eax, ecx
	mov	dword ptr [rbp - 120], eax
	jmp	.LBB156_21
.LBB156_7:                              
	mov	eax, 4
	mov	edx, eax
	mov	rdi, qword ptr [rbp - 72]
	mov	rcx, qword ptr [rbp - 112]
	mov	rcx, qword ptr [rcx]
	mov	rsi, qword ptr [rbp - 80]
	add	rcx, qword ptr [rsi]
	mov	rsi, rcx
	call	_ZN5Botan13typecast_copyImEEvPT_PKhm
	mov	eax, 4
	mov	edx, eax
	mov	rdi, qword ptr [rbp - 64]
	mov	rcx, qword ptr [rbp - 104]
	mov	rcx, qword ptr [rcx]
	mov	rsi, qword ptr [rbp - 80]
	add	rcx, qword ptr [rsi]
	mov	rsi, rcx
	call	_ZN5Botan13typecast_copyImEEvPT_PKhm
	mov	eax, 4
	mov	edx, eax
	movabs	rcx, 5885632516869641443
	mov	rsi, -1
	movabs	rdi, -5209566897441635115
	mov	r8, qword ptr [rbp - 64]
	mov	r8, qword ptr [r8]
	mov	r9, qword ptr [rbp - 72]
	mov	r10, qword ptr [r9]
	mov	r11, r10
	xor	r11, -1
	and	r11, rdi
	mov	rbx, rsi
	xor	rbx, rdi
	and	r10, rbx
	mov	r14, r8
	xor	r14, -1
	and	r14, rdi
	and	r8, rbx
	or	r11, r10
	or	r14, r8
	xor	r11, r14
	mov	qword ptr [r9], r11
	mov	rdi, qword ptr [rbp - 64]
	mov	rdi, qword ptr [rdi + 8]
	mov	r8, qword ptr [rbp - 72]
	mov	r9, qword ptr [r8 + 8]
	mov	r10, r9
	xor	r10, -1
	mov	r11, rdi
	and	r11, r10
	xor	rdi, -1
	and	r9, rdi
	or	r11, r9
	mov	qword ptr [r8 + 8], r11
	mov	rdi, qword ptr [rbp - 64]
	mov	rdi, qword ptr [rdi + 16]
	mov	r8, qword ptr [rbp - 72]
	mov	r9, qword ptr [r8 + 16]
	mov	r10, r9
	xor	r10, -1
	and	r10, rcx
	xor	rsi, rcx
	and	r9, rsi
	mov	r11, rdi
	xor	r11, -1
	and	r11, rcx
	and	rdi, rsi
	or	r10, r9
	or	r11, rdi
	xor	r10, r11
	mov	qword ptr [r8 + 16], r10
	mov	rcx, qword ptr [rbp - 64]
	mov	rcx, qword ptr [rcx + 24]
	mov	rsi, qword ptr [rbp - 72]
	mov	rdi, qword ptr [rsi + 24]
	mov	r8, rdi
	xor	r8, -1
	mov	r9, rcx
	and	r9, r8
	xor	rcx, -1
	and	rdi, rcx
	or	r9, rdi
	mov	qword ptr [rsi + 24], r9
	mov	rcx, qword ptr [rbp - 112]
	mov	rcx, qword ptr [rcx]
	mov	rsi, qword ptr [rbp - 80]
	add	rcx, qword ptr [rsi]
	mov	rsi, qword ptr [rbp - 72]
	mov	rdi, rcx
	call	_ZN5Botan13typecast_copyImEEvPhPT_m
	mov	dword ptr [rbp - 120], -1057047206
	jmp	.LBB156_21
.LBB156_8:                              
	xor	eax, eax
	mov	ecx, eax
	mov	rdx, qword ptr [rbp - 80]
	mov	rdx, qword ptr [rdx]
	sub	rcx, 32
	sub	rdx, rcx
	mov	rcx, qword ptr [rbp - 80]
	mov	qword ptr [rcx], rdx
	mov	dword ptr [rbp - 120], -1928082136
	jmp	.LBB156_21
.LBB156_9:                              
	mov	rax, qword ptr [rbp - 88]
	mov	rax, qword ptr [rax]
	mov	rcx, qword ptr [rbp - 56]
	mov	qword ptr [rcx], rax
	mov	dword ptr [rbp - 120], -1256339544
	jmp	.LBB156_21
.LBB156_10:                             
	mov	eax, 1980828721
	mov	ecx, 3295151049
	mov	dl, 1
	mov	esi, dword ptr [x.286]
	mov	edi, dword ptr [y.287]
	mov	r8d, esi
	sub	r8d, 1481827419
	sub	r8d, 1
	add	r8d, 1481827419
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 0
	mov	r14b, r11b
	and	r14b, 0
	and	r9b, dl
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 0
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 120], eax
	jmp	.LBB156_21
.LBB156_11:                             
	mov	eax, 1980828721
	mov	ecx, 1879268284
	mov	rdx, qword ptr [rbp - 56]
	mov	rdx, qword ptr [rdx]
	mov	rsi, qword ptr [rbp - 96]
	cmp	rdx, qword ptr [rsi]
	setne	dil
	and	dil, 1
	mov	byte ptr [rbp - 41], dil
	mov	r8d, dword ptr [x.286]
	mov	r9d, dword ptr [y.287]
	mov	r10d, r8d
	sub	r10d, 15884211
	sub	r10d, 1
	add	r10d, 15884211
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	dil
	cmp	r9d, 10
	setl	r11b
	mov	bl, dil
	and	bl, r11b
	xor	dil, r11b
	or	bl, dil
	test	bl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 120], eax
	jmp	.LBB156_21
.LBB156_12:                             
	mov	eax, 719854683
	mov	ecx, 2762812693
	mov	dl, byte ptr [rbp - 41]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 120], eax
	jmp	.LBB156_21
.LBB156_13:                             
	mov	eax, 980092915
	mov	ecx, 3690989229
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.286]
	mov	r8d, dword ptr [y.287]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 1
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, -1
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 1
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 120], eax
	jmp	.LBB156_21
.LBB156_14:                             
	mov	eax, 980092915
	mov	ecx, 1480761317
	mov	dl, 1
	xor	esi, esi
	mov	rdi, qword ptr [rbp - 104]
	mov	rdi, qword ptr [rdi]
	mov	r8, qword ptr [rbp - 56]
	mov	r8, qword ptr [r8]
	movzx	r9d, byte ptr [rdi + r8]
	mov	rdi, qword ptr [rbp - 112]
	mov	rdi, qword ptr [rdi]
	mov	r8, qword ptr [rbp - 56]
	mov	r8, qword ptr [r8]
	movzx	r10d, byte ptr [rdi + r8]
	mov	r11d, r10d
	xor	r11d, -1
	mov	ebx, r9d
	and	ebx, r11d
	xor	r9d, -1
	and	r10d, r9d
	or	ebx, r10d
	mov	r14b, bl
	mov	byte ptr [rdi + r8], r14b
	mov	r9d, dword ptr [x.286]
	mov	r10d, dword ptr [y.287]
	sub	esi, 1
	mov	r11d, r9d
	add	r11d, esi
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	r14b
	cmp	r10d, 10
	setl	r15b
	mov	r12b, r14b
	xor	r12b, -1
	mov	r13b, r15b
	xor	r13b, -1
	xor	dl, 1
	mov	sil, r12b
	and	sil, -1
	and	r14b, dl
	mov	dil, r13b
	and	dil, -1
	and	r15b, dl
	or	sil, r14b
	or	dil, r15b
	xor	sil, dil
	or	r12b, r13b
	xor	r12b, -1
	or	dl, 1
	and	r12b, dl
	or	sil, r12b
	test	sil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 120], eax
	jmp	.LBB156_21
.LBB156_15:                             
	mov	dword ptr [rbp - 120], -470666657
	jmp	.LBB156_21
.LBB156_16:                             
	movabs	rax, 5850191445321969548
	mov	rcx, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rcx]
	sub	rcx, rax
	add	rcx, 1
	add	rcx, rax
	mov	rax, qword ptr [rbp - 56]
	mov	qword ptr [rax], rcx
	mov	dword ptr [rbp - 120], -1256339544
	jmp	.LBB156_21
.LBB156_17:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB156_18:                             
	movabs	rax, -8047652812060233221
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	r8, rsp
	add	r8, -16
	mov	rsp, r8
	mov	r9, qword ptr [rbp - 136] 
	mov	qword ptr [rcx], r9
	mov	rcx, qword ptr [rbp - 128] 
	mov	qword ptr [rdx], rcx
	mov	rdx, qword ptr [rbp - 144] 
	mov	qword ptr [rsi], rdx
	mov	r10, qword ptr [rsi]
	mov	rsi, qword ptr [rsi]
	and	rsi, 31
	sub	r10, rax
	sub	r10, rsi
	add	r10, rax
	mov	qword ptr [rdi], r10
	mov	qword ptr [r8], 0
	mov	dword ptr [rbp - 120], 1249016617
	jmp	.LBB156_21
.LBB156_19:                             
	mov	rax, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rbp - 96]
	mov	dword ptr [rbp - 120], -999816247
	mov	qword ptr [rbp - 232], rax 
	mov	qword ptr [rbp - 240], rcx 
	jmp	.LBB156_21
.LBB156_20:                             
	mov	rax, qword ptr [rbp - 104]
	mov	rax, qword ptr [rax]
	mov	rcx, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rcx]
	movzx	edx, byte ptr [rax + rcx]
	mov	rax, qword ptr [rbp - 112]
	mov	rax, qword ptr [rax]
	mov	rcx, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rcx]
	movzx	esi, byte ptr [rax + rcx]
	mov	edi, esi
	xor	edi, -1
	mov	r8d, edx
	and	r8d, edi
	xor	edx, -1
	and	esi, edx
	or	r8d, esi
	mov	r9b, r8b
	mov	byte ptr [rax + rcx], r9b
	mov	dword ptr [rbp - 120], -603978067
.LBB156_21:                             
	jmp	.LBB156_1
.Lfunc_end156:
	.size	_ZN5Botan7xor_bufEPhPKhm, .Lfunc_end156-_ZN5Botan7xor_bufEPhPKhm
	.cfi_endproc

	.section	.text._ZN5Botan13typecast_copyImEEvPT_PKhm,"axG",@progbits,_ZN5Botan13typecast_copyImEEvPT_PKhm,comdat
	.weak	_ZN5Botan13typecast_copyImEEvPT_PKhm 
	.p2align	4, 0x90
	.type	_ZN5Botan13typecast_copyImEEvPT_PKhm,@function
_ZN5Botan13typecast_copyImEEvPT_PKhm:   

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 72
	mov	eax, dword ptr [x.288]
	mov	ecx, dword ptr [y.289]
	mov	r8d, eax
	sub	r8d, -1140127742
	sub	r8d, 1
	add	r8d, -1140127742
	imul	eax, r8d
	and	eax, 1
	cmp	eax, 0
	sete	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 26], r9b
	cmp	ecx, 10
	setl	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 25], r9b
	mov	dword ptr [rbp - 32], -1299020680
	mov	qword ptr [rbp - 40], rsi 
	mov	qword ptr [rbp - 48], rdi 
	mov	qword ptr [rbp - 56], rdx 
.LBB157_1:                              
	mov	eax, dword ptr [rbp - 32]
	mov	ecx, eax
	sub	ecx, -1299020680
	mov	dword ptr [rbp - 60], eax 
	mov	dword ptr [rbp - 64], ecx 
	je	.LBB157_3
	jmp	.LBB157_8
.LBB157_8:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, -481028042
	mov	dword ptr [rbp - 68], eax 
	je	.LBB157_6
	jmp	.LBB157_9
.LBB157_9:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 631984512
	mov	dword ptr [rbp - 72], eax 
	je	.LBB157_4
	jmp	.LBB157_10
.LBB157_10:                             
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 2140566390
	mov	dword ptr [rbp - 76], eax 
	je	.LBB157_5
	jmp	.LBB157_2
.LBB157_2:                              
	jmp	.LBB157_7
.LBB157_3:                              
	mov	eax, 3813939254
	mov	ecx, 631984512
	mov	dl, byte ptr [rbp - 26]
	mov	sil, byte ptr [rbp - 25]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB157_7
.LBB157_4:                              
	mov	eax, 3813939254
	mov	ecx, 2140566390
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	r8, qword ptr [rbp - 48] 
	mov	qword ptr [rdx], r8
	mov	r9, qword ptr [rbp - 40] 
	mov	qword ptr [rsi], r9
	mov	r10, qword ptr [rbp - 56] 
	mov	qword ptr [rdi], r10
	mov	rdx, qword ptr [rdx]
	mov	rsi, qword ptr [rsi]
	mov	rdi, qword ptr [rdi]
	shl	rdi, 3
	mov	qword ptr [rbp - 88], rdi 
	mov	rdi, rdx
	mov	rdx, qword ptr [rbp - 88] 
	mov	dword ptr [rbp - 92], eax 
	mov	dword ptr [rbp - 96], ecx 
	call	memcpy
	mov	eax, dword ptr [x.288]
	mov	ecx, dword ptr [y.289]
	mov	r11d, eax
	sub	r11d, 1232825489
	sub	r11d, 1
	add	r11d, 1232825489
	imul	eax, r11d
	and	eax, 1
	cmp	eax, 0
	sete	bl
	cmp	ecx, 10
	setl	r14b
	mov	r15b, bl
	and	r15b, r14b
	xor	bl, r14b
	or	r15b, bl
	test	r15b, 1
	mov	eax, dword ptr [rbp - 92] 
	mov	ecx, dword ptr [rbp - 96] 
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB157_7
.LBB157_5:
	lea	rsp, [rbp - 24]
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB157_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, qword ptr [rbp - 48] 
	mov	qword ptr [rax], rsi
	mov	rdi, qword ptr [rbp - 40] 
	mov	qword ptr [rcx], rdi
	mov	r8, qword ptr [rbp - 56] 
	mov	qword ptr [rdx], r8
	mov	rax, qword ptr [rax]
	mov	rsi, qword ptr [rcx]
	mov	rcx, qword ptr [rdx]
	shl	rcx, 3
	mov	rdi, rax
	mov	rdx, rcx
	call	memcpy
	mov	dword ptr [rbp - 32], 631984512
.LBB157_7:                              
	jmp	.LBB157_1
.Lfunc_end157:
	.size	_ZN5Botan13typecast_copyImEEvPT_PKhm, .Lfunc_end157-_ZN5Botan13typecast_copyImEEvPT_PKhm

	.section	.text._ZN5Botan13typecast_copyImEEvPhPT_m,"axG",@progbits,_ZN5Botan13typecast_copyImEEvPhPT_m,comdat
	.weak	_ZN5Botan13typecast_copyImEEvPhPT_m 
	.p2align	4, 0x90
	.type	_ZN5Botan13typecast_copyImEEvPhPT_m,@function
_ZN5Botan13typecast_copyImEEvPhPT_m:    

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 72
	mov	eax, dword ptr [x.290]
	mov	ecx, dword ptr [y.291]
	mov	r8d, eax
	add	r8d, -441524841
	sub	r8d, 1
	sub	r8d, -441524841
	imul	eax, r8d
	and	eax, 1
	cmp	eax, 0
	sete	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 42], r9b
	cmp	ecx, 10
	setl	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 41], r9b
	mov	dword ptr [rbp - 48], -1593263122
	mov	qword ptr [rbp - 56], rsi 
	mov	qword ptr [rbp - 64], rdi 
	mov	qword ptr [rbp - 72], rdx 
.LBB158_1:                              
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -1593263122
	mov	dword ptr [rbp - 76], eax 
	mov	dword ptr [rbp - 80], ecx 
	je	.LBB158_3
	jmp	.LBB158_8
.LBB158_8:                              
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, -1494072725
	mov	dword ptr [rbp - 84], eax 
	je	.LBB158_5
	jmp	.LBB158_9
.LBB158_9:                              
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, -1259748616
	mov	dword ptr [rbp - 88], eax 
	je	.LBB158_6
	jmp	.LBB158_10
.LBB158_10:                             
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, 1958418322
	mov	dword ptr [rbp - 92], eax 
	je	.LBB158_4
	jmp	.LBB158_2
.LBB158_2:                              
	jmp	.LBB158_7
.LBB158_3:                              
	mov	eax, 3035218680
	mov	ecx, 1958418322
	mov	dl, 1
	mov	sil, byte ptr [rbp - 42]
	mov	dil, byte ptr [rbp - 41]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB158_7
.LBB158_4:                              
	mov	eax, 3035218680
	mov	ecx, 2800894571
	mov	dl, 1
	xor	esi, esi
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	r8, rsp
	add	r8, -16
	mov	rsp, r8
	mov	r9, rsp
	add	r9, -16
	mov	rsp, r9
	mov	r10, qword ptr [rbp - 64] 
	mov	qword ptr [rdi], r10
	mov	r11, qword ptr [rbp - 56] 
	mov	qword ptr [r8], r11
	mov	rbx, qword ptr [rbp - 72] 
	mov	qword ptr [r9], rbx
	mov	rdi, qword ptr [rdi]
	mov	r8, qword ptr [r8]
	mov	r9, qword ptr [r9]
	shl	r9, 3
	mov	dword ptr [rbp - 96], esi 
	mov	rsi, r8
	mov	byte ptr [rbp - 97], dl 
	mov	rdx, r9
	mov	dword ptr [rbp - 104], eax 
	mov	dword ptr [rbp - 108], ecx 
	call	memcpy
	mov	eax, dword ptr [x.290]
	mov	ecx, dword ptr [y.291]
	mov	r14d, dword ptr [rbp - 96] 
	sub	r14d, 1
	mov	r15d, eax
	add	r15d, r14d
	imul	eax, r15d
	and	eax, 1
	cmp	eax, 0
	sete	r12b
	cmp	ecx, 10
	setl	r13b
	mov	al, r12b
	xor	al, -1
	mov	cl, r13b
	xor	cl, -1
	mov	dl, byte ptr [rbp - 97] 
	xor	dl, 1
	mov	sil, al
	and	sil, -1
	and	r12b, dl
	mov	dil, cl
	and	dil, -1
	and	r13b, dl
	or	sil, r12b
	or	dil, r13b
	xor	sil, dil
	or	al, cl
	xor	al, -1
	or	dl, 1
	and	al, dl
	or	sil, al
	test	sil, 1
	mov	r14d, dword ptr [rbp - 104] 
	mov	r15d, dword ptr [rbp - 108] 
	cmovne	r14d, r15d
	mov	dword ptr [rbp - 48], r14d
	jmp	.LBB158_7
.LBB158_5:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB158_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rsi
	mov	rdi, qword ptr [rbp - 56] 
	mov	qword ptr [rcx], rdi
	mov	r8, qword ptr [rbp - 72] 
	mov	qword ptr [rdx], r8
	mov	rdi, qword ptr [rax]
	mov	rax, qword ptr [rcx]
	mov	rcx, qword ptr [rdx]
	shl	rcx, 3
	mov	rsi, rax
	mov	rdx, rcx
	call	memcpy
	mov	dword ptr [rbp - 48], 1958418322
.LBB158_7:                              
	jmp	.LBB158_1
.Lfunc_end158:
	.size	_ZN5Botan13typecast_copyImEEvPhPT_m, .Lfunc_end158-_ZN5Botan13typecast_copyImEEvPhPT_m

	.section	.text._ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEEC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEEC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEEC2Ev 
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEEC2Ev,@function
_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEEC2Ev: 
	.cfi_startproc

	push	rbp
.Lcfi402:
	.cfi_def_cfa_offset 16
.Lcfi403:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi404:
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	sub	rsp, 48
.Lcfi405:
	.cfi_offset rbx, -32
.Lcfi406:
	.cfi_offset r14, -24
	mov	eax, dword ptr [x.292]
	mov	ecx, dword ptr [y.293]
	mov	edx, eax
	sub	edx, -2135141381
	sub	edx, 1
	add	edx, -2135141381
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 18], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 17], sil
	mov	dword ptr [rbp - 24], 1788804294
	mov	qword ptr [rbp - 32], rdi 
.LBB159_1:                              
	mov	eax, dword ptr [rbp - 24]
	mov	ecx, eax
	sub	ecx, -1576451481
	mov	dword ptr [rbp - 36], eax 
	mov	dword ptr [rbp - 40], ecx 
	je	.LBB159_4
	jmp	.LBB159_8
.LBB159_8:                              
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, 23155235
	mov	dword ptr [rbp - 44], eax 
	je	.LBB159_5
	jmp	.LBB159_9
.LBB159_9:                              
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, 144725965
	mov	dword ptr [rbp - 48], eax 
	je	.LBB159_6
	jmp	.LBB159_10
.LBB159_10:                             
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, 1788804294
	mov	dword ptr [rbp - 52], eax 
	je	.LBB159_3
	jmp	.LBB159_2
.LBB159_2:                              
	jmp	.LBB159_7
.LBB159_3:                              
	mov	eax, 144725965
	mov	ecx, 2718515815
	mov	dl, 1
	mov	sil, byte ptr [rbp - 18]
	mov	dil, byte ptr [rbp - 17]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 0
	mov	r10b, r8b
	and	r10b, 0
	and	sil, dl
	mov	r11b, r9b
	and	r11b, 0
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 0
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 24], eax
	jmp	.LBB159_7
.LBB159_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 32] 
	mov	qword ptr [rax], rcx
	mov	rdi, qword ptr [rax]
	call	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE12_Vector_implC2Ev
	mov	edx, 144725965
	mov	esi, 23155235
	mov	r8d, dword ptr [x.292]
	mov	r9d, dword ptr [y.293]
	mov	r10d, r8d
	sub	r10d, -966986323
	sub	r10d, 1
	add	r10d, -966986323
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	edx, esi
	mov	dword ptr [rbp - 24], edx
	jmp	.LBB159_7
.LBB159_5:
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
.LBB159_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 32] 
	mov	qword ptr [rax], rcx
	mov	rdi, qword ptr [rax]
	call	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE12_Vector_implC2Ev
	mov	dword ptr [rbp - 24], -1576451481
.LBB159_7:                              
	jmp	.LBB159_1
.Lfunc_end159:
	.size	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEEC2Ev, .Lfunc_end159-_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEEC2Ev
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE12_Vector_implC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE12_Vector_implC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE12_Vector_implC2Ev 
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE12_Vector_implC2Ev,@function
_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE12_Vector_implC2Ev: 

	push	rbp
	mov	rbp, rsp
	push	rbx
	sub	rsp, 40
	mov	eax, dword ptr [x.294]
	mov	ecx, dword ptr [y.295]
	mov	edx, eax
	add	edx, 1302130621
	sub	edx, 1
	sub	edx, 1302130621
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 10], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 9], sil
	mov	dword ptr [rbp - 16], 1620653411
	mov	qword ptr [rbp - 24], rdi 
.LBB160_1:                              
	mov	eax, dword ptr [rbp - 16]
	mov	ecx, eax
	sub	ecx, 123524825
	mov	dword ptr [rbp - 28], eax 
	mov	dword ptr [rbp - 32], ecx 
	je	.LBB160_4
	jmp	.LBB160_8
.LBB160_8:                              
	mov	eax, dword ptr [rbp - 28] 
	sub	eax, 450471449
	mov	dword ptr [rbp - 36], eax 
	je	.LBB160_5
	jmp	.LBB160_9
.LBB160_9:                              
	mov	eax, dword ptr [rbp - 28] 
	sub	eax, 1620653411
	mov	dword ptr [rbp - 40], eax 
	je	.LBB160_3
	jmp	.LBB160_10
.LBB160_10:                             
	mov	eax, dword ptr [rbp - 28] 
	sub	eax, 2095739206
	mov	dword ptr [rbp - 44], eax 
	je	.LBB160_6
	jmp	.LBB160_2
.LBB160_2:                              
	jmp	.LBB160_7
.LBB160_3:                              
	mov	eax, 2095739206
	mov	ecx, 123524825
	mov	dl, 1
	mov	sil, byte ptr [rbp - 10]
	mov	dil, byte ptr [rbp - 9]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 0
	mov	r10b, r8b
	and	r10b, 0
	and	sil, dl
	mov	r11b, r9b
	and	r11b, 0
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 0
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 16], eax
	jmp	.LBB160_7
.LBB160_4:                              
	mov	eax, 2095739206
	mov	ecx, 450471449
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, qword ptr [rbp - 24] 
	mov	qword ptr [rdx], rsi
	mov	rdx, qword ptr [rdx]
	mov	qword ptr [rdx], 0
	mov	qword ptr [rdx + 8], 0
	mov	qword ptr [rdx + 16], 0
	mov	edi, dword ptr [x.294]
	mov	r8d, dword ptr [y.295]
	mov	r9d, edi
	add	r9d, -66356459
	sub	r9d, 1
	sub	r9d, -66356459
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	and	bl, r11b
	xor	r10b, r11b
	or	bl, r10b
	test	bl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 16], eax
	jmp	.LBB160_7
.LBB160_5:
	lea	rsp, [rbp - 8]
	pop	rbx
	pop	rbp
	ret
.LBB160_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 24] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	qword ptr [rax], 0
	mov	qword ptr [rax + 8], 0
	mov	qword ptr [rax + 16], 0
	mov	dword ptr [rbp - 16], 123524825
.LBB160_7:                              
	jmp	.LBB160_1
.Lfunc_end160:
	.size	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE12_Vector_implC2Ev, .Lfunc_end160-_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE12_Vector_implC2Ev

	.section	.text._ZNSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EEC2EPS1_,"axG",@progbits,_ZNSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EEC2EPS1_,comdat
	.weak	_ZNSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EEC2EPS1_ 
	.p2align	4, 0x90
	.type	_ZNSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EEC2EPS1_,@function
_ZNSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EEC2EPS1_: 
	.cfi_startproc

	push	rbp
.Lcfi407:
	.cfi_def_cfa_offset 16
.Lcfi408:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi409:
	.cfi_def_cfa_register rbp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rsi, qword ptr [rbp - 8]
	mov	rdi, rsi
	mov	qword ptr [rbp - 24], rsi 
	call	_ZNSt5tupleIJPN5Botan7AES_128ESt14default_deleteIS1_EEEC2IS2_S4_Lb1EEEv
	mov	rsi, qword ptr [rbp - 16]
	mov	rdi, qword ptr [rbp - 24] 
	mov	qword ptr [rbp - 32], rsi 
	call	_ZNSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EE6_M_ptrEv
	mov	rsi, qword ptr [rbp - 32] 
	mov	qword ptr [rax], rsi
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end161:
	.size	_ZNSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EEC2EPS1_, .Lfunc_end161-_ZNSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EEC2EPS1_
	.cfi_endproc

	.section	.text._ZNSt5tupleIJPN5Botan7AES_128ESt14default_deleteIS1_EEEC2IS2_S4_Lb1EEEv,"axG",@progbits,_ZNSt5tupleIJPN5Botan7AES_128ESt14default_deleteIS1_EEEC2IS2_S4_Lb1EEEv,comdat
	.weak	_ZNSt5tupleIJPN5Botan7AES_128ESt14default_deleteIS1_EEEC2IS2_S4_Lb1EEEv 
	.p2align	4, 0x90
	.type	_ZNSt5tupleIJPN5Botan7AES_128ESt14default_deleteIS1_EEEC2IS2_S4_Lb1EEEv,@function
_ZNSt5tupleIJPN5Botan7AES_128ESt14default_deleteIS1_EEEC2IS2_S4_Lb1EEEv: 
	.cfi_startproc

	push	rbp
.Lcfi410:
	.cfi_def_cfa_offset 16
.Lcfi411:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi412:
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEEC2Ev
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end162:
	.size	_ZNSt5tupleIJPN5Botan7AES_128ESt14default_deleteIS1_EEEC2IS2_S4_Lb1EEEv, .Lfunc_end162-_ZNSt5tupleIJPN5Botan7AES_128ESt14default_deleteIS1_EEEC2IS2_S4_Lb1EEEv
	.cfi_endproc

	.section	.text._ZNSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EE6_M_ptrEv,"axG",@progbits,_ZNSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EE6_M_ptrEv,comdat
	.weak	_ZNSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EE6_M_ptrEv 
	.p2align	4, 0x90
	.type	_ZNSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EE6_M_ptrEv,@function
_ZNSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EE6_M_ptrEv: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZSt3getILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end163:
	.size	_ZNSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EE6_M_ptrEv, .Lfunc_end163-_ZNSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EE6_M_ptrEv

	.section	.text._ZNSt11_Tuple_implILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEEC2Ev,"axG",@progbits,_ZNSt11_Tuple_implILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEEC2Ev,comdat
	.weak	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEEC2Ev 
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEEC2Ev,@function
_ZNSt11_Tuple_implILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEEC2Ev: 
	.cfi_startproc

	push	rbp
.Lcfi413:
	.cfi_def_cfa_offset 16
.Lcfi414:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi415:
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	rax, rdi
	mov	qword ptr [rbp - 16], rdi 
	mov	rdi, rax
	call	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_128EEEEC2Ev
	mov	rax, qword ptr [rbp - 16] 
	mov	rdi, rax
	call	_ZNSt10_Head_baseILm0EPN5Botan7AES_128ELb0EEC2Ev
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end164:
	.size	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEEC2Ev, .Lfunc_end164-_ZNSt11_Tuple_implILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEEC2Ev
	.cfi_endproc

	.section	.text._ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_128EEEEC2Ev,"axG",@progbits,_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_128EEEEC2Ev,comdat
	.weak	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_128EEEEC2Ev 
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_128EEEEC2Ev,@function
_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_128EEEEC2Ev: 
	.cfi_startproc

	push	rbp
.Lcfi416:
	.cfi_def_cfa_offset 16
.Lcfi417:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi418:
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_128EELb1EEC2Ev
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end165:
	.size	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_128EEEEC2Ev, .Lfunc_end165-_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_128EEEEC2Ev
	.cfi_endproc

	.section	.text._ZNSt10_Head_baseILm0EPN5Botan7AES_128ELb0EEC2Ev,"axG",@progbits,_ZNSt10_Head_baseILm0EPN5Botan7AES_128ELb0EEC2Ev,comdat
	.weak	_ZNSt10_Head_baseILm0EPN5Botan7AES_128ELb0EEC2Ev 
	.p2align	4, 0x90
	.type	_ZNSt10_Head_baseILm0EPN5Botan7AES_128ELb0EEC2Ev,@function
_ZNSt10_Head_baseILm0EPN5Botan7AES_128ELb0EEC2Ev: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 40
	mov	eax, dword ptr [x.306]
	mov	ecx, dword ptr [y.307]
	mov	edx, eax
	add	edx, -1171234267
	sub	edx, 1
	sub	edx, -1171234267
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 42], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 41], sil
	mov	dword ptr [rbp - 48], 690042085
	mov	qword ptr [rbp - 56], rdi 
.LBB166_1:                              
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -232618710
	mov	dword ptr [rbp - 60], eax 
	mov	dword ptr [rbp - 64], ecx 
	je	.LBB166_5
	jmp	.LBB166_8
.LBB166_8:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 415218154
	mov	dword ptr [rbp - 68], eax 
	je	.LBB166_6
	jmp	.LBB166_9
.LBB166_9:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 690042085
	mov	dword ptr [rbp - 72], eax 
	je	.LBB166_3
	jmp	.LBB166_10
.LBB166_10:                             
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 1447303255
	mov	dword ptr [rbp - 76], eax 
	je	.LBB166_4
	jmp	.LBB166_2
.LBB166_2:                              
	jmp	.LBB166_7
.LBB166_3:                              
	mov	eax, 415218154
	mov	ecx, 1447303255
	mov	dl, byte ptr [rbp - 42]
	mov	sil, byte ptr [rbp - 41]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB166_7
.LBB166_4:                              
	mov	eax, 415218154
	mov	ecx, 4062348586
	mov	dl, 1
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 56] 
	mov	qword ptr [rsi], rdi
	mov	rsi, qword ptr [rsi]
	mov	qword ptr [rsi], 0
	mov	r8d, dword ptr [x.306]
	mov	r9d, dword ptr [y.307]
	mov	r10d, r8d
	sub	r10d, 1510183744
	sub	r10d, 1
	add	r10d, 1510183744
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	xor	r14b, -1
	mov	r15b, bl
	xor	r15b, -1
	xor	dl, 1
	mov	r12b, r14b
	and	r12b, -1
	and	r11b, dl
	mov	r13b, r15b
	and	r13b, -1
	and	bl, dl
	or	r12b, r11b
	or	r13b, bl
	xor	r12b, r13b
	or	r14b, r15b
	xor	r14b, -1
	or	dl, 1
	and	r14b, dl
	or	r12b, r14b
	test	r12b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB166_7
.LBB166_5:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB166_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	qword ptr [rax], 0
	mov	dword ptr [rbp - 48], 1447303255
.LBB166_7:                              
	jmp	.LBB166_1
.Lfunc_end166:
	.size	_ZNSt10_Head_baseILm0EPN5Botan7AES_128ELb0EEC2Ev, .Lfunc_end166-_ZNSt10_Head_baseILm0EPN5Botan7AES_128ELb0EEC2Ev

	.section	.text._ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_128EELb1EEC2Ev,"axG",@progbits,_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_128EELb1EEC2Ev,comdat
	.weak	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_128EELb1EEC2Ev 
	.p2align	4, 0x90
	.type	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_128EELb1EEC2Ev,@function
_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_128EELb1EEC2Ev: 

	push	rbp
	mov	rbp, rsp
	push	r14
	push	rbx
	sub	rsp, 48
	xor	eax, eax
	mov	ecx, dword ptr [x.308]
	mov	edx, dword ptr [y.309]
	sub	eax, 1
	mov	esi, ecx
	add	esi, eax
	imul	ecx, esi
	and	ecx, 1
	cmp	ecx, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 18], r8b
	cmp	edx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 17], r8b
	mov	dword ptr [rbp - 24], 1844665234
	mov	qword ptr [rbp - 32], rdi 
.LBB167_1:                              
	mov	eax, dword ptr [rbp - 24]
	mov	ecx, eax
	sub	ecx, -1119674165
	mov	dword ptr [rbp - 36], eax 
	mov	dword ptr [rbp - 40], ecx 
	je	.LBB167_5
	jmp	.LBB167_8
.LBB167_8:                              
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, 976748121
	mov	dword ptr [rbp - 44], eax 
	je	.LBB167_4
	jmp	.LBB167_9
.LBB167_9:                              
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, 1844665234
	mov	dword ptr [rbp - 48], eax 
	je	.LBB167_3
	jmp	.LBB167_10
.LBB167_10:                             
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, 1878133590
	mov	dword ptr [rbp - 52], eax 
	je	.LBB167_6
	jmp	.LBB167_2
.LBB167_2:                              
	jmp	.LBB167_7
.LBB167_3:                              
	mov	eax, 1878133590
	mov	ecx, 976748121
	mov	dl, byte ptr [rbp - 18]
	mov	sil, byte ptr [rbp - 17]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 24], eax
	jmp	.LBB167_7
.LBB167_4:                              
	mov	eax, 1878133590
	mov	ecx, 3175293131
	xor	edx, edx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 32] 
	mov	qword ptr [rsi], rdi
	mov	r8d, dword ptr [x.308]
	mov	r9d, dword ptr [y.309]
	sub	edx, 1
	mov	r10d, r8d
	add	r10d, edx
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 24], eax
	jmp	.LBB167_7
.LBB167_5:
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
.LBB167_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 32] 
	mov	qword ptr [rax], rcx
	mov	dword ptr [rbp - 24], 976748121
.LBB167_7:                              
	jmp	.LBB167_1
.Lfunc_end167:
	.size	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_128EELb1EEC2Ev, .Lfunc_end167-_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_128EELb1EEC2Ev

	.section	.text._ZSt3getILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,"axG",@progbits,_ZSt3getILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,comdat
	.weak	_ZSt3getILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_ 
	.p2align	4, 0x90
	.type	_ZSt3getILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,@function
_ZSt3getILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZSt12__get_helperILm0EPN5Botan7AES_128EJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end168:
	.size	_ZSt3getILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_, .Lfunc_end168-_ZSt3getILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_

	.section	.text._ZSt12__get_helperILm0EPN5Botan7AES_128EJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE,"axG",@progbits,_ZSt12__get_helperILm0EPN5Botan7AES_128EJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE,comdat
	.weak	_ZSt12__get_helperILm0EPN5Botan7AES_128EJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE 
	.p2align	4, 0x90
	.type	_ZSt12__get_helperILm0EPN5Botan7AES_128EJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE,@function
_ZSt12__get_helperILm0EPN5Botan7AES_128EJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEE7_M_headERS5_
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end169:
	.size	_ZSt12__get_helperILm0EPN5Botan7AES_128EJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE, .Lfunc_end169-_ZSt12__get_helperILm0EPN5Botan7AES_128EJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE

	.section	.text._ZNSt11_Tuple_implILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEE7_M_headERS5_,"axG",@progbits,_ZNSt11_Tuple_implILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEE7_M_headERS5_,comdat
	.weak	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEE7_M_headERS5_ 
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEE7_M_headERS5_,@function
_ZNSt11_Tuple_implILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEE7_M_headERS5_: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNSt10_Head_baseILm0EPN5Botan7AES_128ELb0EE7_M_headERS3_
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end170:
	.size	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEE7_M_headERS5_, .Lfunc_end170-_ZNSt11_Tuple_implILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEE7_M_headERS5_

	.section	.text._ZNSt10_Head_baseILm0EPN5Botan7AES_128ELb0EE7_M_headERS3_,"axG",@progbits,_ZNSt10_Head_baseILm0EPN5Botan7AES_128ELb0EE7_M_headERS3_,comdat
	.weak	_ZNSt10_Head_baseILm0EPN5Botan7AES_128ELb0EE7_M_headERS3_ 
	.p2align	4, 0x90
	.type	_ZNSt10_Head_baseILm0EPN5Botan7AES_128ELb0EE7_M_headERS3_,@function
_ZNSt10_Head_baseILm0EPN5Botan7AES_128ELb0EE7_M_headERS3_: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	pop	rbp
	ret
.Lfunc_end171:
	.size	_ZNSt10_Head_baseILm0EPN5Botan7AES_128ELb0EE7_M_headERS3_, .Lfunc_end171-_ZNSt10_Head_baseILm0EPN5Botan7AES_128ELb0EE7_M_headERS3_

	.section	.text._ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EE7releaseEv,"axG",@progbits,_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EE7releaseEv,comdat
	.weak	_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EE7releaseEv 
	.p2align	4, 0x90
	.type	_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EE7releaseEv,@function
_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EE7releaseEv: 
.Lfunc_begin20:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception20

	push	rbp
	mov	rbp, rsp
	sub	rsp, 48
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	qword ptr [rbp - 24], rdi 
	call	_ZNKSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EE3getEv
	mov	qword ptr [rbp - 16], rax
.Ltmp98:
	mov	rdi, qword ptr [rbp - 24] 
	call	_ZNSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EE6_M_ptrEv
.Ltmp99:
	mov	qword ptr [rbp - 32], rax 
	jmp	.LBB172_1
.LBB172_1:
	mov	rax, qword ptr [rbp - 32] 
	mov	qword ptr [rax], 0
	mov	rax, qword ptr [rbp - 16]
	add	rsp, 48
	pop	rbp
	ret
.LBB172_2:
.Ltmp100:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 36], ecx 
	call	__clang_call_terminate
.Lfunc_end172:
	.size	_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EE7releaseEv, .Lfunc_end172-_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EE7releaseEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table172:
.Lexception20:
	.byte	255                     
	.byte	3                       
	.byte	21                      
	.byte	3                       
	.byte	13                      
	.long	.Ltmp98-.Lfunc_begin20  
	.long	.Ltmp99-.Ltmp98         
	.long	.Ltmp100-.Lfunc_begin20 
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZSt7forwardISt14default_deleteIN5Botan7AES_128EEEOT_RNSt16remove_referenceIS4_E4typeE,"axG",@progbits,_ZSt7forwardISt14default_deleteIN5Botan7AES_128EEEOT_RNSt16remove_referenceIS4_E4typeE,comdat
	.weak	_ZSt7forwardISt14default_deleteIN5Botan7AES_128EEEOT_RNSt16remove_referenceIS4_E4typeE 
	.p2align	4, 0x90
	.type	_ZSt7forwardISt14default_deleteIN5Botan7AES_128EEEOT_RNSt16remove_referenceIS4_E4typeE,@function
_ZSt7forwardISt14default_deleteIN5Botan7AES_128EEEOT_RNSt16remove_referenceIS4_E4typeE: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	pop	rbp
	ret
.Lfunc_end173:
	.size	_ZSt7forwardISt14default_deleteIN5Botan7AES_128EEEOT_RNSt16remove_referenceIS4_E4typeE, .Lfunc_end173-_ZSt7forwardISt14default_deleteIN5Botan7AES_128EEEOT_RNSt16remove_referenceIS4_E4typeE

	.section	.text._ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EE11get_deleterEv,"axG",@progbits,_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EE11get_deleterEv,comdat
	.weak	_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EE11get_deleterEv 
	.p2align	4, 0x90
	.type	_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EE11get_deleterEv,@function
_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EE11get_deleterEv: 
.Lfunc_begin21:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception21

	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
.Ltmp101:
	call	_ZNSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EE10_M_deleterEv
.Ltmp102:
	mov	qword ptr [rbp - 16], rax 
	jmp	.LBB174_1
.LBB174_1:
	mov	rax, qword ptr [rbp - 16] 
	add	rsp, 32
	pop	rbp
	ret
.LBB174_2:
.Ltmp103:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 20], ecx 
	call	__clang_call_terminate
.Lfunc_end174:
	.size	_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EE11get_deleterEv, .Lfunc_end174-_ZNSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EE11get_deleterEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table174:
.Lexception21:
	.byte	255                     
	.byte	3                       
	.byte	21                      
	.byte	3                       
	.byte	13                      
	.long	.Ltmp101-.Lfunc_begin21 
	.long	.Ltmp102-.Ltmp101       
	.long	.Ltmp103-.Lfunc_begin21 
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZNSt15__uniq_ptr_implIN5Botan11BlockCipherESt14default_deleteIS1_EEC2IS2_INS0_7AES_128EEEEPS1_OT_,"axG",@progbits,_ZNSt15__uniq_ptr_implIN5Botan11BlockCipherESt14default_deleteIS1_EEC2IS2_INS0_7AES_128EEEEPS1_OT_,comdat
	.weak	_ZNSt15__uniq_ptr_implIN5Botan11BlockCipherESt14default_deleteIS1_EEC2IS2_INS0_7AES_128EEEEPS1_OT_ 
	.p2align	4, 0x90
	.type	_ZNSt15__uniq_ptr_implIN5Botan11BlockCipherESt14default_deleteIS1_EEC2IS2_INS0_7AES_128EEEEPS1_OT_,@function
_ZNSt15__uniq_ptr_implIN5Botan11BlockCipherESt14default_deleteIS1_EEC2IS2_INS0_7AES_128EEEEPS1_OT_: 
	.cfi_startproc

	push	rbp
.Lcfi419:
	.cfi_def_cfa_offset 16
.Lcfi420:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi421:
	.cfi_def_cfa_register rbp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	rdi, qword ptr [rbp - 8]
	mov	rdx, qword ptr [rbp - 24]
	mov	qword ptr [rbp - 32], rdi 
	mov	rdi, rdx
	call	_ZSt7forwardISt14default_deleteIN5Botan7AES_128EEEOT_RNSt16remove_referenceIS4_E4typeE
	lea	rsi, [rbp - 16]
	mov	rdi, qword ptr [rbp - 32] 
	mov	rdx, rax
	call	_ZNSt5tupleIJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_S3_INS0_7AES_128EELb1EEEOT_OT0_
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end175:
	.size	_ZNSt15__uniq_ptr_implIN5Botan11BlockCipherESt14default_deleteIS1_EEC2IS2_INS0_7AES_128EEEEPS1_OT_, .Lfunc_end175-_ZNSt15__uniq_ptr_implIN5Botan11BlockCipherESt14default_deleteIS1_EEC2IS2_INS0_7AES_128EEEEPS1_OT_
	.cfi_endproc

	.section	.text._ZNKSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EE3getEv,"axG",@progbits,_ZNKSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EE3getEv,comdat
	.weak	_ZNKSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EE3getEv 
	.p2align	4, 0x90
	.type	_ZNKSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EE3getEv,@function
_ZNKSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EE3getEv: 
.Lfunc_begin22:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception22

	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
.Ltmp104:
	call	_ZNKSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EE6_M_ptrEv
.Ltmp105:
	mov	qword ptr [rbp - 16], rax 
	jmp	.LBB176_1
.LBB176_1:
	mov	rax, qword ptr [rbp - 16] 
	add	rsp, 32
	pop	rbp
	ret
.LBB176_2:
.Ltmp106:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 20], ecx 
	call	__clang_call_terminate
.Lfunc_end176:
	.size	_ZNKSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EE3getEv, .Lfunc_end176-_ZNKSt10unique_ptrIN5Botan7AES_128ESt14default_deleteIS1_EE3getEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table176:
.Lexception22:
	.byte	255                     
	.byte	3                       
	.byte	21                      
	.byte	3                       
	.byte	13                      
	.long	.Ltmp104-.Lfunc_begin22 
	.long	.Ltmp105-.Ltmp104       
	.long	.Ltmp106-.Lfunc_begin22 
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZNKSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EE6_M_ptrEv,"axG",@progbits,_ZNKSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EE6_M_ptrEv,comdat
	.weak	_ZNKSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EE6_M_ptrEv 
	.p2align	4, 0x90
	.type	_ZNKSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EE6_M_ptrEv,@function
_ZNKSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EE6_M_ptrEv: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZSt3getILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_
	mov	rax, qword ptr [rax]
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end177:
	.size	_ZNKSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EE6_M_ptrEv, .Lfunc_end177-_ZNKSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EE6_M_ptrEv

	.section	.text._ZSt3getILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_,"axG",@progbits,_ZSt3getILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_,comdat
	.weak	_ZSt3getILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_ 
	.p2align	4, 0x90
	.type	_ZSt3getILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_,@function
_ZSt3getILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_: 

	push	rbp
	mov	rbp, rsp
	push	r14
	push	rbx
	sub	rsp, 64
	xor	eax, eax
	mov	ecx, dword ptr [x.324]
	mov	edx, dword ptr [y.325]
	sub	eax, 1
	mov	esi, ecx
	add	esi, eax
	imul	ecx, esi
	and	ecx, 1
	cmp	ecx, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 26], r8b
	cmp	edx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 25], r8b
	mov	dword ptr [rbp - 32], 1475468124
	mov	qword ptr [rbp - 40], rdi 
.LBB178_1:                              
	mov	eax, dword ptr [rbp - 32]
	mov	ecx, eax
	sub	ecx, -813260412
	mov	dword ptr [rbp - 44], eax 
	mov	dword ptr [rbp - 48], ecx 
	je	.LBB178_5
	jmp	.LBB178_8
.LBB178_8:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 161157007
	mov	dword ptr [rbp - 52], eax 
	je	.LBB178_6
	jmp	.LBB178_9
.LBB178_9:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 426126035
	mov	dword ptr [rbp - 56], eax 
	je	.LBB178_4
	jmp	.LBB178_10
.LBB178_10:                             
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 1475468124
	mov	dword ptr [rbp - 60], eax 
	je	.LBB178_3
	jmp	.LBB178_2
.LBB178_2:                              
	jmp	.LBB178_7
.LBB178_3:                              
	mov	eax, 161157007
	mov	ecx, 426126035
	mov	dl, 1
	mov	sil, byte ptr [rbp - 26]
	mov	dil, byte ptr [rbp - 25]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB178_7
.LBB178_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	call	_ZSt12__get_helperILm0EPN5Botan7AES_128EJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE
	mov	edx, 161157007
	mov	esi, 3481706884
	mov	qword ptr [rbp - 24], rax
	mov	r8d, dword ptr [x.324]
	mov	r9d, dword ptr [y.325]
	mov	r10d, r8d
	sub	r10d, -1108956360
	sub	r10d, 1
	add	r10d, -1108956360
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	edx, esi
	mov	dword ptr [rbp - 32], edx
	jmp	.LBB178_7
.LBB178_5:
	mov	rax, qword ptr [rbp - 24]
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
.LBB178_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	call	_ZSt12__get_helperILm0EPN5Botan7AES_128EJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE
	mov	dword ptr [rbp - 32], 426126035
	mov	qword ptr [rbp - 72], rax 
.LBB178_7:                              
	jmp	.LBB178_1
.Lfunc_end178:
	.size	_ZSt3getILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_, .Lfunc_end178-_ZSt3getILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_

	.section	.text._ZSt12__get_helperILm0EPN5Botan7AES_128EJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE,"axG",@progbits,_ZSt12__get_helperILm0EPN5Botan7AES_128EJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE,comdat
	.weak	_ZSt12__get_helperILm0EPN5Botan7AES_128EJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE 
	.p2align	4, 0x90
	.type	_ZSt12__get_helperILm0EPN5Botan7AES_128EJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE,@function
_ZSt12__get_helperILm0EPN5Botan7AES_128EJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEE7_M_headERKS5_
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end179:
	.size	_ZSt12__get_helperILm0EPN5Botan7AES_128EJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE, .Lfunc_end179-_ZSt12__get_helperILm0EPN5Botan7AES_128EJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE

	.section	.text._ZNSt11_Tuple_implILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEE7_M_headERKS5_,"axG",@progbits,_ZNSt11_Tuple_implILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEE7_M_headERKS5_,comdat
	.weak	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEE7_M_headERKS5_ 
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEE7_M_headERKS5_,@function
_ZNSt11_Tuple_implILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEE7_M_headERKS5_: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNSt10_Head_baseILm0EPN5Botan7AES_128ELb0EE7_M_headERKS3_
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end180:
	.size	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEE7_M_headERKS5_, .Lfunc_end180-_ZNSt11_Tuple_implILm0EJPN5Botan7AES_128ESt14default_deleteIS1_EEE7_M_headERKS5_

	.section	.text._ZNSt10_Head_baseILm0EPN5Botan7AES_128ELb0EE7_M_headERKS3_,"axG",@progbits,_ZNSt10_Head_baseILm0EPN5Botan7AES_128ELb0EE7_M_headERKS3_,comdat
	.weak	_ZNSt10_Head_baseILm0EPN5Botan7AES_128ELb0EE7_M_headERKS3_ 
	.p2align	4, 0x90
	.type	_ZNSt10_Head_baseILm0EPN5Botan7AES_128ELb0EE7_M_headERKS3_,@function
_ZNSt10_Head_baseILm0EPN5Botan7AES_128ELb0EE7_M_headERKS3_: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	pop	rbp
	ret
.Lfunc_end181:
	.size	_ZNSt10_Head_baseILm0EPN5Botan7AES_128ELb0EE7_M_headERKS3_, .Lfunc_end181-_ZNSt10_Head_baseILm0EPN5Botan7AES_128ELb0EE7_M_headERKS3_

	.section	.text._ZNSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EE10_M_deleterEv,"axG",@progbits,_ZNSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EE10_M_deleterEv,comdat
	.weak	_ZNSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EE10_M_deleterEv 
	.p2align	4, 0x90
	.type	_ZNSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EE10_M_deleterEv,@function
_ZNSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EE10_M_deleterEv: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZSt3getILm1EJPN5Botan7AES_128ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end182:
	.size	_ZNSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EE10_M_deleterEv, .Lfunc_end182-_ZNSt15__uniq_ptr_implIN5Botan7AES_128ESt14default_deleteIS1_EE10_M_deleterEv

	.section	.text._ZSt3getILm1EJPN5Botan7AES_128ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,"axG",@progbits,_ZSt3getILm1EJPN5Botan7AES_128ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,comdat
	.weak	_ZSt3getILm1EJPN5Botan7AES_128ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_ 
	.p2align	4, 0x90
	.type	_ZSt3getILm1EJPN5Botan7AES_128ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,@function
_ZSt3getILm1EJPN5Botan7AES_128ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_: 

	push	rbp
	mov	rbp, rsp
	push	r14
	push	rbx
	sub	rsp, 64
	xor	eax, eax
	mov	ecx, dword ptr [x.334]
	mov	edx, dword ptr [y.335]
	sub	eax, 1
	mov	esi, ecx
	add	esi, eax
	imul	ecx, esi
	and	ecx, 1
	cmp	ecx, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 26], r8b
	cmp	edx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 25], r8b
	mov	dword ptr [rbp - 32], 349017094
	mov	qword ptr [rbp - 40], rdi 
.LBB183_1:                              
	mov	eax, dword ptr [rbp - 32]
	mov	ecx, eax
	sub	ecx, -1623430059
	mov	dword ptr [rbp - 44], eax 
	mov	dword ptr [rbp - 48], ecx 
	je	.LBB183_6
	jmp	.LBB183_8
.LBB183_8:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, -1286743374
	mov	dword ptr [rbp - 52], eax 
	je	.LBB183_4
	jmp	.LBB183_9
.LBB183_9:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, -578068333
	mov	dword ptr [rbp - 56], eax 
	je	.LBB183_5
	jmp	.LBB183_10
.LBB183_10:                             
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 349017094
	mov	dword ptr [rbp - 60], eax 
	je	.LBB183_3
	jmp	.LBB183_2
.LBB183_2:                              
	jmp	.LBB183_7
.LBB183_3:                              
	mov	eax, 2671537237
	mov	ecx, 3008223922
	mov	dl, byte ptr [rbp - 26]
	mov	sil, byte ptr [rbp - 25]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB183_7
.LBB183_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	call	_ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_128EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE
	mov	edx, 2671537237
	mov	esi, 3716898963
	mov	qword ptr [rbp - 24], rax
	mov	r8d, dword ptr [x.334]
	mov	r9d, dword ptr [y.335]
	mov	r10d, r8d
	sub	r10d, -1660682352
	sub	r10d, 1
	add	r10d, -1660682352
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	edx, esi
	mov	dword ptr [rbp - 32], edx
	jmp	.LBB183_7
.LBB183_5:
	mov	rax, qword ptr [rbp - 24]
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
.LBB183_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	call	_ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_128EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE
	mov	dword ptr [rbp - 32], -1286743374
	mov	qword ptr [rbp - 72], rax 
.LBB183_7:                              
	jmp	.LBB183_1
.Lfunc_end183:
	.size	_ZSt3getILm1EJPN5Botan7AES_128ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_, .Lfunc_end183-_ZSt3getILm1EJPN5Botan7AES_128ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_

	.section	.text._ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_128EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE,"axG",@progbits,_ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_128EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE,comdat
	.weak	_ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_128EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE 
	.p2align	4, 0x90
	.type	_ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_128EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE,@function
_ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_128EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_128EEEE7_M_headERS4_
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end184:
	.size	_ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_128EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE, .Lfunc_end184-_ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_128EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE

	.section	.text._ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_128EEEE7_M_headERS4_,"axG",@progbits,_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_128EEEE7_M_headERS4_,comdat
	.weak	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_128EEEE7_M_headERS4_ 
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_128EEEE7_M_headERS4_,@function
_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_128EEEE7_M_headERS4_: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_128EELb1EE7_M_headERS4_
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end185:
	.size	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_128EEEE7_M_headERS4_, .Lfunc_end185-_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_128EEEE7_M_headERS4_

	.section	.text._ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_128EELb1EE7_M_headERS4_,"axG",@progbits,_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_128EELb1EE7_M_headERS4_,comdat
	.weak	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_128EELb1EE7_M_headERS4_ 
	.p2align	4, 0x90
	.type	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_128EELb1EE7_M_headERS4_,@function
_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_128EELb1EE7_M_headERS4_: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	rax, rdi
	pop	rbp
	ret
.Lfunc_end186:
	.size	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_128EELb1EE7_M_headERS4_, .Lfunc_end186-_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_128EELb1EE7_M_headERS4_

	.section	.text._ZNSt5tupleIJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_S3_INS0_7AES_128EELb1EEEOT_OT0_,"axG",@progbits,_ZNSt5tupleIJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_S3_INS0_7AES_128EELb1EEEOT_OT0_,comdat
	.weak	_ZNSt5tupleIJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_S3_INS0_7AES_128EELb1EEEOT_OT0_ 
	.p2align	4, 0x90
	.type	_ZNSt5tupleIJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_S3_INS0_7AES_128EELb1EEEOT_OT0_,@function
_ZNSt5tupleIJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_S3_INS0_7AES_128EELb1EEEOT_OT0_: 
	.cfi_startproc

	push	rbp
.Lcfi422:
	.cfi_def_cfa_offset 16
.Lcfi423:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi424:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 104
.Lcfi425:
	.cfi_offset rbx, -56
.Lcfi426:
	.cfi_offset r12, -48
.Lcfi427:
	.cfi_offset r13, -40
.Lcfi428:
	.cfi_offset r14, -32
.Lcfi429:
	.cfi_offset r15, -24
	xor	eax, eax
	mov	ecx, dword ptr [x.342]
	mov	r8d, dword ptr [y.343]
	sub	eax, 1
	mov	r9d, ecx
	add	r9d, eax
	imul	ecx, r9d
	and	ecx, 1
	cmp	ecx, 0
	sete	r10b
	and	r10b, 1
	mov	byte ptr [rbp - 42], r10b
	cmp	r8d, 10
	setl	r10b
	and	r10b, 1
	mov	byte ptr [rbp - 41], r10b
	mov	dword ptr [rbp - 48], -1509145775
	mov	qword ptr [rbp - 56], rsi 
	mov	qword ptr [rbp - 64], rdi 
	mov	qword ptr [rbp - 72], rdx 
.LBB187_1:                              
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -2005529184
	mov	dword ptr [rbp - 76], eax 
	mov	dword ptr [rbp - 80], ecx 
	je	.LBB187_4
	jmp	.LBB187_8
.LBB187_8:                              
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, -1509145775
	mov	dword ptr [rbp - 84], eax 
	je	.LBB187_3
	jmp	.LBB187_9
.LBB187_9:                              
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, -725544444
	mov	dword ptr [rbp - 88], eax 
	je	.LBB187_6
	jmp	.LBB187_10
.LBB187_10:                             
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, 2137868252
	mov	dword ptr [rbp - 92], eax 
	je	.LBB187_5
	jmp	.LBB187_2
.LBB187_2:                              
	jmp	.LBB187_7
.LBB187_3:                              
	mov	eax, 3569422852
	mov	ecx, 2289438112
	mov	dl, byte ptr [rbp - 42]
	mov	sil, byte ptr [rbp - 41]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB187_7
.LBB187_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rsi
	mov	rdi, qword ptr [rbp - 56] 
	mov	qword ptr [rcx], rdi
	mov	r8, qword ptr [rbp - 72] 
	mov	qword ptr [rdx], r8
	mov	rax, qword ptr [rax]
	mov	rdi, qword ptr [rcx]
	mov	qword ptr [rbp - 104], rax 
	mov	qword ptr [rbp - 112], rdx 
	call	_ZSt7forwardIRPN5Botan11BlockCipherEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rcx, qword ptr [rbp - 112] 
	mov	rdi, qword ptr [rcx]
	mov	qword ptr [rbp - 120], rax 
	call	_ZSt7forwardISt14default_deleteIN5Botan7AES_128EEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rdi, qword ptr [rbp - 104] 
	mov	rsi, qword ptr [rbp - 120] 
	mov	rdx, rax
	call	_ZNSt11_Tuple_implILm0EJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_JS3_INS0_7AES_128EEEvEEOT_DpOT0_
	mov	r9d, 3569422852
	mov	r10d, 2137868252
	mov	r11d, dword ptr [x.342]
	mov	ebx, dword ptr [y.343]
	mov	r14d, r11d
	add	r14d, -1039755336
	sub	r14d, 1
	sub	r14d, -1039755336
	imul	r11d, r14d
	and	r11d, 1
	cmp	r11d, 0
	sete	r15b
	cmp	ebx, 10
	setl	r12b
	mov	r13b, r15b
	and	r13b, r12b
	xor	r15b, r12b
	or	r13b, r15b
	test	r13b, 1
	cmovne	r9d, r10d
	mov	dword ptr [rbp - 48], r9d
	jmp	.LBB187_7
.LBB187_5:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB187_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rsi
	mov	rdi, qword ptr [rbp - 56] 
	mov	qword ptr [rcx], rdi
	mov	r8, qword ptr [rbp - 72] 
	mov	qword ptr [rdx], r8
	mov	rax, qword ptr [rax]
	mov	rdi, qword ptr [rcx]
	mov	qword ptr [rbp - 128], rax 
	mov	qword ptr [rbp - 136], rdx 
	call	_ZSt7forwardIRPN5Botan11BlockCipherEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rcx, qword ptr [rbp - 136] 
	mov	rdi, qword ptr [rcx]
	mov	qword ptr [rbp - 144], rax 
	call	_ZSt7forwardISt14default_deleteIN5Botan7AES_128EEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rdi, qword ptr [rbp - 128] 
	mov	rsi, qword ptr [rbp - 144] 
	mov	rdx, rax
	call	_ZNSt11_Tuple_implILm0EJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_JS3_INS0_7AES_128EEEvEEOT_DpOT0_
	mov	dword ptr [rbp - 48], -2005529184
.LBB187_7:                              
	jmp	.LBB187_1
.Lfunc_end187:
	.size	_ZNSt5tupleIJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_S3_INS0_7AES_128EELb1EEEOT_OT0_, .Lfunc_end187-_ZNSt5tupleIJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_S3_INS0_7AES_128EELb1EEEOT_OT0_
	.cfi_endproc

	.section	.text._ZSt7forwardIRPN5Botan11BlockCipherEEOT_RNSt16remove_referenceIS4_E4typeE,"axG",@progbits,_ZSt7forwardIRPN5Botan11BlockCipherEEOT_RNSt16remove_referenceIS4_E4typeE,comdat
	.weak	_ZSt7forwardIRPN5Botan11BlockCipherEEOT_RNSt16remove_referenceIS4_E4typeE 
	.p2align	4, 0x90
	.type	_ZSt7forwardIRPN5Botan11BlockCipherEEOT_RNSt16remove_referenceIS4_E4typeE,@function
_ZSt7forwardIRPN5Botan11BlockCipherEEOT_RNSt16remove_referenceIS4_E4typeE: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 56
	mov	eax, dword ptr [x.344]
	mov	ecx, dword ptr [y.345]
	mov	edx, eax
	sub	edx, -151653810
	sub	edx, 1
	add	edx, -151653810
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 50], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 49], sil
	mov	dword ptr [rbp - 56], 1482292438
	mov	qword ptr [rbp - 64], rdi 
.LBB188_1:                              
	mov	eax, dword ptr [rbp - 56]
	mov	ecx, eax
	sub	ecx, -885268061
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB188_5
	jmp	.LBB188_8
.LBB188_8:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -29415696
	mov	dword ptr [rbp - 76], eax 
	je	.LBB188_4
	jmp	.LBB188_9
.LBB188_9:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1482292438
	mov	dword ptr [rbp - 80], eax 
	je	.LBB188_3
	jmp	.LBB188_10
.LBB188_10:                             
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1990801430
	mov	dword ptr [rbp - 84], eax 
	je	.LBB188_6
	jmp	.LBB188_2
.LBB188_2:                              
	jmp	.LBB188_7
.LBB188_3:                              
	mov	eax, 1990801430
	mov	ecx, 4265551600
	mov	dl, byte ptr [rbp - 50]
	mov	sil, byte ptr [rbp - 49]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB188_7
.LBB188_4:                              
	mov	eax, 1990801430
	mov	ecx, 3409699235
	mov	dl, 1
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 64] 
	mov	qword ptr [rsi], rdi
	mov	rsi, qword ptr [rsi]
	mov	qword ptr [rbp - 48], rsi
	mov	r8d, dword ptr [x.344]
	mov	r9d, dword ptr [y.345]
	mov	r10d, r8d
	add	r10d, 2060068512
	sub	r10d, 1
	sub	r10d, 2060068512
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	xor	r14b, -1
	mov	r15b, bl
	xor	r15b, -1
	xor	dl, 1
	mov	r12b, r14b
	and	r12b, -1
	and	r11b, dl
	mov	r13b, r15b
	and	r13b, -1
	and	bl, dl
	or	r12b, r11b
	or	r13b, bl
	xor	r12b, r13b
	or	r14b, r15b
	xor	r14b, -1
	or	dl, 1
	and	r14b, dl
	or	r12b, r14b
	test	r12b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB188_7
.LBB188_5:
	mov	rax, qword ptr [rbp - 48]
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB188_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rcx
	mov	dword ptr [rbp - 56], -29415696
.LBB188_7:                              
	jmp	.LBB188_1
.Lfunc_end188:
	.size	_ZSt7forwardIRPN5Botan11BlockCipherEEOT_RNSt16remove_referenceIS4_E4typeE, .Lfunc_end188-_ZSt7forwardIRPN5Botan11BlockCipherEEOT_RNSt16remove_referenceIS4_E4typeE

	.section	.text._ZNSt11_Tuple_implILm0EJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_JS3_INS0_7AES_128EEEvEEOT_DpOT0_,"axG",@progbits,_ZNSt11_Tuple_implILm0EJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_JS3_INS0_7AES_128EEEvEEOT_DpOT0_,comdat
	.weak	_ZNSt11_Tuple_implILm0EJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_JS3_INS0_7AES_128EEEvEEOT_DpOT0_ 
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm0EJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_JS3_INS0_7AES_128EEEvEEOT_DpOT0_,@function
_ZNSt11_Tuple_implILm0EJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_JS3_INS0_7AES_128EEEvEEOT_DpOT0_: 
	.cfi_startproc

	push	rbp
.Lcfi430:
	.cfi_def_cfa_offset 16
.Lcfi431:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi432:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 120
.Lcfi433:
	.cfi_offset rbx, -56
.Lcfi434:
	.cfi_offset r12, -48
.Lcfi435:
	.cfi_offset r13, -40
.Lcfi436:
	.cfi_offset r14, -32
.Lcfi437:
	.cfi_offset r15, -24
	mov	eax, dword ptr [x.346]
	mov	ecx, dword ptr [y.347]
	mov	r8d, eax
	sub	r8d, -1565653142
	sub	r8d, 1
	add	r8d, -1565653142
	imul	eax, r8d
	and	eax, 1
	cmp	eax, 0
	sete	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 42], r9b
	cmp	ecx, 10
	setl	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 41], r9b
	mov	dword ptr [rbp - 48], 1464586584
	mov	qword ptr [rbp - 56], rsi 
	mov	qword ptr [rbp - 64], rdi 
	mov	qword ptr [rbp - 72], rdx 
.LBB189_1:                              
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -1340354243
	mov	dword ptr [rbp - 76], eax 
	mov	dword ptr [rbp - 80], ecx 
	je	.LBB189_6
	jmp	.LBB189_8
.LBB189_8:                              
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, 1300720623
	mov	dword ptr [rbp - 84], eax 
	je	.LBB189_4
	jmp	.LBB189_9
.LBB189_9:                              
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, 1464586584
	mov	dword ptr [rbp - 88], eax 
	je	.LBB189_3
	jmp	.LBB189_10
.LBB189_10:                             
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, 1585140121
	mov	dword ptr [rbp - 92], eax 
	je	.LBB189_5
	jmp	.LBB189_2
.LBB189_2:                              
	jmp	.LBB189_7
.LBB189_3:                              
	mov	eax, 2954613053
	mov	ecx, 1300720623
	mov	dl, byte ptr [rbp - 42]
	mov	sil, byte ptr [rbp - 41]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB189_7
.LBB189_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rsi
	mov	rdi, qword ptr [rbp - 56] 
	mov	qword ptr [rcx], rdi
	mov	r8, qword ptr [rbp - 72] 
	mov	qword ptr [rdx], r8
	mov	rax, qword ptr [rax]
	mov	r9, rax
	mov	rdi, qword ptr [rdx]
	mov	qword ptr [rbp - 104], rcx 
	mov	qword ptr [rbp - 112], r9 
	mov	qword ptr [rbp - 120], rax 
	call	_ZSt7forwardISt14default_deleteIN5Botan7AES_128EEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rdi, qword ptr [rbp - 112] 
	mov	rsi, rax
	call	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan11BlockCipherEEEEC2IS0_INS1_7AES_128EEEEOT_
	mov	rax, qword ptr [rbp - 120] 
	mov	rcx, qword ptr [rbp - 104] 
	mov	rdi, qword ptr [rcx]
	mov	qword ptr [rbp - 128], rax 
	call	_ZSt7forwardIRPN5Botan11BlockCipherEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rdi, qword ptr [rbp - 128] 
	mov	rsi, rax
	call	_ZNSt10_Head_baseILm0EPN5Botan11BlockCipherELb0EEC2IRS2_EEOT_
	mov	r10d, 2954613053
	mov	r11d, 1585140121
	mov	bl, 1
	mov	r14d, dword ptr [x.346]
	mov	r15d, dword ptr [y.347]
	mov	r12d, r14d
	sub	r12d, -1548804569
	sub	r12d, 1
	add	r12d, -1548804569
	imul	r14d, r12d
	and	r14d, 1
	cmp	r14d, 0
	sete	r13b
	cmp	r15d, 10
	setl	al
	mov	cl, r13b
	xor	cl, -1
	mov	dl, al
	xor	dl, -1
	xor	bl, 0
	mov	sil, cl
	and	sil, 0
	and	r13b, bl
	mov	dil, dl
	and	dil, 0
	and	al, bl
	or	sil, r13b
	or	dil, al
	xor	sil, dil
	or	cl, dl
	xor	cl, -1
	or	bl, 0
	and	cl, bl
	or	sil, cl
	test	sil, 1
	cmovne	r10d, r11d
	mov	dword ptr [rbp - 48], r10d
	jmp	.LBB189_7
.LBB189_5:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB189_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rsi
	mov	rdi, qword ptr [rbp - 56] 
	mov	qword ptr [rcx], rdi
	mov	r8, qword ptr [rbp - 72] 
	mov	qword ptr [rdx], r8
	mov	rax, qword ptr [rax]
	mov	r9, rax
	mov	rdi, qword ptr [rdx]
	mov	qword ptr [rbp - 136], rcx 
	mov	qword ptr [rbp - 144], r9 
	mov	qword ptr [rbp - 152], rax 
	call	_ZSt7forwardISt14default_deleteIN5Botan7AES_128EEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rdi, qword ptr [rbp - 144] 
	mov	rsi, rax
	call	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan11BlockCipherEEEEC2IS0_INS1_7AES_128EEEEOT_
	mov	rax, qword ptr [rbp - 152] 
	mov	rcx, qword ptr [rbp - 136] 
	mov	rdi, qword ptr [rcx]
	mov	qword ptr [rbp - 160], rax 
	call	_ZSt7forwardIRPN5Botan11BlockCipherEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rdi, qword ptr [rbp - 160] 
	mov	rsi, rax
	call	_ZNSt10_Head_baseILm0EPN5Botan11BlockCipherELb0EEC2IRS2_EEOT_
	mov	dword ptr [rbp - 48], 1300720623
.LBB189_7:                              
	jmp	.LBB189_1
.Lfunc_end189:
	.size	_ZNSt11_Tuple_implILm0EJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_JS3_INS0_7AES_128EEEvEEOT_DpOT0_, .Lfunc_end189-_ZNSt11_Tuple_implILm0EJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_JS3_INS0_7AES_128EEEvEEOT_DpOT0_
	.cfi_endproc

	.section	.text._ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan11BlockCipherEEEEC2IS0_INS1_7AES_128EEEEOT_,"axG",@progbits,_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan11BlockCipherEEEEC2IS0_INS1_7AES_128EEEEOT_,comdat
	.weak	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan11BlockCipherEEEEC2IS0_INS1_7AES_128EEEEOT_ 
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan11BlockCipherEEEEC2IS0_INS1_7AES_128EEEEOT_,@function
_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan11BlockCipherEEEEC2IS0_INS1_7AES_128EEEEOT_: 
	.cfi_startproc

	push	rbp
.Lcfi438:
	.cfi_def_cfa_offset 16
.Lcfi439:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi440:
	.cfi_def_cfa_register rbp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rsi, qword ptr [rbp - 8]
	mov	rdi, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 24], rsi 
	call	_ZSt7forwardISt14default_deleteIN5Botan7AES_128EEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rdi, qword ptr [rbp - 24] 
	mov	rsi, rax
	call	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan11BlockCipherEELb1EEC2IS0_INS1_7AES_128EEEEOT_
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end190:
	.size	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan11BlockCipherEEEEC2IS0_INS1_7AES_128EEEEOT_, .Lfunc_end190-_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan11BlockCipherEEEEC2IS0_INS1_7AES_128EEEEOT_
	.cfi_endproc

	.section	.text._ZNSt10_Head_baseILm0EPN5Botan11BlockCipherELb0EEC2IRS2_EEOT_,"axG",@progbits,_ZNSt10_Head_baseILm0EPN5Botan11BlockCipherELb0EEC2IRS2_EEOT_,comdat
	.weak	_ZNSt10_Head_baseILm0EPN5Botan11BlockCipherELb0EEC2IRS2_EEOT_ 
	.p2align	4, 0x90
	.type	_ZNSt10_Head_baseILm0EPN5Botan11BlockCipherELb0EEC2IRS2_EEOT_,@function
_ZNSt10_Head_baseILm0EPN5Botan11BlockCipherELb0EEC2IRS2_EEOT_: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rsi, qword ptr [rbp - 8]
	mov	rdi, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 24], rsi 
	call	_ZSt7forwardIRPN5Botan11BlockCipherEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rax, qword ptr [rax]
	mov	rsi, qword ptr [rbp - 24] 
	mov	qword ptr [rsi], rax
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end191:
	.size	_ZNSt10_Head_baseILm0EPN5Botan11BlockCipherELb0EEC2IRS2_EEOT_, .Lfunc_end191-_ZNSt10_Head_baseILm0EPN5Botan11BlockCipherELb0EEC2IRS2_EEOT_

	.section	.text._ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan11BlockCipherEELb1EEC2IS0_INS1_7AES_128EEEEOT_,"axG",@progbits,_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan11BlockCipherEELb1EEC2IS0_INS1_7AES_128EEEEOT_,comdat
	.weak	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan11BlockCipherEELb1EEC2IS0_INS1_7AES_128EEEEOT_ 
	.p2align	4, 0x90
	.type	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan11BlockCipherEELb1EEC2IS0_INS1_7AES_128EEEEOT_,@function
_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan11BlockCipherEELb1EEC2IS0_INS1_7AES_128EEEEOT_: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r12
	push	rbx
	sub	rsp, 64
	xor	eax, eax
	mov	ecx, dword ptr [x.352]
	mov	edx, dword ptr [y.353]
	sub	eax, 1
	mov	r8d, ecx
	add	r8d, eax
	imul	ecx, r8d
	and	ecx, 1
	cmp	ecx, 0
	sete	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 34], r9b
	cmp	edx, 10
	setl	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 33], r9b
	mov	dword ptr [rbp - 40], 1197785567
	mov	qword ptr [rbp - 48], rdi 
	mov	qword ptr [rbp - 56], rsi 
.LBB192_1:                              
	mov	eax, dword ptr [rbp - 40]
	mov	ecx, eax
	sub	ecx, -2037158507
	mov	dword ptr [rbp - 60], eax 
	mov	dword ptr [rbp - 64], ecx 
	je	.LBB192_6
	jmp	.LBB192_8
.LBB192_8:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, -372167934
	mov	dword ptr [rbp - 68], eax 
	je	.LBB192_4
	jmp	.LBB192_9
.LBB192_9:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 975494275
	mov	dword ptr [rbp - 72], eax 
	je	.LBB192_5
	jmp	.LBB192_10
.LBB192_10:                             
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 1197785567
	mov	dword ptr [rbp - 76], eax 
	je	.LBB192_3
	jmp	.LBB192_2
.LBB192_2:                              
	jmp	.LBB192_7
.LBB192_3:                              
	mov	eax, 2257808789
	mov	ecx, 3922799362
	mov	dl, byte ptr [rbp - 34]
	mov	sil, byte ptr [rbp - 33]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 40], eax
	jmp	.LBB192_7
.LBB192_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 48] 
	mov	qword ptr [rax], rdx
	mov	rsi, qword ptr [rbp - 56] 
	mov	qword ptr [rcx], rsi
	mov	rax, qword ptr [rax]
	mov	rdi, qword ptr [rcx]
	mov	qword ptr [rbp - 88], rax 
	call	_ZSt7forwardISt14default_deleteIN5Botan7AES_128EEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rdi, qword ptr [rbp - 88] 
	mov	rsi, rax
	call	_ZNSt14default_deleteIN5Botan11BlockCipherEEC2INS0_7AES_128EvEERKS_IT_E
	mov	r8d, 2257808789
	mov	r9d, 975494275
	mov	r10d, dword ptr [x.352]
	mov	r11d, dword ptr [y.353]
	mov	ebx, r10d
	sub	ebx, -1362999120
	sub	ebx, 1
	add	ebx, -1362999120
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r14b
	cmp	r11d, 10
	setl	r15b
	mov	r12b, r14b
	and	r12b, r15b
	xor	r14b, r15b
	or	r12b, r14b
	test	r12b, 1
	cmovne	r8d, r9d
	mov	dword ptr [rbp - 40], r8d
	jmp	.LBB192_7
.LBB192_5:
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB192_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 48] 
	mov	qword ptr [rax], rdx
	mov	rsi, qword ptr [rbp - 56] 
	mov	qword ptr [rcx], rsi
	mov	rax, qword ptr [rax]
	mov	rdi, qword ptr [rcx]
	mov	qword ptr [rbp - 96], rax 
	call	_ZSt7forwardISt14default_deleteIN5Botan7AES_128EEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rdi, qword ptr [rbp - 96] 
	mov	rsi, rax
	call	_ZNSt14default_deleteIN5Botan11BlockCipherEEC2INS0_7AES_128EvEERKS_IT_E
	mov	dword ptr [rbp - 40], -372167934
.LBB192_7:                              
	jmp	.LBB192_1
.Lfunc_end192:
	.size	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan11BlockCipherEELb1EEC2IS0_INS1_7AES_128EEEEOT_, .Lfunc_end192-_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan11BlockCipherEELb1EEC2IS0_INS1_7AES_128EEEEOT_

	.section	.text._ZNSt14default_deleteIN5Botan11BlockCipherEEC2INS0_7AES_128EvEERKS_IT_E,"axG",@progbits,_ZNSt14default_deleteIN5Botan11BlockCipherEEC2INS0_7AES_128EvEERKS_IT_E,comdat
	.weak	_ZNSt14default_deleteIN5Botan11BlockCipherEEC2INS0_7AES_128EvEERKS_IT_E 
	.p2align	4, 0x90
	.type	_ZNSt14default_deleteIN5Botan11BlockCipherEEC2INS0_7AES_128EvEERKS_IT_E,@function
_ZNSt14default_deleteIN5Botan11BlockCipherEEC2INS0_7AES_128EvEERKS_IT_E: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	pop	rbp
	ret
.Lfunc_end193:
	.size	_ZNSt14default_deleteIN5Botan11BlockCipherEEC2INS0_7AES_128EvEERKS_IT_E, .Lfunc_end193-_ZNSt14default_deleteIN5Botan11BlockCipherEEC2INS0_7AES_128EvEERKS_IT_E

	.section	.text._ZNKSt14default_deleteIN5Botan7AES_128EEclEPS1_,"axG",@progbits,_ZNKSt14default_deleteIN5Botan7AES_128EEclEPS1_,comdat
	.weak	_ZNKSt14default_deleteIN5Botan7AES_128EEclEPS1_ 
	.p2align	4, 0x90
	.type	_ZNKSt14default_deleteIN5Botan7AES_128EEclEPS1_,@function
_ZNKSt14default_deleteIN5Botan7AES_128EEclEPS1_: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 56
	mov	qword ptr [rbp - 56], rdi
	mov	qword ptr [rbp - 64], rsi
	mov	rsi, qword ptr [rbp - 64]
	mov	qword ptr [rbp - 48], rsi
	mov	dword ptr [rbp - 68], -761906641
.LBB194_1:                              
	mov	eax, dword ptr [rbp - 68]
	mov	ecx, eax
	sub	ecx, -761906641
	mov	dword ptr [rbp - 72], eax 
	mov	dword ptr [rbp - 76], ecx 
	je	.LBB194_3
	jmp	.LBB194_10
.LBB194_10:                             
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, -676207034
	mov	dword ptr [rbp - 80], eax 
	je	.LBB194_7
	jmp	.LBB194_11
.LBB194_11:                             
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, -338081676
	mov	dword ptr [rbp - 84], eax 
	je	.LBB194_6
	jmp	.LBB194_12
.LBB194_12:                             
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, 177228590
	mov	dword ptr [rbp - 88], eax 
	je	.LBB194_4
	jmp	.LBB194_13
.LBB194_13:                             
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, 1893229345
	mov	dword ptr [rbp - 92], eax 
	je	.LBB194_8
	jmp	.LBB194_14
.LBB194_14:                             
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, 2110452436
	mov	dword ptr [rbp - 96], eax 
	je	.LBB194_5
	jmp	.LBB194_2
.LBB194_2:                              
	jmp	.LBB194_9
.LBB194_3:                              
	mov	eax, 177228590
	mov	ecx, 3618760262
	mov	rdx, qword ptr [rbp - 48]
	cmp	rdx, 0
	cmove	eax, ecx
	mov	dword ptr [rbp - 68], eax
	jmp	.LBB194_9
.LBB194_4:                              
	mov	eax, 1893229345
	mov	ecx, 2110452436
	mov	dl, 1
	mov	esi, dword ptr [x.356]
	mov	edi, dword ptr [y.357]
	mov	r8d, esi
	sub	r8d, -684773191
	sub	r8d, 1
	add	r8d, -684773191
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 1
	mov	r14b, r11b
	and	r14b, -1
	and	r9b, dl
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 1
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 68], eax
	jmp	.LBB194_9
.LBB194_5:                              
	mov	rax, qword ptr [rbp - 48]
	mov	rax, qword ptr [rax]
	mov	rax, qword ptr [rax + 8]
	mov	rdi, qword ptr [rbp - 48]
	call	rax
	mov	ecx, 1893229345
	mov	edx, 3956885620
	mov	sil, 1
	mov	r8d, dword ptr [x.356]
	mov	r9d, dword ptr [y.357]
	mov	r10d, r8d
	sub	r10d, -64190849
	sub	r10d, 1
	add	r10d, -64190849
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	xor	r14b, -1
	mov	r15b, bl
	xor	r15b, -1
	xor	sil, 1
	mov	r12b, r14b
	and	r12b, -1
	and	r11b, sil
	mov	r13b, r15b
	and	r13b, -1
	and	bl, sil
	or	r12b, r11b
	or	r13b, bl
	xor	r12b, r13b
	or	r14b, r15b
	xor	r14b, -1
	or	sil, 1
	and	r14b, sil
	or	r12b, r14b
	test	r12b, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 68], ecx
	jmp	.LBB194_9
.LBB194_6:                              
	mov	dword ptr [rbp - 68], -676207034
	jmp	.LBB194_9
.LBB194_7:
	add	rsp, 56
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB194_8:                              
	mov	rax, qword ptr [rbp - 48]
	mov	rax, qword ptr [rax]
	mov	rax, qword ptr [rax + 8]
	mov	rdi, qword ptr [rbp - 48]
	call	rax
	mov	dword ptr [rbp - 68], 2110452436
.LBB194_9:                              
	jmp	.LBB194_1
.Lfunc_end194:
	.size	_ZNKSt14default_deleteIN5Botan7AES_128EEclEPS1_, .Lfunc_end194-_ZNKSt14default_deleteIN5Botan7AES_128EEclEPS1_

	.section	.text._ZSt11make_uniqueIN5Botan7AES_192EJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_,"axG",@progbits,_ZSt11make_uniqueIN5Botan7AES_192EJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_,comdat
	.weak	_ZSt11make_uniqueIN5Botan7AES_192EJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_ 
	.p2align	4, 0x90
	.type	_ZSt11make_uniqueIN5Botan7AES_192EJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_,@function
_ZSt11make_uniqueIN5Botan7AES_192EJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_: 
	.cfi_startproc

	push	rbp
.Lcfi441:
	.cfi_def_cfa_offset 16
.Lcfi442:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi443:
	.cfi_def_cfa_register rbp
	sub	rsp, 32
	mov	rax, rdi
	mov	ecx, 56
	mov	edx, ecx
	mov	qword ptr [rbp - 8], rdi 
	mov	rdi, rdx
	mov	qword ptr [rbp - 16], rax 
	call	_Znwm
	xor	esi, esi
	mov	ecx, 56
	mov	edx, ecx
	mov	rdi, rax
	mov	qword ptr [rbp - 24], rax 
	call	memset
	mov	rdi, qword ptr [rbp - 24] 
	call	_ZN5Botan7AES_192C2Ev
	mov	rdi, qword ptr [rbp - 8] 
	mov	rsi, qword ptr [rbp - 24] 
	call	_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EEC2IS3_vEEPS1_
	mov	rax, qword ptr [rbp - 16] 
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end195:
	.size	_ZSt11make_uniqueIN5Botan7AES_192EJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_, .Lfunc_end195-_ZSt11make_uniqueIN5Botan7AES_192EJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_
	.cfi_endproc

	.section	.text._ZNSt10unique_ptrIN5Botan11BlockCipherESt14default_deleteIS1_EEC2INS0_7AES_192ES2_IS6_EvEEOS_IT_T0_E,"axG",@progbits,_ZNSt10unique_ptrIN5Botan11BlockCipherESt14default_deleteIS1_EEC2INS0_7AES_192ES2_IS6_EvEEOS_IT_T0_E,comdat
	.weak	_ZNSt10unique_ptrIN5Botan11BlockCipherESt14default_deleteIS1_EEC2INS0_7AES_192ES2_IS6_EvEEOS_IT_T0_E 
	.p2align	4, 0x90
	.type	_ZNSt10unique_ptrIN5Botan11BlockCipherESt14default_deleteIS1_EEC2INS0_7AES_192ES2_IS6_EvEEOS_IT_T0_E,@function
_ZNSt10unique_ptrIN5Botan11BlockCipherESt14default_deleteIS1_EEC2INS0_7AES_192ES2_IS6_EvEEOS_IT_T0_E: 
.Lfunc_begin23:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception23

	push	rbp
	mov	rbp, rsp
	sub	rsp, 48
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rdi, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 24], rdi 
	mov	rdi, rsi
	call	_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EE7releaseEv
	mov	rdi, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 32], rax 
	call	_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EE11get_deleterEv
	mov	rdi, rax
	call	_ZSt7forwardISt14default_deleteIN5Botan7AES_192EEEOT_RNSt16remove_referenceIS4_E4typeE
.Ltmp107:
	mov	rdi, qword ptr [rbp - 24] 
	mov	rsi, qword ptr [rbp - 32] 
	mov	rdx, rax
	call	_ZNSt15__uniq_ptr_implIN5Botan11BlockCipherESt14default_deleteIS1_EEC2IS2_INS0_7AES_192EEEEPS1_OT_
.Ltmp108:
	jmp	.LBB196_1
.LBB196_1:
	add	rsp, 48
	pop	rbp
	ret
.LBB196_2:
.Ltmp109:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 36], ecx 
	call	__clang_call_terminate
.Lfunc_end196:
	.size	_ZNSt10unique_ptrIN5Botan11BlockCipherESt14default_deleteIS1_EEC2INS0_7AES_192ES2_IS6_EvEEOS_IT_T0_E, .Lfunc_end196-_ZNSt10unique_ptrIN5Botan11BlockCipherESt14default_deleteIS1_EEC2INS0_7AES_192ES2_IS6_EvEEOS_IT_T0_E
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table196:
.Lexception23:
	.byte	255                     
	.byte	3                       
	.byte	21                      
	.byte	3                       
	.byte	13                      
	.long	.Ltmp107-.Lfunc_begin23 
	.long	.Ltmp108-.Ltmp107       
	.long	.Ltmp109-.Lfunc_begin23 
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EED2Ev,"axG",@progbits,_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EED2Ev,comdat
	.weak	_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EED2Ev 
	.p2align	4, 0x90
	.type	_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EED2Ev,@function
_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EED2Ev: 
.Lfunc_begin24:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception24

	push	rbp
	mov	rbp, rsp
	sub	rsp, 48
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
.Ltmp110:
	mov	qword ptr [rbp - 24], rdi 
	call	_ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE6_M_ptrEv
.Ltmp111:
	mov	qword ptr [rbp - 32], rax 
	jmp	.LBB197_1
.LBB197_1:
	mov	rax, qword ptr [rbp - 32] 
	mov	qword ptr [rbp - 16], rax
	mov	rcx, qword ptr [rbp - 16]
	cmp	qword ptr [rcx], 0
	je	.LBB197_4

	mov	rdi, qword ptr [rbp - 24] 
	call	_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EE11get_deleterEv
	mov	rdi, qword ptr [rbp - 16]
	mov	rsi, qword ptr [rdi]
.Ltmp112:
	mov	rdi, rax
	call	_ZNKSt14default_deleteIN5Botan7AES_192EEclEPS1_
.Ltmp113:
	jmp	.LBB197_3
.LBB197_3:
	jmp	.LBB197_4
.LBB197_4:
	mov	rax, qword ptr [rbp - 16]
	mov	qword ptr [rax], 0
	add	rsp, 48
	pop	rbp
	ret
.LBB197_5:
.Ltmp114:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 36], ecx 
	call	__clang_call_terminate
.Lfunc_end197:
	.size	_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EED2Ev, .Lfunc_end197-_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table197:
.Lexception24:
	.byte	255                     
	.byte	3                       
	.byte	21                      
	.byte	3                       
	.byte	13                      
	.long	.Ltmp110-.Lfunc_begin24 
	.long	.Ltmp113-.Ltmp110       
	.long	.Ltmp114-.Lfunc_begin24 
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZN5Botan7AES_192C2Ev,"axG",@progbits,_ZN5Botan7AES_192C2Ev,comdat
	.weak	_ZN5Botan7AES_192C2Ev   
	.p2align	4, 0x90
	.type	_ZN5Botan7AES_192C2Ev,@function
_ZN5Botan7AES_192C2Ev:                  

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	rax, rdi
	mov	qword ptr [rbp - 16], rdi 
	mov	rdi, rax
	call	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEC2Ev
	movabs	rax, _ZTVN5Botan7AES_192E
	add	rax, 16
	mov	rdi, qword ptr [rbp - 16] 
	mov	qword ptr [rdi], rax
	add	rdi, 8
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEC2Ev
	mov	rax, qword ptr [rbp - 16] 
	add	rax, 32
	mov	rdi, rax
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEC2Ev
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end198:
	.size	_ZN5Botan7AES_192C2Ev, .Lfunc_end198-_ZN5Botan7AES_192C2Ev

	.section	.text._ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EEC2IS3_vEEPS1_,"axG",@progbits,_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EEC2IS3_vEEPS1_,comdat
	.weak	_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EEC2IS3_vEEPS1_ 
	.p2align	4, 0x90
	.type	_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EEC2IS3_vEEPS1_,@function
_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EEC2IS3_vEEPS1_: 
.Lfunc_begin25:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception25

	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rdi, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rbp - 16]
.Ltmp115:
	call	_ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EEC2EPS1_
.Ltmp116:
	jmp	.LBB199_1
.LBB199_1:
	add	rsp, 32
	pop	rbp
	ret
.LBB199_2:
.Ltmp117:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 20], ecx 
	call	__clang_call_terminate
.Lfunc_end199:
	.size	_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EEC2IS3_vEEPS1_, .Lfunc_end199-_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EEC2IS3_vEEPS1_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table199:
.Lexception25:
	.byte	255                     
	.byte	3                       
	.byte	21                      
	.byte	3                       
	.byte	13                      
	.long	.Ltmp115-.Lfunc_begin25 
	.long	.Ltmp116-.Ltmp115       
	.long	.Ltmp117-.Lfunc_begin25 
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEC2Ev,"axG",@progbits,_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEC2Ev,comdat
	.weak	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEC2Ev 
	.p2align	4, 0x90
	.type	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEC2Ev,@function
_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEC2Ev: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r12
	push	rbx
	sub	rsp, 64
	xor	eax, eax
	mov	ecx, dword ptr [x.362]
	mov	edx, dword ptr [y.363]
	sub	eax, 1
	mov	esi, ecx
	add	esi, eax
	imul	ecx, esi
	and	ecx, 1
	cmp	ecx, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 34], r8b
	cmp	edx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 33], r8b
	mov	dword ptr [rbp - 40], -353069962
	mov	qword ptr [rbp - 48], rdi 
.LBB200_1:                              
	mov	eax, dword ptr [rbp - 40]
	mov	ecx, eax
	sub	ecx, -353069962
	mov	dword ptr [rbp - 52], eax 
	mov	dword ptr [rbp - 56], ecx 
	je	.LBB200_3
	jmp	.LBB200_8
.LBB200_8:                              
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, -229484147
	mov	dword ptr [rbp - 60], eax 
	je	.LBB200_5
	jmp	.LBB200_9
.LBB200_9:                              
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, 742364758
	mov	dword ptr [rbp - 64], eax 
	je	.LBB200_6
	jmp	.LBB200_10
.LBB200_10:                             
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, 1655598863
	mov	dword ptr [rbp - 68], eax 
	je	.LBB200_4
	jmp	.LBB200_2
.LBB200_2:                              
	jmp	.LBB200_7
.LBB200_3:                              
	mov	eax, 742364758
	mov	ecx, 1655598863
	mov	dl, byte ptr [rbp - 34]
	mov	sil, byte ptr [rbp - 33]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 40], eax
	jmp	.LBB200_7
.LBB200_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 48] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdx, rax
	mov	rdi, rdx
	mov	qword ptr [rbp - 80], rax 
	call	_ZN5Botan11BlockCipherC2Ev
	mov	esi, 742364758
	mov	r8d, 4065483149
	xor	r9d, r9d
	movabs	rax, _ZTVN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEE
	add	rax, 16
	mov	rcx, qword ptr [rbp - 80] 
	mov	qword ptr [rcx], rax
	mov	r10d, dword ptr [x.362]
	mov	r11d, dword ptr [y.363]
	sub	r9d, 1
	mov	ebx, r10d
	add	ebx, r9d
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r14b
	cmp	r11d, 10
	setl	r15b
	mov	r12b, r14b
	and	r12b, r15b
	xor	r14b, r15b
	or	r12b, r14b
	test	r12b, 1
	cmovne	esi, r8d
	mov	dword ptr [rbp - 40], esi
	jmp	.LBB200_7
.LBB200_5:
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB200_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 48] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdx, rax
	mov	rdi, rdx
	mov	qword ptr [rbp - 88], rax 
	call	_ZN5Botan11BlockCipherC2Ev
	movabs	rax, _ZTVN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEE
	add	rax, 16
	mov	rcx, qword ptr [rbp - 88] 
	mov	qword ptr [rcx], rax
	mov	dword ptr [rbp - 40], 1655598863
.LBB200_7:                              
	jmp	.LBB200_1
.Lfunc_end200:
	.size	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEC2Ev, .Lfunc_end200-_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEC2Ev

	.section	.text._ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEED2Ev,"axG",@progbits,_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEED2Ev,comdat
	.weak	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEED2Ev 
	.p2align	4, 0x90
	.type	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEED2Ev,@function
_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEED2Ev: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZN5Botan11BlockCipherD2Ev
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end201:
	.size	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEED2Ev, .Lfunc_end201-_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEED2Ev

	.section	.text._ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEED0Ev,"axG",@progbits,_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEED0Ev,comdat
	.weak	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEED0Ev 
	.p2align	4, 0x90
	.type	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEED0Ev,@function
_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEED0Ev: 

	push	rbp
	mov	rbp, rsp
	push	rbx
	sub	rsp, 40
	xor	eax, eax
	mov	ecx, dword ptr [x.366]
	mov	edx, dword ptr [y.367]
	sub	eax, 1
	mov	esi, ecx
	add	esi, eax
	imul	ecx, esi
	and	ecx, 1
	cmp	ecx, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 10], r8b
	cmp	edx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 9], r8b
	mov	dword ptr [rbp - 16], 814224108
	mov	qword ptr [rbp - 24], rdi 
.LBB202_1:                              
	mov	eax, dword ptr [rbp - 16]
	mov	ecx, eax
	sub	ecx, -1902656554
	mov	dword ptr [rbp - 28], eax 
	mov	dword ptr [rbp - 32], ecx 
	je	.LBB202_5
	jmp	.LBB202_9
.LBB202_9:                              
	mov	eax, dword ptr [rbp - 28] 
	sub	eax, -1575031698
	mov	dword ptr [rbp - 36], eax 
	je	.LBB202_4
	jmp	.LBB202_10
.LBB202_10:                             
	mov	eax, dword ptr [rbp - 28] 
	sub	eax, -1471873526
	mov	dword ptr [rbp - 40], eax 
	je	.LBB202_7
	jmp	.LBB202_11
.LBB202_11:                             
	mov	eax, dword ptr [rbp - 28] 
	sub	eax, 814224108
	mov	dword ptr [rbp - 44], eax 
	je	.LBB202_3
	jmp	.LBB202_12
.LBB202_12:                             
	mov	eax, dword ptr [rbp - 28] 
	sub	eax, 1310180713
	mov	dword ptr [rbp - 48], eax 
	je	.LBB202_6
	jmp	.LBB202_2
.LBB202_2:                              
	jmp	.LBB202_8
.LBB202_3:                              
	mov	eax, 2823093770
	mov	ecx, 2719935598
	mov	dl, 1
	mov	sil, byte ptr [rbp - 10]
	mov	dil, byte ptr [rbp - 9]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 16], eax
	jmp	.LBB202_8
.LBB202_4:                              
	mov	eax, 2823093770
	mov	ecx, 2392310742
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, qword ptr [rbp - 24] 
	mov	qword ptr [rdx], rsi
	ud2
	mov	edi, dword ptr [x.366]
	mov	r8d, dword ptr [y.367]
	mov	r9d, edi
	add	r9d, 718046865
	sub	r9d, 1
	sub	r9d, 718046865
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	and	bl, r11b
	xor	r10b, r11b
	or	bl, r10b
	test	bl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 16], eax
	jmp	.LBB202_8
.LBB202_5:
.LBB202_6:
	lea	rsp, [rbp - 8]
	pop	rbx
	pop	rbp
	ret
.LBB202_7:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 24] 
	mov	qword ptr [rax], rcx
	ud2
	mov	dword ptr [rbp - 16], -1575031698
.LBB202_8:                              
	jmp	.LBB202_1
.Lfunc_end202:
	.size	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEED0Ev, .Lfunc_end202-_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEED0Ev

	.section	.text._ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EEC2EPS1_,"axG",@progbits,_ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EEC2EPS1_,comdat
	.weak	_ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EEC2EPS1_ 
	.p2align	4, 0x90
	.type	_ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EEC2EPS1_,@function
_ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EEC2EPS1_: 
	.cfi_startproc

	push	rbp
.Lcfi444:
	.cfi_def_cfa_offset 16
.Lcfi445:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi446:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 104
.Lcfi447:
	.cfi_offset rbx, -56
.Lcfi448:
	.cfi_offset r12, -48
.Lcfi449:
	.cfi_offset r13, -40
.Lcfi450:
	.cfi_offset r14, -32
.Lcfi451:
	.cfi_offset r15, -24
	xor	eax, eax
	mov	ecx, dword ptr [x.368]
	mov	edx, dword ptr [y.369]
	sub	eax, 1
	mov	r8d, ecx
	add	r8d, eax
	imul	ecx, r8d
	and	ecx, 1
	cmp	ecx, 0
	sete	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 42], r9b
	cmp	edx, 10
	setl	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 41], r9b
	mov	dword ptr [rbp - 48], 1908163048
	mov	qword ptr [rbp - 56], rdi 
	mov	qword ptr [rbp - 64], rsi 
.LBB203_1:                              
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -1436389757
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB203_5
	jmp	.LBB203_8
.LBB203_8:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -963628784
	mov	dword ptr [rbp - 76], eax 
	je	.LBB203_4
	jmp	.LBB203_9
.LBB203_9:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -639530740
	mov	dword ptr [rbp - 80], eax 
	je	.LBB203_6
	jmp	.LBB203_10
.LBB203_10:                             
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1908163048
	mov	dword ptr [rbp - 84], eax 
	je	.LBB203_3
	jmp	.LBB203_2
.LBB203_2:                              
	jmp	.LBB203_7
.LBB203_3:                              
	mov	eax, 3655436556
	mov	ecx, 3331338512
	mov	dl, byte ptr [rbp - 42]
	mov	sil, byte ptr [rbp - 41]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB203_7
.LBB203_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rdx
	mov	rsi, qword ptr [rbp - 64] 
	mov	qword ptr [rcx], rsi
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	mov	qword ptr [rbp - 96], rcx 
	mov	qword ptr [rbp - 104], rax 
	call	_ZNSt5tupleIJPN5Botan7AES_192ESt14default_deleteIS1_EEEC2IS2_S4_Lb1EEEv
	mov	rax, qword ptr [rbp - 96] 
	mov	rcx, qword ptr [rax]
	mov	rdi, qword ptr [rbp - 104] 
	mov	qword ptr [rbp - 112], rcx 
	call	_ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE6_M_ptrEv
	mov	r8d, 3655436556
	mov	r9d, 2858577539
	mov	r10b, 1
	mov	rcx, qword ptr [rbp - 112] 
	mov	qword ptr [rax], rcx
	mov	r11d, dword ptr [x.368]
	mov	ebx, dword ptr [y.369]
	mov	r14d, r11d
	add	r14d, 2061516986
	sub	r14d, 1
	sub	r14d, 2061516986
	imul	r11d, r14d
	and	r11d, 1
	cmp	r11d, 0
	sete	r15b
	cmp	ebx, 10
	setl	r12b
	mov	r13b, r15b
	xor	r13b, -1
	mov	al, r12b
	xor	al, -1
	xor	r10b, 1
	mov	cl, r13b
	and	cl, -1
	and	r15b, r10b
	mov	dl, al
	and	dl, -1
	and	r12b, r10b
	or	cl, r15b
	or	dl, r12b
	xor	cl, dl
	or	r13b, al
	xor	r13b, -1
	or	r10b, 1
	and	r13b, r10b
	or	cl, r13b
	test	cl, 1
	cmovne	r8d, r9d
	mov	dword ptr [rbp - 48], r8d
	jmp	.LBB203_7
.LBB203_5:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB203_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rdx
	mov	rsi, qword ptr [rbp - 64] 
	mov	qword ptr [rcx], rsi
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	mov	qword ptr [rbp - 120], rcx 
	mov	qword ptr [rbp - 128], rax 
	call	_ZNSt5tupleIJPN5Botan7AES_192ESt14default_deleteIS1_EEEC2IS2_S4_Lb1EEEv
	mov	rax, qword ptr [rbp - 120] 
	mov	rcx, qword ptr [rax]
	mov	rdi, qword ptr [rbp - 128] 
	mov	qword ptr [rbp - 136], rcx 
	call	_ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE6_M_ptrEv
	mov	rcx, qword ptr [rbp - 136] 
	mov	qword ptr [rax], rcx
	mov	dword ptr [rbp - 48], -963628784
.LBB203_7:                              
	jmp	.LBB203_1
.Lfunc_end203:
	.size	_ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EEC2EPS1_, .Lfunc_end203-_ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EEC2EPS1_
	.cfi_endproc

	.section	.text._ZNSt5tupleIJPN5Botan7AES_192ESt14default_deleteIS1_EEEC2IS2_S4_Lb1EEEv,"axG",@progbits,_ZNSt5tupleIJPN5Botan7AES_192ESt14default_deleteIS1_EEEC2IS2_S4_Lb1EEEv,comdat
	.weak	_ZNSt5tupleIJPN5Botan7AES_192ESt14default_deleteIS1_EEEC2IS2_S4_Lb1EEEv 
	.p2align	4, 0x90
	.type	_ZNSt5tupleIJPN5Botan7AES_192ESt14default_deleteIS1_EEEC2IS2_S4_Lb1EEEv,@function
_ZNSt5tupleIJPN5Botan7AES_192ESt14default_deleteIS1_EEEC2IS2_S4_Lb1EEEv: 
	.cfi_startproc

	push	rbp
.Lcfi452:
	.cfi_def_cfa_offset 16
.Lcfi453:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi454:
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEEC2Ev
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end204:
	.size	_ZNSt5tupleIJPN5Botan7AES_192ESt14default_deleteIS1_EEEC2IS2_S4_Lb1EEEv, .Lfunc_end204-_ZNSt5tupleIJPN5Botan7AES_192ESt14default_deleteIS1_EEEC2IS2_S4_Lb1EEEv
	.cfi_endproc

	.section	.text._ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE6_M_ptrEv,"axG",@progbits,_ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE6_M_ptrEv,comdat
	.weak	_ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE6_M_ptrEv 
	.p2align	4, 0x90
	.type	_ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE6_M_ptrEv,@function
_ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE6_M_ptrEv: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 56
	xor	eax, eax
	mov	ecx, dword ptr [x.372]
	mov	edx, dword ptr [y.373]
	sub	eax, 1
	mov	esi, ecx
	add	esi, eax
	imul	ecx, esi
	and	ecx, 1
	cmp	ecx, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 34], r8b
	cmp	edx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 33], r8b
	mov	dword ptr [rbp - 40], -387438793
	mov	qword ptr [rbp - 48], rdi 
.LBB205_1:                              
	mov	eax, dword ptr [rbp - 40]
	mov	ecx, eax
	sub	ecx, -762302350
	mov	dword ptr [rbp - 52], eax 
	mov	dword ptr [rbp - 56], ecx 
	je	.LBB205_5
	jmp	.LBB205_8
.LBB205_8:                              
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, -419815717
	mov	dword ptr [rbp - 60], eax 
	je	.LBB205_4
	jmp	.LBB205_9
.LBB205_9:                              
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, -387438793
	mov	dword ptr [rbp - 64], eax 
	je	.LBB205_3
	jmp	.LBB205_10
.LBB205_10:                             
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, 1212618754
	mov	dword ptr [rbp - 68], eax 
	je	.LBB205_6
	jmp	.LBB205_2
.LBB205_2:                              
	jmp	.LBB205_7
.LBB205_3:                              
	mov	eax, 1212618754
	mov	ecx, 3875151579
	mov	dl, 1
	mov	sil, byte ptr [rbp - 34]
	mov	dil, byte ptr [rbp - 33]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 0
	mov	r10b, r8b
	and	r10b, 0
	and	sil, dl
	mov	r11b, r9b
	and	r11b, 0
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 0
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 40], eax
	jmp	.LBB205_7
.LBB205_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 48] 
	mov	qword ptr [rax], rcx
	mov	rdi, qword ptr [rax]
	call	_ZSt3getILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
	mov	edx, 1212618754
	mov	esi, 3532664946
	xor	r8d, r8d
	mov	qword ptr [rbp - 32], rax
	mov	r9d, dword ptr [x.372]
	mov	r10d, dword ptr [y.373]
	sub	r8d, 1
	mov	r11d, r9d
	add	r11d, r8d
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	bl
	cmp	r10d, 10
	setl	r14b
	mov	r15b, bl
	and	r15b, r14b
	xor	bl, r14b
	or	r15b, bl
	test	r15b, 1
	cmovne	edx, esi
	mov	dword ptr [rbp - 40], edx
	jmp	.LBB205_7
.LBB205_5:
	mov	rax, qword ptr [rbp - 32]
	lea	rsp, [rbp - 24]
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB205_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 48] 
	mov	qword ptr [rax], rcx
	mov	rdi, qword ptr [rax]
	call	_ZSt3getILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
	mov	dword ptr [rbp - 40], -419815717
	mov	qword ptr [rbp - 80], rax 
.LBB205_7:                              
	jmp	.LBB205_1
.Lfunc_end205:
	.size	_ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE6_M_ptrEv, .Lfunc_end205-_ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE6_M_ptrEv

	.section	.text._ZNSt11_Tuple_implILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEEC2Ev,"axG",@progbits,_ZNSt11_Tuple_implILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEEC2Ev,comdat
	.weak	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEEC2Ev 
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEEC2Ev,@function
_ZNSt11_Tuple_implILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEEC2Ev: 
	.cfi_startproc

	push	rbp
.Lcfi455:
	.cfi_def_cfa_offset 16
.Lcfi456:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi457:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	sub	rsp, 64
.Lcfi458:
	.cfi_offset rbx, -48
.Lcfi459:
	.cfi_offset r12, -40
.Lcfi460:
	.cfi_offset r14, -32
.Lcfi461:
	.cfi_offset r15, -24
	mov	eax, dword ptr [x.374]
	mov	ecx, dword ptr [y.375]
	mov	edx, eax
	sub	edx, 392188570
	sub	edx, 1
	add	edx, 392188570
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 34], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 33], sil
	mov	dword ptr [rbp - 40], 1720553082
	mov	qword ptr [rbp - 48], rdi 
.LBB206_1:                              
	mov	eax, dword ptr [rbp - 40]
	mov	ecx, eax
	sub	ecx, -337719465
	mov	dword ptr [rbp - 52], eax 
	mov	dword ptr [rbp - 56], ecx 
	je	.LBB206_6
	jmp	.LBB206_8
.LBB206_8:                              
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, -131496042
	mov	dword ptr [rbp - 60], eax 
	je	.LBB206_4
	jmp	.LBB206_9
.LBB206_9:                              
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, 137393435
	mov	dword ptr [rbp - 64], eax 
	je	.LBB206_5
	jmp	.LBB206_10
.LBB206_10:                             
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, 1720553082
	mov	dword ptr [rbp - 68], eax 
	je	.LBB206_3
	jmp	.LBB206_2
.LBB206_2:                              
	jmp	.LBB206_7
.LBB206_3:                              
	mov	eax, 3957247831
	mov	ecx, 4163471254
	mov	dl, byte ptr [rbp - 34]
	mov	sil, byte ptr [rbp - 33]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 40], eax
	jmp	.LBB206_7
.LBB206_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 48] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdx, rax
	mov	rdi, rdx
	mov	qword ptr [rbp - 80], rax 
	call	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_192EEEEC2Ev
	mov	rax, qword ptr [rbp - 80] 
	mov	rdi, rax
	call	_ZNSt10_Head_baseILm0EPN5Botan7AES_192ELb0EEC2Ev
	mov	esi, 3957247831
	mov	r8d, 137393435
	xor	r9d, r9d
	mov	r10d, dword ptr [x.374]
	mov	r11d, dword ptr [y.375]
	sub	r9d, 1
	mov	ebx, r10d
	add	ebx, r9d
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r14b
	cmp	r11d, 10
	setl	r15b
	mov	r12b, r14b
	and	r12b, r15b
	xor	r14b, r15b
	or	r12b, r14b
	test	r12b, 1
	cmovne	esi, r8d
	mov	dword ptr [rbp - 40], esi
	jmp	.LBB206_7
.LBB206_5:
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB206_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 48] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdx, rax
	mov	rdi, rdx
	mov	qword ptr [rbp - 88], rax 
	call	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_192EEEEC2Ev
	mov	rax, qword ptr [rbp - 88] 
	mov	rdi, rax
	call	_ZNSt10_Head_baseILm0EPN5Botan7AES_192ELb0EEC2Ev
	mov	dword ptr [rbp - 40], -131496042
.LBB206_7:                              
	jmp	.LBB206_1
.Lfunc_end206:
	.size	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEEC2Ev, .Lfunc_end206-_ZNSt11_Tuple_implILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEEC2Ev
	.cfi_endproc

	.section	.text._ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_192EEEEC2Ev,"axG",@progbits,_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_192EEEEC2Ev,comdat
	.weak	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_192EEEEC2Ev 
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_192EEEEC2Ev,@function
_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_192EEEEC2Ev: 
	.cfi_startproc

	push	rbp
.Lcfi462:
	.cfi_def_cfa_offset 16
.Lcfi463:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi464:
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_192EELb1EEC2Ev
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end207:
	.size	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_192EEEEC2Ev, .Lfunc_end207-_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_192EEEEC2Ev
	.cfi_endproc

	.section	.text._ZNSt10_Head_baseILm0EPN5Botan7AES_192ELb0EEC2Ev,"axG",@progbits,_ZNSt10_Head_baseILm0EPN5Botan7AES_192ELb0EEC2Ev,comdat
	.weak	_ZNSt10_Head_baseILm0EPN5Botan7AES_192ELb0EEC2Ev 
	.p2align	4, 0x90
	.type	_ZNSt10_Head_baseILm0EPN5Botan7AES_192ELb0EEC2Ev,@function
_ZNSt10_Head_baseILm0EPN5Botan7AES_192ELb0EEC2Ev: 

	push	rbp
	mov	rbp, rsp
	push	rbx
	sub	rsp, 40
	mov	eax, dword ptr [x.378]
	mov	ecx, dword ptr [y.379]
	mov	edx, eax
	add	edx, 950036980
	sub	edx, 1
	sub	edx, 950036980
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 10], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 9], sil
	mov	dword ptr [rbp - 16], 578299548
	mov	qword ptr [rbp - 24], rdi 
.LBB208_1:                              
	mov	eax, dword ptr [rbp - 16]
	mov	ecx, eax
	sub	ecx, -1641956235
	mov	dword ptr [rbp - 28], eax 
	mov	dword ptr [rbp - 32], ecx 
	je	.LBB208_5
	jmp	.LBB208_8
.LBB208_8:                              
	mov	eax, dword ptr [rbp - 28] 
	sub	eax, -1611956777
	mov	dword ptr [rbp - 36], eax 
	je	.LBB208_6
	jmp	.LBB208_9
.LBB208_9:                              
	mov	eax, dword ptr [rbp - 28] 
	sub	eax, 578299548
	mov	dword ptr [rbp - 40], eax 
	je	.LBB208_3
	jmp	.LBB208_10
.LBB208_10:                             
	mov	eax, dword ptr [rbp - 28] 
	sub	eax, 871306849
	mov	dword ptr [rbp - 44], eax 
	je	.LBB208_4
	jmp	.LBB208_2
.LBB208_2:                              
	jmp	.LBB208_7
.LBB208_3:                              
	mov	eax, 2683010519
	mov	ecx, 871306849
	mov	dl, byte ptr [rbp - 10]
	mov	sil, byte ptr [rbp - 9]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 16], eax
	jmp	.LBB208_7
.LBB208_4:                              
	mov	eax, 2683010519
	mov	ecx, 2653011061
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, qword ptr [rbp - 24] 
	mov	qword ptr [rdx], rsi
	mov	rdx, qword ptr [rdx]
	mov	qword ptr [rdx], 0
	mov	edi, dword ptr [x.378]
	mov	r8d, dword ptr [y.379]
	mov	r9d, edi
	add	r9d, 2007490811
	sub	r9d, 1
	sub	r9d, 2007490811
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	and	bl, r11b
	xor	r10b, r11b
	or	bl, r10b
	test	bl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 16], eax
	jmp	.LBB208_7
.LBB208_5:
	lea	rsp, [rbp - 8]
	pop	rbx
	pop	rbp
	ret
.LBB208_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 24] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	qword ptr [rax], 0
	mov	dword ptr [rbp - 16], 871306849
.LBB208_7:                              
	jmp	.LBB208_1
.Lfunc_end208:
	.size	_ZNSt10_Head_baseILm0EPN5Botan7AES_192ELb0EEC2Ev, .Lfunc_end208-_ZNSt10_Head_baseILm0EPN5Botan7AES_192ELb0EEC2Ev

	.section	.text._ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_192EELb1EEC2Ev,"axG",@progbits,_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_192EELb1EEC2Ev,comdat
	.weak	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_192EELb1EEC2Ev 
	.p2align	4, 0x90
	.type	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_192EELb1EEC2Ev,@function
_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_192EELb1EEC2Ev: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	pop	rbp
	ret
.Lfunc_end209:
	.size	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_192EELb1EEC2Ev, .Lfunc_end209-_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_192EELb1EEC2Ev

	.section	.text._ZSt3getILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,"axG",@progbits,_ZSt3getILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,comdat
	.weak	_ZSt3getILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_ 
	.p2align	4, 0x90
	.type	_ZSt3getILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,@function
_ZSt3getILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZSt12__get_helperILm0EPN5Botan7AES_192EJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end210:
	.size	_ZSt3getILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_, .Lfunc_end210-_ZSt3getILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_

	.section	.text._ZSt12__get_helperILm0EPN5Botan7AES_192EJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE,"axG",@progbits,_ZSt12__get_helperILm0EPN5Botan7AES_192EJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE,comdat
	.weak	_ZSt12__get_helperILm0EPN5Botan7AES_192EJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE 
	.p2align	4, 0x90
	.type	_ZSt12__get_helperILm0EPN5Botan7AES_192EJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE,@function
_ZSt12__get_helperILm0EPN5Botan7AES_192EJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEE7_M_headERS5_
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end211:
	.size	_ZSt12__get_helperILm0EPN5Botan7AES_192EJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE, .Lfunc_end211-_ZSt12__get_helperILm0EPN5Botan7AES_192EJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE

	.section	.text._ZNSt11_Tuple_implILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEE7_M_headERS5_,"axG",@progbits,_ZNSt11_Tuple_implILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEE7_M_headERS5_,comdat
	.weak	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEE7_M_headERS5_ 
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEE7_M_headERS5_,@function
_ZNSt11_Tuple_implILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEE7_M_headERS5_: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNSt10_Head_baseILm0EPN5Botan7AES_192ELb0EE7_M_headERS3_
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end212:
	.size	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEE7_M_headERS5_, .Lfunc_end212-_ZNSt11_Tuple_implILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEE7_M_headERS5_

	.section	.text._ZNSt10_Head_baseILm0EPN5Botan7AES_192ELb0EE7_M_headERS3_,"axG",@progbits,_ZNSt10_Head_baseILm0EPN5Botan7AES_192ELb0EE7_M_headERS3_,comdat
	.weak	_ZNSt10_Head_baseILm0EPN5Botan7AES_192ELb0EE7_M_headERS3_ 
	.p2align	4, 0x90
	.type	_ZNSt10_Head_baseILm0EPN5Botan7AES_192ELb0EE7_M_headERS3_,@function
_ZNSt10_Head_baseILm0EPN5Botan7AES_192ELb0EE7_M_headERS3_: 

	push	rbp
	mov	rbp, rsp
	push	r14
	push	rbx
	sub	rsp, 48
	mov	eax, dword ptr [x.388]
	mov	ecx, dword ptr [y.389]
	mov	edx, eax
	sub	edx, 771867114
	sub	edx, 1
	add	edx, 771867114
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 26], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 25], sil
	mov	dword ptr [rbp - 32], 309506026
	mov	qword ptr [rbp - 40], rdi 
.LBB213_1:                              
	mov	eax, dword ptr [rbp - 32]
	mov	ecx, eax
	sub	ecx, -339775480
	mov	dword ptr [rbp - 44], eax 
	mov	dword ptr [rbp - 48], ecx 
	je	.LBB213_5
	jmp	.LBB213_8
.LBB213_8:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 309506026
	mov	dword ptr [rbp - 52], eax 
	je	.LBB213_3
	jmp	.LBB213_9
.LBB213_9:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 1363202329
	mov	dword ptr [rbp - 56], eax 
	je	.LBB213_4
	jmp	.LBB213_10
.LBB213_10:                             
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 1562200019
	mov	dword ptr [rbp - 60], eax 
	je	.LBB213_6
	jmp	.LBB213_2
.LBB213_2:                              
	jmp	.LBB213_7
.LBB213_3:                              
	mov	eax, 1562200019
	mov	ecx, 1363202329
	mov	dl, 1
	mov	sil, byte ptr [rbp - 26]
	mov	dil, byte ptr [rbp - 25]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 0
	mov	r10b, r8b
	and	r10b, 0
	and	sil, dl
	mov	r11b, r9b
	and	r11b, 0
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 0
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB213_7
.LBB213_4:                              
	mov	eax, 1562200019
	mov	ecx, 3955191816
	xor	edx, edx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 40] 
	mov	qword ptr [rsi], rdi
	mov	rsi, qword ptr [rsi]
	mov	qword ptr [rbp - 24], rsi
	mov	r8d, dword ptr [x.388]
	mov	r9d, dword ptr [y.389]
	sub	edx, 1
	mov	r10d, r8d
	add	r10d, edx
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB213_7
.LBB213_5:
	mov	rax, qword ptr [rbp - 24]
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
.LBB213_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	dword ptr [rbp - 32], 1363202329
.LBB213_7:                              
	jmp	.LBB213_1
.Lfunc_end213:
	.size	_ZNSt10_Head_baseILm0EPN5Botan7AES_192ELb0EE7_M_headERS3_, .Lfunc_end213-_ZNSt10_Head_baseILm0EPN5Botan7AES_192ELb0EE7_M_headERS3_

	.section	.text._ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EE7releaseEv,"axG",@progbits,_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EE7releaseEv,comdat
	.weak	_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EE7releaseEv 
	.p2align	4, 0x90
	.type	_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EE7releaseEv,@function
_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EE7releaseEv: 
.Lfunc_begin26:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception26

	push	rbp
	mov	rbp, rsp
	sub	rsp, 48
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	qword ptr [rbp - 24], rdi 
	call	_ZNKSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EE3getEv
	mov	qword ptr [rbp - 16], rax
.Ltmp118:
	mov	rdi, qword ptr [rbp - 24] 
	call	_ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE6_M_ptrEv
.Ltmp119:
	mov	qword ptr [rbp - 32], rax 
	jmp	.LBB214_1
.LBB214_1:
	mov	rax, qword ptr [rbp - 32] 
	mov	qword ptr [rax], 0
	mov	rax, qword ptr [rbp - 16]
	add	rsp, 48
	pop	rbp
	ret
.LBB214_2:
.Ltmp120:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 36], ecx 
	call	__clang_call_terminate
.Lfunc_end214:
	.size	_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EE7releaseEv, .Lfunc_end214-_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EE7releaseEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table214:
.Lexception26:
	.byte	255                     
	.byte	3                       
	.byte	21                      
	.byte	3                       
	.byte	13                      
	.long	.Ltmp118-.Lfunc_begin26 
	.long	.Ltmp119-.Ltmp118       
	.long	.Ltmp120-.Lfunc_begin26 
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZSt7forwardISt14default_deleteIN5Botan7AES_192EEEOT_RNSt16remove_referenceIS4_E4typeE,"axG",@progbits,_ZSt7forwardISt14default_deleteIN5Botan7AES_192EEEOT_RNSt16remove_referenceIS4_E4typeE,comdat
	.weak	_ZSt7forwardISt14default_deleteIN5Botan7AES_192EEEOT_RNSt16remove_referenceIS4_E4typeE 
	.p2align	4, 0x90
	.type	_ZSt7forwardISt14default_deleteIN5Botan7AES_192EEEOT_RNSt16remove_referenceIS4_E4typeE,@function
_ZSt7forwardISt14default_deleteIN5Botan7AES_192EEEOT_RNSt16remove_referenceIS4_E4typeE: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	pop	rbp
	ret
.Lfunc_end215:
	.size	_ZSt7forwardISt14default_deleteIN5Botan7AES_192EEEOT_RNSt16remove_referenceIS4_E4typeE, .Lfunc_end215-_ZSt7forwardISt14default_deleteIN5Botan7AES_192EEEOT_RNSt16remove_referenceIS4_E4typeE

	.section	.text._ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EE11get_deleterEv,"axG",@progbits,_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EE11get_deleterEv,comdat
	.weak	_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EE11get_deleterEv 
	.p2align	4, 0x90
	.type	_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EE11get_deleterEv,@function
_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EE11get_deleterEv: 
.Lfunc_begin27:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception27

	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
.Ltmp121:
	call	_ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE10_M_deleterEv
.Ltmp122:
	mov	qword ptr [rbp - 16], rax 
	jmp	.LBB216_1
.LBB216_1:
	mov	rax, qword ptr [rbp - 16] 
	add	rsp, 32
	pop	rbp
	ret
.LBB216_2:
.Ltmp123:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 20], ecx 
	call	__clang_call_terminate
.Lfunc_end216:
	.size	_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EE11get_deleterEv, .Lfunc_end216-_ZNSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EE11get_deleterEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table216:
.Lexception27:
	.byte	255                     
	.byte	3                       
	.byte	21                      
	.byte	3                       
	.byte	13                      
	.long	.Ltmp121-.Lfunc_begin27 
	.long	.Ltmp122-.Ltmp121       
	.long	.Ltmp123-.Lfunc_begin27 
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZNSt15__uniq_ptr_implIN5Botan11BlockCipherESt14default_deleteIS1_EEC2IS2_INS0_7AES_192EEEEPS1_OT_,"axG",@progbits,_ZNSt15__uniq_ptr_implIN5Botan11BlockCipherESt14default_deleteIS1_EEC2IS2_INS0_7AES_192EEEEPS1_OT_,comdat
	.weak	_ZNSt15__uniq_ptr_implIN5Botan11BlockCipherESt14default_deleteIS1_EEC2IS2_INS0_7AES_192EEEEPS1_OT_ 
	.p2align	4, 0x90
	.type	_ZNSt15__uniq_ptr_implIN5Botan11BlockCipherESt14default_deleteIS1_EEC2IS2_INS0_7AES_192EEEEPS1_OT_,@function
_ZNSt15__uniq_ptr_implIN5Botan11BlockCipherESt14default_deleteIS1_EEC2IS2_INS0_7AES_192EEEEPS1_OT_: 
	.cfi_startproc

	push	rbp
.Lcfi465:
	.cfi_def_cfa_offset 16
.Lcfi466:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi467:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 88
.Lcfi468:
	.cfi_offset rbx, -56
.Lcfi469:
	.cfi_offset r12, -48
.Lcfi470:
	.cfi_offset r13, -40
.Lcfi471:
	.cfi_offset r14, -32
.Lcfi472:
	.cfi_offset r15, -24
	xor	eax, eax
	mov	ecx, dword ptr [x.392]
	mov	r8d, dword ptr [y.393]
	sub	eax, 1
	mov	r9d, ecx
	add	r9d, eax
	imul	ecx, r9d
	and	ecx, 1
	cmp	ecx, 0
	sete	r10b
	and	r10b, 1
	mov	byte ptr [rbp - 42], r10b
	cmp	r8d, 10
	setl	r10b
	and	r10b, 1
	mov	byte ptr [rbp - 41], r10b
	mov	dword ptr [rbp - 48], -339602657
	mov	qword ptr [rbp - 56], rsi 
	mov	qword ptr [rbp - 64], rdi 
	mov	qword ptr [rbp - 72], rdx 
.LBB217_1:                              
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -1997854140
	mov	dword ptr [rbp - 76], eax 
	mov	dword ptr [rbp - 80], ecx 
	je	.LBB217_4
	jmp	.LBB217_8
.LBB217_8:                              
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, -339602657
	mov	dword ptr [rbp - 84], eax 
	je	.LBB217_3
	jmp	.LBB217_9
.LBB217_9:                              
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, 244928668
	mov	dword ptr [rbp - 88], eax 
	je	.LBB217_5
	jmp	.LBB217_10
.LBB217_10:                             
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, 1917975190
	mov	dword ptr [rbp - 92], eax 
	je	.LBB217_6
	jmp	.LBB217_2
.LBB217_2:                              
	jmp	.LBB217_7
.LBB217_3:                              
	mov	eax, 1917975190
	mov	ecx, 2297113156
	mov	dl, byte ptr [rbp - 42]
	mov	sil, byte ptr [rbp - 41]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB217_7
.LBB217_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rsi
	mov	rdi, qword ptr [rbp - 56] 
	mov	qword ptr [rcx], rdi
	mov	r8, qword ptr [rbp - 72] 
	mov	qword ptr [rdx], r8
	mov	rdi, qword ptr [rax]
	mov	rax, qword ptr [rdx]
	mov	qword ptr [rbp - 104], rdi 
	mov	rdi, rax
	mov	qword ptr [rbp - 112], rcx 
	call	_ZSt7forwardISt14default_deleteIN5Botan7AES_192EEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rdi, qword ptr [rbp - 104] 
	mov	rsi, qword ptr [rbp - 112] 
	mov	rdx, rax
	call	_ZNSt5tupleIJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_S3_INS0_7AES_192EELb1EEEOT_OT0_
	mov	r9d, 1917975190
	mov	r10d, 244928668
	mov	r11b, 1
	xor	ebx, ebx
	mov	r14d, dword ptr [x.392]
	mov	r15d, dword ptr [y.393]
	sub	ebx, 1
	mov	r12d, r14d
	add	r12d, ebx
	imul	r14d, r12d
	and	r14d, 1
	cmp	r14d, 0
	sete	r13b
	cmp	r15d, 10
	setl	al
	mov	cl, r13b
	xor	cl, -1
	mov	dl, al
	xor	dl, -1
	xor	r11b, 1
	mov	sil, cl
	and	sil, -1
	and	r13b, r11b
	mov	dil, dl
	and	dil, -1
	and	al, r11b
	or	sil, r13b
	or	dil, al
	xor	sil, dil
	or	cl, dl
	xor	cl, -1
	or	r11b, 1
	and	cl, r11b
	or	sil, cl
	test	sil, 1
	cmovne	r9d, r10d
	mov	dword ptr [rbp - 48], r9d
	jmp	.LBB217_7
.LBB217_5:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB217_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rsi
	mov	rdi, qword ptr [rbp - 56] 
	mov	qword ptr [rcx], rdi
	mov	r8, qword ptr [rbp - 72] 
	mov	qword ptr [rdx], r8
	mov	rdi, qword ptr [rax]
	mov	rax, qword ptr [rdx]
	mov	qword ptr [rbp - 120], rdi 
	mov	rdi, rax
	mov	qword ptr [rbp - 128], rcx 
	call	_ZSt7forwardISt14default_deleteIN5Botan7AES_192EEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rdi, qword ptr [rbp - 120] 
	mov	rsi, qword ptr [rbp - 128] 
	mov	rdx, rax
	call	_ZNSt5tupleIJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_S3_INS0_7AES_192EELb1EEEOT_OT0_
	mov	dword ptr [rbp - 48], -1997854140
.LBB217_7:                              
	jmp	.LBB217_1
.Lfunc_end217:
	.size	_ZNSt15__uniq_ptr_implIN5Botan11BlockCipherESt14default_deleteIS1_EEC2IS2_INS0_7AES_192EEEEPS1_OT_, .Lfunc_end217-_ZNSt15__uniq_ptr_implIN5Botan11BlockCipherESt14default_deleteIS1_EEC2IS2_INS0_7AES_192EEEEPS1_OT_
	.cfi_endproc

	.section	.text._ZNKSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EE3getEv,"axG",@progbits,_ZNKSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EE3getEv,comdat
	.weak	_ZNKSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EE3getEv 
	.p2align	4, 0x90
	.type	_ZNKSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EE3getEv,@function
_ZNKSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EE3getEv: 
.Lfunc_begin28:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception28

	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
.Ltmp124:
	call	_ZNKSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE6_M_ptrEv
.Ltmp125:
	mov	qword ptr [rbp - 16], rax 
	jmp	.LBB218_1
.LBB218_1:
	mov	rax, qword ptr [rbp - 16] 
	add	rsp, 32
	pop	rbp
	ret
.LBB218_2:
.Ltmp126:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 20], ecx 
	call	__clang_call_terminate
.Lfunc_end218:
	.size	_ZNKSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EE3getEv, .Lfunc_end218-_ZNKSt10unique_ptrIN5Botan7AES_192ESt14default_deleteIS1_EE3getEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table218:
.Lexception28:
	.byte	255                     
	.byte	3                       
	.byte	21                      
	.byte	3                       
	.byte	13                      
	.long	.Ltmp124-.Lfunc_begin28 
	.long	.Ltmp125-.Ltmp124       
	.long	.Ltmp126-.Lfunc_begin28 
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZNKSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE6_M_ptrEv,"axG",@progbits,_ZNKSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE6_M_ptrEv,comdat
	.weak	_ZNKSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE6_M_ptrEv 
	.p2align	4, 0x90
	.type	_ZNKSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE6_M_ptrEv,@function
_ZNKSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE6_M_ptrEv: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZSt3getILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_
	mov	rax, qword ptr [rax]
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end219:
	.size	_ZNKSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE6_M_ptrEv, .Lfunc_end219-_ZNKSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE6_M_ptrEv

	.section	.text._ZSt3getILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_,"axG",@progbits,_ZSt3getILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_,comdat
	.weak	_ZSt3getILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_ 
	.p2align	4, 0x90
	.type	_ZSt3getILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_,@function
_ZSt3getILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_: 

	push	rbp
	mov	rbp, rsp
	push	r14
	push	rbx
	sub	rsp, 64
	mov	eax, dword ptr [x.396]
	mov	ecx, dword ptr [y.397]
	mov	edx, eax
	add	edx, -1699214919
	sub	edx, 1
	sub	edx, -1699214919
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 26], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 25], sil
	mov	dword ptr [rbp - 32], -1827752377
	mov	qword ptr [rbp - 40], rdi 
.LBB220_1:                              
	mov	eax, dword ptr [rbp - 32]
	mov	ecx, eax
	sub	ecx, -1827752377
	mov	dword ptr [rbp - 44], eax 
	mov	dword ptr [rbp - 48], ecx 
	je	.LBB220_3
	jmp	.LBB220_8
.LBB220_8:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, -1008227903
	mov	dword ptr [rbp - 52], eax 
	je	.LBB220_4
	jmp	.LBB220_9
.LBB220_9:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, -955916981
	mov	dword ptr [rbp - 56], eax 
	je	.LBB220_6
	jmp	.LBB220_10
.LBB220_10:                             
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 305310034
	mov	dword ptr [rbp - 60], eax 
	je	.LBB220_5
	jmp	.LBB220_2
.LBB220_2:                              
	jmp	.LBB220_7
.LBB220_3:                              
	mov	eax, 3339050315
	mov	ecx, 3286739393
	mov	dl, byte ptr [rbp - 26]
	mov	sil, byte ptr [rbp - 25]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB220_7
.LBB220_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	call	_ZSt12__get_helperILm0EPN5Botan7AES_192EJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE
	mov	edx, 3339050315
	mov	esi, 305310034
	mov	qword ptr [rbp - 24], rax
	mov	r8d, dword ptr [x.396]
	mov	r9d, dword ptr [y.397]
	mov	r10d, r8d
	add	r10d, -431124417
	sub	r10d, 1
	sub	r10d, -431124417
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	edx, esi
	mov	dword ptr [rbp - 32], edx
	jmp	.LBB220_7
.LBB220_5:
	mov	rax, qword ptr [rbp - 24]
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
.LBB220_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	call	_ZSt12__get_helperILm0EPN5Botan7AES_192EJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE
	mov	dword ptr [rbp - 32], -1008227903
	mov	qword ptr [rbp - 72], rax 
.LBB220_7:                              
	jmp	.LBB220_1
.Lfunc_end220:
	.size	_ZSt3getILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_, .Lfunc_end220-_ZSt3getILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_

	.section	.text._ZSt12__get_helperILm0EPN5Botan7AES_192EJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE,"axG",@progbits,_ZSt12__get_helperILm0EPN5Botan7AES_192EJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE,comdat
	.weak	_ZSt12__get_helperILm0EPN5Botan7AES_192EJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE 
	.p2align	4, 0x90
	.type	_ZSt12__get_helperILm0EPN5Botan7AES_192EJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE,@function
_ZSt12__get_helperILm0EPN5Botan7AES_192EJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEE7_M_headERKS5_
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end221:
	.size	_ZSt12__get_helperILm0EPN5Botan7AES_192EJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE, .Lfunc_end221-_ZSt12__get_helperILm0EPN5Botan7AES_192EJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE

	.section	.text._ZNSt11_Tuple_implILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEE7_M_headERKS5_,"axG",@progbits,_ZNSt11_Tuple_implILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEE7_M_headERKS5_,comdat
	.weak	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEE7_M_headERKS5_ 
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEE7_M_headERKS5_,@function
_ZNSt11_Tuple_implILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEE7_M_headERKS5_: 

	push	rbp
	mov	rbp, rsp
	push	r14
	push	rbx
	sub	rsp, 64
	mov	eax, dword ptr [x.400]
	mov	ecx, dword ptr [y.401]
	mov	edx, eax
	add	edx, 233238053
	sub	edx, 1
	sub	edx, 233238053
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 26], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 25], sil
	mov	dword ptr [rbp - 32], -1986016099
	mov	qword ptr [rbp - 40], rdi 
.LBB222_1:                              
	mov	eax, dword ptr [rbp - 32]
	mov	ecx, eax
	sub	ecx, -1986016099
	mov	dword ptr [rbp - 44], eax 
	mov	dword ptr [rbp - 48], ecx 
	je	.LBB222_3
	jmp	.LBB222_8
.LBB222_8:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, -1606652228
	mov	dword ptr [rbp - 52], eax 
	je	.LBB222_4
	jmp	.LBB222_9
.LBB222_9:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 1186522355
	mov	dword ptr [rbp - 56], eax 
	je	.LBB222_5
	jmp	.LBB222_10
.LBB222_10:                             
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 1197273704
	mov	dword ptr [rbp - 60], eax 
	je	.LBB222_6
	jmp	.LBB222_2
.LBB222_2:                              
	jmp	.LBB222_7
.LBB222_3:                              
	mov	eax, 1197273704
	mov	ecx, 2688315068
	mov	dl, byte ptr [rbp - 26]
	mov	sil, byte ptr [rbp - 25]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB222_7
.LBB222_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	call	_ZNSt10_Head_baseILm0EPN5Botan7AES_192ELb0EE7_M_headERKS3_
	mov	edx, 1197273704
	mov	esi, 1186522355
	mov	qword ptr [rbp - 24], rax
	mov	r8d, dword ptr [x.400]
	mov	r9d, dword ptr [y.401]
	mov	r10d, r8d
	sub	r10d, 1996655215
	sub	r10d, 1
	add	r10d, 1996655215
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	edx, esi
	mov	dword ptr [rbp - 32], edx
	jmp	.LBB222_7
.LBB222_5:
	mov	rax, qword ptr [rbp - 24]
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
.LBB222_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	call	_ZNSt10_Head_baseILm0EPN5Botan7AES_192ELb0EE7_M_headERKS3_
	mov	dword ptr [rbp - 32], -1606652228
	mov	qword ptr [rbp - 72], rax 
.LBB222_7:                              
	jmp	.LBB222_1
.Lfunc_end222:
	.size	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEE7_M_headERKS5_, .Lfunc_end222-_ZNSt11_Tuple_implILm0EJPN5Botan7AES_192ESt14default_deleteIS1_EEE7_M_headERKS5_

	.section	.text._ZNSt10_Head_baseILm0EPN5Botan7AES_192ELb0EE7_M_headERKS3_,"axG",@progbits,_ZNSt10_Head_baseILm0EPN5Botan7AES_192ELb0EE7_M_headERKS3_,comdat
	.weak	_ZNSt10_Head_baseILm0EPN5Botan7AES_192ELb0EE7_M_headERKS3_ 
	.p2align	4, 0x90
	.type	_ZNSt10_Head_baseILm0EPN5Botan7AES_192ELb0EE7_M_headERKS3_,@function
_ZNSt10_Head_baseILm0EPN5Botan7AES_192ELb0EE7_M_headERKS3_: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	pop	rbp
	ret
.Lfunc_end223:
	.size	_ZNSt10_Head_baseILm0EPN5Botan7AES_192ELb0EE7_M_headERKS3_, .Lfunc_end223-_ZNSt10_Head_baseILm0EPN5Botan7AES_192ELb0EE7_M_headERKS3_

	.section	.text._ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE10_M_deleterEv,"axG",@progbits,_ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE10_M_deleterEv,comdat
	.weak	_ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE10_M_deleterEv 
	.p2align	4, 0x90
	.type	_ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE10_M_deleterEv,@function
_ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE10_M_deleterEv: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZSt3getILm1EJPN5Botan7AES_192ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end224:
	.size	_ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE10_M_deleterEv, .Lfunc_end224-_ZNSt15__uniq_ptr_implIN5Botan7AES_192ESt14default_deleteIS1_EE10_M_deleterEv

	.section	.text._ZSt3getILm1EJPN5Botan7AES_192ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,"axG",@progbits,_ZSt3getILm1EJPN5Botan7AES_192ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,comdat
	.weak	_ZSt3getILm1EJPN5Botan7AES_192ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_ 
	.p2align	4, 0x90
	.type	_ZSt3getILm1EJPN5Botan7AES_192ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,@function
_ZSt3getILm1EJPN5Botan7AES_192ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_: 

	push	rbp
	mov	rbp, rsp
	push	r14
	push	rbx
	sub	rsp, 64
	mov	eax, dword ptr [x.406]
	mov	ecx, dword ptr [y.407]
	mov	edx, eax
	add	edx, 51987553
	sub	edx, 1
	sub	edx, 51987553
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 26], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 25], sil
	mov	dword ptr [rbp - 32], -422298644
	mov	qword ptr [rbp - 40], rdi 
.LBB225_1:                              
	mov	eax, dword ptr [rbp - 32]
	mov	ecx, eax
	sub	ecx, -1655846510
	mov	dword ptr [rbp - 44], eax 
	mov	dword ptr [rbp - 48], ecx 
	je	.LBB225_6
	jmp	.LBB225_8
.LBB225_8:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, -926631889
	mov	dword ptr [rbp - 52], eax 
	je	.LBB225_5
	jmp	.LBB225_9
.LBB225_9:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, -422298644
	mov	dword ptr [rbp - 56], eax 
	je	.LBB225_3
	jmp	.LBB225_10
.LBB225_10:                             
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 656570962
	mov	dword ptr [rbp - 60], eax 
	je	.LBB225_4
	jmp	.LBB225_2
.LBB225_2:                              
	jmp	.LBB225_7
.LBB225_3:                              
	mov	eax, 2639120786
	mov	ecx, 656570962
	mov	dl, byte ptr [rbp - 26]
	mov	sil, byte ptr [rbp - 25]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB225_7
.LBB225_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	call	_ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_192EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE
	mov	edx, 2639120786
	mov	esi, 3368335407
	mov	qword ptr [rbp - 24], rax
	mov	r8d, dword ptr [x.406]
	mov	r9d, dword ptr [y.407]
	mov	r10d, r8d
	add	r10d, -1666290553
	sub	r10d, 1
	sub	r10d, -1666290553
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	edx, esi
	mov	dword ptr [rbp - 32], edx
	jmp	.LBB225_7
.LBB225_5:
	mov	rax, qword ptr [rbp - 24]
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
.LBB225_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	call	_ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_192EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE
	mov	dword ptr [rbp - 32], 656570962
	mov	qword ptr [rbp - 72], rax 
.LBB225_7:                              
	jmp	.LBB225_1
.Lfunc_end225:
	.size	_ZSt3getILm1EJPN5Botan7AES_192ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_, .Lfunc_end225-_ZSt3getILm1EJPN5Botan7AES_192ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_

	.section	.text._ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_192EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE,"axG",@progbits,_ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_192EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE,comdat
	.weak	_ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_192EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE 
	.p2align	4, 0x90
	.type	_ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_192EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE,@function
_ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_192EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_192EEEE7_M_headERS4_
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end226:
	.size	_ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_192EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE, .Lfunc_end226-_ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_192EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE

	.section	.text._ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_192EEEE7_M_headERS4_,"axG",@progbits,_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_192EEEE7_M_headERS4_,comdat
	.weak	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_192EEEE7_M_headERS4_ 
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_192EEEE7_M_headERS4_,@function
_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_192EEEE7_M_headERS4_: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 56
	mov	eax, dword ptr [x.410]
	mov	ecx, dword ptr [y.411]
	mov	edx, eax
	add	edx, -180759050
	sub	edx, 1
	sub	edx, -180759050
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 50], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 49], sil
	mov	dword ptr [rbp - 56], -1614283074
	mov	qword ptr [rbp - 64], rdi 
.LBB227_1:                              
	mov	eax, dword ptr [rbp - 56]
	mov	ecx, eax
	sub	ecx, -1614283074
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB227_3
	jmp	.LBB227_8
.LBB227_8:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -46777892
	mov	dword ptr [rbp - 76], eax 
	je	.LBB227_6
	jmp	.LBB227_9
.LBB227_9:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 349172628
	mov	dword ptr [rbp - 80], eax 
	je	.LBB227_5
	jmp	.LBB227_10
.LBB227_10:                             
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1497430841
	mov	dword ptr [rbp - 84], eax 
	je	.LBB227_4
	jmp	.LBB227_2
.LBB227_2:                              
	jmp	.LBB227_7
.LBB227_3:                              
	mov	eax, 4248189404
	mov	ecx, 1497430841
	mov	dl, byte ptr [rbp - 50]
	mov	sil, byte ptr [rbp - 49]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB227_7
.LBB227_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	call	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_192EELb1EE7_M_headERS4_
	mov	edx, 4248189404
	mov	esi, 349172628
	mov	r8b, 1
	xor	r9d, r9d
	mov	qword ptr [rbp - 48], rax
	mov	r10d, dword ptr [x.410]
	mov	r11d, dword ptr [y.411]
	sub	r9d, 1
	mov	ebx, r10d
	add	ebx, r9d
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r14b
	cmp	r11d, 10
	setl	r15b
	mov	r12b, r14b
	xor	r12b, -1
	mov	r13b, r15b
	xor	r13b, -1
	xor	r8b, 0
	mov	al, r12b
	and	al, 0
	and	r14b, r8b
	mov	cl, r13b
	and	cl, 0
	and	r15b, r8b
	or	al, r14b
	or	cl, r15b
	xor	al, cl
	or	r12b, r13b
	xor	r12b, -1
	or	r8b, 0
	and	r12b, r8b
	or	al, r12b
	test	al, 1
	cmovne	edx, esi
	mov	dword ptr [rbp - 56], edx
	jmp	.LBB227_7
.LBB227_5:
	mov	rax, qword ptr [rbp - 48]
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB227_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	call	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_192EELb1EE7_M_headERS4_
	mov	dword ptr [rbp - 56], 1497430841
	mov	qword ptr [rbp - 96], rax 
.LBB227_7:                              
	jmp	.LBB227_1
.Lfunc_end227:
	.size	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_192EEEE7_M_headERS4_, .Lfunc_end227-_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_192EEEE7_M_headERS4_

	.section	.text._ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_192EELb1EE7_M_headERS4_,"axG",@progbits,_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_192EELb1EE7_M_headERS4_,comdat
	.weak	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_192EELb1EE7_M_headERS4_ 
	.p2align	4, 0x90
	.type	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_192EELb1EE7_M_headERS4_,@function
_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_192EELb1EE7_M_headERS4_: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	rax, rdi
	pop	rbp
	ret
.Lfunc_end228:
	.size	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_192EELb1EE7_M_headERS4_, .Lfunc_end228-_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_192EELb1EE7_M_headERS4_

	.section	.text._ZNSt5tupleIJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_S3_INS0_7AES_192EELb1EEEOT_OT0_,"axG",@progbits,_ZNSt5tupleIJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_S3_INS0_7AES_192EELb1EEEOT_OT0_,comdat
	.weak	_ZNSt5tupleIJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_S3_INS0_7AES_192EELb1EEEOT_OT0_ 
	.p2align	4, 0x90
	.type	_ZNSt5tupleIJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_S3_INS0_7AES_192EELb1EEEOT_OT0_,@function
_ZNSt5tupleIJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_S3_INS0_7AES_192EELb1EEEOT_OT0_: 
	.cfi_startproc

	push	rbp
.Lcfi473:
	.cfi_def_cfa_offset 16
.Lcfi474:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi475:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 104
.Lcfi476:
	.cfi_offset rbx, -56
.Lcfi477:
	.cfi_offset r12, -48
.Lcfi478:
	.cfi_offset r13, -40
.Lcfi479:
	.cfi_offset r14, -32
.Lcfi480:
	.cfi_offset r15, -24
	mov	eax, dword ptr [x.414]
	mov	ecx, dword ptr [y.415]
	mov	r8d, eax
	add	r8d, 518293811
	sub	r8d, 1
	sub	r8d, 518293811
	imul	eax, r8d
	and	eax, 1
	cmp	eax, 0
	sete	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 42], r9b
	cmp	ecx, 10
	setl	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 41], r9b
	mov	dword ptr [rbp - 48], -1736669186
	mov	qword ptr [rbp - 56], rsi 
	mov	qword ptr [rbp - 64], rdi 
	mov	qword ptr [rbp - 72], rdx 
.LBB229_1:                              
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -1736669186
	mov	dword ptr [rbp - 76], eax 
	mov	dword ptr [rbp - 80], ecx 
	je	.LBB229_3
	jmp	.LBB229_8
.LBB229_8:                              
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, -1230666713
	mov	dword ptr [rbp - 84], eax 
	je	.LBB229_4
	jmp	.LBB229_9
.LBB229_9:                              
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, -404220876
	mov	dword ptr [rbp - 88], eax 
	je	.LBB229_5
	jmp	.LBB229_10
.LBB229_10:                             
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, -1204195
	mov	dword ptr [rbp - 92], eax 
	je	.LBB229_6
	jmp	.LBB229_2
.LBB229_2:                              
	jmp	.LBB229_7
.LBB229_3:                              
	mov	eax, 4293763101
	mov	ecx, 3064300583
	mov	dl, byte ptr [rbp - 42]
	mov	sil, byte ptr [rbp - 41]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB229_7
.LBB229_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rsi
	mov	rdi, qword ptr [rbp - 56] 
	mov	qword ptr [rcx], rdi
	mov	r8, qword ptr [rbp - 72] 
	mov	qword ptr [rdx], r8
	mov	rax, qword ptr [rax]
	mov	rdi, qword ptr [rcx]
	mov	qword ptr [rbp - 104], rax 
	mov	qword ptr [rbp - 112], rdx 
	call	_ZSt7forwardIRPN5Botan11BlockCipherEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rcx, qword ptr [rbp - 112] 
	mov	rdi, qword ptr [rcx]
	mov	qword ptr [rbp - 120], rax 
	call	_ZSt7forwardISt14default_deleteIN5Botan7AES_192EEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rdi, qword ptr [rbp - 104] 
	mov	rsi, qword ptr [rbp - 120] 
	mov	rdx, rax
	call	_ZNSt11_Tuple_implILm0EJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_JS3_INS0_7AES_192EEEvEEOT_DpOT0_
	mov	r9d, 4293763101
	mov	r10d, 3890746420
	mov	r11d, dword ptr [x.414]
	mov	ebx, dword ptr [y.415]
	mov	r14d, r11d
	sub	r14d, 1415753597
	sub	r14d, 1
	add	r14d, 1415753597
	imul	r11d, r14d
	and	r11d, 1
	cmp	r11d, 0
	sete	r15b
	cmp	ebx, 10
	setl	r12b
	mov	r13b, r15b
	and	r13b, r12b
	xor	r15b, r12b
	or	r13b, r15b
	test	r13b, 1
	cmovne	r9d, r10d
	mov	dword ptr [rbp - 48], r9d
	jmp	.LBB229_7
.LBB229_5:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB229_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rsi
	mov	rdi, qword ptr [rbp - 56] 
	mov	qword ptr [rcx], rdi
	mov	r8, qword ptr [rbp - 72] 
	mov	qword ptr [rdx], r8
	mov	rax, qword ptr [rax]
	mov	rdi, qword ptr [rcx]
	mov	qword ptr [rbp - 128], rax 
	mov	qword ptr [rbp - 136], rdx 
	call	_ZSt7forwardIRPN5Botan11BlockCipherEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rcx, qword ptr [rbp - 136] 
	mov	rdi, qword ptr [rcx]
	mov	qword ptr [rbp - 144], rax 
	call	_ZSt7forwardISt14default_deleteIN5Botan7AES_192EEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rdi, qword ptr [rbp - 128] 
	mov	rsi, qword ptr [rbp - 144] 
	mov	rdx, rax
	call	_ZNSt11_Tuple_implILm0EJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_JS3_INS0_7AES_192EEEvEEOT_DpOT0_
	mov	dword ptr [rbp - 48], -1230666713
.LBB229_7:                              
	jmp	.LBB229_1
.Lfunc_end229:
	.size	_ZNSt5tupleIJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_S3_INS0_7AES_192EELb1EEEOT_OT0_, .Lfunc_end229-_ZNSt5tupleIJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_S3_INS0_7AES_192EELb1EEEOT_OT0_
	.cfi_endproc

	.section	.text._ZNSt11_Tuple_implILm0EJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_JS3_INS0_7AES_192EEEvEEOT_DpOT0_,"axG",@progbits,_ZNSt11_Tuple_implILm0EJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_JS3_INS0_7AES_192EEEvEEOT_DpOT0_,comdat
	.weak	_ZNSt11_Tuple_implILm0EJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_JS3_INS0_7AES_192EEEvEEOT_DpOT0_ 
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm0EJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_JS3_INS0_7AES_192EEEvEEOT_DpOT0_,@function
_ZNSt11_Tuple_implILm0EJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_JS3_INS0_7AES_192EEEvEEOT_DpOT0_: 
	.cfi_startproc

	push	rbp
.Lcfi481:
	.cfi_def_cfa_offset 16
.Lcfi482:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi483:
	.cfi_def_cfa_register rbp
	sub	rsp, 48
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	rdx, qword ptr [rbp - 8]
	mov	rsi, rdx
	mov	rdi, qword ptr [rbp - 24]
	mov	qword ptr [rbp - 32], rdx 
	mov	qword ptr [rbp - 40], rsi 
	call	_ZSt7forwardISt14default_deleteIN5Botan7AES_192EEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rdi, qword ptr [rbp - 40] 
	mov	rsi, rax
	call	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan11BlockCipherEEEEC2IS0_INS1_7AES_192EEEEOT_
	mov	rax, qword ptr [rbp - 32] 
	mov	rdi, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 48], rax 
	call	_ZSt7forwardIRPN5Botan11BlockCipherEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rdi, qword ptr [rbp - 48] 
	mov	rsi, rax
	call	_ZNSt10_Head_baseILm0EPN5Botan11BlockCipherELb0EEC2IRS2_EEOT_
	add	rsp, 48
	pop	rbp
	ret
.Lfunc_end230:
	.size	_ZNSt11_Tuple_implILm0EJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_JS3_INS0_7AES_192EEEvEEOT_DpOT0_, .Lfunc_end230-_ZNSt11_Tuple_implILm0EJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_JS3_INS0_7AES_192EEEvEEOT_DpOT0_
	.cfi_endproc

	.section	.text._ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan11BlockCipherEEEEC2IS0_INS1_7AES_192EEEEOT_,"axG",@progbits,_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan11BlockCipherEEEEC2IS0_INS1_7AES_192EEEEOT_,comdat
	.weak	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan11BlockCipherEEEEC2IS0_INS1_7AES_192EEEEOT_ 
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan11BlockCipherEEEEC2IS0_INS1_7AES_192EEEEOT_,@function
_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan11BlockCipherEEEEC2IS0_INS1_7AES_192EEEEOT_: 
	.cfi_startproc

	push	rbp
.Lcfi484:
	.cfi_def_cfa_offset 16
.Lcfi485:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi486:
	.cfi_def_cfa_register rbp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rsi, qword ptr [rbp - 8]
	mov	rdi, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 24], rsi 
	call	_ZSt7forwardISt14default_deleteIN5Botan7AES_192EEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rdi, qword ptr [rbp - 24] 
	mov	rsi, rax
	call	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan11BlockCipherEELb1EEC2IS0_INS1_7AES_192EEEEOT_
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end231:
	.size	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan11BlockCipherEEEEC2IS0_INS1_7AES_192EEEEOT_, .Lfunc_end231-_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan11BlockCipherEEEEC2IS0_INS1_7AES_192EEEEOT_
	.cfi_endproc

	.section	.text._ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan11BlockCipherEELb1EEC2IS0_INS1_7AES_192EEEEOT_,"axG",@progbits,_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan11BlockCipherEELb1EEC2IS0_INS1_7AES_192EEEEOT_,comdat
	.weak	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan11BlockCipherEELb1EEC2IS0_INS1_7AES_192EEEEOT_ 
	.p2align	4, 0x90
	.type	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan11BlockCipherEELb1EEC2IS0_INS1_7AES_192EEEEOT_,@function
_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan11BlockCipherEELb1EEC2IS0_INS1_7AES_192EEEEOT_: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 72
	mov	eax, dword ptr [x.420]
	mov	ecx, dword ptr [y.421]
	mov	edx, eax
	sub	edx, 1607422536
	sub	edx, 1
	add	edx, 1607422536
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 42], r8b
	cmp	ecx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 41], r8b
	mov	dword ptr [rbp - 48], 1781312533
	mov	qword ptr [rbp - 56], rdi 
	mov	qword ptr [rbp - 64], rsi 
.LBB232_1:                              
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -105709473
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB232_4
	jmp	.LBB232_8
.LBB232_8:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 892308074
	mov	dword ptr [rbp - 76], eax 
	je	.LBB232_6
	jmp	.LBB232_9
.LBB232_9:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1025178027
	mov	dword ptr [rbp - 80], eax 
	je	.LBB232_5
	jmp	.LBB232_10
.LBB232_10:                             
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1781312533
	mov	dword ptr [rbp - 84], eax 
	je	.LBB232_3
	jmp	.LBB232_2
.LBB232_2:                              
	jmp	.LBB232_7
.LBB232_3:                              
	mov	eax, 892308074
	mov	ecx, 4189257823
	mov	dl, byte ptr [rbp - 42]
	mov	sil, byte ptr [rbp - 41]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB232_7
.LBB232_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rdx
	mov	rsi, qword ptr [rbp - 64] 
	mov	qword ptr [rcx], rsi
	mov	rax, qword ptr [rax]
	mov	rdi, qword ptr [rcx]
	mov	qword ptr [rbp - 96], rax 
	call	_ZSt7forwardISt14default_deleteIN5Botan7AES_192EEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rdi, qword ptr [rbp - 96] 
	mov	rsi, rax
	call	_ZNSt14default_deleteIN5Botan11BlockCipherEEC2INS0_7AES_192EvEERKS_IT_E
	mov	r8d, 892308074
	mov	r9d, 1025178027
	mov	r10b, 1
	xor	r11d, r11d
	mov	ebx, dword ptr [x.420]
	mov	r14d, dword ptr [y.421]
	sub	r11d, 1
	mov	r15d, ebx
	add	r15d, r11d
	imul	ebx, r15d
	and	ebx, 1
	cmp	ebx, 0
	sete	r12b
	cmp	r14d, 10
	setl	r13b
	mov	al, r12b
	xor	al, -1
	mov	cl, r13b
	xor	cl, -1
	xor	r10b, 0
	mov	dl, al
	and	dl, 0
	and	r12b, r10b
	mov	sil, cl
	and	sil, 0
	and	r13b, r10b
	or	dl, r12b
	or	sil, r13b
	xor	dl, sil
	or	al, cl
	xor	al, -1
	or	r10b, 0
	and	al, r10b
	or	dl, al
	test	dl, 1
	cmovne	r8d, r9d
	mov	dword ptr [rbp - 48], r8d
	jmp	.LBB232_7
.LBB232_5:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB232_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rdx
	mov	rsi, qword ptr [rbp - 64] 
	mov	qword ptr [rcx], rsi
	mov	rax, qword ptr [rax]
	mov	rdi, qword ptr [rcx]
	mov	qword ptr [rbp - 104], rax 
	call	_ZSt7forwardISt14default_deleteIN5Botan7AES_192EEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rdi, qword ptr [rbp - 104] 
	mov	rsi, rax
	call	_ZNSt14default_deleteIN5Botan11BlockCipherEEC2INS0_7AES_192EvEERKS_IT_E
	mov	dword ptr [rbp - 48], -105709473
.LBB232_7:                              
	jmp	.LBB232_1
.Lfunc_end232:
	.size	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan11BlockCipherEELb1EEC2IS0_INS1_7AES_192EEEEOT_, .Lfunc_end232-_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan11BlockCipherEELb1EEC2IS0_INS1_7AES_192EEEEOT_

	.section	.text._ZNSt14default_deleteIN5Botan11BlockCipherEEC2INS0_7AES_192EvEERKS_IT_E,"axG",@progbits,_ZNSt14default_deleteIN5Botan11BlockCipherEEC2INS0_7AES_192EvEERKS_IT_E,comdat
	.weak	_ZNSt14default_deleteIN5Botan11BlockCipherEEC2INS0_7AES_192EvEERKS_IT_E 
	.p2align	4, 0x90
	.type	_ZNSt14default_deleteIN5Botan11BlockCipherEEC2INS0_7AES_192EvEERKS_IT_E,@function
_ZNSt14default_deleteIN5Botan11BlockCipherEEC2INS0_7AES_192EvEERKS_IT_E: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	pop	rbp
	ret
.Lfunc_end233:
	.size	_ZNSt14default_deleteIN5Botan11BlockCipherEEC2INS0_7AES_192EvEERKS_IT_E, .Lfunc_end233-_ZNSt14default_deleteIN5Botan11BlockCipherEEC2INS0_7AES_192EvEERKS_IT_E

	.section	.text._ZNKSt14default_deleteIN5Botan7AES_192EEclEPS1_,"axG",@progbits,_ZNKSt14default_deleteIN5Botan7AES_192EEclEPS1_,comdat
	.weak	_ZNKSt14default_deleteIN5Botan7AES_192EEclEPS1_ 
	.p2align	4, 0x90
	.type	_ZNKSt14default_deleteIN5Botan7AES_192EEclEPS1_,@function
_ZNKSt14default_deleteIN5Botan7AES_192EEclEPS1_: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 72
	mov	eax, dword ptr [x.424]
	mov	ecx, dword ptr [y.425]
	mov	edx, eax
	sub	edx, 2049756581
	sub	edx, 1
	add	edx, 2049756581
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 58], r8b
	cmp	ecx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 57], r8b
	mov	dword ptr [rbp - 64], -669889691
	mov	qword ptr [rbp - 72], rdi 
	mov	qword ptr [rbp - 80], rsi 
.LBB234_1:                              
	mov	eax, dword ptr [rbp - 64]
	mov	ecx, eax
	sub	ecx, -1710803774
	mov	dword ptr [rbp - 84], eax 
	mov	dword ptr [rbp - 88], ecx 
	je	.LBB234_4
	jmp	.LBB234_10
.LBB234_10:                             
	mov	eax, dword ptr [rbp - 84] 
	sub	eax, -701953511
	mov	dword ptr [rbp - 92], eax 
	je	.LBB234_7
	jmp	.LBB234_11
.LBB234_11:                             
	mov	eax, dword ptr [rbp - 84] 
	sub	eax, -669889691
	mov	dword ptr [rbp - 96], eax 
	je	.LBB234_3
	jmp	.LBB234_12
.LBB234_12:                             
	mov	eax, dword ptr [rbp - 84] 
	sub	eax, 1009488124
	mov	dword ptr [rbp - 100], eax 
	je	.LBB234_6
	jmp	.LBB234_13
.LBB234_13:                             
	mov	eax, dword ptr [rbp - 84] 
	sub	eax, 1580396505
	mov	dword ptr [rbp - 104], eax 
	je	.LBB234_5
	jmp	.LBB234_14
.LBB234_14:                             
	mov	eax, dword ptr [rbp - 84] 
	sub	eax, 2042345984
	mov	dword ptr [rbp - 108], eax 
	je	.LBB234_8
	jmp	.LBB234_2
.LBB234_2:                              
	jmp	.LBB234_9
.LBB234_3:                              
	mov	eax, 2042345984
	mov	ecx, 2584163522
	mov	dl, 1
	mov	sil, byte ptr [rbp - 58]
	mov	dil, byte ptr [rbp - 57]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 0
	mov	r10b, r8b
	and	r10b, 0
	and	sil, dl
	mov	r11b, r9b
	and	r11b, 0
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 0
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 64], eax
	jmp	.LBB234_9
.LBB234_4:                              
	mov	eax, 2042345984
	mov	ecx, 1580396505
	mov	dl, 1
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	r8, qword ptr [rbp - 72] 
	mov	qword ptr [rsi], r8
	mov	rsi, qword ptr [rbp - 80] 
	mov	qword ptr [rdi], rsi
	mov	rdi, qword ptr [rdi]
	mov	qword ptr [rbp - 56], rdi
	mov	rdi, qword ptr [rbp - 56]
	cmp	rdi, 0
	sete	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 41], r9b
	mov	r10d, dword ptr [x.424]
	mov	r11d, dword ptr [y.425]
	mov	ebx, r10d
	add	ebx, 1881444912
	sub	ebx, 1
	sub	ebx, 1881444912
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r9b
	cmp	r11d, 10
	setl	r14b
	mov	r15b, r9b
	xor	r15b, -1
	mov	r12b, r14b
	xor	r12b, -1
	xor	dl, 1
	mov	r13b, r15b
	and	r13b, -1
	and	r9b, dl
	mov	sil, r12b
	and	sil, -1
	and	r14b, dl
	or	r13b, r9b
	or	sil, r14b
	xor	r13b, sil
	or	r15b, r12b
	xor	r15b, -1
	or	dl, 1
	and	r15b, dl
	or	r13b, r15b
	test	r13b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 64], eax
	jmp	.LBB234_9
.LBB234_5:                              
	mov	eax, 1009488124
	mov	ecx, 3593013785
	mov	dl, byte ptr [rbp - 41]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 64], eax
	jmp	.LBB234_9
.LBB234_6:                              
	mov	rax, qword ptr [rbp - 56]
	mov	rax, qword ptr [rax]
	mov	rax, qword ptr [rax + 8]
	mov	rdi, qword ptr [rbp - 56]
	call	rax
	mov	dword ptr [rbp - 64], -701953511
	jmp	.LBB234_9
.LBB234_7:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB234_8:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 72] 
	mov	qword ptr [rax], rdx
	mov	rax, qword ptr [rbp - 80] 
	mov	qword ptr [rcx], rax
	mov	dword ptr [rbp - 64], -1710803774
.LBB234_9:                              
	jmp	.LBB234_1
.Lfunc_end234:
	.size	_ZNKSt14default_deleteIN5Botan7AES_192EEclEPS1_, .Lfunc_end234-_ZNKSt14default_deleteIN5Botan7AES_192EEclEPS1_

	.section	.text._ZSt11make_uniqueIN5Botan7AES_256EJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_,"axG",@progbits,_ZSt11make_uniqueIN5Botan7AES_256EJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_,comdat
	.weak	_ZSt11make_uniqueIN5Botan7AES_256EJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_ 
	.p2align	4, 0x90
	.type	_ZSt11make_uniqueIN5Botan7AES_256EJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_,@function
_ZSt11make_uniqueIN5Botan7AES_256EJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_: 
	.cfi_startproc

	push	rbp
.Lcfi487:
	.cfi_def_cfa_offset 16
.Lcfi488:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi489:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 72
.Lcfi490:
	.cfi_offset rbx, -56
.Lcfi491:
	.cfi_offset r12, -48
.Lcfi492:
	.cfi_offset r13, -40
.Lcfi493:
	.cfi_offset r14, -32
.Lcfi494:
	.cfi_offset r15, -24
	mov	rax, rdi
	mov	ecx, dword ptr [x.426]
	mov	edx, dword ptr [y.427]
	mov	esi, ecx
	sub	esi, 747170498
	sub	esi, 1
	add	esi, 747170498
	imul	ecx, esi
	and	ecx, 1
	cmp	ecx, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 42], r8b
	cmp	edx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 41], r8b
	mov	dword ptr [rbp - 48], 1062501100
	mov	qword ptr [rbp - 56], rax 
	mov	qword ptr [rbp - 64], rdi 
.LBB235_1:                              
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -2068713585
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB235_4
	jmp	.LBB235_8
.LBB235_8:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -175559319
	mov	dword ptr [rbp - 76], eax 
	je	.LBB235_6
	jmp	.LBB235_9
.LBB235_9:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1062501100
	mov	dword ptr [rbp - 80], eax 
	je	.LBB235_3
	jmp	.LBB235_10
.LBB235_10:                             
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1187718679
	mov	dword ptr [rbp - 84], eax 
	je	.LBB235_5
	jmp	.LBB235_2
.LBB235_2:                              
	jmp	.LBB235_7
.LBB235_3:                              
	mov	eax, 4119407977
	mov	ecx, 2226253711
	mov	dl, 1
	mov	sil, byte ptr [rbp - 42]
	mov	dil, byte ptr [rbp - 41]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB235_7
.LBB235_4:                              
	mov	eax, 56
	mov	edi, eax
	call	_Znwm
	xor	esi, esi
	mov	ecx, 56
	mov	edx, ecx
	mov	rdi, rax
	mov	qword ptr [rbp - 96], rax 
	call	memset
	mov	rdi, qword ptr [rbp - 96] 
	call	_ZN5Botan7AES_256C2Ev
	mov	rdi, qword ptr [rbp - 64] 
	mov	rsi, qword ptr [rbp - 96] 
	call	_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EEC2IS3_vEEPS1_
	mov	ecx, 4119407977
	mov	r8d, 1187718679
	mov	r9b, 1
	xor	r10d, r10d
	mov	r11d, dword ptr [x.426]
	mov	ebx, dword ptr [y.427]
	sub	r10d, 1
	mov	r14d, r11d
	add	r14d, r10d
	imul	r11d, r14d
	and	r11d, 1
	cmp	r11d, 0
	sete	r15b
	cmp	ebx, 10
	setl	r12b
	mov	r13b, r15b
	xor	r13b, -1
	mov	al, r12b
	xor	al, -1
	xor	r9b, 0
	mov	dl, r13b
	and	dl, 0
	and	r15b, r9b
	mov	sil, al
	and	sil, 0
	and	r12b, r9b
	or	dl, r15b
	or	sil, r12b
	xor	dl, sil
	or	r13b, al
	xor	r13b, -1
	or	r9b, 0
	and	r13b, r9b
	or	dl, r13b
	test	dl, 1
	cmovne	ecx, r8d
	mov	dword ptr [rbp - 48], ecx
	jmp	.LBB235_7
.LBB235_5:
	mov	rax, qword ptr [rbp - 56] 
	add	rsp, 72
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB235_6:                              
	mov	eax, 56
	mov	edi, eax
	call	_Znwm
	xor	esi, esi
	mov	ecx, 56
	mov	edx, ecx
	mov	rdi, rax
	mov	qword ptr [rbp - 104], rax 
	call	memset
	mov	rdi, qword ptr [rbp - 104] 
	call	_ZN5Botan7AES_256C2Ev
	mov	rdi, qword ptr [rbp - 64] 
	mov	rsi, qword ptr [rbp - 104] 
	call	_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EEC2IS3_vEEPS1_
	mov	dword ptr [rbp - 48], -2068713585
.LBB235_7:                              
	jmp	.LBB235_1
.Lfunc_end235:
	.size	_ZSt11make_uniqueIN5Botan7AES_256EJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_, .Lfunc_end235-_ZSt11make_uniqueIN5Botan7AES_256EJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_
	.cfi_endproc

	.section	.text._ZNSt10unique_ptrIN5Botan11BlockCipherESt14default_deleteIS1_EEC2INS0_7AES_256ES2_IS6_EvEEOS_IT_T0_E,"axG",@progbits,_ZNSt10unique_ptrIN5Botan11BlockCipherESt14default_deleteIS1_EEC2INS0_7AES_256ES2_IS6_EvEEOS_IT_T0_E,comdat
	.weak	_ZNSt10unique_ptrIN5Botan11BlockCipherESt14default_deleteIS1_EEC2INS0_7AES_256ES2_IS6_EvEEOS_IT_T0_E 
	.p2align	4, 0x90
	.type	_ZNSt10unique_ptrIN5Botan11BlockCipherESt14default_deleteIS1_EEC2INS0_7AES_256ES2_IS6_EvEEOS_IT_T0_E,@function
_ZNSt10unique_ptrIN5Botan11BlockCipherESt14default_deleteIS1_EEC2INS0_7AES_256ES2_IS6_EvEEOS_IT_T0_E: 
.Lfunc_begin29:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception29

	push	rbp
	mov	rbp, rsp
	sub	rsp, 48
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rdi, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 24], rdi 
	mov	rdi, rsi
	call	_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EE7releaseEv
	mov	rdi, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 32], rax 
	call	_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EE11get_deleterEv
	mov	rdi, rax
	call	_ZSt7forwardISt14default_deleteIN5Botan7AES_256EEEOT_RNSt16remove_referenceIS4_E4typeE
.Ltmp127:
	mov	rdi, qword ptr [rbp - 24] 
	mov	rsi, qword ptr [rbp - 32] 
	mov	rdx, rax
	call	_ZNSt15__uniq_ptr_implIN5Botan11BlockCipherESt14default_deleteIS1_EEC2IS2_INS0_7AES_256EEEEPS1_OT_
.Ltmp128:
	jmp	.LBB236_1
.LBB236_1:
	add	rsp, 48
	pop	rbp
	ret
.LBB236_2:
.Ltmp129:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 36], ecx 
	call	__clang_call_terminate
.Lfunc_end236:
	.size	_ZNSt10unique_ptrIN5Botan11BlockCipherESt14default_deleteIS1_EEC2INS0_7AES_256ES2_IS6_EvEEOS_IT_T0_E, .Lfunc_end236-_ZNSt10unique_ptrIN5Botan11BlockCipherESt14default_deleteIS1_EEC2INS0_7AES_256ES2_IS6_EvEEOS_IT_T0_E
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table236:
.Lexception29:
	.byte	255                     
	.byte	3                       
	.byte	21                      
	.byte	3                       
	.byte	13                      
	.long	.Ltmp127-.Lfunc_begin29 
	.long	.Ltmp128-.Ltmp127       
	.long	.Ltmp129-.Lfunc_begin29 
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EED2Ev,"axG",@progbits,_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EED2Ev,comdat
	.weak	_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EED2Ev 
	.p2align	4, 0x90
	.type	_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EED2Ev,@function
_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EED2Ev: 
.Lfunc_begin30:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception30

	push	rbp
	mov	rbp, rsp
	sub	rsp, 48
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
.Ltmp130:
	mov	qword ptr [rbp - 24], rdi 
	call	_ZNSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EE6_M_ptrEv
.Ltmp131:
	mov	qword ptr [rbp - 32], rax 
	jmp	.LBB237_1
.LBB237_1:
	mov	rax, qword ptr [rbp - 32] 
	mov	qword ptr [rbp - 16], rax
	mov	rcx, qword ptr [rbp - 16]
	cmp	qword ptr [rcx], 0
	je	.LBB237_4

	mov	rdi, qword ptr [rbp - 24] 
	call	_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EE11get_deleterEv
	mov	rdi, qword ptr [rbp - 16]
	mov	rsi, qword ptr [rdi]
.Ltmp132:
	mov	rdi, rax
	call	_ZNKSt14default_deleteIN5Botan7AES_256EEclEPS1_
.Ltmp133:
	jmp	.LBB237_3
.LBB237_3:
	jmp	.LBB237_4
.LBB237_4:
	mov	rax, qword ptr [rbp - 16]
	mov	qword ptr [rax], 0
	add	rsp, 48
	pop	rbp
	ret
.LBB237_5:
.Ltmp134:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 36], ecx 
	call	__clang_call_terminate
.Lfunc_end237:
	.size	_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EED2Ev, .Lfunc_end237-_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table237:
.Lexception30:
	.byte	255                     
	.byte	3                       
	.byte	21                      
	.byte	3                       
	.byte	13                      
	.long	.Ltmp130-.Lfunc_begin30 
	.long	.Ltmp133-.Ltmp130       
	.long	.Ltmp134-.Lfunc_begin30 
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZN5Botan7AES_256C2Ev,"axG",@progbits,_ZN5Botan7AES_256C2Ev,comdat
	.weak	_ZN5Botan7AES_256C2Ev   
	.p2align	4, 0x90
	.type	_ZN5Botan7AES_256C2Ev,@function
_ZN5Botan7AES_256C2Ev:                  

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r12
	push	rbx
	sub	rsp, 64
	xor	eax, eax
	mov	ecx, dword ptr [x.428]
	mov	edx, dword ptr [y.429]
	sub	eax, 1
	mov	esi, ecx
	add	esi, eax
	imul	ecx, esi
	and	ecx, 1
	cmp	ecx, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 34], r8b
	cmp	edx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 33], r8b
	mov	dword ptr [rbp - 40], -1015011664
	mov	qword ptr [rbp - 48], rdi 
.LBB238_1:                              
	mov	eax, dword ptr [rbp - 40]
	mov	ecx, eax
	sub	ecx, -1015011664
	mov	dword ptr [rbp - 52], eax 
	mov	dword ptr [rbp - 56], ecx 
	je	.LBB238_3
	jmp	.LBB238_8
.LBB238_8:                              
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, -382784109
	mov	dword ptr [rbp - 60], eax 
	je	.LBB238_5
	jmp	.LBB238_9
.LBB238_9:                              
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, 90942709
	mov	dword ptr [rbp - 64], eax 
	je	.LBB238_6
	jmp	.LBB238_10
.LBB238_10:                             
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, 260862670
	mov	dword ptr [rbp - 68], eax 
	je	.LBB238_4
	jmp	.LBB238_2
.LBB238_2:                              
	jmp	.LBB238_7
.LBB238_3:                              
	mov	eax, 90942709
	mov	ecx, 260862670
	mov	dl, 1
	mov	sil, byte ptr [rbp - 34]
	mov	dil, byte ptr [rbp - 33]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 40], eax
	jmp	.LBB238_7
.LBB238_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 48] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdx, rax
	mov	rdi, rdx
	mov	qword ptr [rbp - 80], rax 
	call	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEC2Ev
	movabs	rax, _ZTVN5Botan7AES_256E
	add	rax, 16
	mov	rcx, qword ptr [rbp - 80] 
	mov	qword ptr [rcx], rax
	add	rcx, 8
	mov	rdi, rcx
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEC2Ev
	mov	rax, qword ptr [rbp - 80] 
	add	rax, 32
	mov	rdi, rax
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEC2Ev
	mov	esi, 90942709
	mov	r8d, 3912183187
	xor	r9d, r9d
	mov	r10d, dword ptr [x.428]
	mov	r11d, dword ptr [y.429]
	sub	r9d, 1
	mov	ebx, r10d
	add	ebx, r9d
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r14b
	cmp	r11d, 10
	setl	r15b
	mov	r12b, r14b
	and	r12b, r15b
	xor	r14b, r15b
	or	r12b, r14b
	test	r12b, 1
	cmovne	esi, r8d
	mov	dword ptr [rbp - 40], esi
	jmp	.LBB238_7
.LBB238_5:
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB238_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 48] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdx, rax
	mov	rdi, rdx
	mov	qword ptr [rbp - 88], rax 
	call	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEC2Ev
	movabs	rax, _ZTVN5Botan7AES_256E
	add	rax, 16
	mov	rcx, qword ptr [rbp - 88] 
	mov	qword ptr [rcx], rax
	add	rcx, 8
	mov	rdi, rcx
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEC2Ev
	mov	rax, qword ptr [rbp - 88] 
	add	rax, 32
	mov	rdi, rax
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEC2Ev
	mov	dword ptr [rbp - 40], 260862670
.LBB238_7:                              
	jmp	.LBB238_1
.Lfunc_end238:
	.size	_ZN5Botan7AES_256C2Ev, .Lfunc_end238-_ZN5Botan7AES_256C2Ev

	.section	.text._ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EEC2IS3_vEEPS1_,"axG",@progbits,_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EEC2IS3_vEEPS1_,comdat
	.weak	_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EEC2IS3_vEEPS1_ 
	.p2align	4, 0x90
	.type	_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EEC2IS3_vEEPS1_,@function
_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EEC2IS3_vEEPS1_: 
.Lfunc_begin31:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception31

	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rdi, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rbp - 16]
.Ltmp135:
	call	_ZNSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EEC2EPS1_
.Ltmp136:
	jmp	.LBB239_1
.LBB239_1:
	add	rsp, 32
	pop	rbp
	ret
.LBB239_2:
.Ltmp137:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 20], ecx 
	call	__clang_call_terminate
.Lfunc_end239:
	.size	_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EEC2IS3_vEEPS1_, .Lfunc_end239-_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EEC2IS3_vEEPS1_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table239:
.Lexception31:
	.byte	255                     
	.byte	3                       
	.byte	21                      
	.byte	3                       
	.byte	13                      
	.long	.Ltmp135-.Lfunc_begin31 
	.long	.Ltmp136-.Ltmp135       
	.long	.Ltmp137-.Lfunc_begin31 
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEC2Ev,"axG",@progbits,_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEC2Ev,comdat
	.weak	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEC2Ev 
	.p2align	4, 0x90
	.type	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEC2Ev,@function
_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEC2Ev: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	rax, rdi
	mov	qword ptr [rbp - 16], rdi 
	mov	rdi, rax
	call	_ZN5Botan11BlockCipherC2Ev
	movabs	rax, _ZTVN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEE
	add	rax, 16
	mov	rdi, qword ptr [rbp - 16] 
	mov	qword ptr [rdi], rax
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end240:
	.size	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEC2Ev, .Lfunc_end240-_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEC2Ev

	.section	.text._ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEED2Ev,"axG",@progbits,_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEED2Ev,comdat
	.weak	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEED2Ev 
	.p2align	4, 0x90
	.type	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEED2Ev,@function
_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEED2Ev: 

	push	rbp
	mov	rbp, rsp
	push	r14
	push	rbx
	sub	rsp, 48
	xor	eax, eax
	mov	ecx, dword ptr [x.432]
	mov	edx, dword ptr [y.433]
	sub	eax, 1
	mov	esi, ecx
	add	esi, eax
	imul	ecx, esi
	and	ecx, 1
	cmp	ecx, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 18], r8b
	cmp	edx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 17], r8b
	mov	dword ptr [rbp - 24], 172797322
	mov	qword ptr [rbp - 32], rdi 
.LBB241_1:                              
	mov	eax, dword ptr [rbp - 24]
	mov	ecx, eax
	sub	ecx, -1017361931
	mov	dword ptr [rbp - 36], eax 
	mov	dword ptr [rbp - 40], ecx 
	je	.LBB241_5
	jmp	.LBB241_8
.LBB241_8:                              
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, -40956619
	mov	dword ptr [rbp - 44], eax 
	je	.LBB241_4
	jmp	.LBB241_9
.LBB241_9:                              
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, 172797322
	mov	dword ptr [rbp - 48], eax 
	je	.LBB241_3
	jmp	.LBB241_10
.LBB241_10:                             
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, 560649272
	mov	dword ptr [rbp - 52], eax 
	je	.LBB241_6
	jmp	.LBB241_2
.LBB241_2:                              
	jmp	.LBB241_7
.LBB241_3:                              
	mov	eax, 560649272
	mov	ecx, 4254010677
	mov	dl, 1
	mov	sil, byte ptr [rbp - 18]
	mov	dil, byte ptr [rbp - 17]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 24], eax
	jmp	.LBB241_7
.LBB241_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 32] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	call	_ZN5Botan11BlockCipherD2Ev
	mov	edx, 560649272
	mov	esi, 3277605365
	mov	r8d, dword ptr [x.432]
	mov	r9d, dword ptr [y.433]
	mov	r10d, r8d
	sub	r10d, 50366121
	sub	r10d, 1
	add	r10d, 50366121
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	edx, esi
	mov	dword ptr [rbp - 24], edx
	jmp	.LBB241_7
.LBB241_5:
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
.LBB241_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 32] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	call	_ZN5Botan11BlockCipherD2Ev
	mov	dword ptr [rbp - 24], -40956619
.LBB241_7:                              
	jmp	.LBB241_1
.Lfunc_end241:
	.size	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEED2Ev, .Lfunc_end241-_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEED2Ev

	.section	.text._ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEED0Ev,"axG",@progbits,_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEED0Ev,comdat
	.weak	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEED0Ev 
	.p2align	4, 0x90
	.type	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEED0Ev,@function
_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEED0Ev: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	ud2
	mov	dword ptr [rbp - 12], 1753399001
.LBB242_1:                              
	mov	eax, dword ptr [rbp - 12]
	sub	eax, 1753399001
	mov	dword ptr [rbp - 16], eax 
	je	.LBB242_3
	jmp	.LBB242_2
.LBB242_2:                              
	jmp	.LBB242_4
.LBB242_3:
	pop	rbp
	ret
.LBB242_4:                              
	jmp	.LBB242_1
.Lfunc_end242:
	.size	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEED0Ev, .Lfunc_end242-_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEED0Ev

	.section	.text._ZNSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EEC2EPS1_,"axG",@progbits,_ZNSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EEC2EPS1_,comdat
	.weak	_ZNSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EEC2EPS1_ 
	.p2align	4, 0x90
	.type	_ZNSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EEC2EPS1_,@function
_ZNSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EEC2EPS1_: 
	.cfi_startproc

	push	rbp
.Lcfi495:
	.cfi_def_cfa_offset 16
.Lcfi496:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi497:
	.cfi_def_cfa_register rbp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rsi, qword ptr [rbp - 8]
	mov	rdi, rsi
	mov	qword ptr [rbp - 24], rsi 
	call	_ZNSt5tupleIJPN5Botan7AES_256ESt14default_deleteIS1_EEEC2IS2_S4_Lb1EEEv
	mov	rsi, qword ptr [rbp - 16]
	mov	rdi, qword ptr [rbp - 24] 
	mov	qword ptr [rbp - 32], rsi 
	call	_ZNSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EE6_M_ptrEv
	mov	rsi, qword ptr [rbp - 32] 
	mov	qword ptr [rax], rsi
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end243:
	.size	_ZNSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EEC2EPS1_, .Lfunc_end243-_ZNSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EEC2EPS1_
	.cfi_endproc

	.section	.text._ZNSt5tupleIJPN5Botan7AES_256ESt14default_deleteIS1_EEEC2IS2_S4_Lb1EEEv,"axG",@progbits,_ZNSt5tupleIJPN5Botan7AES_256ESt14default_deleteIS1_EEEC2IS2_S4_Lb1EEEv,comdat
	.weak	_ZNSt5tupleIJPN5Botan7AES_256ESt14default_deleteIS1_EEEC2IS2_S4_Lb1EEEv 
	.p2align	4, 0x90
	.type	_ZNSt5tupleIJPN5Botan7AES_256ESt14default_deleteIS1_EEEC2IS2_S4_Lb1EEEv,@function
_ZNSt5tupleIJPN5Botan7AES_256ESt14default_deleteIS1_EEEC2IS2_S4_Lb1EEEv: 
	.cfi_startproc

	push	rbp
.Lcfi498:
	.cfi_def_cfa_offset 16
.Lcfi499:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi500:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 40
.Lcfi501:
	.cfi_offset rbx, -56
.Lcfi502:
	.cfi_offset r12, -48
.Lcfi503:
	.cfi_offset r13, -40
.Lcfi504:
	.cfi_offset r14, -32
.Lcfi505:
	.cfi_offset r15, -24
	mov	eax, dword ptr [x.438]
	mov	ecx, dword ptr [y.439]
	mov	edx, eax
	sub	edx, -95238034
	sub	edx, 1
	add	edx, -95238034
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 42], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 41], sil
	mov	dword ptr [rbp - 48], 881661453
	mov	qword ptr [rbp - 56], rdi 
.LBB244_1:                              
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -1519323227
	mov	dword ptr [rbp - 60], eax 
	mov	dword ptr [rbp - 64], ecx 
	je	.LBB244_6
	jmp	.LBB244_8
.LBB244_8:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, -1398995674
	mov	dword ptr [rbp - 68], eax 
	je	.LBB244_5
	jmp	.LBB244_9
.LBB244_9:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 881661453
	mov	dword ptr [rbp - 72], eax 
	je	.LBB244_3
	jmp	.LBB244_10
.LBB244_10:                             
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 1776571269
	mov	dword ptr [rbp - 76], eax 
	je	.LBB244_4
	jmp	.LBB244_2
.LBB244_2:                              
	jmp	.LBB244_7
.LBB244_3:                              
	mov	eax, 2775644069
	mov	ecx, 1776571269
	mov	dl, byte ptr [rbp - 42]
	mov	sil, byte ptr [rbp - 41]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB244_7
.LBB244_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	call	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEEC2Ev
	mov	edx, 2775644069
	mov	esi, 2895971622
	mov	r8b, 1
	mov	r9d, dword ptr [x.438]
	mov	r10d, dword ptr [y.439]
	mov	r11d, r9d
	add	r11d, -145394478
	sub	r11d, 1
	sub	r11d, -145394478
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	bl
	cmp	r10d, 10
	setl	r14b
	mov	r15b, bl
	xor	r15b, -1
	mov	r12b, r14b
	xor	r12b, -1
	xor	r8b, 0
	mov	r13b, r15b
	and	r13b, 0
	and	bl, r8b
	mov	al, r12b
	and	al, 0
	and	r14b, r8b
	or	r13b, bl
	or	al, r14b
	xor	r13b, al
	or	r15b, r12b
	xor	r15b, -1
	or	r8b, 0
	and	r15b, r8b
	or	r13b, r15b
	test	r13b, 1
	cmovne	edx, esi
	mov	dword ptr [rbp - 48], edx
	jmp	.LBB244_7
.LBB244_5:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB244_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	call	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEEC2Ev
	mov	dword ptr [rbp - 48], 1776571269
.LBB244_7:                              
	jmp	.LBB244_1
.Lfunc_end244:
	.size	_ZNSt5tupleIJPN5Botan7AES_256ESt14default_deleteIS1_EEEC2IS2_S4_Lb1EEEv, .Lfunc_end244-_ZNSt5tupleIJPN5Botan7AES_256ESt14default_deleteIS1_EEEC2IS2_S4_Lb1EEEv
	.cfi_endproc

	.section	.text._ZNSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EE6_M_ptrEv,"axG",@progbits,_ZNSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EE6_M_ptrEv,comdat
	.weak	_ZNSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EE6_M_ptrEv 
	.p2align	4, 0x90
	.type	_ZNSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EE6_M_ptrEv,@function
_ZNSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EE6_M_ptrEv: 

	push	rbp
	mov	rbp, rsp
	push	r14
	push	rbx
	sub	rsp, 64
	mov	eax, dword ptr [x.440]
	mov	ecx, dword ptr [y.441]
	mov	edx, eax
	sub	edx, -1398151996
	sub	edx, 1
	add	edx, -1398151996
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 26], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 25], sil
	mov	dword ptr [rbp - 32], 115558654
	mov	qword ptr [rbp - 40], rdi 
.LBB245_1:                              
	mov	eax, dword ptr [rbp - 32]
	mov	ecx, eax
	sub	ecx, -803516151
	mov	dword ptr [rbp - 44], eax 
	mov	dword ptr [rbp - 48], ecx 
	je	.LBB245_4
	jmp	.LBB245_8
.LBB245_8:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, -529601711
	mov	dword ptr [rbp - 52], eax 
	je	.LBB245_5
	jmp	.LBB245_9
.LBB245_9:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 115558654
	mov	dword ptr [rbp - 56], eax 
	je	.LBB245_3
	jmp	.LBB245_10
.LBB245_10:                             
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 755010045
	mov	dword ptr [rbp - 60], eax 
	je	.LBB245_6
	jmp	.LBB245_2
.LBB245_2:                              
	jmp	.LBB245_7
.LBB245_3:                              
	mov	eax, 755010045
	mov	ecx, 3491451145
	mov	dl, byte ptr [rbp - 26]
	mov	sil, byte ptr [rbp - 25]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB245_7
.LBB245_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	rdi, qword ptr [rax]
	call	_ZSt3getILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
	mov	edx, 755010045
	mov	esi, 3765365585
	mov	qword ptr [rbp - 24], rax
	mov	r8d, dword ptr [x.440]
	mov	r9d, dword ptr [y.441]
	mov	r10d, r8d
	add	r10d, 1705319351
	sub	r10d, 1
	sub	r10d, 1705319351
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	edx, esi
	mov	dword ptr [rbp - 32], edx
	jmp	.LBB245_7
.LBB245_5:
	mov	rax, qword ptr [rbp - 24]
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
.LBB245_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	rdi, qword ptr [rax]
	call	_ZSt3getILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
	mov	dword ptr [rbp - 32], -803516151
	mov	qword ptr [rbp - 72], rax 
.LBB245_7:                              
	jmp	.LBB245_1
.Lfunc_end245:
	.size	_ZNSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EE6_M_ptrEv, .Lfunc_end245-_ZNSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EE6_M_ptrEv

	.section	.text._ZNSt11_Tuple_implILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEEC2Ev,"axG",@progbits,_ZNSt11_Tuple_implILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEEC2Ev,comdat
	.weak	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEEC2Ev 
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEEC2Ev,@function
_ZNSt11_Tuple_implILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEEC2Ev: 
	.cfi_startproc

	push	rbp
.Lcfi506:
	.cfi_def_cfa_offset 16
.Lcfi507:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi508:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 56
.Lcfi509:
	.cfi_offset rbx, -40
.Lcfi510:
	.cfi_offset r14, -32
.Lcfi511:
	.cfi_offset r15, -24
	mov	eax, dword ptr [x.442]
	mov	ecx, dword ptr [y.443]
	mov	edx, eax
	sub	edx, -423382878
	sub	edx, 1
	add	edx, -423382878
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 26], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 25], sil
	mov	dword ptr [rbp - 32], -1957037626
	mov	qword ptr [rbp - 40], rdi 
.LBB246_1:                              
	mov	eax, dword ptr [rbp - 32]
	mov	ecx, eax
	sub	ecx, -1957037626
	mov	dword ptr [rbp - 44], eax 
	mov	dword ptr [rbp - 48], ecx 
	je	.LBB246_3
	jmp	.LBB246_8
.LBB246_8:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, -835214215
	mov	dword ptr [rbp - 52], eax 
	je	.LBB246_5
	jmp	.LBB246_9
.LBB246_9:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, -549485186
	mov	dword ptr [rbp - 56], eax 
	je	.LBB246_6
	jmp	.LBB246_10
.LBB246_10:                             
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, -33227937
	mov	dword ptr [rbp - 60], eax 
	je	.LBB246_4
	jmp	.LBB246_2
.LBB246_2:                              
	jmp	.LBB246_7
.LBB246_3:                              
	mov	eax, 3745482110
	mov	ecx, 4261739359
	mov	dl, 1
	mov	sil, byte ptr [rbp - 26]
	mov	dil, byte ptr [rbp - 25]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB246_7
.LBB246_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdx, rax
	mov	rdi, rdx
	mov	qword ptr [rbp - 72], rax 
	call	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_256EEEEC2Ev
	mov	rax, qword ptr [rbp - 72] 
	mov	rdi, rax
	call	_ZNSt10_Head_baseILm0EPN5Botan7AES_256ELb0EEC2Ev
	mov	esi, 3745482110
	mov	r8d, 3459753081
	mov	r9d, dword ptr [x.442]
	mov	r10d, dword ptr [y.443]
	mov	r11d, r9d
	sub	r11d, -1604110273
	sub	r11d, 1
	add	r11d, -1604110273
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	bl
	cmp	r10d, 10
	setl	r14b
	mov	r15b, bl
	and	r15b, r14b
	xor	bl, r14b
	or	r15b, bl
	test	r15b, 1
	cmovne	esi, r8d
	mov	dword ptr [rbp - 32], esi
	jmp	.LBB246_7
.LBB246_5:
	lea	rsp, [rbp - 24]
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB246_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdx, rax
	mov	rdi, rdx
	mov	qword ptr [rbp - 80], rax 
	call	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_256EEEEC2Ev
	mov	rax, qword ptr [rbp - 80] 
	mov	rdi, rax
	call	_ZNSt10_Head_baseILm0EPN5Botan7AES_256ELb0EEC2Ev
	mov	dword ptr [rbp - 32], -33227937
.LBB246_7:                              
	jmp	.LBB246_1
.Lfunc_end246:
	.size	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEEC2Ev, .Lfunc_end246-_ZNSt11_Tuple_implILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEEC2Ev
	.cfi_endproc

	.section	.text._ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_256EEEEC2Ev,"axG",@progbits,_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_256EEEEC2Ev,comdat
	.weak	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_256EEEEC2Ev 
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_256EEEEC2Ev,@function
_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_256EEEEC2Ev: 
	.cfi_startproc

	push	rbp
.Lcfi512:
	.cfi_def_cfa_offset 16
.Lcfi513:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi514:
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_256EELb1EEC2Ev
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end247:
	.size	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_256EEEEC2Ev, .Lfunc_end247-_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_256EEEEC2Ev
	.cfi_endproc

	.section	.text._ZNSt10_Head_baseILm0EPN5Botan7AES_256ELb0EEC2Ev,"axG",@progbits,_ZNSt10_Head_baseILm0EPN5Botan7AES_256ELb0EEC2Ev,comdat
	.weak	_ZNSt10_Head_baseILm0EPN5Botan7AES_256ELb0EEC2Ev 
	.p2align	4, 0x90
	.type	_ZNSt10_Head_baseILm0EPN5Botan7AES_256ELb0EEC2Ev,@function
_ZNSt10_Head_baseILm0EPN5Botan7AES_256ELb0EEC2Ev: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	qword ptr [rdi], 0
	pop	rbp
	ret
.Lfunc_end248:
	.size	_ZNSt10_Head_baseILm0EPN5Botan7AES_256ELb0EEC2Ev, .Lfunc_end248-_ZNSt10_Head_baseILm0EPN5Botan7AES_256ELb0EEC2Ev

	.section	.text._ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_256EELb1EEC2Ev,"axG",@progbits,_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_256EELb1EEC2Ev,comdat
	.weak	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_256EELb1EEC2Ev 
	.p2align	4, 0x90
	.type	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_256EELb1EEC2Ev,@function
_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_256EELb1EEC2Ev: 

	push	rbp
	mov	rbp, rsp
	push	r14
	push	rbx
	sub	rsp, 48
	mov	eax, dword ptr [x.448]
	mov	ecx, dword ptr [y.449]
	mov	edx, eax
	add	edx, -1019702559
	sub	edx, 1
	sub	edx, -1019702559
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 18], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 17], sil
	mov	dword ptr [rbp - 24], -1203957352
	mov	qword ptr [rbp - 32], rdi 
.LBB249_1:                              
	mov	eax, dword ptr [rbp - 24]
	mov	ecx, eax
	sub	ecx, -1203957352
	mov	dword ptr [rbp - 36], eax 
	mov	dword ptr [rbp - 40], ecx 
	je	.LBB249_3
	jmp	.LBB249_8
.LBB249_8:                              
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, -985797925
	mov	dword ptr [rbp - 44], eax 
	je	.LBB249_5
	jmp	.LBB249_9
.LBB249_9:                              
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, 751599351
	mov	dword ptr [rbp - 48], eax 
	je	.LBB249_6
	jmp	.LBB249_10
.LBB249_10:                             
	mov	eax, dword ptr [rbp - 36] 
	sub	eax, 2027171110
	mov	dword ptr [rbp - 52], eax 
	je	.LBB249_4
	jmp	.LBB249_2
.LBB249_2:                              
	jmp	.LBB249_7
.LBB249_3:                              
	mov	eax, 751599351
	mov	ecx, 2027171110
	mov	dl, byte ptr [rbp - 18]
	mov	sil, byte ptr [rbp - 17]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 24], eax
	jmp	.LBB249_7
.LBB249_4:                              
	mov	eax, 751599351
	mov	ecx, 3309169371
	xor	edx, edx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 32] 
	mov	qword ptr [rsi], rdi
	mov	r8d, dword ptr [x.448]
	mov	r9d, dword ptr [y.449]
	sub	edx, 1
	mov	r10d, r8d
	add	r10d, edx
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 24], eax
	jmp	.LBB249_7
.LBB249_5:
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
.LBB249_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 32] 
	mov	qword ptr [rax], rcx
	mov	dword ptr [rbp - 24], 2027171110
.LBB249_7:                              
	jmp	.LBB249_1
.Lfunc_end249:
	.size	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_256EELb1EEC2Ev, .Lfunc_end249-_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_256EELb1EEC2Ev

	.section	.text._ZSt3getILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,"axG",@progbits,_ZSt3getILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,comdat
	.weak	_ZSt3getILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_ 
	.p2align	4, 0x90
	.type	_ZSt3getILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,@function
_ZSt3getILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 56
	mov	eax, dword ptr [x.450]
	mov	ecx, dword ptr [y.451]
	mov	edx, eax
	sub	edx, -1381654258
	sub	edx, 1
	add	edx, -1381654258
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 50], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 49], sil
	mov	dword ptr [rbp - 56], 1474385967
	mov	qword ptr [rbp - 64], rdi 
.LBB250_1:                              
	mov	eax, dword ptr [rbp - 56]
	mov	ecx, eax
	sub	ecx, -1597053229
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB250_6
	jmp	.LBB250_8
.LBB250_8:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -837443264
	mov	dword ptr [rbp - 76], eax 
	je	.LBB250_4
	jmp	.LBB250_9
.LBB250_9:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1474385967
	mov	dword ptr [rbp - 80], eax 
	je	.LBB250_3
	jmp	.LBB250_10
.LBB250_10:                             
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1504455227
	mov	dword ptr [rbp - 84], eax 
	je	.LBB250_5
	jmp	.LBB250_2
.LBB250_2:                              
	jmp	.LBB250_7
.LBB250_3:                              
	mov	eax, 2697914067
	mov	ecx, 3457524032
	mov	dl, 1
	mov	sil, byte ptr [rbp - 50]
	mov	dil, byte ptr [rbp - 49]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 0
	mov	r10b, r8b
	and	r10b, 0
	and	sil, dl
	mov	r11b, r9b
	and	r11b, 0
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 0
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB250_7
.LBB250_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	call	_ZSt12__get_helperILm0EPN5Botan7AES_256EJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE
	mov	edx, 2697914067
	mov	esi, 1504455227
	mov	r8b, 1
	mov	qword ptr [rbp - 48], rax
	mov	r9d, dword ptr [x.450]
	mov	r10d, dword ptr [y.451]
	mov	r11d, r9d
	add	r11d, -1822453066
	sub	r11d, 1
	sub	r11d, -1822453066
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	bl
	cmp	r10d, 10
	setl	r14b
	mov	r15b, bl
	xor	r15b, -1
	mov	r12b, r14b
	xor	r12b, -1
	xor	r8b, 0
	mov	r13b, r15b
	and	r13b, 0
	and	bl, r8b
	mov	al, r12b
	and	al, 0
	and	r14b, r8b
	or	r13b, bl
	or	al, r14b
	xor	r13b, al
	or	r15b, r12b
	xor	r15b, -1
	or	r8b, 0
	and	r15b, r8b
	or	r13b, r15b
	test	r13b, 1
	cmovne	edx, esi
	mov	dword ptr [rbp - 56], edx
	jmp	.LBB250_7
.LBB250_5:
	mov	rax, qword ptr [rbp - 48]
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB250_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	call	_ZSt12__get_helperILm0EPN5Botan7AES_256EJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE
	mov	dword ptr [rbp - 56], -837443264
	mov	qword ptr [rbp - 96], rax 
.LBB250_7:                              
	jmp	.LBB250_1
.Lfunc_end250:
	.size	_ZSt3getILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_, .Lfunc_end250-_ZSt3getILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_

	.section	.text._ZSt12__get_helperILm0EPN5Botan7AES_256EJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE,"axG",@progbits,_ZSt12__get_helperILm0EPN5Botan7AES_256EJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE,comdat
	.weak	_ZSt12__get_helperILm0EPN5Botan7AES_256EJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE 
	.p2align	4, 0x90
	.type	_ZSt12__get_helperILm0EPN5Botan7AES_256EJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE,@function
_ZSt12__get_helperILm0EPN5Botan7AES_256EJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEE7_M_headERS5_
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end251:
	.size	_ZSt12__get_helperILm0EPN5Botan7AES_256EJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE, .Lfunc_end251-_ZSt12__get_helperILm0EPN5Botan7AES_256EJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE

	.section	.text._ZNSt11_Tuple_implILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEE7_M_headERS5_,"axG",@progbits,_ZNSt11_Tuple_implILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEE7_M_headERS5_,comdat
	.weak	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEE7_M_headERS5_ 
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEE7_M_headERS5_,@function
_ZNSt11_Tuple_implILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEE7_M_headERS5_: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNSt10_Head_baseILm0EPN5Botan7AES_256ELb0EE7_M_headERS3_
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end252:
	.size	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEE7_M_headERS5_, .Lfunc_end252-_ZNSt11_Tuple_implILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEE7_M_headERS5_

	.section	.text._ZNSt10_Head_baseILm0EPN5Botan7AES_256ELb0EE7_M_headERS3_,"axG",@progbits,_ZNSt10_Head_baseILm0EPN5Botan7AES_256ELb0EE7_M_headERS3_,comdat
	.weak	_ZNSt10_Head_baseILm0EPN5Botan7AES_256ELb0EE7_M_headERS3_ 
	.p2align	4, 0x90
	.type	_ZNSt10_Head_baseILm0EPN5Botan7AES_256ELb0EE7_M_headERS3_,@function
_ZNSt10_Head_baseILm0EPN5Botan7AES_256ELb0EE7_M_headERS3_: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 56
	mov	eax, dword ptr [x.456]
	mov	ecx, dword ptr [y.457]
	mov	edx, eax
	add	edx, 1511230899
	sub	edx, 1
	sub	edx, 1511230899
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 50], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 49], sil
	mov	dword ptr [rbp - 56], 1380291318
	mov	qword ptr [rbp - 64], rdi 
.LBB253_1:                              
	mov	eax, dword ptr [rbp - 56]
	mov	ecx, eax
	sub	ecx, 871532586
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB253_5
	jmp	.LBB253_8
.LBB253_8:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1351109625
	mov	dword ptr [rbp - 76], eax 
	je	.LBB253_4
	jmp	.LBB253_9
.LBB253_9:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1380291318
	mov	dword ptr [rbp - 80], eax 
	je	.LBB253_3
	jmp	.LBB253_10
.LBB253_10:                             
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1789684887
	mov	dword ptr [rbp - 84], eax 
	je	.LBB253_6
	jmp	.LBB253_2
.LBB253_2:                              
	jmp	.LBB253_7
.LBB253_3:                              
	mov	eax, 1789684887
	mov	ecx, 1351109625
	mov	dl, byte ptr [rbp - 50]
	mov	sil, byte ptr [rbp - 49]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB253_7
.LBB253_4:                              
	mov	eax, 1789684887
	mov	ecx, 871532586
	mov	dl, 1
	xor	esi, esi
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	r8, qword ptr [rbp - 64] 
	mov	qword ptr [rdi], r8
	mov	rdi, qword ptr [rdi]
	mov	qword ptr [rbp - 48], rdi
	mov	r9d, dword ptr [x.456]
	mov	r10d, dword ptr [y.457]
	sub	esi, 1
	mov	r11d, r9d
	add	r11d, esi
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	bl
	cmp	r10d, 10
	setl	r14b
	mov	r15b, bl
	xor	r15b, -1
	mov	r12b, r14b
	xor	r12b, -1
	xor	dl, 1
	mov	r13b, r15b
	and	r13b, -1
	and	bl, dl
	mov	sil, r12b
	and	sil, -1
	and	r14b, dl
	or	r13b, bl
	or	sil, r14b
	xor	r13b, sil
	or	r15b, r12b
	xor	r15b, -1
	or	dl, 1
	and	r15b, dl
	or	r13b, r15b
	test	r13b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB253_7
.LBB253_5:
	mov	rax, qword ptr [rbp - 48]
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB253_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rcx
	mov	dword ptr [rbp - 56], 1351109625
.LBB253_7:                              
	jmp	.LBB253_1
.Lfunc_end253:
	.size	_ZNSt10_Head_baseILm0EPN5Botan7AES_256ELb0EE7_M_headERS3_, .Lfunc_end253-_ZNSt10_Head_baseILm0EPN5Botan7AES_256ELb0EE7_M_headERS3_

	.section	.text._ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EE7releaseEv,"axG",@progbits,_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EE7releaseEv,comdat
	.weak	_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EE7releaseEv 
	.p2align	4, 0x90
	.type	_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EE7releaseEv,@function
_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EE7releaseEv: 
.Lfunc_begin32:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception32

	push	rbp
	mov	rbp, rsp
	sub	rsp, 48
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	qword ptr [rbp - 24], rdi 
	call	_ZNKSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EE3getEv
	mov	qword ptr [rbp - 16], rax
.Ltmp138:
	mov	rdi, qword ptr [rbp - 24] 
	call	_ZNSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EE6_M_ptrEv
.Ltmp139:
	mov	qword ptr [rbp - 32], rax 
	jmp	.LBB254_1
.LBB254_1:
	mov	rax, qword ptr [rbp - 32] 
	mov	qword ptr [rax], 0
	mov	rax, qword ptr [rbp - 16]
	add	rsp, 48
	pop	rbp
	ret
.LBB254_2:
.Ltmp140:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 36], ecx 
	call	__clang_call_terminate
.Lfunc_end254:
	.size	_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EE7releaseEv, .Lfunc_end254-_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EE7releaseEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table254:
.Lexception32:
	.byte	255                     
	.byte	3                       
	.byte	21                      
	.byte	3                       
	.byte	13                      
	.long	.Ltmp138-.Lfunc_begin32 
	.long	.Ltmp139-.Ltmp138       
	.long	.Ltmp140-.Lfunc_begin32 
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZSt7forwardISt14default_deleteIN5Botan7AES_256EEEOT_RNSt16remove_referenceIS4_E4typeE,"axG",@progbits,_ZSt7forwardISt14default_deleteIN5Botan7AES_256EEEOT_RNSt16remove_referenceIS4_E4typeE,comdat
	.weak	_ZSt7forwardISt14default_deleteIN5Botan7AES_256EEEOT_RNSt16remove_referenceIS4_E4typeE 
	.p2align	4, 0x90
	.type	_ZSt7forwardISt14default_deleteIN5Botan7AES_256EEEOT_RNSt16remove_referenceIS4_E4typeE,@function
_ZSt7forwardISt14default_deleteIN5Botan7AES_256EEEOT_RNSt16remove_referenceIS4_E4typeE: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	pop	rbp
	ret
.Lfunc_end255:
	.size	_ZSt7forwardISt14default_deleteIN5Botan7AES_256EEEOT_RNSt16remove_referenceIS4_E4typeE, .Lfunc_end255-_ZSt7forwardISt14default_deleteIN5Botan7AES_256EEEOT_RNSt16remove_referenceIS4_E4typeE

	.section	.text._ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EE11get_deleterEv,"axG",@progbits,_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EE11get_deleterEv,comdat
	.weak	_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EE11get_deleterEv 
	.p2align	4, 0x90
	.type	_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EE11get_deleterEv,@function
_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EE11get_deleterEv: 
.Lfunc_begin33:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception33

	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
.Ltmp141:
	call	_ZNSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EE10_M_deleterEv
.Ltmp142:
	mov	qword ptr [rbp - 16], rax 
	jmp	.LBB256_1
.LBB256_1:
	mov	rax, qword ptr [rbp - 16] 
	add	rsp, 32
	pop	rbp
	ret
.LBB256_2:
.Ltmp143:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 20], ecx 
	call	__clang_call_terminate
.Lfunc_end256:
	.size	_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EE11get_deleterEv, .Lfunc_end256-_ZNSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EE11get_deleterEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table256:
.Lexception33:
	.byte	255                     
	.byte	3                       
	.byte	21                      
	.byte	3                       
	.byte	13                      
	.long	.Ltmp141-.Lfunc_begin33 
	.long	.Ltmp142-.Ltmp141       
	.long	.Ltmp143-.Lfunc_begin33 
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZNSt15__uniq_ptr_implIN5Botan11BlockCipherESt14default_deleteIS1_EEC2IS2_INS0_7AES_256EEEEPS1_OT_,"axG",@progbits,_ZNSt15__uniq_ptr_implIN5Botan11BlockCipherESt14default_deleteIS1_EEC2IS2_INS0_7AES_256EEEEPS1_OT_,comdat
	.weak	_ZNSt15__uniq_ptr_implIN5Botan11BlockCipherESt14default_deleteIS1_EEC2IS2_INS0_7AES_256EEEEPS1_OT_ 
	.p2align	4, 0x90
	.type	_ZNSt15__uniq_ptr_implIN5Botan11BlockCipherESt14default_deleteIS1_EEC2IS2_INS0_7AES_256EEEEPS1_OT_,@function
_ZNSt15__uniq_ptr_implIN5Botan11BlockCipherESt14default_deleteIS1_EEC2IS2_INS0_7AES_256EEEEPS1_OT_: 
	.cfi_startproc

	push	rbp
.Lcfi515:
	.cfi_def_cfa_offset 16
.Lcfi516:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi517:
	.cfi_def_cfa_register rbp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	rdi, qword ptr [rbp - 8]
	mov	rdx, qword ptr [rbp - 24]
	mov	qword ptr [rbp - 32], rdi 
	mov	rdi, rdx
	call	_ZSt7forwardISt14default_deleteIN5Botan7AES_256EEEOT_RNSt16remove_referenceIS4_E4typeE
	lea	rsi, [rbp - 16]
	mov	rdi, qword ptr [rbp - 32] 
	mov	rdx, rax
	call	_ZNSt5tupleIJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_S3_INS0_7AES_256EELb1EEEOT_OT0_
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end257:
	.size	_ZNSt15__uniq_ptr_implIN5Botan11BlockCipherESt14default_deleteIS1_EEC2IS2_INS0_7AES_256EEEEPS1_OT_, .Lfunc_end257-_ZNSt15__uniq_ptr_implIN5Botan11BlockCipherESt14default_deleteIS1_EEC2IS2_INS0_7AES_256EEEEPS1_OT_
	.cfi_endproc

	.section	.text._ZNKSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EE3getEv,"axG",@progbits,_ZNKSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EE3getEv,comdat
	.weak	_ZNKSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EE3getEv 
	.p2align	4, 0x90
	.type	_ZNKSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EE3getEv,@function
_ZNKSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EE3getEv: 
.Lfunc_begin34:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception34

	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
.Ltmp144:
	call	_ZNKSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EE6_M_ptrEv
.Ltmp145:
	mov	qword ptr [rbp - 16], rax 
	jmp	.LBB258_1
.LBB258_1:
	mov	rax, qword ptr [rbp - 16] 
	add	rsp, 32
	pop	rbp
	ret
.LBB258_2:
.Ltmp146:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 20], ecx 
	call	__clang_call_terminate
.Lfunc_end258:
	.size	_ZNKSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EE3getEv, .Lfunc_end258-_ZNKSt10unique_ptrIN5Botan7AES_256ESt14default_deleteIS1_EE3getEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table258:
.Lexception34:
	.byte	255                     
	.byte	3                       
	.byte	21                      
	.byte	3                       
	.byte	13                      
	.long	.Ltmp144-.Lfunc_begin34 
	.long	.Ltmp145-.Ltmp144       
	.long	.Ltmp146-.Lfunc_begin34 
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZNKSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EE6_M_ptrEv,"axG",@progbits,_ZNKSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EE6_M_ptrEv,comdat
	.weak	_ZNKSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EE6_M_ptrEv 
	.p2align	4, 0x90
	.type	_ZNKSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EE6_M_ptrEv,@function
_ZNKSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EE6_M_ptrEv: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZSt3getILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_
	mov	rax, qword ptr [rax]
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end259:
	.size	_ZNKSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EE6_M_ptrEv, .Lfunc_end259-_ZNKSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EE6_M_ptrEv

	.section	.text._ZSt3getILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_,"axG",@progbits,_ZSt3getILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_,comdat
	.weak	_ZSt3getILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_ 
	.p2align	4, 0x90
	.type	_ZSt3getILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_,@function
_ZSt3getILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZSt12__get_helperILm0EPN5Botan7AES_256EJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end260:
	.size	_ZSt3getILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_, .Lfunc_end260-_ZSt3getILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_

	.section	.text._ZSt12__get_helperILm0EPN5Botan7AES_256EJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE,"axG",@progbits,_ZSt12__get_helperILm0EPN5Botan7AES_256EJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE,comdat
	.weak	_ZSt12__get_helperILm0EPN5Botan7AES_256EJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE 
	.p2align	4, 0x90
	.type	_ZSt12__get_helperILm0EPN5Botan7AES_256EJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE,@function
_ZSt12__get_helperILm0EPN5Botan7AES_256EJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEE7_M_headERKS5_
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end261:
	.size	_ZSt12__get_helperILm0EPN5Botan7AES_256EJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE, .Lfunc_end261-_ZSt12__get_helperILm0EPN5Botan7AES_256EJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE

	.section	.text._ZNSt11_Tuple_implILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEE7_M_headERKS5_,"axG",@progbits,_ZNSt11_Tuple_implILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEE7_M_headERKS5_,comdat
	.weak	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEE7_M_headERKS5_ 
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEE7_M_headERKS5_,@function
_ZNSt11_Tuple_implILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEE7_M_headERKS5_: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNSt10_Head_baseILm0EPN5Botan7AES_256ELb0EE7_M_headERKS3_
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end262:
	.size	_ZNSt11_Tuple_implILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEE7_M_headERKS5_, .Lfunc_end262-_ZNSt11_Tuple_implILm0EJPN5Botan7AES_256ESt14default_deleteIS1_EEE7_M_headERKS5_

	.section	.text._ZNSt10_Head_baseILm0EPN5Botan7AES_256ELb0EE7_M_headERKS3_,"axG",@progbits,_ZNSt10_Head_baseILm0EPN5Botan7AES_256ELb0EE7_M_headERKS3_,comdat
	.weak	_ZNSt10_Head_baseILm0EPN5Botan7AES_256ELb0EE7_M_headERKS3_ 
	.p2align	4, 0x90
	.type	_ZNSt10_Head_baseILm0EPN5Botan7AES_256ELb0EE7_M_headERKS3_,@function
_ZNSt10_Head_baseILm0EPN5Botan7AES_256ELb0EE7_M_headERKS3_: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 56
	mov	eax, dword ptr [x.470]
	mov	ecx, dword ptr [y.471]
	mov	edx, eax
	sub	edx, 1594198442
	sub	edx, 1
	add	edx, 1594198442
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 50], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 49], sil
	mov	dword ptr [rbp - 56], 1013507600
	mov	qword ptr [rbp - 64], rdi 
.LBB263_1:                              
	mov	eax, dword ptr [rbp - 56]
	mov	ecx, eax
	sub	ecx, -1853113327
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB263_6
	jmp	.LBB263_8
.LBB263_8:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -610459646
	mov	dword ptr [rbp - 76], eax 
	je	.LBB263_4
	jmp	.LBB263_9
.LBB263_9:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -251499708
	mov	dword ptr [rbp - 80], eax 
	je	.LBB263_5
	jmp	.LBB263_10
.LBB263_10:                             
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1013507600
	mov	dword ptr [rbp - 84], eax 
	je	.LBB263_3
	jmp	.LBB263_2
.LBB263_2:                              
	jmp	.LBB263_7
.LBB263_3:                              
	mov	eax, 2441853969
	mov	ecx, 3684507650
	mov	dl, 1
	mov	sil, byte ptr [rbp - 50]
	mov	dil, byte ptr [rbp - 49]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 0
	mov	r10b, r8b
	and	r10b, 0
	and	sil, dl
	mov	r11b, r9b
	and	r11b, 0
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 0
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB263_7
.LBB263_4:                              
	mov	eax, 2441853969
	mov	ecx, 4043467588
	mov	dl, 1
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 64] 
	mov	qword ptr [rsi], rdi
	mov	rsi, qword ptr [rsi]
	mov	qword ptr [rbp - 48], rsi
	mov	r8d, dword ptr [x.470]
	mov	r9d, dword ptr [y.471]
	mov	r10d, r8d
	add	r10d, 658184706
	sub	r10d, 1
	sub	r10d, 658184706
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	xor	r14b, -1
	mov	r15b, bl
	xor	r15b, -1
	xor	dl, 1
	mov	r12b, r14b
	and	r12b, -1
	and	r11b, dl
	mov	r13b, r15b
	and	r13b, -1
	and	bl, dl
	or	r12b, r11b
	or	r13b, bl
	xor	r12b, r13b
	or	r14b, r15b
	xor	r14b, -1
	or	dl, 1
	and	r14b, dl
	or	r12b, r14b
	test	r12b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB263_7
.LBB263_5:
	mov	rax, qword ptr [rbp - 48]
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB263_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rcx
	mov	dword ptr [rbp - 56], -610459646
.LBB263_7:                              
	jmp	.LBB263_1
.Lfunc_end263:
	.size	_ZNSt10_Head_baseILm0EPN5Botan7AES_256ELb0EE7_M_headERKS3_, .Lfunc_end263-_ZNSt10_Head_baseILm0EPN5Botan7AES_256ELb0EE7_M_headERKS3_

	.section	.text._ZNSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EE10_M_deleterEv,"axG",@progbits,_ZNSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EE10_M_deleterEv,comdat
	.weak	_ZNSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EE10_M_deleterEv 
	.p2align	4, 0x90
	.type	_ZNSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EE10_M_deleterEv,@function
_ZNSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EE10_M_deleterEv: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZSt3getILm1EJPN5Botan7AES_256ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end264:
	.size	_ZNSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EE10_M_deleterEv, .Lfunc_end264-_ZNSt15__uniq_ptr_implIN5Botan7AES_256ESt14default_deleteIS1_EE10_M_deleterEv

	.section	.text._ZSt3getILm1EJPN5Botan7AES_256ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,"axG",@progbits,_ZSt3getILm1EJPN5Botan7AES_256ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,comdat
	.weak	_ZSt3getILm1EJPN5Botan7AES_256ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_ 
	.p2align	4, 0x90
	.type	_ZSt3getILm1EJPN5Botan7AES_256ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,@function
_ZSt3getILm1EJPN5Botan7AES_256ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_: 

	push	rbp
	mov	rbp, rsp
	push	r14
	push	rbx
	sub	rsp, 64
	mov	eax, dword ptr [x.474]
	mov	ecx, dword ptr [y.475]
	mov	edx, eax
	add	edx, -200594563
	sub	edx, 1
	sub	edx, -200594563
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 26], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 25], sil
	mov	dword ptr [rbp - 32], -1976926047
	mov	qword ptr [rbp - 40], rdi 
.LBB265_1:                              
	mov	eax, dword ptr [rbp - 32]
	mov	ecx, eax
	sub	ecx, -1976926047
	mov	dword ptr [rbp - 44], eax 
	mov	dword ptr [rbp - 48], ecx 
	je	.LBB265_3
	jmp	.LBB265_8
.LBB265_8:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, -186772213
	mov	dword ptr [rbp - 52], eax 
	je	.LBB265_5
	jmp	.LBB265_9
.LBB265_9:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 356064512
	mov	dword ptr [rbp - 56], eax 
	je	.LBB265_4
	jmp	.LBB265_10
.LBB265_10:                             
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 858413218
	mov	dword ptr [rbp - 60], eax 
	je	.LBB265_6
	jmp	.LBB265_2
.LBB265_2:                              
	jmp	.LBB265_7
.LBB265_3:                              
	mov	eax, 858413218
	mov	ecx, 356064512
	mov	dl, 1
	mov	sil, byte ptr [rbp - 26]
	mov	dil, byte ptr [rbp - 25]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB265_7
.LBB265_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	call	_ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_256EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE
	mov	edx, 858413218
	mov	esi, 4108195083
	mov	qword ptr [rbp - 24], rax
	mov	r8d, dword ptr [x.474]
	mov	r9d, dword ptr [y.475]
	mov	r10d, r8d
	add	r10d, -435327989
	sub	r10d, 1
	sub	r10d, -435327989
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	edx, esi
	mov	dword ptr [rbp - 32], edx
	jmp	.LBB265_7
.LBB265_5:
	mov	rax, qword ptr [rbp - 24]
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
.LBB265_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	call	_ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_256EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE
	mov	dword ptr [rbp - 32], 356064512
	mov	qword ptr [rbp - 72], rax 
.LBB265_7:                              
	jmp	.LBB265_1
.Lfunc_end265:
	.size	_ZSt3getILm1EJPN5Botan7AES_256ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_, .Lfunc_end265-_ZSt3getILm1EJPN5Botan7AES_256ESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_

	.section	.text._ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_256EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE,"axG",@progbits,_ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_256EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE,comdat
	.weak	_ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_256EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE 
	.p2align	4, 0x90
	.type	_ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_256EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE,@function
_ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_256EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_256EEEE7_M_headERS4_
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end266:
	.size	_ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_256EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE, .Lfunc_end266-_ZSt12__get_helperILm1ESt14default_deleteIN5Botan7AES_256EEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE

	.section	.text._ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_256EEEE7_M_headERS4_,"axG",@progbits,_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_256EEEE7_M_headERS4_,comdat
	.weak	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_256EEEE7_M_headERS4_ 
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_256EEEE7_M_headERS4_,@function
_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_256EEEE7_M_headERS4_: 

	push	rbp
	mov	rbp, rsp
	push	r14
	push	rbx
	sub	rsp, 64
	mov	eax, dword ptr [x.478]
	mov	ecx, dword ptr [y.479]
	mov	edx, eax
	sub	edx, 2120445540
	sub	edx, 1
	add	edx, 2120445540
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 26], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 25], sil
	mov	dword ptr [rbp - 32], 1663172811
	mov	qword ptr [rbp - 40], rdi 
.LBB267_1:                              
	mov	eax, dword ptr [rbp - 32]
	mov	ecx, eax
	sub	ecx, -1839902888
	mov	dword ptr [rbp - 44], eax 
	mov	dword ptr [rbp - 48], ecx 
	je	.LBB267_4
	jmp	.LBB267_8
.LBB267_8:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, -1695787965
	mov	dword ptr [rbp - 52], eax 
	je	.LBB267_5
	jmp	.LBB267_9
.LBB267_9:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 1337892298
	mov	dword ptr [rbp - 56], eax 
	je	.LBB267_6
	jmp	.LBB267_10
.LBB267_10:                             
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 1663172811
	mov	dword ptr [rbp - 60], eax 
	je	.LBB267_3
	jmp	.LBB267_2
.LBB267_2:                              
	jmp	.LBB267_7
.LBB267_3:                              
	mov	eax, 1337892298
	mov	ecx, 2455064408
	mov	dl, 1
	mov	sil, byte ptr [rbp - 26]
	mov	dil, byte ptr [rbp - 25]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 0
	mov	r10b, r8b
	and	r10b, 0
	and	sil, dl
	mov	r11b, r9b
	and	r11b, 0
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 0
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB267_7
.LBB267_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	call	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_256EELb1EE7_M_headERS4_
	mov	edx, 1337892298
	mov	esi, 2599179331
	mov	qword ptr [rbp - 24], rax
	mov	r8d, dword ptr [x.478]
	mov	r9d, dword ptr [y.479]
	mov	r10d, r8d
	add	r10d, 1142000947
	sub	r10d, 1
	sub	r10d, 1142000947
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	edx, esi
	mov	dword ptr [rbp - 32], edx
	jmp	.LBB267_7
.LBB267_5:
	mov	rax, qword ptr [rbp - 24]
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
.LBB267_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	call	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_256EELb1EE7_M_headERS4_
	mov	dword ptr [rbp - 32], -1839902888
	mov	qword ptr [rbp - 72], rax 
.LBB267_7:                              
	jmp	.LBB267_1
.Lfunc_end267:
	.size	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_256EEEE7_M_headERS4_, .Lfunc_end267-_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan7AES_256EEEE7_M_headERS4_

	.section	.text._ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_256EELb1EE7_M_headERS4_,"axG",@progbits,_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_256EELb1EE7_M_headERS4_,comdat
	.weak	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_256EELb1EE7_M_headERS4_ 
	.p2align	4, 0x90
	.type	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_256EELb1EE7_M_headERS4_,@function
_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_256EELb1EE7_M_headERS4_: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	rax, rdi
	pop	rbp
	ret
.Lfunc_end268:
	.size	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_256EELb1EE7_M_headERS4_, .Lfunc_end268-_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan7AES_256EELb1EE7_M_headERS4_

	.section	.text._ZNSt5tupleIJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_S3_INS0_7AES_256EELb1EEEOT_OT0_,"axG",@progbits,_ZNSt5tupleIJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_S3_INS0_7AES_256EELb1EEEOT_OT0_,comdat
	.weak	_ZNSt5tupleIJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_S3_INS0_7AES_256EELb1EEEOT_OT0_ 
	.p2align	4, 0x90
	.type	_ZNSt5tupleIJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_S3_INS0_7AES_256EELb1EEEOT_OT0_,@function
_ZNSt5tupleIJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_S3_INS0_7AES_256EELb1EEEOT_OT0_: 
	.cfi_startproc

	push	rbp
.Lcfi518:
	.cfi_def_cfa_offset 16
.Lcfi519:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi520:
	.cfi_def_cfa_register rbp
	sub	rsp, 48
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	rdx, qword ptr [rbp - 8]
	mov	rdi, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 32], rdx 
	call	_ZSt7forwardIRPN5Botan11BlockCipherEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rdi, qword ptr [rbp - 24]
	mov	qword ptr [rbp - 40], rax 
	call	_ZSt7forwardISt14default_deleteIN5Botan7AES_256EEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rdi, qword ptr [rbp - 32] 
	mov	rsi, qword ptr [rbp - 40] 
	mov	rdx, rax
	call	_ZNSt11_Tuple_implILm0EJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_JS3_INS0_7AES_256EEEvEEOT_DpOT0_
	add	rsp, 48
	pop	rbp
	ret
.Lfunc_end269:
	.size	_ZNSt5tupleIJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_S3_INS0_7AES_256EELb1EEEOT_OT0_, .Lfunc_end269-_ZNSt5tupleIJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_S3_INS0_7AES_256EELb1EEEOT_OT0_
	.cfi_endproc

	.section	.text._ZNSt11_Tuple_implILm0EJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_JS3_INS0_7AES_256EEEvEEOT_DpOT0_,"axG",@progbits,_ZNSt11_Tuple_implILm0EJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_JS3_INS0_7AES_256EEEvEEOT_DpOT0_,comdat
	.weak	_ZNSt11_Tuple_implILm0EJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_JS3_INS0_7AES_256EEEvEEOT_DpOT0_ 
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm0EJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_JS3_INS0_7AES_256EEEvEEOT_DpOT0_,@function
_ZNSt11_Tuple_implILm0EJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_JS3_INS0_7AES_256EEEvEEOT_DpOT0_: 
	.cfi_startproc

	push	rbp
.Lcfi521:
	.cfi_def_cfa_offset 16
.Lcfi522:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi523:
	.cfi_def_cfa_register rbp
	sub	rsp, 48
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	rdx, qword ptr [rbp - 8]
	mov	rsi, rdx
	mov	rdi, qword ptr [rbp - 24]
	mov	qword ptr [rbp - 32], rdx 
	mov	qword ptr [rbp - 40], rsi 
	call	_ZSt7forwardISt14default_deleteIN5Botan7AES_256EEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rdi, qword ptr [rbp - 40] 
	mov	rsi, rax
	call	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan11BlockCipherEEEEC2IS0_INS1_7AES_256EEEEOT_
	mov	rax, qword ptr [rbp - 32] 
	mov	rdi, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 48], rax 
	call	_ZSt7forwardIRPN5Botan11BlockCipherEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rdi, qword ptr [rbp - 48] 
	mov	rsi, rax
	call	_ZNSt10_Head_baseILm0EPN5Botan11BlockCipherELb0EEC2IRS2_EEOT_
	add	rsp, 48
	pop	rbp
	ret
.Lfunc_end270:
	.size	_ZNSt11_Tuple_implILm0EJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_JS3_INS0_7AES_256EEEvEEOT_DpOT0_, .Lfunc_end270-_ZNSt11_Tuple_implILm0EJPN5Botan11BlockCipherESt14default_deleteIS1_EEEC2IRS2_JS3_INS0_7AES_256EEEvEEOT_DpOT0_
	.cfi_endproc

	.section	.text._ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan11BlockCipherEEEEC2IS0_INS1_7AES_256EEEEOT_,"axG",@progbits,_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan11BlockCipherEEEEC2IS0_INS1_7AES_256EEEEOT_,comdat
	.weak	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan11BlockCipherEEEEC2IS0_INS1_7AES_256EEEEOT_ 
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan11BlockCipherEEEEC2IS0_INS1_7AES_256EEEEOT_,@function
_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan11BlockCipherEEEEC2IS0_INS1_7AES_256EEEEOT_: 
	.cfi_startproc

	push	rbp
.Lcfi524:
	.cfi_def_cfa_offset 16
.Lcfi525:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi526:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	sub	rsp, 64
.Lcfi527:
	.cfi_offset rbx, -48
.Lcfi528:
	.cfi_offset r12, -40
.Lcfi529:
	.cfi_offset r14, -32
.Lcfi530:
	.cfi_offset r15, -24
	xor	eax, eax
	mov	ecx, dword ptr [x.486]
	mov	edx, dword ptr [y.487]
	sub	eax, 1
	mov	r8d, ecx
	add	r8d, eax
	imul	ecx, r8d
	and	ecx, 1
	cmp	ecx, 0
	sete	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 34], r9b
	cmp	edx, 10
	setl	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 33], r9b
	mov	dword ptr [rbp - 40], 2029750384
	mov	qword ptr [rbp - 48], rdi 
	mov	qword ptr [rbp - 56], rsi 
.LBB271_1:                              
	mov	eax, dword ptr [rbp - 40]
	mov	ecx, eax
	sub	ecx, -1956881572
	mov	dword ptr [rbp - 60], eax 
	mov	dword ptr [rbp - 64], ecx 
	je	.LBB271_4
	jmp	.LBB271_8
.LBB271_8:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, -279825153
	mov	dword ptr [rbp - 68], eax 
	je	.LBB271_5
	jmp	.LBB271_9
.LBB271_9:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 926112202
	mov	dword ptr [rbp - 72], eax 
	je	.LBB271_6
	jmp	.LBB271_10
.LBB271_10:                             
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 2029750384
	mov	dword ptr [rbp - 76], eax 
	je	.LBB271_3
	jmp	.LBB271_2
.LBB271_2:                              
	jmp	.LBB271_7
.LBB271_3:                              
	mov	eax, 926112202
	mov	ecx, 2338085724
	mov	dl, byte ptr [rbp - 34]
	mov	sil, byte ptr [rbp - 33]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 40], eax
	jmp	.LBB271_7
.LBB271_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 48] 
	mov	qword ptr [rax], rdx
	mov	rsi, qword ptr [rbp - 56] 
	mov	qword ptr [rcx], rsi
	mov	rax, qword ptr [rax]
	mov	rdi, qword ptr [rcx]
	mov	qword ptr [rbp - 88], rax 
	call	_ZSt7forwardISt14default_deleteIN5Botan7AES_256EEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rdi, qword ptr [rbp - 88] 
	mov	rsi, rax
	call	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan11BlockCipherEELb1EEC2IS0_INS1_7AES_256EEEEOT_
	mov	r8d, 926112202
	mov	r9d, 4015142143
	mov	r10d, dword ptr [x.486]
	mov	r11d, dword ptr [y.487]
	mov	ebx, r10d
	sub	ebx, -279171769
	sub	ebx, 1
	add	ebx, -279171769
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r14b
	cmp	r11d, 10
	setl	r15b
	mov	r12b, r14b
	and	r12b, r15b
	xor	r14b, r15b
	or	r12b, r14b
	test	r12b, 1
	cmovne	r8d, r9d
	mov	dword ptr [rbp - 40], r8d
	jmp	.LBB271_7
.LBB271_5:
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB271_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 48] 
	mov	qword ptr [rax], rdx
	mov	rsi, qword ptr [rbp - 56] 
	mov	qword ptr [rcx], rsi
	mov	rax, qword ptr [rax]
	mov	rdi, qword ptr [rcx]
	mov	qword ptr [rbp - 96], rax 
	call	_ZSt7forwardISt14default_deleteIN5Botan7AES_256EEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rdi, qword ptr [rbp - 96] 
	mov	rsi, rax
	call	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan11BlockCipherEELb1EEC2IS0_INS1_7AES_256EEEEOT_
	mov	dword ptr [rbp - 40], -1956881572
.LBB271_7:                              
	jmp	.LBB271_1
.Lfunc_end271:
	.size	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan11BlockCipherEEEEC2IS0_INS1_7AES_256EEEEOT_, .Lfunc_end271-_ZNSt11_Tuple_implILm1EJSt14default_deleteIN5Botan11BlockCipherEEEEC2IS0_INS1_7AES_256EEEEOT_
	.cfi_endproc

	.section	.text._ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan11BlockCipherEELb1EEC2IS0_INS1_7AES_256EEEEOT_,"axG",@progbits,_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan11BlockCipherEELb1EEC2IS0_INS1_7AES_256EEEEOT_,comdat
	.weak	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan11BlockCipherEELb1EEC2IS0_INS1_7AES_256EEEEOT_ 
	.p2align	4, 0x90
	.type	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan11BlockCipherEELb1EEC2IS0_INS1_7AES_256EEEEOT_,@function
_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan11BlockCipherEELb1EEC2IS0_INS1_7AES_256EEEEOT_: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rsi, qword ptr [rbp - 8]
	mov	rdi, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 24], rsi 
	call	_ZSt7forwardISt14default_deleteIN5Botan7AES_256EEEOT_RNSt16remove_referenceIS4_E4typeE
	mov	rdi, qword ptr [rbp - 24] 
	mov	rsi, rax
	call	_ZNSt14default_deleteIN5Botan11BlockCipherEEC2INS0_7AES_256EvEERKS_IT_E
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end272:
	.size	_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan11BlockCipherEELb1EEC2IS0_INS1_7AES_256EEEEOT_, .Lfunc_end272-_ZNSt10_Head_baseILm1ESt14default_deleteIN5Botan11BlockCipherEELb1EEC2IS0_INS1_7AES_256EEEEOT_

	.section	.text._ZNSt14default_deleteIN5Botan11BlockCipherEEC2INS0_7AES_256EvEERKS_IT_E,"axG",@progbits,_ZNSt14default_deleteIN5Botan11BlockCipherEEC2INS0_7AES_256EvEERKS_IT_E,comdat
	.weak	_ZNSt14default_deleteIN5Botan11BlockCipherEEC2INS0_7AES_256EvEERKS_IT_E 
	.p2align	4, 0x90
	.type	_ZNSt14default_deleteIN5Botan11BlockCipherEEC2INS0_7AES_256EvEERKS_IT_E,@function
_ZNSt14default_deleteIN5Botan11BlockCipherEEC2INS0_7AES_256EvEERKS_IT_E: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	pop	rbp
	ret
.Lfunc_end273:
	.size	_ZNSt14default_deleteIN5Botan11BlockCipherEEC2INS0_7AES_256EvEERKS_IT_E, .Lfunc_end273-_ZNSt14default_deleteIN5Botan11BlockCipherEEC2INS0_7AES_256EvEERKS_IT_E

	.section	.text._ZNKSt14default_deleteIN5Botan7AES_256EEclEPS1_,"axG",@progbits,_ZNKSt14default_deleteIN5Botan7AES_256EEclEPS1_,comdat
	.weak	_ZNKSt14default_deleteIN5Botan7AES_256EEclEPS1_ 
	.p2align	4, 0x90
	.type	_ZNKSt14default_deleteIN5Botan7AES_256EEclEPS1_,@function
_ZNKSt14default_deleteIN5Botan7AES_256EEclEPS1_: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 48
	mov	qword ptr [rbp - 16], rdi
	mov	qword ptr [rbp - 24], rsi
	mov	rsi, qword ptr [rbp - 24]
	mov	qword ptr [rbp - 8], rsi
	mov	dword ptr [rbp - 28], 1925025363
.LBB274_1:                              
	mov	eax, dword ptr [rbp - 28]
	mov	ecx, eax
	sub	ecx, -1966296870
	mov	dword ptr [rbp - 32], eax 
	mov	dword ptr [rbp - 36], ecx 
	je	.LBB274_4
	jmp	.LBB274_7
.LBB274_7:                              
	mov	eax, dword ptr [rbp - 32] 
	sub	eax, 492483826
	mov	dword ptr [rbp - 40], eax 
	je	.LBB274_5
	jmp	.LBB274_8
.LBB274_8:                              
	mov	eax, dword ptr [rbp - 32] 
	sub	eax, 1925025363
	mov	dword ptr [rbp - 44], eax 
	je	.LBB274_3
	jmp	.LBB274_2
.LBB274_2:                              
	jmp	.LBB274_6
.LBB274_3:                              
	mov	eax, 2328670426
	mov	ecx, 492483826
	mov	rdx, qword ptr [rbp - 8]
	cmp	rdx, 0
	cmove	eax, ecx
	mov	dword ptr [rbp - 28], eax
	jmp	.LBB274_6
.LBB274_4:                              
	mov	rax, qword ptr [rbp - 8]
	mov	rax, qword ptr [rax]
	mov	rax, qword ptr [rax + 8]
	mov	rdi, qword ptr [rbp - 8]
	call	rax
	mov	dword ptr [rbp - 28], 492483826
	jmp	.LBB274_6
.LBB274_5:
	add	rsp, 48
	pop	rbp
	ret
.LBB274_6:                              
	jmp	.LBB274_1
.Lfunc_end274:
	.size	_ZNKSt14default_deleteIN5Botan7AES_256EEclEPS1_, .Lfunc_end274-_ZNKSt14default_deleteIN5Botan7AES_256EEclEPS1_

	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv 
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 56
	xor	eax, eax
	mov	ecx, dword ptr [x.494]
	mov	edx, dword ptr [y.495]
	sub	eax, 1
	mov	esi, ecx
	add	esi, eax
	imul	ecx, esi
	and	ecx, 1
	cmp	ecx, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 50], r8b
	cmp	edx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 49], r8b
	mov	dword ptr [rbp - 56], 515296780
	mov	qword ptr [rbp - 64], rdi 
.LBB275_1:                              
	mov	eax, dword ptr [rbp - 56]
	mov	ecx, eax
	sub	ecx, 285661005
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB275_6
	jmp	.LBB275_8
.LBB275_8:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 515296780
	mov	dword ptr [rbp - 76], eax 
	je	.LBB275_3
	jmp	.LBB275_9
.LBB275_9:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 599910479
	mov	dword ptr [rbp - 80], eax 
	je	.LBB275_4
	jmp	.LBB275_10
.LBB275_10:                             
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1994699699
	mov	dword ptr [rbp - 84], eax 
	je	.LBB275_5
	jmp	.LBB275_2
.LBB275_2:                              
	jmp	.LBB275_7
.LBB275_3:                              
	mov	eax, 285661005
	mov	ecx, 599910479
	mov	dl, 1
	mov	sil, byte ptr [rbp - 50]
	mov	dil, byte ptr [rbp - 49]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 0
	mov	r10b, r8b
	and	r10b, 0
	and	sil, dl
	mov	r11b, r9b
	and	r11b, 0
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 0
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB275_7
.LBB275_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	add	rax, 16
	mov	rdi, rax
	call	_ZNSt14pointer_traitsIPcE10pointer_toERc
	mov	edx, 285661005
	mov	esi, 1994699699
	mov	r8b, 1
	xor	r9d, r9d
	mov	qword ptr [rbp - 48], rax
	mov	r10d, dword ptr [x.494]
	mov	r11d, dword ptr [y.495]
	sub	r9d, 1
	mov	ebx, r10d
	add	ebx, r9d
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r14b
	cmp	r11d, 10
	setl	r15b
	mov	r12b, r14b
	xor	r12b, -1
	mov	r13b, r15b
	xor	r13b, -1
	xor	r8b, 0
	mov	al, r12b
	and	al, 0
	and	r14b, r8b
	mov	cl, r13b
	and	cl, 0
	and	r15b, r8b
	or	al, r14b
	or	cl, r15b
	xor	al, cl
	or	r12b, r13b
	xor	r12b, -1
	or	r8b, 0
	and	r12b, r8b
	or	al, r12b
	test	al, 1
	cmovne	edx, esi
	mov	dword ptr [rbp - 56], edx
	jmp	.LBB275_7
.LBB275_5:
	mov	rax, qword ptr [rbp - 48]
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB275_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	add	rax, 16
	mov	rdi, rax
	call	_ZNSt14pointer_traitsIPcE10pointer_toERc
	mov	dword ptr [rbp - 56], 599910479
	mov	qword ptr [rbp - 96], rax 
.LBB275_7:                              
	jmp	.LBB275_1
.Lfunc_end275:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv, .Lfunc_end275-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv

	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_ 
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 48
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	rdx, qword ptr [rbp - 8]
	mov	rsi, rdx
	mov	rdi, qword ptr [rbp - 24]
	mov	qword ptr [rbp - 32], rdi 
	mov	rdi, rsi
	mov	rsi, qword ptr [rbp - 32] 
	mov	qword ptr [rbp - 40], rdx 
	call	_ZNSaIcEC2ERKS_
	mov	rdx, qword ptr [rbp - 16]
	mov	rsi, qword ptr [rbp - 40] 
	mov	qword ptr [rsi], rdx
	add	rsp, 48
	pop	rbp
	ret
.Lfunc_end276:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_, .Lfunc_end276-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_

	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_ 
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_: 
	.cfi_startproc

	push	rbp
.Lcfi531:
	.cfi_def_cfa_offset 16
.Lcfi532:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi533:
	.cfi_def_cfa_register rbp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	rdi, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rbp - 16]
	mov	rdx, qword ptr [rbp - 24]
	call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end277:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_, .Lfunc_end277-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_
	.cfi_endproc

	.section	.text._ZNSt11char_traitsIcE6lengthEPKc,"axG",@progbits,_ZNSt11char_traitsIcE6lengthEPKc,comdat
	.weak	_ZNSt11char_traitsIcE6lengthEPKc 
	.p2align	4, 0x90
	.type	_ZNSt11char_traitsIcE6lengthEPKc,@function
_ZNSt11char_traitsIcE6lengthEPKc:       
	.cfi_startproc

	push	rbp
.Lcfi534:
	.cfi_def_cfa_offset 16
.Lcfi535:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi536:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 152
.Lcfi537:
	.cfi_offset rbx, -56
.Lcfi538:
	.cfi_offset r12, -48
.Lcfi539:
	.cfi_offset r13, -40
.Lcfi540:
	.cfi_offset r14, -32
.Lcfi541:
	.cfi_offset r15, -24
	mov	qword ptr [rbp - 88], rdi
	mov	rdi, qword ptr [rbp - 88]
	mov	qword ptr [rbp - 72], rdi
	mov	dword ptr [rbp - 92], -16469538
.LBB278_1:                              

	mov	eax, dword ptr [rbp - 92]
	mov	ecx, eax
	sub	ecx, -1947438976
	mov	dword ptr [rbp - 96], eax 
	mov	dword ptr [rbp - 100], ecx 
	je	.LBB278_16
	jmp	.LBB278_26
.LBB278_26:                             
	mov	eax, dword ptr [rbp - 96] 
	sub	eax, -1330370635
	mov	dword ptr [rbp - 104], eax 
	je	.LBB278_21
	jmp	.LBB278_27
.LBB278_27:                             
	mov	eax, dword ptr [rbp - 96] 
	sub	eax, -907590104
	mov	dword ptr [rbp - 108], eax 
	je	.LBB278_20
	jmp	.LBB278_28
.LBB278_28:                             
	mov	eax, dword ptr [rbp - 96] 
	sub	eax, -676339223
	mov	dword ptr [rbp - 112], eax 
	je	.LBB278_22
	jmp	.LBB278_29
.LBB278_29:                             
	mov	eax, dword ptr [rbp - 96] 
	sub	eax, -490703242
	mov	dword ptr [rbp - 116], eax 
	je	.LBB278_13
	jmp	.LBB278_30
.LBB278_30:                             
	mov	eax, dword ptr [rbp - 96] 
	sub	eax, -460586883
	mov	dword ptr [rbp - 120], eax 
	je	.LBB278_18
	jmp	.LBB278_31
.LBB278_31:                             
	mov	eax, dword ptr [rbp - 96] 
	sub	eax, -300530307
	mov	dword ptr [rbp - 124], eax 
	je	.LBB278_24
	jmp	.LBB278_32
.LBB278_32:                             
	mov	eax, dword ptr [rbp - 96] 
	sub	eax, -186348266
	mov	dword ptr [rbp - 128], eax 
	je	.LBB278_15
	jmp	.LBB278_33
.LBB278_33:                             
	mov	eax, dword ptr [rbp - 96] 
	sub	eax, -16469538
	mov	dword ptr [rbp - 132], eax 
	je	.LBB278_3
	jmp	.LBB278_34
.LBB278_34:                             
	mov	eax, dword ptr [rbp - 96] 
	sub	eax, 26156375
	mov	dword ptr [rbp - 136], eax 
	je	.LBB278_17
	jmp	.LBB278_35
.LBB278_35:                             
	mov	eax, dword ptr [rbp - 96] 
	sub	eax, 26372552
	mov	dword ptr [rbp - 140], eax 
	je	.LBB278_19
	jmp	.LBB278_36
.LBB278_36:                             
	mov	eax, dword ptr [rbp - 96] 
	sub	eax, 1777827708
	mov	dword ptr [rbp - 144], eax 
	je	.LBB278_14
	jmp	.LBB278_37
.LBB278_37:                             
	mov	eax, dword ptr [rbp - 96] 
	sub	eax, 1964168163
	mov	dword ptr [rbp - 148], eax 
	je	.LBB278_23
	jmp	.LBB278_2
.LBB278_2:                              
	jmp	.LBB278_25
.LBB278_3:                              
	mov	rax, qword ptr [rbp - 72]
	mov	qword ptr [rbp - 48], rax
	mov	dword ptr [rbp - 52], -1987594060
.LBB278_4:                              

	mov	eax, dword ptr [rbp - 52]
	mov	ecx, eax
	sub	ecx, -1987594060
	mov	dword ptr [rbp - 152], eax 
	mov	dword ptr [rbp - 156], ecx 
	je	.LBB278_6
	jmp	.LBB278_38
.LBB278_38:                             
	mov	eax, dword ptr [rbp - 152] 
	sub	eax, -1226198762
	mov	dword ptr [rbp - 160], eax 
	je	.LBB278_9
	jmp	.LBB278_39
.LBB278_39:                             
	mov	eax, dword ptr [rbp - 152] 
	sub	eax, 47000108
	mov	dword ptr [rbp - 164], eax 
	je	.LBB278_7
	jmp	.LBB278_40
.LBB278_40:                             
	mov	eax, dword ptr [rbp - 152] 
	sub	eax, 980401864
	mov	dword ptr [rbp - 168], eax 
	je	.LBB278_8
	jmp	.LBB278_41
.LBB278_41:                             
	mov	eax, dword ptr [rbp - 152] 
	sub	eax, 1085073510
	mov	dword ptr [rbp - 172], eax 
	je	.LBB278_10
	jmp	.LBB278_42
.LBB278_42:                             
	mov	eax, dword ptr [rbp - 152] 
	sub	eax, 1247310447
	mov	dword ptr [rbp - 176], eax 
	je	.LBB278_12
	jmp	.LBB278_5
.LBB278_5:                              
	jmp	.LBB278_11
.LBB278_6:                              
	mov	eax, 1085073510
	mov	ecx, 47000108
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.566]
	mov	r8d, dword ptr [y.567]
	mov	r9d, esi
	sub	r9d, 1536424928
	mov	r10d, edi
	add	r10d, r9d
	sub	esi, 1
	add	r10d, esi
	sub	r10d, 1728216188
	add	r10d, 1536424928
	add	r10d, 1728216188
	imul	edi, r10d
	and	edi, 1
	cmp	edi, 0
	sete	r11b
	cmp	r8d, 10
	setl	bl
	mov	r14b, r11b
	xor	r14b, -1
	and	r14b, 0
	mov	r15b, dl
	xor	r15b, 0
	mov	r12b, r11b
	and	r12b, r15b
	mov	r13b, dl
	xor	r13b, 1
	and	r13b, 0
	and	r15b, 1
	or	r14b, r12b
	or	r13b, r15b
	xor	r14b, r13b
	mov	r15b, bl
	xor	r15b, -1
	and	r15b, 0
	mov	r12b, dl
	xor	r12b, 0
	mov	r13b, bl
	and	r13b, r12b
	mov	sil, dl
	xor	sil, 1
	and	sil, 0
	and	r12b, 1
	or	r15b, r13b
	or	sil, r12b
	xor	r15b, sil
	mov	sil, r11b
	xor	sil, -1
	and	sil, 1
	mov	r12b, dl
	xor	r12b, 1
	and	r11b, r12b
	mov	r13b, bl
	xor	r13b, -1
	and	r13b, -1
	and	bl, r12b
	or	sil, r11b
	or	r13b, bl
	xor	sil, r13b
	mov	r11b, r14b
	xor	r11b, -1
	mov	bl, r15b
	xor	bl, -1
	mov	r12b, dl
	xor	r12b, 1
	mov	r13b, r11b
	and	r13b, -1
	and	r14b, r12b
	mov	dil, bl
	and	dil, -1
	and	r15b, r12b
	or	r13b, r14b
	or	dil, r15b
	xor	r13b, dil
	or	r11b, bl
	xor	r11b, -1
	or	r12b, 1
	and	r11b, r12b
	or	r13b, r11b
	mov	dil, r13b
	xor	dil, -1
	and	dil, 1
	xor	dl, 1
	and	r13b, dl
	or	dil, r13b
	mov	dl, sil
	and	dl, dil
	xor	sil, dil
	or	dl, sil
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 52], eax
	jmp	.LBB278_11
.LBB278_7:                              
	mov	eax, 1085073510
	mov	ecx, 980401864
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.566]
	mov	r8d, dword ptr [y.567]
	sub	esi, -611131761
	mov	r9d, edi
	add	r9d, esi
	add	r9d, -181816273
	sub	r9d, 1
	sub	r9d, -181816273
	add	r9d, -1223198877
	add	r9d, -611131761
	sub	r9d, -1223198877
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	and	bl, 1
	mov	r14b, dl
	xor	r14b, 1
	mov	r15b, r10b
	and	r15b, r14b
	mov	r12b, dl
	xor	r12b, 1
	and	r12b, -1
	and	r14b, 1
	or	bl, r15b
	or	r12b, r14b
	xor	bl, r12b
	mov	r14b, r11b
	xor	r14b, -1
	and	r14b, 1
	mov	r15b, dl
	xor	r15b, 1
	mov	r12b, r11b
	and	r12b, r15b
	or	r14b, r12b
	mov	r15b, r10b
	xor	r15b, -1
	and	r15b, 0
	mov	r12b, dl
	xor	r12b, 0
	and	r10b, r12b
	mov	r13b, r11b
	xor	r13b, -1
	and	r13b, 0
	and	r11b, r12b
	or	r15b, r10b
	or	r13b, r11b
	xor	r15b, r13b
	mov	r10b, bl
	xor	r10b, -1
	mov	r11b, r14b
	xor	r11b, -1
	mov	r12b, dl
	xor	r12b, 1
	mov	r13b, r10b
	and	r13b, -1
	and	bl, r12b
	mov	sil, r11b
	and	sil, -1
	and	r14b, r12b
	or	r13b, bl
	or	sil, r14b
	xor	r13b, sil
	or	r10b, r11b
	xor	r10b, -1
	or	r12b, 1
	and	r10b, r12b
	or	r13b, r10b
	mov	sil, r13b
	xor	sil, -1
	and	sil, 1
	xor	dl, 1
	and	r13b, dl
	or	sil, r13b
	mov	dl, r15b
	and	dl, sil
	xor	r15b, sil
	or	dl, r15b
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 52], eax
	jmp	.LBB278_11
.LBB278_8:                              
	mov	dword ptr [rbp - 52], 1247310447
	jmp	.LBB278_11
.LBB278_9:                              
	mov	rax, qword ptr [rbp - 48]
	add	rax, 1
	mov	qword ptr [rbp - 48], rax
	mov	dword ptr [rbp - 52], -1987594060
	jmp	.LBB278_11
.LBB278_10:                             
	mov	dword ptr [rbp - 52], 47000108
.LBB278_11:                             
	jmp	.LBB278_4
.LBB278_12:                             
	xor	eax, eax
	mov	cl, al
	mov	eax, 2347528320
	mov	edx, 3804264054
	test	cl, 1
	cmovne	eax, edx
	mov	dword ptr [rbp - 92], eax
	jmp	.LBB278_25
.LBB278_13:                             
	mov	eax, 3618628073
	mov	ecx, 1777827708
	mov	dl, 1
	mov	esi, dword ptr [x.500]
	mov	edi, dword ptr [y.501]
	mov	r8d, esi
	add	r8d, 137167600
	sub	r8d, 1
	sub	r8d, 137167600
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 0
	mov	r14b, r11b
	and	r14b, 0
	and	r9b, dl
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 0
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 92], eax
	jmp	.LBB278_25
.LBB278_14:                             
	mov	rdi, qword ptr [rbp - 88]
	call	_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc
	mov	ecx, 3618628073
	mov	edx, 4108619030
	mov	qword ptr [rbp - 80], rax
	mov	esi, dword ptr [x.500]
	mov	r8d, dword ptr [y.501]
	mov	r9d, esi
	add	r9d, 230588002
	sub	r9d, 1
	sub	r9d, 230588002
	imul	esi, r9d
	and	esi, 1
	cmp	esi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	and	bl, r11b
	xor	r10b, r11b
	or	bl, r10b
	test	bl, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 92], ecx
	jmp	.LBB278_25
.LBB278_15:                             
	mov	dword ptr [rbp - 92], 26372552
	jmp	.LBB278_25
.LBB278_16:                             
	mov	eax, 1964168163
	mov	ecx, 26156375
	mov	edx, dword ptr [x.500]
	mov	esi, dword ptr [y.501]
	mov	edi, edx
	sub	edi, -969799061
	sub	edi, 1
	add	edi, -969799061
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 92], eax
	jmp	.LBB278_25
.LBB278_17:                             
	mov	eax, 1964168163
	mov	ecx, 3834380413
	mov	dl, 1
	xor	esi, esi
	mov	rdi, qword ptr [rbp - 88]
	mov	dword ptr [rbp - 180], eax 
	mov	dword ptr [rbp - 184], ecx 
	mov	byte ptr [rbp - 185], dl 
	mov	dword ptr [rbp - 192], esi 
	call	strlen
	mov	qword ptr [rbp - 80], rax
	mov	ecx, dword ptr [x.500]
	mov	esi, dword ptr [y.501]
	mov	r8d, dword ptr [rbp - 192] 
	sub	r8d, 1
	mov	r9d, ecx
	add	r9d, r8d
	imul	ecx, r9d
	and	ecx, 1
	cmp	ecx, 0
	sete	dl
	cmp	esi, 10
	setl	r10b
	mov	r11b, dl
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, byte ptr [rbp - 185] 
	xor	r14b, 1
	mov	r15b, r11b
	and	r15b, -1
	and	dl, r14b
	mov	r12b, bl
	and	r12b, -1
	and	r10b, r14b
	or	r15b, dl
	or	r12b, r10b
	xor	r15b, r12b
	or	r11b, bl
	xor	r11b, -1
	or	r14b, 1
	and	r11b, r14b
	or	r15b, r11b
	test	r15b, 1
	mov	ecx, dword ptr [rbp - 180] 
	mov	esi, dword ptr [rbp - 184] 
	cmovne	ecx, esi
	mov	dword ptr [rbp - 92], ecx
	jmp	.LBB278_25
.LBB278_18:                             
	mov	dword ptr [rbp - 92], 26372552
	jmp	.LBB278_25
.LBB278_19:                             
	mov	eax, 3994436989
	mov	ecx, 3387377192
	mov	dl, 1
	mov	esi, dword ptr [x.500]
	mov	edi, dword ptr [y.501]
	mov	r8d, esi
	sub	r8d, 657964771
	sub	r8d, 1
	add	r8d, 657964771
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 0
	mov	r14b, r11b
	and	r14b, 0
	and	r9b, dl
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 0
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 92], eax
	jmp	.LBB278_25
.LBB278_20:                             
	mov	eax, 3994436989
	mov	ecx, 2964596661
	mov	rdx, qword ptr [rbp - 80]
	mov	qword ptr [rbp - 64], rdx
	mov	esi, dword ptr [x.500]
	mov	edi, dword ptr [y.501]
	mov	r8d, esi
	add	r8d, -276944927
	sub	r8d, 1
	sub	r8d, -276944927
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	and	r11b, r10b
	xor	r9b, r10b
	or	r11b, r9b
	test	r11b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 92], eax
	jmp	.LBB278_25
.LBB278_21:
	mov	rax, qword ptr [rbp - 64]
	add	rsp, 152
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB278_22:                             
	mov	rdi, qword ptr [rbp - 88]
	call	_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc
	mov	qword ptr [rbp - 80], rax
	mov	dword ptr [rbp - 92], 1777827708
	jmp	.LBB278_25
.LBB278_23:                             
	mov	rdi, qword ptr [rbp - 88]
	call	strlen
	mov	qword ptr [rbp - 80], rax
	mov	dword ptr [rbp - 92], 26156375
	jmp	.LBB278_25
.LBB278_24:                             
	mov	dword ptr [rbp - 92], -907590104
.LBB278_25:                             
	jmp	.LBB278_1
.Lfunc_end278:
	.size	_ZNSt11char_traitsIcE6lengthEPKc, .Lfunc_end278-_ZNSt11char_traitsIcE6lengthEPKc
	.cfi_endproc

	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev 
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 40
	mov	eax, dword ptr [x.502]
	mov	ecx, dword ptr [y.503]
	mov	edx, eax
	add	edx, -1027171934
	sub	edx, 1
	sub	edx, -1027171934
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 42], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 41], sil
	mov	dword ptr [rbp - 48], 299597026
	mov	qword ptr [rbp - 56], rdi 
.LBB279_1:                              
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -1800295129
	mov	dword ptr [rbp - 60], eax 
	mov	dword ptr [rbp - 64], ecx 
	je	.LBB279_6
	jmp	.LBB279_8
.LBB279_8:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 299597026
	mov	dword ptr [rbp - 68], eax 
	je	.LBB279_3
	jmp	.LBB279_9
.LBB279_9:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 1480224868
	mov	dword ptr [rbp - 72], eax 
	je	.LBB279_4
	jmp	.LBB279_10
.LBB279_10:                             
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 2037537503
	mov	dword ptr [rbp - 76], eax 
	je	.LBB279_5
	jmp	.LBB279_2
.LBB279_2:                              
	jmp	.LBB279_7
.LBB279_3:                              
	mov	eax, 2494672167
	mov	ecx, 1480224868
	mov	dl, 1
	mov	sil, byte ptr [rbp - 42]
	mov	dil, byte ptr [rbp - 41]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB279_7
.LBB279_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	call	_ZNSaIcED2Ev
	mov	edx, 2494672167
	mov	esi, 2037537503
	mov	r8b, 1
	xor	r9d, r9d
	mov	r10d, dword ptr [x.502]
	mov	r11d, dword ptr [y.503]
	sub	r9d, 1
	mov	ebx, r10d
	add	ebx, r9d
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r14b
	cmp	r11d, 10
	setl	r15b
	mov	r12b, r14b
	xor	r12b, -1
	mov	r13b, r15b
	xor	r13b, -1
	xor	r8b, 1
	mov	al, r12b
	and	al, -1
	and	r14b, r8b
	mov	cl, r13b
	and	cl, -1
	and	r15b, r8b
	or	al, r14b
	or	cl, r15b
	xor	al, cl
	or	r12b, r13b
	xor	r12b, -1
	or	r8b, 1
	and	r12b, r8b
	or	al, r12b
	test	al, 1
	cmovne	edx, esi
	mov	dword ptr [rbp - 48], edx
	jmp	.LBB279_7
.LBB279_5:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB279_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	call	_ZNSaIcED2Ev
	mov	dword ptr [rbp - 48], 1480224868
.LBB279_7:                              
	jmp	.LBB279_1
.Lfunc_end279:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev, .Lfunc_end279-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev

	.section	.text._ZNSt14pointer_traitsIPcE10pointer_toERc,"axG",@progbits,_ZNSt14pointer_traitsIPcE10pointer_toERc,comdat
	.weak	_ZNSt14pointer_traitsIPcE10pointer_toERc 
	.p2align	4, 0x90
	.type	_ZNSt14pointer_traitsIPcE10pointer_toERc,@function
_ZNSt14pointer_traitsIPcE10pointer_toERc: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZSt9addressofIcEPT_RS0_
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end280:
	.size	_ZNSt14pointer_traitsIPcE10pointer_toERc, .Lfunc_end280-_ZNSt14pointer_traitsIPcE10pointer_toERc

	.section	.text._ZSt9addressofIcEPT_RS0_,"axG",@progbits,_ZSt9addressofIcEPT_RS0_,comdat
	.weak	_ZSt9addressofIcEPT_RS0_ 
	.p2align	4, 0x90
	.type	_ZSt9addressofIcEPT_RS0_,@function
_ZSt9addressofIcEPT_RS0_:               

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZSt11__addressofIcEPT_RS0_
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end281:
	.size	_ZSt9addressofIcEPT_RS0_, .Lfunc_end281-_ZSt9addressofIcEPT_RS0_

	.section	.text._ZSt11__addressofIcEPT_RS0_,"axG",@progbits,_ZSt11__addressofIcEPT_RS0_,comdat
	.weak	_ZSt11__addressofIcEPT_RS0_ 
	.p2align	4, 0x90
	.type	_ZSt11__addressofIcEPT_RS0_,@function
_ZSt11__addressofIcEPT_RS0_:            

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 56
	xor	eax, eax
	mov	ecx, dword ptr [x.508]
	mov	edx, dword ptr [y.509]
	sub	eax, 1
	mov	esi, ecx
	add	esi, eax
	imul	ecx, esi
	and	ecx, 1
	cmp	ecx, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 50], r8b
	cmp	edx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 49], r8b
	mov	dword ptr [rbp - 56], -315964562
	mov	qword ptr [rbp - 64], rdi 
.LBB282_1:                              
	mov	eax, dword ptr [rbp - 56]
	mov	ecx, eax
	sub	ecx, -912859347
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB282_4
	jmp	.LBB282_8
.LBB282_8:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -315964562
	mov	dword ptr [rbp - 76], eax 
	je	.LBB282_3
	jmp	.LBB282_9
.LBB282_9:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 494028770
	mov	dword ptr [rbp - 80], eax 
	je	.LBB282_5
	jmp	.LBB282_10
.LBB282_10:                             
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 564884949
	mov	dword ptr [rbp - 84], eax 
	je	.LBB282_6
	jmp	.LBB282_2
.LBB282_2:                              
	jmp	.LBB282_7
.LBB282_3:                              
	mov	eax, 564884949
	mov	ecx, 3382107949
	mov	dl, byte ptr [rbp - 50]
	mov	sil, byte ptr [rbp - 49]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB282_7
.LBB282_4:                              
	mov	eax, 564884949
	mov	ecx, 494028770
	mov	dl, 1
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 64] 
	mov	qword ptr [rsi], rdi
	mov	rsi, qword ptr [rsi]
	mov	qword ptr [rbp - 48], rsi
	mov	r8d, dword ptr [x.508]
	mov	r9d, dword ptr [y.509]
	mov	r10d, r8d
	sub	r10d, 282702005
	sub	r10d, 1
	add	r10d, 282702005
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	xor	r14b, -1
	mov	r15b, bl
	xor	r15b, -1
	xor	dl, 1
	mov	r12b, r14b
	and	r12b, -1
	and	r11b, dl
	mov	r13b, r15b
	and	r13b, -1
	and	bl, dl
	or	r12b, r11b
	or	r13b, bl
	xor	r12b, r13b
	or	r14b, r15b
	xor	r14b, -1
	or	dl, 1
	and	r14b, dl
	or	r12b, r14b
	test	r12b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB282_7
.LBB282_5:
	mov	rax, qword ptr [rbp - 48]
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB282_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rcx
	mov	dword ptr [rbp - 56], -912859347
.LBB282_7:                              
	jmp	.LBB282_1
.Lfunc_end282:
	.size	_ZSt11__addressofIcEPT_RS0_, .Lfunc_end282-_ZSt11__addressofIcEPT_RS0_

	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type 
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type: 
	.cfi_startproc

	push	rbp
.Lcfi542:
	.cfi_def_cfa_offset 16
.Lcfi543:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi544:
	.cfi_def_cfa_register rbp
	sub	rsp, 48
	mov	qword ptr [rbp - 16], rdi
	mov	qword ptr [rbp - 24], rsi
	mov	qword ptr [rbp - 32], rdx
	mov	rdi, qword ptr [rbp - 16]
	mov	rsi, qword ptr [rbp - 24]
	mov	rdx, qword ptr [rbp - 32]
	call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag
	add	rsp, 48
	pop	rbp
	ret
.Lfunc_end283:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type, .Lfunc_end283-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type
	.cfi_endproc

	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag 
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag: 
.Lfunc_begin35:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception35

	push	rbp
.Lcfi545:
	.cfi_def_cfa_offset 16
.Lcfi546:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi547:
	.cfi_def_cfa_register rbp
	sub	rsp, 96
	mov	qword ptr [rbp - 16], rdi
	mov	qword ptr [rbp - 24], rsi
	mov	qword ptr [rbp - 32], rdx
	mov	rdx, qword ptr [rbp - 16]
	mov	rdi, qword ptr [rbp - 24]
	mov	qword ptr [rbp - 64], rdx 
	call	_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_
	test	al, 1
	jne	.LBB284_1
	jmp	.LBB284_3
.LBB284_1:
	mov	rax, qword ptr [rbp - 24]
	cmp	rax, qword ptr [rbp - 32]
	je	.LBB284_3

	movabs	rdi, .L.str.14
	call	_ZSt19__throw_logic_errorPKc
.LBB284_3:
	mov	rdi, qword ptr [rbp - 24]
	mov	rsi, qword ptr [rbp - 32]
	call	_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_
	mov	qword ptr [rbp - 40], rax
	cmp	qword ptr [rbp - 40], 15
	jbe	.LBB284_5

	lea	rsi, [rbp - 40]
	xor	eax, eax
	mov	edx, eax
	mov	rdi, qword ptr [rbp - 64] 
	call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
	mov	rdi, qword ptr [rbp - 64] 
	mov	rsi, rax
	call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc
	mov	rsi, qword ptr [rbp - 40]
	mov	rdi, qword ptr [rbp - 64] 
	call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm
.LBB284_5:
.Ltmp147:
	mov	rdi, qword ptr [rbp - 64] 
	call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv
.Ltmp148:
	mov	qword ptr [rbp - 72], rax 
	jmp	.LBB284_6
.LBB284_6:
	mov	rsi, qword ptr [rbp - 24]
	mov	rdx, qword ptr [rbp - 32]
	mov	rdi, qword ptr [rbp - 72] 
	call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_
	jmp	.LBB284_12
.LBB284_7:
.Ltmp149:
	mov	ecx, edx
	mov	qword ptr [rbp - 48], rax
	mov	dword ptr [rbp - 52], ecx

	mov	rdi, qword ptr [rbp - 48]
	call	__cxa_begin_catch
.Ltmp150:
	mov	rdi, qword ptr [rbp - 64] 
	mov	qword ptr [rbp - 80], rax 
	call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
.Ltmp151:
	jmp	.LBB284_9
.LBB284_9:
.Ltmp152:
	call	__cxa_rethrow
.Ltmp153:
	jmp	.LBB284_15
.LBB284_10:
.Ltmp154:
	mov	ecx, edx
	mov	qword ptr [rbp - 48], rax
	mov	dword ptr [rbp - 52], ecx
.Ltmp155:
	call	__cxa_end_catch
.Ltmp156:
	jmp	.LBB284_11
.LBB284_11:
	jmp	.LBB284_13
.LBB284_12:
	mov	rsi, qword ptr [rbp - 40]
	mov	rdi, qword ptr [rbp - 64] 
	call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm
	add	rsp, 96
	pop	rbp
	ret
.LBB284_13:
	mov	rdi, qword ptr [rbp - 48]
	call	_Unwind_Resume
.LBB284_14:
.Ltmp157:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 84], ecx 
	call	__clang_call_terminate
.LBB284_15:
.Lfunc_end284:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag, .Lfunc_end284-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table284:
.Lexception35:
	.byte	255                     
	.byte	3                       
	.asciz	"\326\200\200"          
	.byte	3                       
	.byte	78                      
	.long	.Lfunc_begin35-.Lfunc_begin35 
	.long	.Ltmp147-.Lfunc_begin35 
	.long	0                       
	.byte	0                       
	.long	.Ltmp147-.Lfunc_begin35 
	.long	.Ltmp148-.Ltmp147       
	.long	.Ltmp149-.Lfunc_begin35 
	.byte	1                       
	.long	.Ltmp148-.Lfunc_begin35 
	.long	.Ltmp150-.Ltmp148       
	.long	0                       
	.byte	0                       
	.long	.Ltmp150-.Lfunc_begin35 
	.long	.Ltmp153-.Ltmp150       
	.long	.Ltmp154-.Lfunc_begin35 
	.byte	0                       
	.long	.Ltmp155-.Lfunc_begin35 
	.long	.Ltmp156-.Ltmp155       
	.long	.Ltmp157-.Lfunc_begin35 
	.byte	1                       
	.long	.Ltmp156-.Lfunc_begin35 
	.long	.Lfunc_end284-.Ltmp156  
	.long	0                       
	.byte	0                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_,"axG",@progbits,_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_,comdat
	.weak	_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_ 
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_,@function
_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	cmp	qword ptr [rbp - 8], 0
	sete	al
	and	al, 1
	movzx	eax, al
	pop	rbp
	ret
.Lfunc_end285:
	.size	_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_, .Lfunc_end285-_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_

	.section	.text._ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_,"axG",@progbits,_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_,comdat
	.weak	_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_ 
	.p2align	4, 0x90
	.type	_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_,@function
_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_: 
	.cfi_startproc

	push	rbp
.Lcfi548:
	.cfi_def_cfa_offset 16
.Lcfi549:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi550:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	sub	rsp, 96
.Lcfi551:
	.cfi_offset rbx, -48
.Lcfi552:
	.cfi_offset r12, -40
.Lcfi553:
	.cfi_offset r14, -32
.Lcfi554:
	.cfi_offset r15, -24
	mov	eax, dword ptr [x.514]
	mov	ecx, dword ptr [y.515]
	mov	edx, eax
	sub	edx, 1863695865
	sub	edx, 1
	add	edx, 1863695865
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 42], r8b
	cmp	ecx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 41], r8b
	mov	dword ptr [rbp - 48], -1667422449
	mov	qword ptr [rbp - 56], rdi 
	mov	qword ptr [rbp - 64], rsi 
.LBB286_1:                              
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -1667422449
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB286_3
	jmp	.LBB286_8
.LBB286_8:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -787055475
	mov	dword ptr [rbp - 76], eax 
	je	.LBB286_5
	jmp	.LBB286_9
.LBB286_9:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -89664946
	mov	dword ptr [rbp - 80], eax 
	je	.LBB286_6
	jmp	.LBB286_10
.LBB286_10:                             
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 338743501
	mov	dword ptr [rbp - 84], eax 
	je	.LBB286_4
	jmp	.LBB286_2
.LBB286_2:                              
	jmp	.LBB286_7
.LBB286_3:                              
	mov	eax, 4205302350
	mov	ecx, 338743501
	mov	dl, 1
	mov	sil, byte ptr [rbp - 42]
	mov	dil, byte ptr [rbp - 41]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 0
	mov	r10b, r8b
	and	r10b, 0
	and	sil, dl
	mov	r11b, r9b
	and	r11b, 0
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 0
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB286_7
.LBB286_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rdx
	mov	rsi, qword ptr [rbp - 64] 
	mov	qword ptr [rcx], rsi
	mov	rdi, qword ptr [rax]
	mov	rsi, qword ptr [rcx]
	mov	qword ptr [rbp - 96], rdi 
	mov	rdi, rax
	mov	qword ptr [rbp - 104], rsi 
	call	_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_
	mov	rdi, qword ptr [rbp - 96] 
	mov	rsi, qword ptr [rbp - 104] 
	call	_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag
	mov	r8d, 4205302350
	mov	r9d, 3507911821
	mov	qword ptr [rbp - 40], rax
	mov	r10d, dword ptr [x.514]
	mov	r11d, dword ptr [y.515]
	mov	ebx, r10d
	add	ebx, -1659229797
	sub	ebx, 1
	sub	ebx, -1659229797
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r14b
	cmp	r11d, 10
	setl	r15b
	mov	r12b, r14b
	and	r12b, r15b
	xor	r14b, r15b
	or	r12b, r14b
	test	r12b, 1
	cmovne	r8d, r9d
	mov	dword ptr [rbp - 48], r8d
	jmp	.LBB286_7
.LBB286_5:
	mov	rax, qword ptr [rbp - 40]
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB286_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rdx
	mov	rsi, qword ptr [rbp - 64] 
	mov	qword ptr [rcx], rsi
	mov	rdi, qword ptr [rax]
	mov	rsi, qword ptr [rcx]
	mov	qword ptr [rbp - 112], rdi 
	mov	rdi, rax
	mov	qword ptr [rbp - 120], rsi 
	call	_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_
	mov	rdi, qword ptr [rbp - 112] 
	mov	rsi, qword ptr [rbp - 120] 
	call	_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag
	mov	dword ptr [rbp - 48], 338743501
	mov	qword ptr [rbp - 128], rax 
.LBB286_7:                              
	jmp	.LBB286_1
.Lfunc_end286:
	.size	_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_, .Lfunc_end286-_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_
	.cfi_endproc

	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc 
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rsi, qword ptr [rbp - 8]
	mov	rdi, qword ptr [rbp - 16]
	mov	qword ptr [rsi], rdi
	pop	rbp
	ret
.Lfunc_end287:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc, .Lfunc_end287-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc

	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm 
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm: 
	.cfi_startproc

	push	rbp
.Lcfi555:
	.cfi_def_cfa_offset 16
.Lcfi556:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi557:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	sub	rsp, 128
.Lcfi558:
	.cfi_offset rbx, -48
.Lcfi559:
	.cfi_offset r12, -40
.Lcfi560:
	.cfi_offset r14, -32
.Lcfi561:
	.cfi_offset r15, -24
	mov	qword ptr [rbp - 64], rdi
	mov	qword ptr [rbp - 72], rsi
	mov	qword ptr [rbp - 80], rdx
	mov	rdx, qword ptr [rbp - 64]
	mov	qword ptr [rbp - 56], rdx
	mov	rdx, qword ptr [rbp - 72]
	mov	rdx, qword ptr [rdx]
	mov	qword ptr [rbp - 48], rdx
	mov	rdi, qword ptr [rbp - 56]
	call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv
	mov	qword ptr [rbp - 40], rax
	mov	dword ptr [rbp - 84], 795111159
.LBB288_1:                              
	mov	eax, dword ptr [rbp - 84]
	mov	ecx, eax
	sub	ecx, -2074866506
	mov	dword ptr [rbp - 88], eax 
	mov	dword ptr [rbp - 92], ecx 
	je	.LBB288_9
	jmp	.LBB288_18
.LBB288_18:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, -1863786270
	mov	dword ptr [rbp - 96], eax 
	je	.LBB288_12
	jmp	.LBB288_19
.LBB288_19:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, -1657486135
	mov	dword ptr [rbp - 100], eax 
	je	.LBB288_10
	jmp	.LBB288_20
.LBB288_20:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, -1512828564
	mov	dword ptr [rbp - 104], eax 
	je	.LBB288_4
	jmp	.LBB288_21
.LBB288_21:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, -847452099
	mov	dword ptr [rbp - 108], eax 
	je	.LBB288_15
	jmp	.LBB288_22
.LBB288_22:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, -784010375
	mov	dword ptr [rbp - 112], eax 
	je	.LBB288_13
	jmp	.LBB288_23
.LBB288_23:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, -407020444
	mov	dword ptr [rbp - 116], eax 
	je	.LBB288_8
	jmp	.LBB288_24
.LBB288_24:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, -155929126
	mov	dword ptr [rbp - 120], eax 
	je	.LBB288_14
	jmp	.LBB288_25
.LBB288_25:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, -16562888
	mov	dword ptr [rbp - 124], eax 
	je	.LBB288_7
	jmp	.LBB288_26
.LBB288_26:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 545095443
	mov	dword ptr [rbp - 128], eax 
	je	.LBB288_5
	jmp	.LBB288_27
.LBB288_27:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 795111159
	mov	dword ptr [rbp - 132], eax 
	je	.LBB288_3
	jmp	.LBB288_28
.LBB288_28:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 1245236916
	mov	dword ptr [rbp - 136], eax 
	je	.LBB288_11
	jmp	.LBB288_29
.LBB288_29:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 1732637160
	mov	dword ptr [rbp - 140], eax 
	je	.LBB288_6
	jmp	.LBB288_30
.LBB288_30:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 1909256594
	mov	dword ptr [rbp - 144], eax 
	je	.LBB288_16
	jmp	.LBB288_2
.LBB288_2:                              
	jmp	.LBB288_17
.LBB288_3:                              
	mov	eax, 545095443
	mov	ecx, 2782138732
	mov	rdx, qword ptr [rbp - 48]
	mov	rsi, qword ptr [rbp - 40]
	cmp	rdx, rsi
	cmova	eax, ecx
	mov	dword ptr [rbp - 84], eax
	jmp	.LBB288_17
.LBB288_4:
	movabs	rdi, .L.str.15
	call	_ZSt20__throw_length_errorPKc
.LBB288_5:                              
	mov	eax, 4139038170
	mov	ecx, 1732637160
	mov	rdx, qword ptr [rbp - 72]
	mov	rdx, qword ptr [rdx]
	cmp	rdx, qword ptr [rbp - 80]
	cmova	eax, ecx
	mov	dword ptr [rbp - 84], eax
	jmp	.LBB288_17
.LBB288_6:                              
	mov	eax, 4139038170
	mov	ecx, 4278404408
	mov	rdx, qword ptr [rbp - 72]
	mov	rdx, qword ptr [rdx]
	mov	rsi, qword ptr [rbp - 80]
	shl	rsi, 1
	cmp	rdx, rsi
	cmovb	eax, ecx
	mov	dword ptr [rbp - 84], eax
	jmp	.LBB288_17
.LBB288_7:                              
	mov	rax, qword ptr [rbp - 80]
	shl	rax, 1
	mov	rcx, qword ptr [rbp - 72]
	mov	qword ptr [rcx], rax
	mov	rax, qword ptr [rbp - 72]
	mov	rax, qword ptr [rax]
	mov	rdi, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 152], rax 
	call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv
	mov	edx, 1245236916
	mov	esi, 3887946852
	mov	rcx, qword ptr [rbp - 152] 
	cmp	rcx, rax
	cmova	edx, esi
	mov	dword ptr [rbp - 84], edx
	jmp	.LBB288_17
.LBB288_8:                              
	mov	eax, 3447515197
	mov	ecx, 2220100790
	mov	edx, dword ptr [x.518]
	mov	esi, dword ptr [y.519]
	mov	edi, edx
	sub	edi, 245478409
	sub	edi, 1
	add	edi, 245478409
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 84], eax
	jmp	.LBB288_17
.LBB288_9:                              
	mov	rdi, qword ptr [rbp - 56]
	call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv
	mov	ecx, 3447515197
	mov	edx, 2637481161
	mov	rdi, qword ptr [rbp - 72]
	mov	qword ptr [rdi], rax
	mov	esi, dword ptr [x.518]
	mov	r8d, dword ptr [y.519]
	mov	r9d, esi
	add	r9d, -912066710
	sub	r9d, 1
	sub	r9d, -912066710
	imul	esi, r9d
	and	esi, 1
	cmp	esi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	and	bl, r11b
	xor	r10b, r11b
	or	bl, r10b
	test	bl, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 84], ecx
	jmp	.LBB288_17
.LBB288_10:                             
	mov	dword ptr [rbp - 84], 1245236916
	jmp	.LBB288_17
.LBB288_11:                             
	mov	eax, 1909256594
	mov	ecx, 2431181026
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.518]
	mov	r8d, dword ptr [y.519]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 0
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, 0
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 0
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 84], eax
	jmp	.LBB288_17
.LBB288_12:                             
	mov	eax, 1909256594
	mov	ecx, 3510956921
	xor	edx, edx
	mov	esi, dword ptr [x.518]
	mov	edi, dword ptr [y.519]
	sub	edx, 1
	mov	r8d, esi
	add	r8d, edx
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	and	r11b, r10b
	xor	r9b, r10b
	or	r11b, r9b
	test	r11b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 84], eax
	jmp	.LBB288_17
.LBB288_13:                             
	mov	dword ptr [rbp - 84], -155929126
	jmp	.LBB288_17
.LBB288_14:
	mov	rdi, qword ptr [rbp - 56]
	call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv
	xor	ecx, ecx
	mov	edi, ecx
	mov	rdx, qword ptr [rbp - 72]
	mov	rdx, qword ptr [rdx]
	mov	rsi, rdi
	sub	rsi, rdx
	mov	rdx, rdi
	sub	rdx, 1
	add	rsi, rdx
	sub	rdi, rsi
	mov	qword ptr [rbp - 160], rdi 
	mov	rdi, rax
	mov	rsi, qword ptr [rbp - 160] 
	call	_ZNSt16allocator_traitsISaIcEE8allocateERS0_m
	add	rsp, 128
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB288_15:                             
	mov	rdi, qword ptr [rbp - 56]
	call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv
	mov	rdi, qword ptr [rbp - 72]
	mov	qword ptr [rdi], rax
	mov	dword ptr [rbp - 84], -2074866506
	jmp	.LBB288_17
.LBB288_16:                             
	mov	dword ptr [rbp - 84], -1863786270
.LBB288_17:                             
	jmp	.LBB288_1
.Lfunc_end288:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm, .Lfunc_end288-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
	.cfi_endproc

	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm 
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 56
	mov	eax, dword ptr [x.520]
	mov	ecx, dword ptr [y.521]
	mov	edx, eax
	add	edx, -350924906
	sub	edx, 1
	sub	edx, -350924906
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 42], r8b
	cmp	ecx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 41], r8b
	mov	dword ptr [rbp - 48], -670667168
	mov	qword ptr [rbp - 56], rdi 
	mov	qword ptr [rbp - 64], rsi 
.LBB289_1:                              
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -1177077718
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB289_5
	jmp	.LBB289_8
.LBB289_8:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -670667168
	mov	dword ptr [rbp - 76], eax 
	je	.LBB289_3
	jmp	.LBB289_9
.LBB289_9:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 2041078303
	mov	dword ptr [rbp - 80], eax 
	je	.LBB289_4
	jmp	.LBB289_10
.LBB289_10:                             
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 2107483863
	mov	dword ptr [rbp - 84], eax 
	je	.LBB289_6
	jmp	.LBB289_2
.LBB289_2:                              
	jmp	.LBB289_7
.LBB289_3:                              
	mov	eax, 2107483863
	mov	ecx, 2041078303
	mov	dl, byte ptr [rbp - 42]
	mov	sil, byte ptr [rbp - 41]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB289_7
.LBB289_4:                              
	mov	eax, 2107483863
	mov	ecx, 3117889578
	mov	dl, 1
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	r8, qword ptr [rbp - 56] 
	mov	qword ptr [rsi], r8
	mov	r9, qword ptr [rbp - 64] 
	mov	qword ptr [rdi], r9
	mov	rsi, qword ptr [rsi]
	mov	rdi, qword ptr [rdi]
	mov	qword ptr [rsi + 16], rdi
	mov	r10d, dword ptr [x.520]
	mov	r11d, dword ptr [y.521]
	mov	ebx, r10d
	add	ebx, -612827338
	sub	ebx, 1
	sub	ebx, -612827338
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r14b
	cmp	r11d, 10
	setl	r15b
	mov	r12b, r14b
	xor	r12b, -1
	mov	r13b, r15b
	xor	r13b, -1
	xor	dl, 1
	mov	sil, r12b
	and	sil, -1
	and	r14b, dl
	mov	dil, r13b
	and	dil, -1
	and	r15b, dl
	or	sil, r14b
	or	dil, r15b
	xor	sil, dil
	or	r12b, r13b
	xor	r12b, -1
	or	dl, 1
	and	r12b, dl
	or	sil, r12b
	test	sil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB289_7
.LBB289_5:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB289_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rdx
	mov	rsi, qword ptr [rbp - 64] 
	mov	qword ptr [rcx], rsi
	mov	rax, qword ptr [rax]
	mov	rcx, qword ptr [rcx]
	mov	qword ptr [rax + 16], rcx
	mov	dword ptr [rbp - 48], 2041078303
.LBB289_7:                              
	jmp	.LBB289_1
.Lfunc_end289:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm, .Lfunc_end289-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm

	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_ 
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_: 
.Lfunc_begin36:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception36

	push	rbp
	mov	rbp, rsp
	sub	rsp, 48
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	rdi, qword ptr [rbp - 8]
	mov	rdx, qword ptr [rbp - 16]
	mov	rsi, qword ptr [rbp - 24]
	movabs	rax, -8375302044466340134
	add	rsi, rax
	sub	rsi, rdx
	movabs	rax, 8375302044466340134
	add	rsi, rax
.Ltmp158:
	mov	qword ptr [rbp - 32], rsi 
	mov	rsi, rdx
	mov	rdx, qword ptr [rbp - 32] 
	call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm
.Ltmp159:
	jmp	.LBB290_1
.LBB290_1:
	add	rsp, 48
	pop	rbp
	ret
.LBB290_2:
.Ltmp160:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 36], ecx 
	call	__clang_call_terminate
.Lfunc_end290:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_, .Lfunc_end290-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table290:
.Lexception36:
	.byte	255                     
	.byte	3                       
	.byte	21                      
	.byte	3                       
	.byte	13                      
	.long	.Ltmp158-.Lfunc_begin36 
	.long	.Ltmp159-.Ltmp158       
	.long	.Ltmp160-.Lfunc_begin36 
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv,"axG",@progbits,_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv,comdat
	.weak	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv 
	.p2align	4, 0x90
	.type	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv,@function
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	rax, qword ptr [rdi]
	pop	rbp
	ret
.Lfunc_end291:
	.size	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv, .Lfunc_end291-_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv

	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv 
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv: 
	.cfi_startproc

	push	rbp
.Lcfi562:
	.cfi_def_cfa_offset 16
.Lcfi563:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi564:
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	sub	rsp, 48
.Lcfi565:
	.cfi_offset rbx, -32
.Lcfi566:
	.cfi_offset r14, -24
	mov	qword ptr [rbp - 32], rdi
	mov	rdi, qword ptr [rbp - 32]
	mov	qword ptr [rbp - 24], rdi
	mov	dword ptr [rbp - 36], -548983578
.LBB292_1:                              
	mov	eax, dword ptr [rbp - 36]
	mov	ecx, eax
	sub	ecx, -1502590436
	mov	dword ptr [rbp - 40], eax 
	mov	dword ptr [rbp - 44], ecx 
	je	.LBB292_7
	jmp	.LBB292_10
.LBB292_10:                             
	mov	eax, dword ptr [rbp - 40] 
	sub	eax, -1094511655
	mov	dword ptr [rbp - 48], eax 
	je	.LBB292_6
	jmp	.LBB292_11
.LBB292_11:                             
	mov	eax, dword ptr [rbp - 40] 
	sub	eax, -669584214
	mov	dword ptr [rbp - 52], eax 
	je	.LBB292_8
	jmp	.LBB292_12
.LBB292_12:                             
	mov	eax, dword ptr [rbp - 40] 
	sub	eax, -548983578
	mov	dword ptr [rbp - 56], eax 
	je	.LBB292_3
	jmp	.LBB292_13
.LBB292_13:                             
	mov	eax, dword ptr [rbp - 40] 
	sub	eax, 635359990
	mov	dword ptr [rbp - 60], eax 
	je	.LBB292_5
	jmp	.LBB292_14
.LBB292_14:                             
	mov	eax, dword ptr [rbp - 40] 
	sub	eax, 690545228
	mov	dword ptr [rbp - 64], eax 
	je	.LBB292_4
	jmp	.LBB292_2
.LBB292_2:                              
	jmp	.LBB292_9
.LBB292_3:                              
	mov	rdi, qword ptr [rbp - 24]
	call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv
	mov	ecx, 690545228
	mov	edx, 2792376860
	test	al, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 36], ecx
	jmp	.LBB292_9
.LBB292_4:                              
	mov	eax, 3625383082
	mov	ecx, 635359990
	mov	edx, dword ptr [x.524]
	mov	esi, dword ptr [y.525]
	mov	edi, edx
	add	edi, -1916409374
	sub	edi, 1
	sub	edi, -1916409374
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 36], eax
	jmp	.LBB292_9
.LBB292_5:                              
	mov	rax, qword ptr [rbp - 24]
	mov	rsi, qword ptr [rax + 16]
	mov	rdi, qword ptr [rbp - 24]
	call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm
	mov	ecx, 3625383082
	mov	edx, 3200455641
	mov	r8d, dword ptr [x.524]
	mov	r9d, dword ptr [y.525]
	mov	r10d, r8d
	sub	r10d, -2069680705
	sub	r10d, 1
	add	r10d, -2069680705
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 36], ecx
	jmp	.LBB292_9
.LBB292_6:                              
	mov	dword ptr [rbp - 36], -1502590436
	jmp	.LBB292_9
.LBB292_7:
	add	rsp, 48
	pop	rbx
	pop	r14
	pop	rbp
	ret
.LBB292_8:                              
	mov	rax, qword ptr [rbp - 24]
	mov	rsi, qword ptr [rax + 16]
	mov	rdi, qword ptr [rbp - 24]
	call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm
	mov	dword ptr [rbp - 36], 635359990
.LBB292_9:                              
	jmp	.LBB292_1
.Lfunc_end292:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv, .Lfunc_end292-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
	.cfi_endproc

	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm 
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm: 
	.cfi_startproc

	push	rbp
.Lcfi567:
	.cfi_def_cfa_offset 16
.Lcfi568:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi569:
	.cfi_def_cfa_register rbp
	sub	rsp, 48
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rsi, qword ptr [rbp - 8]
	mov	rdi, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 32], rdi 
	mov	rdi, rsi
	mov	rax, qword ptr [rbp - 32] 
	mov	qword ptr [rbp - 40], rsi 
	mov	rsi, rax
	call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm
	mov	rdi, qword ptr [rbp - 40] 
	call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv
	lea	rsi, [rbp - 17]
	add	rax, qword ptr [rbp - 16]
	mov	byte ptr [rbp - 17], 0
	mov	rdi, rax
	call	_ZNSt11char_traitsIcE6assignERcRKc
	add	rsp, 48
	pop	rbp
	ret
.Lfunc_end293:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm, .Lfunc_end293-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm
	.cfi_endproc

	.section	.text._ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag,"axG",@progbits,_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag,comdat
	.weak	_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag 
	.p2align	4, 0x90
	.type	_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag,@function
_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag: 

	push	rbp
	mov	rbp, rsp
	xor	eax, eax
	mov	ecx, eax
	mov	qword ptr [rbp - 16], rdi
	mov	qword ptr [rbp - 24], rsi
	mov	rsi, qword ptr [rbp - 24]
	mov	rdi, qword ptr [rbp - 16]
	sub	rcx, rdi
	add	rsi, rcx
	mov	rax, rsi
	pop	rbp
	ret
.Lfunc_end294:
	.size	_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag, .Lfunc_end294-_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag

	.section	.text._ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_,"axG",@progbits,_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_,comdat
	.weak	_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_ 
	.p2align	4, 0x90
	.type	_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_,@function
_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 16], rdi
	pop	rbp
	ret
.Lfunc_end295:
	.size	_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_, .Lfunc_end295-_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_

	.section	.text._ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv,"axG",@progbits,_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv,comdat
	.weak	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv 
	.p2align	4, 0x90
	.type	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv,@function
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv: 
.Lfunc_begin37:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception37

	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
.Ltmp161:
	call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv
.Ltmp162:
	mov	qword ptr [rbp - 16], rax 
	jmp	.LBB296_1
.LBB296_1:
	mov	rdi, qword ptr [rbp - 16] 
	call	_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_
	xor	ecx, ecx
	mov	edi, ecx
	sub	rdi, 1
	add	rax, rdi
	shr	rax, 1
	add	rsp, 32
	pop	rbp
	ret
.LBB296_2:
.Ltmp163:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 20], ecx 
	call	__clang_call_terminate
.Lfunc_end296:
	.size	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv, .Lfunc_end296-_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table296:
.Lexception37:
	.byte	255                     
	.byte	3                       
	.byte	21                      
	.byte	3                       
	.byte	13                      
	.long	.Ltmp161-.Lfunc_begin37 
	.long	.Ltmp162-.Ltmp161       
	.long	.Ltmp163-.Lfunc_begin37 
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZNSt16allocator_traitsISaIcEE8allocateERS0_m,"axG",@progbits,_ZNSt16allocator_traitsISaIcEE8allocateERS0_m,comdat
	.weak	_ZNSt16allocator_traitsISaIcEE8allocateERS0_m 
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIcEE8allocateERS0_m,@function
_ZNSt16allocator_traitsISaIcEE8allocateERS0_m: 
	.cfi_startproc

	push	rbp
.Lcfi570:
	.cfi_def_cfa_offset 16
.Lcfi571:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi572:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 72
.Lcfi573:
	.cfi_offset rbx, -56
.Lcfi574:
	.cfi_offset r12, -48
.Lcfi575:
	.cfi_offset r13, -40
.Lcfi576:
	.cfi_offset r14, -32
.Lcfi577:
	.cfi_offset r15, -24
	mov	eax, dword ptr [x.532]
	mov	ecx, dword ptr [y.533]
	mov	edx, eax
	sub	edx, 885219394
	sub	edx, 1
	add	edx, 885219394
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 50], r8b
	cmp	ecx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 49], r8b
	mov	dword ptr [rbp - 56], -1405600321
	mov	qword ptr [rbp - 64], rdi 
	mov	qword ptr [rbp - 72], rsi 
.LBB297_1:                              
	mov	eax, dword ptr [rbp - 56]
	mov	ecx, eax
	sub	ecx, -1405600321
	mov	dword ptr [rbp - 76], eax 
	mov	dword ptr [rbp - 80], ecx 
	je	.LBB297_3
	jmp	.LBB297_8
.LBB297_8:                              
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, 685792129
	mov	dword ptr [rbp - 84], eax 
	je	.LBB297_6
	jmp	.LBB297_9
.LBB297_9:                              
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, 1453412567
	mov	dword ptr [rbp - 88], eax 
	je	.LBB297_5
	jmp	.LBB297_10
.LBB297_10:                             
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, 1840953268
	mov	dword ptr [rbp - 92], eax 
	je	.LBB297_4
	jmp	.LBB297_2
.LBB297_2:                              
	jmp	.LBB297_7
.LBB297_3:                              
	mov	eax, 685792129
	mov	ecx, 1840953268
	mov	dl, 1
	mov	sil, byte ptr [rbp - 50]
	mov	dil, byte ptr [rbp - 49]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB297_7
.LBB297_4:                              
	xor	eax, eax
	mov	edx, eax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 64] 
	mov	qword ptr [rcx], rdi
	mov	r8, qword ptr [rbp - 72] 
	mov	qword ptr [rsi], r8
	mov	rcx, qword ptr [rcx]
	mov	rsi, qword ptr [rsi]
	mov	rdi, rcx
	call	_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv
	mov	r9d, 685792129
	mov	r10d, 1453412567
	mov	r11b, 1
	mov	qword ptr [rbp - 48], rax
	mov	ebx, dword ptr [x.532]
	mov	r14d, dword ptr [y.533]
	mov	r15d, ebx
	sub	r15d, -850732289
	sub	r15d, 1
	add	r15d, -850732289
	imul	ebx, r15d
	and	ebx, 1
	cmp	ebx, 0
	sete	r12b
	cmp	r14d, 10
	setl	r13b
	mov	al, r12b
	xor	al, -1
	mov	cl, r13b
	xor	cl, -1
	xor	r11b, 0
	mov	dl, al
	and	dl, 0
	and	r12b, r11b
	mov	sil, cl
	and	sil, 0
	and	r13b, r11b
	or	dl, r12b
	or	sil, r13b
	xor	dl, sil
	or	al, cl
	xor	al, -1
	or	r11b, 0
	and	al, r11b
	or	dl, al
	test	dl, 1
	cmovne	r9d, r10d
	mov	dword ptr [rbp - 56], r9d
	jmp	.LBB297_7
.LBB297_5:
	mov	rax, qword ptr [rbp - 48]
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB297_6:                              
	xor	eax, eax
	mov	edx, eax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 64] 
	mov	qword ptr [rcx], rdi
	mov	r8, qword ptr [rbp - 72] 
	mov	qword ptr [rsi], r8
	mov	rcx, qword ptr [rcx]
	mov	rsi, qword ptr [rsi]
	mov	rdi, rcx
	call	_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv
	mov	dword ptr [rbp - 56], 1840953268
	mov	qword ptr [rbp - 104], rax 
.LBB297_7:                              
	jmp	.LBB297_1
.Lfunc_end297:
	.size	_ZNSt16allocator_traitsISaIcEE8allocateERS0_m, .Lfunc_end297-_ZNSt16allocator_traitsISaIcEE8allocateERS0_m
	.cfi_endproc

	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv 
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	rax, rdi
	pop	rbp
	ret
.Lfunc_end298:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv, .Lfunc_end298-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv

	.section	.text._ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_,"axG",@progbits,_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_,comdat
	.weak	_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_ 
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_,@function
_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end299:
	.size	_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_, .Lfunc_end299-_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_

	.section	.text._ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv,"axG",@progbits,_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv,comdat
	.weak	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv 
	.p2align	4, 0x90
	.type	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv,@function
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 56
	mov	eax, dword ptr [x.538]
	mov	ecx, dword ptr [y.539]
	mov	edx, eax
	sub	edx, -947718135
	sub	edx, 1
	add	edx, -947718135
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 50], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 49], sil
	mov	dword ptr [rbp - 56], -511899321
	mov	qword ptr [rbp - 64], rdi 
.LBB300_1:                              
	mov	eax, dword ptr [rbp - 56]
	mov	ecx, eax
	sub	ecx, -2114618343
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB300_6
	jmp	.LBB300_8
.LBB300_8:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -1680916576
	mov	dword ptr [rbp - 76], eax 
	je	.LBB300_4
	jmp	.LBB300_9
.LBB300_9:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -511899321
	mov	dword ptr [rbp - 80], eax 
	je	.LBB300_3
	jmp	.LBB300_10
.LBB300_10:                             
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 392382251
	mov	dword ptr [rbp - 84], eax 
	je	.LBB300_5
	jmp	.LBB300_2
.LBB300_2:                              
	jmp	.LBB300_7
.LBB300_3:                              
	mov	eax, 2180348953
	mov	ecx, 2614050720
	mov	dl, 1
	mov	sil, byte ptr [rbp - 50]
	mov	dil, byte ptr [rbp - 49]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB300_7
.LBB300_4:                              
	mov	eax, 2180348953
	mov	ecx, 392382251
	mov	dl, 1
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 64] 
	mov	qword ptr [rsi], rdi
	mov	rsi, qword ptr [rsi]
	mov	qword ptr [rbp - 48], rsi
	mov	r8d, dword ptr [x.538]
	mov	r9d, dword ptr [y.539]
	mov	r10d, r8d
	add	r10d, 593900938
	sub	r10d, 1
	sub	r10d, 593900938
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	xor	r14b, -1
	mov	r15b, bl
	xor	r15b, -1
	xor	dl, 1
	mov	r12b, r14b
	and	r12b, -1
	and	r11b, dl
	mov	r13b, r15b
	and	r13b, -1
	and	bl, dl
	or	r12b, r11b
	or	r13b, bl
	xor	r12b, r13b
	or	r14b, r15b
	xor	r14b, -1
	or	dl, 1
	and	r14b, dl
	or	r12b, r14b
	test	r12b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB300_7
.LBB300_5:
	mov	rax, qword ptr [rbp - 48]
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB300_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rcx
	mov	dword ptr [rbp - 56], -1680916576
.LBB300_7:                              
	jmp	.LBB300_1
.Lfunc_end300:
	.size	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv, .Lfunc_end300-_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv

	.section	.text._ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv 
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 40
	mov	eax, dword ptr [x.540]
	mov	ecx, dword ptr [y.541]
	mov	edx, eax
	add	edx, 1699822080
	sub	edx, 1
	sub	edx, 1699822080
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 42], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 41], sil
	mov	dword ptr [rbp - 48], 757417242
	mov	qword ptr [rbp - 56], rdi 
.LBB301_1:                              
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -110691387
	mov	dword ptr [rbp - 60], eax 
	mov	dword ptr [rbp - 64], ecx 
	je	.LBB301_6
	jmp	.LBB301_8
.LBB301_8:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 95757699
	mov	dword ptr [rbp - 68], eax 
	je	.LBB301_5
	jmp	.LBB301_9
.LBB301_9:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 757417242
	mov	dword ptr [rbp - 72], eax 
	je	.LBB301_3
	jmp	.LBB301_10
.LBB301_10:                             
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 1939230036
	mov	dword ptr [rbp - 76], eax 
	je	.LBB301_4
	jmp	.LBB301_2
.LBB301_2:                              
	jmp	.LBB301_7
.LBB301_3:                              
	mov	eax, 4184275909
	mov	ecx, 1939230036
	mov	dl, 1
	mov	sil, byte ptr [rbp - 42]
	mov	dil, byte ptr [rbp - 41]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 0
	mov	r10b, r8b
	and	r10b, 0
	and	sil, dl
	mov	r11b, r9b
	and	r11b, 0
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 0
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB301_7
.LBB301_4:                              
	mov	eax, 4184275909
	mov	ecx, 95757699
	mov	dl, 1
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 56] 
	mov	qword ptr [rsi], rdi
	mov	r8d, dword ptr [x.540]
	mov	r9d, dword ptr [y.541]
	mov	r10d, r8d
	add	r10d, 355572884
	sub	r10d, 1
	sub	r10d, 355572884
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	xor	r14b, -1
	mov	r15b, bl
	xor	r15b, -1
	xor	dl, 0
	mov	r12b, r14b
	and	r12b, 0
	and	r11b, dl
	mov	r13b, r15b
	and	r13b, 0
	and	bl, dl
	or	r12b, r11b
	or	r13b, bl
	xor	r12b, r13b
	or	r14b, r15b
	xor	r14b, -1
	or	dl, 0
	and	r14b, dl
	or	r12b, r14b
	test	r12b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB301_7
.LBB301_5:
	mov	rax, -1
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB301_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rcx
	mov	dword ptr [rbp - 48], 1939230036
.LBB301_7:                              
	jmp	.LBB301_1
.Lfunc_end301:
	.size	_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv, .Lfunc_end301-_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv

	.section	.text._ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv 
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv,@function
_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv: 
	.cfi_startproc

	push	rbp
.Lcfi578:
	.cfi_def_cfa_offset 16
.Lcfi579:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi580:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	sub	rsp, 112
.Lcfi581:
	.cfi_offset rbx, -48
.Lcfi582:
	.cfi_offset r12, -40
.Lcfi583:
	.cfi_offset r14, -32
.Lcfi584:
	.cfi_offset r15, -24
	mov	eax, dword ptr [x.542]
	mov	ecx, dword ptr [y.543]
	mov	r8d, eax
	sub	r8d, 1295679811
	sub	r8d, 1
	add	r8d, 1295679811
	imul	eax, r8d
	and	eax, 1
	cmp	eax, 0
	sete	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 50], r9b
	cmp	ecx, 10
	setl	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 49], r9b
	mov	dword ptr [rbp - 56], -938261061
	mov	qword ptr [rbp - 64], rsi 
	mov	qword ptr [rbp - 72], rdi 
	mov	qword ptr [rbp - 80], rdx 
.LBB302_1:                              
	mov	eax, dword ptr [rbp - 56]
	mov	ecx, eax
	sub	ecx, -1172224864
	mov	dword ptr [rbp - 84], eax 
	mov	dword ptr [rbp - 88], ecx 
	je	.LBB302_9
	jmp	.LBB302_13
.LBB302_13:                             
	mov	eax, dword ptr [rbp - 84] 
	sub	eax, -938261061
	mov	dword ptr [rbp - 92], eax 
	je	.LBB302_3
	jmp	.LBB302_14
.LBB302_14:                             
	mov	eax, dword ptr [rbp - 84] 
	sub	eax, -890636556
	mov	dword ptr [rbp - 96], eax 
	je	.LBB302_5
	jmp	.LBB302_15
.LBB302_15:                             
	mov	eax, dword ptr [rbp - 84] 
	sub	eax, 833767502
	mov	dword ptr [rbp - 100], eax 
	je	.LBB302_4
	jmp	.LBB302_16
.LBB302_16:                             
	mov	eax, dword ptr [rbp - 84] 
	sub	eax, 1009516604
	mov	dword ptr [rbp - 104], eax 
	je	.LBB302_10
	jmp	.LBB302_17
.LBB302_17:                             
	mov	eax, dword ptr [rbp - 84] 
	sub	eax, 1053733862
	mov	dword ptr [rbp - 108], eax 
	je	.LBB302_7
	jmp	.LBB302_18
.LBB302_18:                             
	mov	eax, dword ptr [rbp - 84] 
	sub	eax, 1637826326
	mov	dword ptr [rbp - 112], eax 
	je	.LBB302_8
	jmp	.LBB302_19
.LBB302_19:                             
	mov	eax, dword ptr [rbp - 84] 
	sub	eax, 1902975467
	mov	dword ptr [rbp - 116], eax 
	je	.LBB302_11
	jmp	.LBB302_20
.LBB302_20:                             
	mov	eax, dword ptr [rbp - 84] 
	sub	eax, 1994711098
	mov	dword ptr [rbp - 120], eax 
	je	.LBB302_6
	jmp	.LBB302_2
.LBB302_2:                              
	jmp	.LBB302_12
.LBB302_3:                              
	mov	eax, 1009516604
	mov	ecx, 833767502
	mov	dl, 1
	mov	sil, byte ptr [rbp - 50]
	mov	dil, byte ptr [rbp - 49]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB302_12
.LBB302_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	qword ptr [rbp - 48], rcx
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 72] 
	mov	qword ptr [rax], rdx
	mov	rsi, qword ptr [rbp - 48]
	mov	rdi, qword ptr [rbp - 64] 
	mov	qword ptr [rsi], rdi
	mov	rsi, qword ptr [rbp - 80] 
	mov	qword ptr [rcx], rsi
	mov	rdi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 48]
	mov	rax, qword ptr [rax]
	mov	qword ptr [rbp - 128], rax 
	call	_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv
	mov	r8d, 1009516604
	mov	r9d, 3404330740
	mov	rcx, qword ptr [rbp - 128] 
	cmp	rcx, rax
	seta	r10b
	and	r10b, 1
	mov	byte ptr [rbp - 33], r10b
	mov	r11d, dword ptr [x.542]
	mov	ebx, dword ptr [y.543]
	mov	r14d, r11d
	sub	r14d, 1217711501
	sub	r14d, 1
	add	r14d, 1217711501
	imul	r11d, r14d
	and	r11d, 1
	cmp	r11d, 0
	sete	r10b
	cmp	ebx, 10
	setl	r15b
	mov	r12b, r10b
	and	r12b, r15b
	xor	r10b, r15b
	or	r12b, r10b
	test	r12b, 1
	cmovne	r8d, r9d
	mov	dword ptr [rbp - 56], r8d
	jmp	.LBB302_12
.LBB302_5:                              
	mov	eax, 3122742432
	mov	ecx, 1994711098
	mov	dl, byte ptr [rbp - 33]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB302_12
.LBB302_6:                              
	mov	eax, 1902975467
	mov	ecx, 1053733862
	mov	edx, dword ptr [x.542]
	mov	esi, dword ptr [y.543]
	mov	edi, edx
	add	edi, 1558116979
	sub	edi, 1
	sub	edi, 1558116979
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB302_12
.LBB302_7:                              
	call	_ZSt17__throw_bad_allocv
	mov	eax, 1902975467
	mov	ecx, 1637826326
	xor	edx, edx
	mov	esi, dword ptr [x.542]
	mov	edi, dword ptr [y.543]
	sub	edx, 1
	mov	r8d, esi
	add	r8d, edx
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	and	r11b, r10b
	xor	r9b, r10b
	or	r11b, r9b
	test	r11b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB302_12
.LBB302_8:
.LBB302_9:
	mov	rax, qword ptr [rbp - 48]
	mov	rax, qword ptr [rax]
	shl	rax, 0
	mov	rdi, rax
	call	_Znwm
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB302_10:                             
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, qword ptr [rbp - 72] 
	mov	qword ptr [rax], rsi
	mov	rdi, qword ptr [rbp - 64] 
	mov	qword ptr [rcx], rdi
	mov	rcx, qword ptr [rbp - 80] 
	mov	qword ptr [rdx], rcx
	mov	rdi, qword ptr [rax]
	call	_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv
	mov	dword ptr [rbp - 56], 833767502
	mov	qword ptr [rbp - 136], rax 
	jmp	.LBB302_12
.LBB302_11:                             
	call	_ZSt17__throw_bad_allocv
	mov	dword ptr [rbp - 56], 1053733862
.LBB302_12:                             
	jmp	.LBB302_1
.Lfunc_end302:
	.size	_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv, .Lfunc_end302-_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv
	.cfi_endproc

	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm 
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm: 
	.cfi_startproc

	push	rbp
.Lcfi585:
	.cfi_def_cfa_offset 16
.Lcfi586:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi587:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 104
.Lcfi588:
	.cfi_offset rbx, -40
.Lcfi589:
	.cfi_offset r14, -32
.Lcfi590:
	.cfi_offset r15, -24
	mov	eax, dword ptr [x.544]
	mov	ecx, dword ptr [y.545]
	mov	r8d, eax
	sub	r8d, 765977213
	sub	r8d, 1
	add	r8d, 765977213
	imul	eax, r8d
	and	eax, 1
	cmp	eax, 0
	sete	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 58], r9b
	cmp	ecx, 10
	setl	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 57], r9b
	mov	dword ptr [rbp - 64], 1032268841
	mov	qword ptr [rbp - 72], rsi 
	mov	qword ptr [rbp - 80], rdi 
	mov	qword ptr [rbp - 88], rdx 
.LBB303_1:                              
	mov	eax, dword ptr [rbp - 64]
	mov	ecx, eax
	sub	ecx, -1483430628
	mov	dword ptr [rbp - 92], eax 
	mov	dword ptr [rbp - 96], ecx 
	je	.LBB303_8
	jmp	.LBB303_11
.LBB303_11:                             
	mov	eax, dword ptr [rbp - 92] 
	sub	eax, -1376479108
	mov	dword ptr [rbp - 100], eax 
	je	.LBB303_4
	jmp	.LBB303_12
.LBB303_12:                             
	mov	eax, dword ptr [rbp - 92] 
	sub	eax, -1139113518
	mov	dword ptr [rbp - 104], eax 
	je	.LBB303_7
	jmp	.LBB303_13
.LBB303_13:                             
	mov	eax, dword ptr [rbp - 92] 
	sub	eax, -989240957
	mov	dword ptr [rbp - 108], eax 
	je	.LBB303_6
	jmp	.LBB303_14
.LBB303_14:                             
	mov	eax, dword ptr [rbp - 92] 
	sub	eax, 143749679
	mov	dword ptr [rbp - 112], eax 
	je	.LBB303_9
	jmp	.LBB303_15
.LBB303_15:                             
	mov	eax, dword ptr [rbp - 92] 
	sub	eax, 402698770
	mov	dword ptr [rbp - 116], eax 
	je	.LBB303_5
	jmp	.LBB303_16
.LBB303_16:                             
	mov	eax, dword ptr [rbp - 92] 
	sub	eax, 1032268841
	mov	dword ptr [rbp - 120], eax 
	je	.LBB303_3
	jmp	.LBB303_2
.LBB303_2:                              
	jmp	.LBB303_10
.LBB303_3:                              
	mov	eax, 143749679
	mov	ecx, 2918488188
	mov	dl, byte ptr [rbp - 58]
	mov	sil, byte ptr [rbp - 57]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 64], eax
	jmp	.LBB303_10
.LBB303_4:                              
	mov	eax, 143749679
	mov	ecx, 402698770
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	qword ptr [rbp - 56], rdx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	qword ptr [rbp - 48], rdx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	qword ptr [rbp - 40], rdx
	mov	rdx, qword ptr [rbp - 56]
	mov	rsi, qword ptr [rbp - 80] 
	mov	qword ptr [rdx], rsi
	mov	rdx, qword ptr [rbp - 48]
	mov	rdi, qword ptr [rbp - 72] 
	mov	qword ptr [rdx], rdi
	mov	rdx, qword ptr [rbp - 40]
	mov	r8, qword ptr [rbp - 88] 
	mov	qword ptr [rdx], r8
	mov	rdx, qword ptr [rbp - 40]
	cmp	qword ptr [rdx], 1
	sete	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 25], r9b
	mov	r10d, dword ptr [x.544]
	mov	r11d, dword ptr [y.545]
	mov	ebx, r10d
	add	ebx, -49129717
	sub	ebx, 1
	sub	ebx, -49129717
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r9b
	cmp	r11d, 10
	setl	r14b
	mov	r15b, r9b
	and	r15b, r14b
	xor	r9b, r14b
	or	r15b, r9b
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 64], eax
	jmp	.LBB303_10
.LBB303_5:                              
	mov	eax, 3155853778
	mov	ecx, 3305726339
	mov	dl, byte ptr [rbp - 25]
	test	dl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 64], eax
	jmp	.LBB303_10
.LBB303_6:                              
	mov	rax, qword ptr [rbp - 56]
	mov	rdi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 48]
	mov	rsi, qword ptr [rax]
	call	_ZNSt11char_traitsIcE6assignERcRKc
	mov	dword ptr [rbp - 64], -1483430628
	jmp	.LBB303_10
.LBB303_7:                              
	mov	rax, qword ptr [rbp - 56]
	mov	rdi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 48]
	mov	rsi, qword ptr [rax]
	mov	rax, qword ptr [rbp - 40]
	mov	rdx, qword ptr [rax]
	call	_ZNSt11char_traitsIcE4copyEPcPKcm
	mov	dword ptr [rbp - 64], -1483430628
	mov	qword ptr [rbp - 128], rax 
	jmp	.LBB303_10
.LBB303_8:
	lea	rsp, [rbp - 24]
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB303_9:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, qword ptr [rbp - 80] 
	mov	qword ptr [rax], rsi
	mov	rax, qword ptr [rbp - 72] 
	mov	qword ptr [rcx], rax
	mov	rcx, qword ptr [rbp - 88] 
	mov	qword ptr [rdx], rcx
	mov	dword ptr [rbp - 64], -1376479108
.LBB303_10:                             
	jmp	.LBB303_1
.Lfunc_end303:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm, .Lfunc_end303-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm
	.cfi_endproc

	.section	.text._ZNSt11char_traitsIcE6assignERcRKc,"axG",@progbits,_ZNSt11char_traitsIcE6assignERcRKc,comdat
	.weak	_ZNSt11char_traitsIcE6assignERcRKc 
	.p2align	4, 0x90
	.type	_ZNSt11char_traitsIcE6assignERcRKc,@function
_ZNSt11char_traitsIcE6assignERcRKc:     

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 56
	mov	eax, dword ptr [x.546]
	mov	ecx, dword ptr [y.547]
	mov	edx, eax
	add	edx, 1796142882
	sub	edx, 1
	sub	edx, 1796142882
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 42], r8b
	cmp	ecx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 41], r8b
	mov	dword ptr [rbp - 48], 1973769569
	mov	qword ptr [rbp - 56], rdi 
	mov	qword ptr [rbp - 64], rsi 
.LBB304_1:                              
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -789621939
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB304_6
	jmp	.LBB304_8
.LBB304_8:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 947307171
	mov	dword ptr [rbp - 76], eax 
	je	.LBB304_5
	jmp	.LBB304_9
.LBB304_9:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1596702443
	mov	dword ptr [rbp - 80], eax 
	je	.LBB304_4
	jmp	.LBB304_10
.LBB304_10:                             
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1973769569
	mov	dword ptr [rbp - 84], eax 
	je	.LBB304_3
	jmp	.LBB304_2
.LBB304_2:                              
	jmp	.LBB304_7
.LBB304_3:                              
	mov	eax, 3505345357
	mov	ecx, 1596702443
	mov	dl, byte ptr [rbp - 42]
	mov	sil, byte ptr [rbp - 41]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB304_7
.LBB304_4:                              
	mov	eax, 3505345357
	mov	ecx, 947307171
	mov	dl, 1
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	r8, qword ptr [rbp - 56] 
	mov	qword ptr [rsi], r8
	mov	r9, qword ptr [rbp - 64] 
	mov	qword ptr [rdi], r9
	mov	rdi, qword ptr [rdi]
	mov	r10b, byte ptr [rdi]
	mov	rsi, qword ptr [rsi]
	mov	byte ptr [rsi], r10b
	mov	r11d, dword ptr [x.546]
	mov	ebx, dword ptr [y.547]
	mov	r14d, r11d
	sub	r14d, 467051146
	sub	r14d, 1
	add	r14d, 467051146
	imul	r11d, r14d
	and	r11d, 1
	cmp	r11d, 0
	sete	r10b
	cmp	ebx, 10
	setl	r15b
	mov	r12b, r10b
	xor	r12b, -1
	mov	r13b, r15b
	xor	r13b, -1
	xor	dl, 1
	mov	sil, r12b
	and	sil, -1
	and	r10b, dl
	mov	dil, r13b
	and	dil, -1
	and	r15b, dl
	or	sil, r10b
	or	dil, r15b
	xor	sil, dil
	or	r12b, r13b
	xor	r12b, -1
	or	dl, 1
	and	r12b, dl
	or	sil, r12b
	test	sil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB304_7
.LBB304_5:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB304_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rdx
	mov	rsi, qword ptr [rbp - 64] 
	mov	qword ptr [rcx], rsi
	mov	rcx, qword ptr [rcx]
	mov	dil, byte ptr [rcx]
	mov	rax, qword ptr [rax]
	mov	byte ptr [rax], dil
	mov	dword ptr [rbp - 48], 1596702443
.LBB304_7:                              
	jmp	.LBB304_1
.Lfunc_end304:
	.size	_ZNSt11char_traitsIcE6assignERcRKc, .Lfunc_end304-_ZNSt11char_traitsIcE6assignERcRKc

	.section	.text._ZNSt11char_traitsIcE4copyEPcPKcm,"axG",@progbits,_ZNSt11char_traitsIcE4copyEPcPKcm,comdat
	.weak	_ZNSt11char_traitsIcE4copyEPcPKcm 
	.p2align	4, 0x90
	.type	_ZNSt11char_traitsIcE4copyEPcPKcm,@function
_ZNSt11char_traitsIcE4copyEPcPKcm:      

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 136
	mov	qword ptr [rbp - 64], rdi
	mov	qword ptr [rbp - 72], rsi
	mov	qword ptr [rbp - 80], rdx
	mov	rdx, qword ptr [rbp - 80]
	mov	qword ptr [rbp - 48], rdx
	mov	dword ptr [rbp - 84], 1498677383
.LBB305_1:                              
	mov	eax, dword ptr [rbp - 84]
	mov	ecx, eax
	sub	ecx, -2040549322
	mov	dword ptr [rbp - 88], eax 
	mov	dword ptr [rbp - 92], ecx 
	je	.LBB305_5
	jmp	.LBB305_14
.LBB305_14:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, -398281536
	mov	dword ptr [rbp - 96], eax 
	je	.LBB305_9
	jmp	.LBB305_15
.LBB305_15:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, -182727955
	mov	dword ptr [rbp - 100], eax 
	je	.LBB305_8
	jmp	.LBB305_16
.LBB305_16:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, -18742326
	mov	dword ptr [rbp - 104], eax 
	je	.LBB305_12
	jmp	.LBB305_17
.LBB305_17:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 134081286
	mov	dword ptr [rbp - 108], eax 
	je	.LBB305_7
	jmp	.LBB305_18
.LBB305_18:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 287439777
	mov	dword ptr [rbp - 112], eax 
	je	.LBB305_10
	jmp	.LBB305_19
.LBB305_19:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 1498677383
	mov	dword ptr [rbp - 116], eax 
	je	.LBB305_3
	jmp	.LBB305_20
.LBB305_20:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 1546721472
	mov	dword ptr [rbp - 120], eax 
	je	.LBB305_11
	jmp	.LBB305_21
.LBB305_21:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 1586555371
	mov	dword ptr [rbp - 124], eax 
	je	.LBB305_4
	jmp	.LBB305_22
.LBB305_22:                             
	mov	eax, dword ptr [rbp - 88] 
	sub	eax, 1728850550
	mov	dword ptr [rbp - 128], eax 
	je	.LBB305_6
	jmp	.LBB305_2
.LBB305_2:                              
	jmp	.LBB305_13
.LBB305_3:                              
	mov	eax, 134081286
	mov	ecx, 1586555371
	mov	rdx, qword ptr [rbp - 48]
	cmp	rdx, 0
	cmove	eax, ecx
	mov	dword ptr [rbp - 84], eax
	jmp	.LBB305_13
.LBB305_4:                              
	mov	eax, 1546721472
	mov	ecx, 2254417974
	mov	edx, dword ptr [x.548]
	mov	esi, dword ptr [y.549]
	mov	edi, edx
	add	edi, -2047843708
	sub	edi, 1
	sub	edi, -2047843708
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 84], eax
	jmp	.LBB305_13
.LBB305_5:                              
	mov	eax, 1546721472
	mov	ecx, 1728850550
	mov	dl, 1
	mov	rsi, qword ptr [rbp - 64]
	mov	qword ptr [rbp - 56], rsi
	mov	edi, dword ptr [x.548]
	mov	r8d, dword ptr [y.549]
	mov	r9d, edi
	sub	r9d, -1034628977
	sub	r9d, 1
	add	r9d, -1034628977
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 1
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, -1
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 1
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 84], eax
	jmp	.LBB305_13
.LBB305_6:                              
	mov	dword ptr [rbp - 84], 287439777
	jmp	.LBB305_13
.LBB305_7:                              
	mov	eax, 4276224970
	mov	ecx, 4112239341
	mov	dl, 1
	mov	esi, dword ptr [x.548]
	mov	edi, dword ptr [y.549]
	mov	r8d, esi
	sub	r8d, 428974489
	sub	r8d, 1
	add	r8d, 428974489
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 1
	mov	r14b, r11b
	and	r14b, -1
	and	r9b, dl
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 1
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 84], eax
	jmp	.LBB305_13
.LBB305_8:                              
	mov	eax, 4276224970
	mov	ecx, 3896685760
	mov	dl, 1
	mov	rsi, qword ptr [rbp - 64]
	mov	rdi, qword ptr [rbp - 72]
	mov	r8, qword ptr [rbp - 80]
	mov	qword ptr [rbp - 136], rdi 
	mov	rdi, rsi
	mov	r9, qword ptr [rbp - 136] 
	mov	qword ptr [rbp - 144], rsi 
	mov	rsi, r9
	mov	byte ptr [rbp - 145], dl 
	mov	rdx, r8
	mov	dword ptr [rbp - 152], eax 
	mov	dword ptr [rbp - 156], ecx 
	call	memcpy
	mov	rdx, qword ptr [rbp - 144] 
	mov	qword ptr [rbp - 56], rdx
	mov	eax, dword ptr [x.548]
	mov	ecx, dword ptr [y.549]
	mov	r10d, eax
	sub	r10d, 1723038016
	sub	r10d, 1
	add	r10d, 1723038016
	imul	eax, r10d
	and	eax, 1
	cmp	eax, 0
	sete	r11b
	cmp	ecx, 10
	setl	bl
	mov	r14b, r11b
	xor	r14b, -1
	mov	r15b, bl
	xor	r15b, -1
	mov	r12b, byte ptr [rbp - 145] 
	xor	r12b, 1
	mov	r13b, r14b
	and	r13b, -1
	and	r11b, r12b
	mov	al, r15b
	and	al, -1
	and	bl, r12b
	or	r13b, r11b
	or	al, bl
	xor	r13b, al
	or	r14b, r15b
	xor	r14b, -1
	or	r12b, 1
	and	r14b, r12b
	or	r13b, r14b
	test	r13b, 1
	mov	ecx, dword ptr [rbp - 152] 
	mov	r10d, dword ptr [rbp - 156] 
	cmovne	ecx, r10d
	mov	dword ptr [rbp - 84], ecx
	jmp	.LBB305_13
.LBB305_9:                              
	mov	dword ptr [rbp - 84], 287439777
	jmp	.LBB305_13
.LBB305_10:
	mov	rax, qword ptr [rbp - 56]
	add	rsp, 136
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB305_11:                             
	mov	rax, qword ptr [rbp - 64]
	mov	qword ptr [rbp - 56], rax
	mov	dword ptr [rbp - 84], -2040549322
	jmp	.LBB305_13
.LBB305_12:                             
	mov	rax, qword ptr [rbp - 64]
	mov	rsi, qword ptr [rbp - 72]
	mov	rdx, qword ptr [rbp - 80]
	mov	rdi, rax
	mov	qword ptr [rbp - 168], rax 
	call	memcpy
	mov	rax, qword ptr [rbp - 168] 
	mov	qword ptr [rbp - 56], rax
	mov	dword ptr [rbp - 84], -182727955
.LBB305_13:                             
	jmp	.LBB305_1
.Lfunc_end305:
	.size	_ZNSt11char_traitsIcE4copyEPcPKcm, .Lfunc_end305-_ZNSt11char_traitsIcE4copyEPcPKcm

	.section	.text._ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv,"axG",@progbits,_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv,comdat
	.weak	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv 
	.p2align	4, 0x90
	.type	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv,@function
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv: 
	.cfi_startproc

	push	rbp
.Lcfi591:
	.cfi_def_cfa_offset 16
.Lcfi592:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi593:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 88
.Lcfi594:
	.cfi_offset rbx, -56
.Lcfi595:
	.cfi_offset r12, -48
.Lcfi596:
	.cfi_offset r13, -40
.Lcfi597:
	.cfi_offset r14, -32
.Lcfi598:
	.cfi_offset r15, -24
	mov	eax, dword ptr [x.550]
	mov	ecx, dword ptr [y.551]
	mov	edx, eax
	add	edx, 1270668033
	sub	edx, 1
	sub	edx, 1270668033
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 43], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 42], sil
	mov	dword ptr [rbp - 48], -138847116
	mov	qword ptr [rbp - 56], rdi 
.LBB306_1:                              
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -1044421036
	mov	dword ptr [rbp - 60], eax 
	mov	dword ptr [rbp - 64], ecx 
	je	.LBB306_5
	jmp	.LBB306_8
.LBB306_8:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, -236585270
	mov	dword ptr [rbp - 68], eax 
	je	.LBB306_4
	jmp	.LBB306_9
.LBB306_9:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, -138847116
	mov	dword ptr [rbp - 72], eax 
	je	.LBB306_3
	jmp	.LBB306_10
.LBB306_10:                             
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 909560681
	mov	dword ptr [rbp - 76], eax 
	je	.LBB306_6
	jmp	.LBB306_2
.LBB306_2:                              
	jmp	.LBB306_7
.LBB306_3:                              
	mov	eax, 909560681
	mov	ecx, 4058382026
	mov	dl, byte ptr [rbp - 43]
	mov	sil, byte ptr [rbp - 42]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB306_7
.LBB306_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	mov	qword ptr [rbp - 88], rax 
	call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv
	mov	rdi, qword ptr [rbp - 88] 
	mov	qword ptr [rbp - 96], rax 
	call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv
	mov	edx, 909560681
	mov	esi, 3250546260
	mov	r8b, 1
	xor	r9d, r9d
	mov	rcx, qword ptr [rbp - 96] 
	cmp	rcx, rax
	sete	r10b
	and	r10b, 1
	mov	byte ptr [rbp - 41], r10b
	mov	r11d, dword ptr [x.550]
	mov	ebx, dword ptr [y.551]
	sub	r9d, 1
	mov	r14d, r11d
	add	r14d, r9d
	imul	r11d, r14d
	and	r11d, 1
	cmp	r11d, 0
	sete	r10b
	cmp	ebx, 10
	setl	r15b
	mov	r12b, r10b
	xor	r12b, -1
	mov	r13b, r15b
	xor	r13b, -1
	xor	r8b, 0
	mov	al, r12b
	and	al, 0
	and	r10b, r8b
	mov	cl, r13b
	and	cl, 0
	and	r15b, r8b
	or	al, r10b
	or	cl, r15b
	xor	al, cl
	or	r12b, r13b
	xor	r12b, -1
	or	r8b, 0
	and	r12b, r8b
	or	al, r12b
	test	al, 1
	cmovne	edx, esi
	mov	dword ptr [rbp - 48], edx
	jmp	.LBB306_7
.LBB306_5:
	mov	al, byte ptr [rbp - 41]
	and	al, 1
	movzx	eax, al
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB306_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rax]
	mov	rdi, rax
	mov	qword ptr [rbp - 104], rax 
	call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv
	mov	rdi, qword ptr [rbp - 104] 
	mov	qword ptr [rbp - 112], rax 
	call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv
	mov	dword ptr [rbp - 48], -236585270
	mov	qword ptr [rbp - 120], rax 
.LBB306_7:                              
	jmp	.LBB306_1
.Lfunc_end306:
	.size	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv, .Lfunc_end306-_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv
	.cfi_endproc

	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm 
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm: 
.Lfunc_begin38:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception38

	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rsi, qword ptr [rbp - 8]
.Ltmp164:
	mov	rdi, rsi
	mov	qword ptr [rbp - 40], rsi 
	call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv
.Ltmp165:
	mov	qword ptr [rbp - 48], rax 
	jmp	.LBB307_1
.LBB307_1:
.Ltmp166:
	mov	rdi, qword ptr [rbp - 40] 
	call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv
.Ltmp167:
	mov	qword ptr [rbp - 56], rax 
	jmp	.LBB307_2
.LBB307_2:
	mov	rax, qword ptr [rbp - 16]
	neg	rax
	mov	ecx, 1
	mov	edx, ecx
	sub	rdx, rax
.Ltmp168:
	mov	rdi, qword ptr [rbp - 48] 
	mov	rsi, qword ptr [rbp - 56] 
	call	_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm
.Ltmp169:
	jmp	.LBB307_3
.LBB307_3:
	add	rsp, 64
	pop	rbp
	ret
.LBB307_4:
.Ltmp170:
	mov	ecx, edx
	mov	qword ptr [rbp - 24], rax
	mov	dword ptr [rbp - 28], ecx

	mov	rdi, qword ptr [rbp - 24]
	call	__cxa_call_unexpected
.Lfunc_end307:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm, .Lfunc_end307-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table307:
.Lexception38:
	.byte	255                     
	.byte	3                       
	.asciz	"\236\200\200"          
	.byte	3                       
	.byte	26                      
	.long	.Ltmp164-.Lfunc_begin38 
	.long	.Ltmp169-.Ltmp164       
	.long	.Ltmp170-.Lfunc_begin38 
	.byte	1                       
	.long	.Ltmp169-.Lfunc_begin38 
	.long	.Lfunc_end307-.Ltmp169  
	.long	0                       
	.byte	0                       
	.byte	127                     

	.byte	0                       

	.byte	0
	.p2align	2

	.section	.text._ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv,"axG",@progbits,_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv,comdat
	.weak	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv 
	.p2align	4, 0x90
	.type	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv,@function
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	add	rdi, 16
	call	_ZNSt14pointer_traitsIPKcE10pointer_toERS0_
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end308:
	.size	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv, .Lfunc_end308-_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv

	.section	.text._ZNSt14pointer_traitsIPKcE10pointer_toERS0_,"axG",@progbits,_ZNSt14pointer_traitsIPKcE10pointer_toERS0_,comdat
	.weak	_ZNSt14pointer_traitsIPKcE10pointer_toERS0_ 
	.p2align	4, 0x90
	.type	_ZNSt14pointer_traitsIPKcE10pointer_toERS0_,@function
_ZNSt14pointer_traitsIPKcE10pointer_toERS0_: 

	push	rbp
	mov	rbp, rsp
	push	r14
	push	rbx
	sub	rsp, 64
	mov	eax, dword ptr [x.554]
	mov	ecx, dword ptr [y.555]
	mov	edx, eax
	sub	edx, 1077918442
	sub	edx, 1
	add	edx, 1077918442
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 26], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 25], sil
	mov	dword ptr [rbp - 32], -1672093580
	mov	qword ptr [rbp - 40], rdi 
.LBB309_1:                              
	mov	eax, dword ptr [rbp - 32]
	mov	ecx, eax
	sub	ecx, -1672093580
	mov	dword ptr [rbp - 44], eax 
	mov	dword ptr [rbp - 48], ecx 
	je	.LBB309_3
	jmp	.LBB309_8
.LBB309_8:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 100741704
	mov	dword ptr [rbp - 52], eax 
	je	.LBB309_6
	jmp	.LBB309_9
.LBB309_9:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 252364141
	mov	dword ptr [rbp - 56], eax 
	je	.LBB309_5
	jmp	.LBB309_10
.LBB309_10:                             
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 1318877048
	mov	dword ptr [rbp - 60], eax 
	je	.LBB309_4
	jmp	.LBB309_2
.LBB309_2:                              
	jmp	.LBB309_7
.LBB309_3:                              
	mov	eax, 100741704
	mov	ecx, 1318877048
	mov	dl, 1
	mov	sil, byte ptr [rbp - 26]
	mov	dil, byte ptr [rbp - 25]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB309_7
.LBB309_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	rdi, qword ptr [rax]
	call	_ZSt9addressofIKcEPT_RS1_
	mov	edx, 100741704
	mov	esi, 252364141
	mov	qword ptr [rbp - 24], rax
	mov	r8d, dword ptr [x.554]
	mov	r9d, dword ptr [y.555]
	mov	r10d, r8d
	sub	r10d, 1652987259
	sub	r10d, 1
	add	r10d, 1652987259
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	edx, esi
	mov	dword ptr [rbp - 32], edx
	jmp	.LBB309_7
.LBB309_5:
	mov	rax, qword ptr [rbp - 24]
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
.LBB309_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	rdi, qword ptr [rax]
	call	_ZSt9addressofIKcEPT_RS1_
	mov	dword ptr [rbp - 32], 1318877048
	mov	qword ptr [rbp - 72], rax 
.LBB309_7:                              
	jmp	.LBB309_1
.Lfunc_end309:
	.size	_ZNSt14pointer_traitsIPKcE10pointer_toERS0_, .Lfunc_end309-_ZNSt14pointer_traitsIPKcE10pointer_toERS0_

	.section	.text._ZSt9addressofIKcEPT_RS1_,"axG",@progbits,_ZSt9addressofIKcEPT_RS1_,comdat
	.weak	_ZSt9addressofIKcEPT_RS1_ 
	.p2align	4, 0x90
	.type	_ZSt9addressofIKcEPT_RS1_,@function
_ZSt9addressofIKcEPT_RS1_:              

	push	rbp
	mov	rbp, rsp
	push	r14
	push	rbx
	sub	rsp, 64
	mov	eax, dword ptr [x.556]
	mov	ecx, dword ptr [y.557]
	mov	edx, eax
	add	edx, -925247292
	sub	edx, 1
	sub	edx, -925247292
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 26], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 25], sil
	mov	dword ptr [rbp - 32], -176649477
	mov	qword ptr [rbp - 40], rdi 
.LBB310_1:                              
	mov	eax, dword ptr [rbp - 32]
	mov	ecx, eax
	sub	ecx, -692420629
	mov	dword ptr [rbp - 44], eax 
	mov	dword ptr [rbp - 48], ecx 
	je	.LBB310_5
	jmp	.LBB310_8
.LBB310_8:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, -176649477
	mov	dword ptr [rbp - 52], eax 
	je	.LBB310_3
	jmp	.LBB310_9
.LBB310_9:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 344373625
	mov	dword ptr [rbp - 56], eax 
	je	.LBB310_4
	jmp	.LBB310_10
.LBB310_10:                             
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 2048467955
	mov	dword ptr [rbp - 60], eax 
	je	.LBB310_6
	jmp	.LBB310_2
.LBB310_2:                              
	jmp	.LBB310_7
.LBB310_3:                              
	mov	eax, 2048467955
	mov	ecx, 344373625
	mov	dl, byte ptr [rbp - 26]
	mov	sil, byte ptr [rbp - 25]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB310_7
.LBB310_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	rdi, qword ptr [rax]
	call	_ZSt11__addressofIKcEPT_RS1_
	mov	edx, 2048467955
	mov	esi, 3602546667
	mov	qword ptr [rbp - 24], rax
	mov	r8d, dword ptr [x.556]
	mov	r9d, dword ptr [y.557]
	mov	r10d, r8d
	sub	r10d, -2109405594
	sub	r10d, 1
	add	r10d, -2109405594
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	edx, esi
	mov	dword ptr [rbp - 32], edx
	jmp	.LBB310_7
.LBB310_5:
	mov	rax, qword ptr [rbp - 24]
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
.LBB310_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rcx
	mov	rdi, qword ptr [rax]
	call	_ZSt11__addressofIKcEPT_RS1_
	mov	dword ptr [rbp - 32], 344373625
	mov	qword ptr [rbp - 72], rax 
.LBB310_7:                              
	jmp	.LBB310_1
.Lfunc_end310:
	.size	_ZSt9addressofIKcEPT_RS1_, .Lfunc_end310-_ZSt9addressofIKcEPT_RS1_

	.section	.text._ZSt11__addressofIKcEPT_RS1_,"axG",@progbits,_ZSt11__addressofIKcEPT_RS1_,comdat
	.weak	_ZSt11__addressofIKcEPT_RS1_ 
	.p2align	4, 0x90
	.type	_ZSt11__addressofIKcEPT_RS1_,@function
_ZSt11__addressofIKcEPT_RS1_:           

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	pop	rbp
	ret
.Lfunc_end311:
	.size	_ZSt11__addressofIKcEPT_RS1_, .Lfunc_end311-_ZSt11__addressofIKcEPT_RS1_

	.section	.text._ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm,"axG",@progbits,_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm,comdat
	.weak	_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm 
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm,@function
_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm: 
	.cfi_startproc

	push	rbp
.Lcfi599:
	.cfi_def_cfa_offset 16
.Lcfi600:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi601:
	.cfi_def_cfa_register rbp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	rdx, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rbp - 16]
	mov	rdi, qword ptr [rbp - 24]
	mov	qword ptr [rbp - 32], rdi 
	mov	rdi, rdx
	mov	rdx, qword ptr [rbp - 32] 
	call	_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end312:
	.size	_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm, .Lfunc_end312-_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm 
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm,@function
_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	rdi, qword ptr [rbp - 16]
	call	_ZdlPv
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end313:
	.size	_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm, .Lfunc_end313-_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm

	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm 
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rsi, qword ptr [rbp - 8]
	mov	rdi, qword ptr [rbp - 16]
	mov	qword ptr [rsi + 8], rdi
	pop	rbp
	ret
.Lfunc_end314:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm, .Lfunc_end314-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm

	.section	.text._ZN9__gnu_cxx11char_traitsIcE6lengthEPKc,"axG",@progbits,_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc,comdat
	.weak	_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc 
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc,@function
_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc: 
	.cfi_startproc

	push	rbp
.Lcfi602:
	.cfi_def_cfa_offset 16
.Lcfi603:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi604:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	sub	rsp, 64
.Lcfi605:
	.cfi_offset rbx, -48
.Lcfi606:
	.cfi_offset r12, -40
.Lcfi607:
	.cfi_offset r14, -32
.Lcfi608:
	.cfi_offset r15, -24
	mov	qword ptr [rbp - 48], rdi
	mov	qword ptr [rbp - 56], 0
	mov	dword ptr [rbp - 64], -1257104869
.LBB315_1:                              
	mov	eax, dword ptr [rbp - 64]
	mov	ecx, eax
	sub	ecx, -2093458204
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB315_7
	jmp	.LBB315_10
.LBB315_10:                             
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -1338090092
	mov	dword ptr [rbp - 76], eax 
	je	.LBB315_8
	jmp	.LBB315_11
.LBB315_11:                             
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -1257104869
	mov	dword ptr [rbp - 80], eax 
	je	.LBB315_3
	jmp	.LBB315_12
.LBB315_12:                             
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1200363693
	mov	dword ptr [rbp - 84], eax 
	je	.LBB315_5
	jmp	.LBB315_13
.LBB315_13:                             
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1248974739
	mov	dword ptr [rbp - 88], eax 
	je	.LBB315_6
	jmp	.LBB315_14
.LBB315_14:                             
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1917718055
	mov	dword ptr [rbp - 92], eax 
	je	.LBB315_4
	jmp	.LBB315_2
.LBB315_2:                              
	jmp	.LBB315_9
.LBB315_3:                              
	lea	rsi, [rbp - 57]
	mov	rax, qword ptr [rbp - 48]
	add	rax, qword ptr [rbp - 56]
	mov	byte ptr [rbp - 57], 0
	mov	rdi, rax
	call	_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_
	mov	ecx, 1200363693
	mov	edx, 1917718055
	mov	r8b, 1
	mov	r9b, al
	xor	r9b, -1
	and	r9b, 1
	xor	r8b, 1
	and	al, r8b
	or	r9b, al
	test	r9b, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 64], ecx
	jmp	.LBB315_9
.LBB315_4:                              
	xor	eax, eax
	mov	ecx, eax
	mov	rdx, qword ptr [rbp - 56]
	mov	rsi, rcx
	sub	rsi, rdx
	mov	rdx, rcx
	sub	rdx, 1
	add	rsi, rdx
	sub	rcx, rsi
	mov	qword ptr [rbp - 56], rcx
	mov	dword ptr [rbp - 64], -1257104869
	jmp	.LBB315_9
.LBB315_5:                              
	mov	eax, 2956877204
	mov	ecx, 1248974739
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.568]
	mov	r8d, dword ptr [y.569]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 0
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, 0
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 0
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 64], eax
	jmp	.LBB315_9
.LBB315_6:                              
	mov	eax, 2956877204
	mov	ecx, 2201509092
	mov	rdx, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 40], rdx
	mov	esi, dword ptr [x.568]
	mov	edi, dword ptr [y.569]
	mov	r8d, esi
	sub	r8d, 418496556
	sub	r8d, 1
	add	r8d, 418496556
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	and	r11b, r10b
	xor	r9b, r10b
	or	r11b, r9b
	test	r11b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 64], eax
	jmp	.LBB315_9
.LBB315_7:
	mov	rax, qword ptr [rbp - 40]
	add	rsp, 64
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB315_8:                              
	mov	dword ptr [rbp - 64], 1248974739
.LBB315_9:                              
	jmp	.LBB315_1
.Lfunc_end315:
	.size	_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc, .Lfunc_end315-_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc
	.cfi_endproc

	.section	.text._ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_,"axG",@progbits,_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_,comdat
	.weak	_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_ 
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_,@function
_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rsi, qword ptr [rbp - 8]
	movsx	eax, byte ptr [rsi]
	mov	rsi, qword ptr [rbp - 16]
	movsx	ecx, byte ptr [rsi]
	cmp	eax, ecx
	sete	dl
	and	dl, 1
	movzx	eax, dl
	pop	rbp
	ret
.Lfunc_end316:
	.size	_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_, .Lfunc_end316-_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_

	.section	.text._ZN9__gnu_cxxeqIPKjSt6vectorIjN5Botan16secure_allocatorIjEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_,"axG",@progbits,_ZN9__gnu_cxxeqIPKjSt6vectorIjN5Botan16secure_allocatorIjEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_,comdat
	.weak	_ZN9__gnu_cxxeqIPKjSt6vectorIjN5Botan16secure_allocatorIjEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_ 
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxeqIPKjSt6vectorIjN5Botan16secure_allocatorIjEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_,@function
_ZN9__gnu_cxxeqIPKjSt6vectorIjN5Botan16secure_allocatorIjEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNK9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjN5Botan16secure_allocatorIjEEEE4baseEv
	mov	rax, qword ptr [rax]
	mov	rdi, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 24], rax 
	call	_ZNK9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjN5Botan16secure_allocatorIjEEEE4baseEv
	mov	rsi, qword ptr [rbp - 24] 
	cmp	rsi, qword ptr [rax]
	sete	cl
	and	cl, 1
	movzx	eax, cl
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end317:
	.size	_ZN9__gnu_cxxeqIPKjSt6vectorIjN5Botan16secure_allocatorIjEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_, .Lfunc_end317-_ZN9__gnu_cxxeqIPKjSt6vectorIjN5Botan16secure_allocatorIjEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_

	.section	.text._ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE5beginEv,"axG",@progbits,_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE5beginEv,comdat
	.weak	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE5beginEv 
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE5beginEv,@function
_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE5beginEv: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	lea	rax, [rbp - 8]
	lea	rsi, [rbp - 24]
	mov	qword ptr [rbp - 16], rdi
	mov	rdi, qword ptr [rbp - 16]
	mov	rdi, qword ptr [rdi]
	mov	qword ptr [rbp - 24], rdi
	mov	rdi, rax
	call	_ZN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjN5Botan16secure_allocatorIjEEEEC2ERKS2_
	mov	rax, qword ptr [rbp - 8]
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end318:
	.size	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE5beginEv, .Lfunc_end318-_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE5beginEv

	.section	.text._ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE3endEv,"axG",@progbits,_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE3endEv,comdat
	.weak	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE3endEv 
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE3endEv,@function
_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE3endEv: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	lea	rax, [rbp - 8]
	lea	rsi, [rbp - 24]
	mov	qword ptr [rbp - 16], rdi
	mov	rdi, qword ptr [rbp - 16]
	mov	rdi, qword ptr [rdi + 8]
	mov	qword ptr [rbp - 24], rdi
	mov	rdi, rax
	call	_ZN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjN5Botan16secure_allocatorIjEEEEC2ERKS2_
	mov	rax, qword ptr [rbp - 8]
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end319:
	.size	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE3endEv, .Lfunc_end319-_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE3endEv

	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjN5Botan16secure_allocatorIjEEEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjN5Botan16secure_allocatorIjEEEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjN5Botan16secure_allocatorIjEEEE4baseEv 
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjN5Botan16secure_allocatorIjEEEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjN5Botan16secure_allocatorIjEEEE4baseEv: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	pop	rbp
	ret
.Lfunc_end320:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjN5Botan16secure_allocatorIjEEEE4baseEv, .Lfunc_end320-_ZNK9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjN5Botan16secure_allocatorIjEEEE4baseEv

	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjN5Botan16secure_allocatorIjEEEEC2ERKS2_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjN5Botan16secure_allocatorIjEEEEC2ERKS2_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjN5Botan16secure_allocatorIjEEEEC2ERKS2_ 
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjN5Botan16secure_allocatorIjEEEEC2ERKS2_,@function
_ZN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjN5Botan16secure_allocatorIjEEEEC2ERKS2_: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rsi, qword ptr [rbp - 8]
	mov	rdi, qword ptr [rbp - 16]
	mov	rdi, qword ptr [rdi]
	mov	qword ptr [rsi], rdi
	pop	rbp
	ret
.Lfunc_end321:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjN5Botan16secure_allocatorIjEEEEC2ERKS2_, .Lfunc_end321-_ZN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjN5Botan16secure_allocatorIjEEEEC2ERKS2_

	.section	.text._ZN5Botan7zeroiseIjNS_16secure_allocatorIjEEEEvRSt6vectorIT_T0_E,"axG",@progbits,_ZN5Botan7zeroiseIjNS_16secure_allocatorIjEEEEvRSt6vectorIT_T0_E,comdat
	.weak	_ZN5Botan7zeroiseIjNS_16secure_allocatorIjEEEEvRSt6vectorIT_T0_E 
	.p2align	4, 0x90
	.type	_ZN5Botan7zeroiseIjNS_16secure_allocatorIjEEEEvRSt6vectorIT_T0_E,@function
_ZN5Botan7zeroiseIjNS_16secure_allocatorIjEEEEvRSt6vectorIT_T0_E: 
	.cfi_startproc

	push	rbp
.Lcfi609:
	.cfi_def_cfa_offset 16
.Lcfi610:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi611:
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE4dataEv
	mov	rdi, qword ptr [rbp - 8]
	mov	qword ptr [rbp - 16], rax 
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	mov	rdi, qword ptr [rbp - 16] 
	mov	rsi, rax
	call	_ZN5Botan9clear_memIjEEvPT_m
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end322:
	.size	_ZN5Botan7zeroiseIjNS_16secure_allocatorIjEEEEvRSt6vectorIT_T0_E, .Lfunc_end322-_ZN5Botan7zeroiseIjNS_16secure_allocatorIjEEEEvRSt6vectorIT_T0_E
	.cfi_endproc

	.section	.text._ZNSt6vectorIjN5Botan16secure_allocatorIjEEE5clearEv,"axG",@progbits,_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE5clearEv,comdat
	.weak	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE5clearEv 
	.p2align	4, 0x90
	.type	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE5clearEv,@function
_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE5clearEv: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rdi]
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE15_M_erase_at_endEPj
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end323:
	.size	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE5clearEv, .Lfunc_end323-_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE5clearEv

	.section	.text._ZNSt6vectorIjN5Botan16secure_allocatorIjEEE13shrink_to_fitEv,"axG",@progbits,_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE13shrink_to_fitEv,comdat
	.weak	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE13shrink_to_fitEv 
	.p2align	4, 0x90
	.type	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE13shrink_to_fitEv,@function
_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE13shrink_to_fitEv: 
	.cfi_startproc

	push	rbp
.Lcfi612:
	.cfi_def_cfa_offset 16
.Lcfi613:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi614:
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE16_M_shrink_to_fitEv
	mov	byte ptr [rbp - 9], al  
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end324:
	.size	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE13shrink_to_fitEv, .Lfunc_end324-_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE13shrink_to_fitEv
	.cfi_endproc

	.section	.text._ZN5Botan9clear_memIjEEvPT_m,"axG",@progbits,_ZN5Botan9clear_memIjEEvPT_m,comdat
	.weak	_ZN5Botan9clear_memIjEEvPT_m 
	.p2align	4, 0x90
	.type	_ZN5Botan9clear_memIjEEvPT_m,@function
_ZN5Botan9clear_memIjEEvPT_m:           
	.cfi_startproc

	push	rbp
.Lcfi615:
	.cfi_def_cfa_offset 16
.Lcfi616:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi617:
	.cfi_def_cfa_register rbp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rsi, qword ptr [rbp - 8]
	mov	rdi, qword ptr [rbp - 16]
	shl	rdi, 2
	mov	qword ptr [rbp - 24], rdi 
	mov	rdi, rsi
	mov	rsi, qword ptr [rbp - 24] 
	call	_ZN5Botan11clear_bytesEPvm
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end325:
	.size	_ZN5Botan9clear_memIjEEvPT_m, .Lfunc_end325-_ZN5Botan9clear_memIjEEvPT_m
	.cfi_endproc

	.section	.text._ZN5Botan11clear_bytesEPvm,"axG",@progbits,_ZN5Botan11clear_bytesEPvm,comdat
	.weak	_ZN5Botan11clear_bytesEPvm 
	.p2align	4, 0x90
	.type	_ZN5Botan11clear_bytesEPvm,@function
_ZN5Botan11clear_bytesEPvm:             

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r12
	push	rbx
	sub	rsp, 80
	mov	qword ptr [rbp - 48], rdi
	mov	qword ptr [rbp - 56], rsi
	mov	rsi, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 40], rsi
	mov	dword ptr [rbp - 60], -1885163765
.LBB326_1:                              
	mov	eax, dword ptr [rbp - 60]
	mov	ecx, eax
	sub	ecx, -1885163765
	mov	dword ptr [rbp - 64], eax 
	mov	dword ptr [rbp - 68], ecx 
	je	.LBB326_3
	jmp	.LBB326_13
.LBB326_13:                             
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, -1446051593
	mov	dword ptr [rbp - 72], eax 
	je	.LBB326_10
	jmp	.LBB326_14
.LBB326_14:                             
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, -1274093051
	mov	dword ptr [rbp - 76], eax 
	je	.LBB326_7
	jmp	.LBB326_15
.LBB326_15:                             
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, -1167197275
	mov	dword ptr [rbp - 80], eax 
	je	.LBB326_6
	jmp	.LBB326_16
.LBB326_16:                             
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, -1142046603
	mov	dword ptr [rbp - 84], eax 
	je	.LBB326_11
	jmp	.LBB326_17
.LBB326_17:                             
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, -825053286
	mov	dword ptr [rbp - 88], eax 
	je	.LBB326_4
	jmp	.LBB326_18
.LBB326_18:                             
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, 306183321
	mov	dword ptr [rbp - 92], eax 
	je	.LBB326_8
	jmp	.LBB326_19
.LBB326_19:                             
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, 715336363
	mov	dword ptr [rbp - 96], eax 
	je	.LBB326_9
	jmp	.LBB326_20
.LBB326_20:                             
	mov	eax, dword ptr [rbp - 64] 
	sub	eax, 1844853320
	mov	dword ptr [rbp - 100], eax 
	je	.LBB326_5
	jmp	.LBB326_2
.LBB326_2:                              
	jmp	.LBB326_12
.LBB326_3:                              
	mov	eax, 3020874245
	mov	ecx, 3469914010
	mov	rdx, qword ptr [rbp - 40]
	cmp	rdx, 0
	cmova	eax, ecx
	mov	dword ptr [rbp - 60], eax
	jmp	.LBB326_12
.LBB326_4:                              
	mov	eax, 2848915703
	mov	ecx, 1844853320
	mov	dl, 1
	xor	esi, esi
	mov	edi, dword ptr [x.590]
	mov	r8d, dword ptr [y.591]
	sub	esi, 1
	mov	r9d, edi
	add	r9d, esi
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, r11b
	xor	r14b, -1
	xor	dl, 1
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	mov	r12b, r14b
	and	r12b, -1
	and	r11b, dl
	or	r15b, r10b
	or	r12b, r11b
	xor	r15b, r12b
	or	bl, r14b
	xor	bl, -1
	or	dl, 1
	and	bl, dl
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 60], eax
	jmp	.LBB326_12
.LBB326_5:                              
	mov	eax, 2848915703
	mov	ecx, 3127770021
	mov	dl, 1
	xor	esi, esi
	mov	rdi, qword ptr [rbp - 48]
	mov	r8, qword ptr [rbp - 56]
	mov	byte ptr [rbp - 101], dl 
	mov	rdx, r8
	mov	dword ptr [rbp - 108], eax 
	mov	dword ptr [rbp - 112], ecx 
	call	memset
	mov	eax, dword ptr [x.590]
	mov	ecx, dword ptr [y.591]
	mov	esi, eax
	sub	esi, -1310989545
	sub	esi, 1
	add	esi, -1310989545
	imul	eax, esi
	and	eax, 1
	cmp	eax, 0
	sete	r9b
	cmp	ecx, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	mov	r14b, byte ptr [rbp - 101] 
	xor	r14b, 1
	mov	r15b, r11b
	and	r15b, -1
	and	r9b, r14b
	mov	r12b, bl
	and	r12b, -1
	and	r10b, r14b
	or	r15b, r9b
	or	r12b, r10b
	xor	r15b, r12b
	or	r11b, bl
	xor	r11b, -1
	or	r14b, 1
	and	r11b, r14b
	or	r15b, r11b
	test	r15b, 1
	mov	eax, dword ptr [rbp - 108] 
	mov	ecx, dword ptr [rbp - 112] 
	cmovne	eax, ecx
	mov	dword ptr [rbp - 60], eax
	jmp	.LBB326_12
.LBB326_6:                              
	mov	dword ptr [rbp - 60], -1274093051
	jmp	.LBB326_12
.LBB326_7:                              
	mov	eax, 3152920693
	mov	ecx, 306183321
	xor	edx, edx
	mov	esi, dword ptr [x.590]
	mov	edi, dword ptr [y.591]
	sub	edx, 1
	mov	r8d, esi
	add	r8d, edx
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	and	r11b, r10b
	xor	r9b, r10b
	or	r11b, r9b
	test	r11b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 60], eax
	jmp	.LBB326_12
.LBB326_8:                              
	mov	eax, 3152920693
	mov	ecx, 715336363
	mov	edx, dword ptr [x.590]
	mov	esi, dword ptr [y.591]
	mov	edi, edx
	add	edi, 219072041
	sub	edi, 1
	sub	edi, 219072041
	imul	edx, edi
	and	edx, 1
	cmp	edx, 0
	sete	r8b
	cmp	esi, 10
	setl	r9b
	mov	r10b, r8b
	and	r10b, r9b
	xor	r8b, r9b
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 60], eax
	jmp	.LBB326_12
.LBB326_9:
	add	rsp, 80
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB326_10:                             
	xor	esi, esi
	mov	rdi, qword ptr [rbp - 48]
	mov	rdx, qword ptr [rbp - 56]
	call	memset
	mov	dword ptr [rbp - 60], 1844853320
	jmp	.LBB326_12
.LBB326_11:                             
	mov	dword ptr [rbp - 60], 306183321
.LBB326_12:                             
	jmp	.LBB326_1
.Lfunc_end326:
	.size	_ZN5Botan11clear_bytesEPvm, .Lfunc_end326-_ZN5Botan11clear_bytesEPvm

	.section	.text._ZNSt6vectorIjN5Botan16secure_allocatorIjEEE16_M_shrink_to_fitEv,"axG",@progbits,_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE16_M_shrink_to_fitEv,comdat
	.weak	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE16_M_shrink_to_fitEv 
	.p2align	4, 0x90
	.type	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE16_M_shrink_to_fitEv,@function
_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE16_M_shrink_to_fitEv: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 88
	mov	qword ptr [rbp - 64], rdi
	mov	rdi, qword ptr [rbp - 64]
	mov	qword ptr [rbp - 48], rdi
	mov	rdi, qword ptr [rbp - 48]
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE8capacityEv
	mov	qword ptr [rbp - 40], rax
	mov	rdi, qword ptr [rbp - 48]
	call	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE4sizeEv
	mov	qword ptr [rbp - 32], rax
	mov	dword ptr [rbp - 68], -470931798
.LBB327_1:                              
	mov	eax, dword ptr [rbp - 68]
	mov	ecx, eax
	sub	ecx, -1717954827
	mov	dword ptr [rbp - 72], eax 
	mov	dword ptr [rbp - 76], ecx 
	je	.LBB327_8
	jmp	.LBB327_11
.LBB327_11:                             
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, -1262109796
	mov	dword ptr [rbp - 80], eax 
	je	.LBB327_9
	jmp	.LBB327_12
.LBB327_12:                             
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, -470931798
	mov	dword ptr [rbp - 84], eax 
	je	.LBB327_3
	jmp	.LBB327_13
.LBB327_13:                             
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, 1043081879
	mov	dword ptr [rbp - 88], eax 
	je	.LBB327_5
	jmp	.LBB327_14
.LBB327_14:                             
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, 1496004357
	mov	dword ptr [rbp - 92], eax 
	je	.LBB327_4
	jmp	.LBB327_15
.LBB327_15:                             
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, 1809701417
	mov	dword ptr [rbp - 96], eax 
	je	.LBB327_6
	jmp	.LBB327_16
.LBB327_16:                             
	mov	eax, dword ptr [rbp - 72] 
	sub	eax, 2143719614
	mov	dword ptr [rbp - 100], eax 
	je	.LBB327_7
	jmp	.LBB327_2
.LBB327_2:                              
	jmp	.LBB327_10
.LBB327_3:                              
	mov	eax, 1043081879
	mov	ecx, 1496004357
	mov	rdx, qword ptr [rbp - 40]
	mov	rsi, qword ptr [rbp - 32]
	cmp	rdx, rsi
	cmove	eax, ecx
	mov	dword ptr [rbp - 68], eax
	jmp	.LBB327_10
.LBB327_4:                              
	mov	byte ptr [rbp - 49], 0
	mov	dword ptr [rbp - 68], -1717954827
	jmp	.LBB327_10
.LBB327_5:                              
	mov	eax, 3032857500
	mov	ecx, 1809701417
	mov	dl, 1
	mov	esi, dword ptr [x.592]
	mov	edi, dword ptr [y.593]
	mov	r8d, esi
	sub	r8d, -1539938202
	sub	r8d, 1
	add	r8d, -1539938202
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 0
	mov	r14b, r11b
	and	r14b, 0
	and	r9b, dl
	mov	r15b, bl
	and	r15b, 0
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 0
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 68], eax
	jmp	.LBB327_10
.LBB327_6:                              
	mov	rdi, qword ptr [rbp - 48]
	call	_ZNSt19__shrink_to_fit_auxISt6vectorIjN5Botan16secure_allocatorIjEEELb1EE8_S_do_itERS4_
	mov	ecx, 3032857500
	mov	edx, 2143719614
	and	al, 1
	mov	byte ptr [rbp - 49], al
	mov	esi, dword ptr [x.592]
	mov	r8d, dword ptr [y.593]
	mov	r9d, esi
	add	r9d, 214096989
	sub	r9d, 1
	sub	r9d, 214096989
	imul	esi, r9d
	and	esi, 1
	cmp	esi, 0
	sete	al
	cmp	r8d, 10
	setl	r10b
	mov	r11b, al
	and	r11b, r10b
	xor	al, r10b
	or	r11b, al
	test	r11b, 1
	cmovne	ecx, edx
	mov	dword ptr [rbp - 68], ecx
	jmp	.LBB327_10
.LBB327_7:                              
	mov	dword ptr [rbp - 68], -1717954827
	jmp	.LBB327_10
.LBB327_8:
	mov	al, byte ptr [rbp - 49]
	and	al, 1
	movzx	eax, al
	add	rsp, 88
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB327_9:                              
	mov	rdi, qword ptr [rbp - 48]
	call	_ZNSt19__shrink_to_fit_auxISt6vectorIjN5Botan16secure_allocatorIjEEELb1EE8_S_do_itERS4_
	and	al, 1
	mov	byte ptr [rbp - 49], al
	mov	dword ptr [rbp - 68], 1809701417
.LBB327_10:                             
	jmp	.LBB327_1
.Lfunc_end327:
	.size	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE16_M_shrink_to_fitEv, .Lfunc_end327-_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE16_M_shrink_to_fitEv

	.section	.text._ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE8capacityEv,"axG",@progbits,_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE8capacityEv,comdat
	.weak	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE8capacityEv 
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE8capacityEv,@function
_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE8capacityEv: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 56
	mov	eax, dword ptr [x.594]
	mov	ecx, dword ptr [y.595]
	mov	edx, eax
	sub	edx, -1203328153
	sub	edx, 1
	add	edx, -1203328153
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 34], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 33], sil
	mov	dword ptr [rbp - 40], -1156283724
	mov	qword ptr [rbp - 48], rdi 
.LBB328_1:                              
	mov	eax, dword ptr [rbp - 40]
	mov	ecx, eax
	sub	ecx, -2111349004
	mov	dword ptr [rbp - 52], eax 
	mov	dword ptr [rbp - 56], ecx 
	je	.LBB328_6
	jmp	.LBB328_8
.LBB328_8:                              
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, -1711276897
	mov	dword ptr [rbp - 60], eax 
	je	.LBB328_4
	jmp	.LBB328_9
.LBB328_9:                              
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, -1156283724
	mov	dword ptr [rbp - 64], eax 
	je	.LBB328_3
	jmp	.LBB328_10
.LBB328_10:                             
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, 1391555428
	mov	dword ptr [rbp - 68], eax 
	je	.LBB328_5
	jmp	.LBB328_2
.LBB328_2:                              
	jmp	.LBB328_7
.LBB328_3:                              
	mov	eax, 2183618292
	mov	ecx, 2583690399
	mov	dl, 1
	mov	sil, byte ptr [rbp - 34]
	mov	dil, byte ptr [rbp - 33]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 0
	mov	r10b, r8b
	and	r10b, 0
	and	sil, dl
	mov	r11b, r9b
	and	r11b, 0
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 0
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 40], eax
	jmp	.LBB328_7
.LBB328_4:                              
	mov	eax, 2183618292
	mov	ecx, 1391555428
	xor	edx, edx
	mov	esi, edx
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	r8, qword ptr [rbp - 48] 
	mov	qword ptr [rdi], r8
	mov	rdi, qword ptr [rdi]
	mov	r9, qword ptr [rdi + 16]
	mov	rdi, qword ptr [rdi]
	sub	rsi, rdi
	add	r9, rsi
	sar	r9, 2
	mov	qword ptr [rbp - 32], r9
	mov	edx, dword ptr [x.594]
	mov	r10d, dword ptr [y.595]
	mov	r11d, edx
	sub	r11d, -1893145324
	sub	r11d, 1
	add	r11d, -1893145324
	imul	edx, r11d
	and	edx, 1
	cmp	edx, 0
	sete	bl
	cmp	r10d, 10
	setl	r14b
	mov	r15b, bl
	and	r15b, r14b
	xor	bl, r14b
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 40], eax
	jmp	.LBB328_7
.LBB328_5:
	mov	rax, qword ptr [rbp - 32]
	lea	rsp, [rbp - 24]
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB328_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, qword ptr [rbp - 48] 
	mov	qword ptr [rax], rcx
	mov	dword ptr [rbp - 40], -1711276897
.LBB328_7:                              
	jmp	.LBB328_1
.Lfunc_end328:
	.size	_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE8capacityEv, .Lfunc_end328-_ZNKSt6vectorIjN5Botan16secure_allocatorIjEEE8capacityEv

	.section	.text._ZNSt19__shrink_to_fit_auxISt6vectorIjN5Botan16secure_allocatorIjEEELb1EE8_S_do_itERS4_,"axG",@progbits,_ZNSt19__shrink_to_fit_auxISt6vectorIjN5Botan16secure_allocatorIjEEELb1EE8_S_do_itERS4_,comdat
	.weak	_ZNSt19__shrink_to_fit_auxISt6vectorIjN5Botan16secure_allocatorIjEEELb1EE8_S_do_itERS4_ 
	.p2align	4, 0x90
	.type	_ZNSt19__shrink_to_fit_auxISt6vectorIjN5Botan16secure_allocatorIjEEELb1EE8_S_do_itERS4_,@function
_ZNSt19__shrink_to_fit_auxISt6vectorIjN5Botan16secure_allocatorIjEEELb1EE8_S_do_itERS4_: 
.Lfunc_begin39:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception39

	push	rbp
	mov	rbp, rsp
	sub	rsp, 144
	mov	qword ptr [rbp - 16], rdi
	mov	rdi, qword ptr [rbp - 16]
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE5beginEv
	mov	qword ptr [rbp - 56], rax
	mov	rdi, qword ptr [rbp - 56]
.Ltmp171:
	call	_ZSt32__make_move_if_noexcept_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEESt13move_iteratorIS8_EET0_T_
.Ltmp172:
	mov	qword ptr [rbp - 112], rax 
	jmp	.LBB329_1
.LBB329_1:
	mov	rax, qword ptr [rbp - 112] 
	mov	qword ptr [rbp - 48], rax
	mov	rdi, qword ptr [rbp - 16]
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE3endEv
	mov	qword ptr [rbp - 88], rax
	mov	rdi, qword ptr [rbp - 88]
.Ltmp173:
	call	_ZSt32__make_move_if_noexcept_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEESt13move_iteratorIS8_EET0_T_
.Ltmp174:
	mov	qword ptr [rbp - 120], rax 
	jmp	.LBB329_2
.LBB329_2:
	mov	rax, qword ptr [rbp - 120] 
	mov	qword ptr [rbp - 80], rax
	mov	rdi, qword ptr [rbp - 16]
	call	_ZNKSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE13get_allocatorEv
	mov	rsi, qword ptr [rbp - 48]
	mov	rdx, qword ptr [rbp - 80]
.Ltmp175:
	lea	rdi, [rbp - 40]
	lea	rcx, [rbp - 96]
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEC2ISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjS3_EEEvEET_SB_RKS2_
.Ltmp176:
	jmp	.LBB329_3
.LBB329_3:
	lea	rdi, [rbp - 40]
	mov	rsi, qword ptr [rbp - 16]
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE4swapERS3_
	lea	rdi, [rbp - 40]
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEED2Ev
	mov	byte ptr [rbp - 1], 1
	jmp	.LBB329_7
.LBB329_4:
.Ltmp177:
	mov	ecx, edx
	mov	qword ptr [rbp - 64], rax
	mov	dword ptr [rbp - 68], ecx

	mov	rdi, qword ptr [rbp - 64]
	call	__cxa_begin_catch
	mov	byte ptr [rbp - 1], 0
.Ltmp178:
	mov	qword ptr [rbp - 128], rax 
	call	__cxa_end_catch
.Ltmp179:
	jmp	.LBB329_6
.LBB329_6:
	jmp	.LBB329_7
.LBB329_7:
	mov	al, byte ptr [rbp - 1]
	and	al, 1
	movzx	eax, al
	add	rsp, 144
	pop	rbp
	ret
.LBB329_8:
.Ltmp180:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 132], ecx 
	call	__clang_call_terminate
.Lfunc_end329:
	.size	_ZNSt19__shrink_to_fit_auxISt6vectorIjN5Botan16secure_allocatorIjEEELb1EE8_S_do_itERS4_, .Lfunc_end329-_ZNSt19__shrink_to_fit_auxISt6vectorIjN5Botan16secure_allocatorIjEEELb1EE8_S_do_itERS4_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table329:
.Lexception39:
	.byte	255                     
	.byte	3                       
	.asciz	"\257\200"              
	.byte	3                       
	.byte	39                      
	.long	.Ltmp171-.Lfunc_begin39 
	.long	.Ltmp176-.Ltmp171       
	.long	.Ltmp177-.Lfunc_begin39 
	.byte	1                       
	.long	.Ltmp176-.Lfunc_begin39 
	.long	.Ltmp178-.Ltmp176       
	.long	0                       
	.byte	0                       
	.long	.Ltmp178-.Lfunc_begin39 
	.long	.Ltmp179-.Ltmp178       
	.long	.Ltmp180-.Lfunc_begin39 
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZSt32__make_move_if_noexcept_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEESt13move_iteratorIS8_EET0_T_,"axG",@progbits,_ZSt32__make_move_if_noexcept_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEESt13move_iteratorIS8_EET0_T_,comdat
	.weak	_ZSt32__make_move_if_noexcept_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEESt13move_iteratorIS8_EET0_T_ 
	.p2align	4, 0x90
	.type	_ZSt32__make_move_if_noexcept_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEESt13move_iteratorIS8_EET0_T_,@function
_ZSt32__make_move_if_noexcept_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEESt13move_iteratorIS8_EET0_T_: 
	.cfi_startproc

	push	rbp
.Lcfi618:
	.cfi_def_cfa_offset 16
.Lcfi619:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi620:
	.cfi_def_cfa_register rbp
	sub	rsp, 32
	lea	rax, [rbp - 8]
	mov	qword ptr [rbp - 16], rdi
	mov	rdi, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 24], rdi
	mov	rsi, qword ptr [rbp - 24]
	mov	rdi, rax
	call	_ZNSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEC2ES8_
	mov	rax, qword ptr [rbp - 8]
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end330:
	.size	_ZSt32__make_move_if_noexcept_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEESt13move_iteratorIS8_EET0_T_, .Lfunc_end330-_ZSt32__make_move_if_noexcept_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEESt13move_iteratorIS8_EET0_T_
	.cfi_endproc

	.section	.text._ZNSt6vectorIjN5Botan16secure_allocatorIjEEE5beginEv,"axG",@progbits,_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE5beginEv,comdat
	.weak	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE5beginEv 
	.p2align	4, 0x90
	.type	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE5beginEv,@function
_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE5beginEv: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	lea	rax, [rbp - 8]
	mov	qword ptr [rbp - 16], rdi
	mov	rdi, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 24], rdi 
	mov	rdi, rax
	mov	rsi, qword ptr [rbp - 24] 
	call	_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEC2ERKS1_
	mov	rax, qword ptr [rbp - 8]
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end331:
	.size	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE5beginEv, .Lfunc_end331-_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE5beginEv

	.section	.text._ZNSt6vectorIjN5Botan16secure_allocatorIjEEE3endEv,"axG",@progbits,_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE3endEv,comdat
	.weak	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE3endEv 
	.p2align	4, 0x90
	.type	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE3endEv,@function
_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE3endEv: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r12
	push	rbx
	sub	rsp, 64
	mov	eax, dword ptr [x.600]
	mov	ecx, dword ptr [y.601]
	mov	edx, eax
	sub	edx, -1291668516
	sub	edx, 1
	add	edx, -1291668516
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 42], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 41], sil
	mov	dword ptr [rbp - 48], 1696815069
	mov	qword ptr [rbp - 56], rdi 
.LBB332_1:                              
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -800067682
	mov	dword ptr [rbp - 60], eax 
	mov	dword ptr [rbp - 64], ecx 
	je	.LBB332_6
	jmp	.LBB332_8
.LBB332_8:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 688781193
	mov	dword ptr [rbp - 68], eax 
	je	.LBB332_4
	jmp	.LBB332_9
.LBB332_9:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 1003385607
	mov	dword ptr [rbp - 72], eax 
	je	.LBB332_5
	jmp	.LBB332_10
.LBB332_10:                             
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 1696815069
	mov	dword ptr [rbp - 76], eax 
	je	.LBB332_3
	jmp	.LBB332_2
.LBB332_2:                              
	jmp	.LBB332_7
.LBB332_3:                              
	mov	eax, 3494899614
	mov	ecx, 688781193
	mov	dl, 1
	mov	sil, byte ptr [rbp - 42]
	mov	dil, byte ptr [rbp - 41]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB332_7
.LBB332_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 56] 
	mov	qword ptr [rcx], rdx
	mov	rcx, qword ptr [rcx]
	add	rcx, 8
	mov	rdi, rax
	mov	rsi, rcx
	mov	qword ptr [rbp - 88], rax 
	call	_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEC2ERKS1_
	mov	r8d, 3494899614
	mov	r9d, 1003385607
	mov	rax, qword ptr [rbp - 88] 
	mov	rcx, qword ptr [rax]
	mov	qword ptr [rbp - 40], rcx
	mov	r10d, dword ptr [x.600]
	mov	r11d, dword ptr [y.601]
	mov	ebx, r10d
	add	ebx, 798911484
	sub	ebx, 1
	sub	ebx, 798911484
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r14b
	cmp	r11d, 10
	setl	r15b
	mov	r12b, r14b
	and	r12b, r15b
	xor	r14b, r15b
	or	r12b, r14b
	test	r12b, 1
	cmovne	r8d, r9d
	mov	dword ptr [rbp - 48], r8d
	jmp	.LBB332_7
.LBB332_5:
	mov	rax, qword ptr [rbp - 40]
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB332_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 56] 
	mov	qword ptr [rcx], rdx
	mov	rcx, qword ptr [rcx]
	add	rcx, 8
	mov	rdi, rax
	mov	rsi, rcx
	call	_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEC2ERKS1_
	mov	dword ptr [rbp - 48], 688781193
.LBB332_7:                              
	jmp	.LBB332_1
.Lfunc_end332:
	.size	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE3endEv, .Lfunc_end332-_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE3endEv

	.section	.text._ZNKSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE13get_allocatorEv,"axG",@progbits,_ZNKSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE13get_allocatorEv,comdat
	.weak	_ZNKSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE13get_allocatorEv 
	.p2align	4, 0x90
	.type	_ZNKSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE13get_allocatorEv,@function
_ZNKSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE13get_allocatorEv: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	qword ptr [rbp - 16], rdi
	mov	rdi, qword ptr [rbp - 16]
	call	_ZNKSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE19_M_get_Tp_allocatorEv
	mov	qword ptr [rbp - 24], rax 
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end333:
	.size	_ZNKSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE13get_allocatorEv, .Lfunc_end333-_ZNKSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE13get_allocatorEv

	.section	.text._ZNSt6vectorIjN5Botan16secure_allocatorIjEEEC2ISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjS3_EEEvEET_SB_RKS2_,"axG",@progbits,_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEC2ISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjS3_EEEvEET_SB_RKS2_,comdat
	.weak	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEC2ISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjS3_EEEvEET_SB_RKS2_ 
	.p2align	4, 0x90
	.type	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEC2ISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjS3_EEEvEET_SB_RKS2_,@function
_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEC2ISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjS3_EEEvEET_SB_RKS2_: 
.Lfunc_begin40:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception40

	push	rbp
.Lcfi621:
	.cfi_def_cfa_offset 16
.Lcfi622:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi623:
	.cfi_def_cfa_register rbp
	sub	rsp, 80
	mov	qword ptr [rbp - 8], rsi
	mov	qword ptr [rbp - 16], rdx
	mov	qword ptr [rbp - 24], rdi
	mov	qword ptr [rbp - 32], rcx
	mov	rcx, qword ptr [rbp - 24]
	mov	rsi, qword ptr [rbp - 32]
	mov	rdi, rcx
	mov	qword ptr [rbp - 80], rcx 
	call	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEEC2ERKS2_
	mov	rcx, qword ptr [rbp - 8]
	mov	qword ptr [rbp - 40], rcx
	mov	rcx, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 48], rcx
	mov	rsi, qword ptr [rbp - 40]
	mov	rdx, qword ptr [rbp - 48]
.Ltmp181:
	mov	rdi, qword ptr [rbp - 80] 
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE22_M_initialize_dispatchISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjS3_EEEEEvT_SB_St12__false_type
.Ltmp182:
	jmp	.LBB334_1
.LBB334_1:
	add	rsp, 80
	pop	rbp
	ret
.LBB334_2:
.Ltmp183:
	mov	ecx, edx
	mov	qword ptr [rbp - 64], rax
	mov	dword ptr [rbp - 68], ecx
	mov	rax, qword ptr [rbp - 80] 
	mov	rdi, rax
	call	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEED2Ev

	mov	rdi, qword ptr [rbp - 64]
	call	_Unwind_Resume
.Lfunc_end334:
	.size	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEC2ISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjS3_EEEvEET_SB_RKS2_, .Lfunc_end334-_ZNSt6vectorIjN5Botan16secure_allocatorIjEEEC2ISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjS3_EEEvEET_SB_RKS2_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table334:
.Lexception40:
	.byte	255                     
	.byte	3                       
	.asciz	"\234"                  
	.byte	3                       
	.byte	26                      
	.long	.Ltmp181-.Lfunc_begin40 
	.long	.Ltmp182-.Ltmp181       
	.long	.Ltmp183-.Lfunc_begin40 
	.byte	0                       
	.long	.Ltmp182-.Lfunc_begin40 
	.long	.Lfunc_end334-.Ltmp182  
	.long	0                       
	.byte	0                       
	.p2align	2

	.section	.text._ZNSt6vectorIjN5Botan16secure_allocatorIjEEE4swapERS3_,"axG",@progbits,_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE4swapERS3_,comdat
	.weak	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE4swapERS3_ 
	.p2align	4, 0x90
	.type	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE4swapERS3_,@function
_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE4swapERS3_: 
.Lfunc_begin41:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception41

	push	rbp
	mov	rbp, rsp
	sub	rsp, 48
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rsi, qword ptr [rbp - 8]
	mov	rdi, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 24], rdi 
	mov	rdi, rsi
	mov	rax, qword ptr [rbp - 24] 
	mov	qword ptr [rbp - 32], rsi 
	mov	rsi, rax
	call	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE12_Vector_impl12_M_swap_dataERS4_
	mov	rdi, qword ptr [rbp - 32] 
	call	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE19_M_get_Tp_allocatorEv
	mov	rdi, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 40], rax 
	call	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE19_M_get_Tp_allocatorEv
.Ltmp184:
	mov	rdi, qword ptr [rbp - 40] 
	mov	rsi, rax
	call	_ZN9__gnu_cxx14__alloc_traitsIN5Botan16secure_allocatorIjEEE10_S_on_swapERS3_S5_
.Ltmp185:
	jmp	.LBB335_1
.LBB335_1:
	add	rsp, 48
	pop	rbp
	ret
.LBB335_2:
.Ltmp186:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 44], ecx 
	call	__clang_call_terminate
.Lfunc_end335:
	.size	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE4swapERS3_, .Lfunc_end335-_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE4swapERS3_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table335:
.Lexception41:
	.byte	255                     
	.byte	3                       
	.byte	21                      
	.byte	3                       
	.byte	13                      
	.long	.Ltmp184-.Lfunc_begin41 
	.long	.Ltmp185-.Ltmp184       
	.long	.Ltmp186-.Lfunc_begin41 
	.byte	1                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZNSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEC2ES8_,"axG",@progbits,_ZNSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEC2ES8_,comdat
	.weak	_ZNSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEC2ES8_ 
	.p2align	4, 0x90
	.type	_ZNSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEC2ES8_,@function
_ZNSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEC2ES8_: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 56
	xor	eax, eax
	mov	ecx, dword ptr [x.604]
	mov	edx, dword ptr [y.605]
	sub	eax, 1
	mov	r8d, ecx
	add	r8d, eax
	imul	ecx, r8d
	and	ecx, 1
	cmp	ecx, 0
	sete	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 42], r9b
	cmp	edx, 10
	setl	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 41], r9b
	mov	dword ptr [rbp - 48], 751941771
	mov	qword ptr [rbp - 56], rdi 
	mov	qword ptr [rbp - 64], rsi 
.LBB336_1:                              
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, 544982947
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB336_6
	jmp	.LBB336_8
.LBB336_8:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 751941771
	mov	dword ptr [rbp - 76], eax 
	je	.LBB336_3
	jmp	.LBB336_9
.LBB336_9:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1379803002
	mov	dword ptr [rbp - 80], eax 
	je	.LBB336_4
	jmp	.LBB336_10
.LBB336_10:                             
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1811457106
	mov	dword ptr [rbp - 84], eax 
	je	.LBB336_5
	jmp	.LBB336_2
.LBB336_2:                              
	jmp	.LBB336_7
.LBB336_3:                              
	mov	eax, 544982947
	mov	ecx, 1379803002
	mov	dl, byte ptr [rbp - 42]
	mov	sil, byte ptr [rbp - 41]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB336_7
.LBB336_4:                              
	mov	eax, 544982947
	mov	ecx, 1811457106
	mov	dl, 1
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	r8, qword ptr [rbp - 64] 
	mov	qword ptr [rsi], r8
	mov	r9, qword ptr [rbp - 56] 
	mov	qword ptr [rdi], r9
	mov	rdi, qword ptr [rdi]
	mov	rsi, qword ptr [rsi]
	mov	qword ptr [rdi], rsi
	mov	r10d, dword ptr [x.604]
	mov	r11d, dword ptr [y.605]
	mov	ebx, r10d
	sub	ebx, 2131775629
	sub	ebx, 1
	add	ebx, 2131775629
	imul	r10d, ebx
	and	r10d, 1
	cmp	r10d, 0
	sete	r14b
	cmp	r11d, 10
	setl	r15b
	mov	r12b, r14b
	xor	r12b, -1
	mov	r13b, r15b
	xor	r13b, -1
	xor	dl, 0
	mov	sil, r12b
	and	sil, 0
	and	r14b, dl
	mov	dil, r13b
	and	dil, 0
	and	r15b, dl
	or	sil, r14b
	or	dil, r15b
	xor	sil, dil
	or	r12b, r13b
	xor	r12b, -1
	or	dl, 0
	and	r12b, dl
	or	sil, r12b
	test	sil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB336_7
.LBB336_5:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB336_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rdx
	mov	rsi, qword ptr [rbp - 56] 
	mov	qword ptr [rcx], rsi
	mov	rcx, qword ptr [rcx]
	mov	rax, qword ptr [rax]
	mov	qword ptr [rcx], rax
	mov	dword ptr [rbp - 48], 1379803002
.LBB336_7:                              
	jmp	.LBB336_1
.Lfunc_end336:
	.size	_ZNSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEC2ES8_, .Lfunc_end336-_ZNSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEC2ES8_

	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEC2ERKS1_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEC2ERKS1_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEC2ERKS1_ 
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEC2ERKS1_,@function
_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEC2ERKS1_: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 56
	xor	eax, eax
	mov	ecx, dword ptr [x.606]
	mov	edx, dword ptr [y.607]
	sub	eax, 1
	mov	r8d, ecx
	add	r8d, eax
	imul	ecx, r8d
	and	ecx, 1
	cmp	ecx, 0
	sete	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 26], r9b
	cmp	edx, 10
	setl	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 25], r9b
	mov	dword ptr [rbp - 32], -43592892
	mov	qword ptr [rbp - 40], rdi 
	mov	qword ptr [rbp - 48], rsi 
.LBB337_1:                              
	mov	eax, dword ptr [rbp - 32]
	mov	ecx, eax
	sub	ecx, -2110109454
	mov	dword ptr [rbp - 52], eax 
	mov	dword ptr [rbp - 56], ecx 
	je	.LBB337_4
	jmp	.LBB337_8
.LBB337_8:                              
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, -450976916
	mov	dword ptr [rbp - 60], eax 
	je	.LBB337_5
	jmp	.LBB337_9
.LBB337_9:                              
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, -43592892
	mov	dword ptr [rbp - 64], eax 
	je	.LBB337_3
	jmp	.LBB337_10
.LBB337_10:                             
	mov	eax, dword ptr [rbp - 52] 
	sub	eax, 854837085
	mov	dword ptr [rbp - 68], eax 
	je	.LBB337_6
	jmp	.LBB337_2
.LBB337_2:                              
	jmp	.LBB337_7
.LBB337_3:                              
	mov	eax, 854837085
	mov	ecx, 2184857842
	mov	dl, 1
	mov	sil, byte ptr [rbp - 26]
	mov	dil, byte ptr [rbp - 25]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 0
	mov	r10b, r8b
	and	r10b, 0
	and	sil, dl
	mov	r11b, r9b
	and	r11b, 0
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 0
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB337_7
.LBB337_4:                              
	mov	eax, 854837085
	mov	ecx, 3843990380
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 40] 
	mov	qword ptr [rdx], rdi
	mov	r8, qword ptr [rbp - 48] 
	mov	qword ptr [rsi], r8
	mov	rdx, qword ptr [rdx]
	mov	rsi, qword ptr [rsi]
	mov	rsi, qword ptr [rsi]
	mov	qword ptr [rdx], rsi
	mov	r9d, dword ptr [x.606]
	mov	r10d, dword ptr [y.607]
	mov	r11d, r9d
	add	r11d, 924813790
	sub	r11d, 1
	sub	r11d, 924813790
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	bl
	cmp	r10d, 10
	setl	r14b
	mov	r15b, bl
	and	r15b, r14b
	xor	bl, r14b
	or	r15b, bl
	test	r15b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB337_7
.LBB337_5:
	lea	rsp, [rbp - 24]
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB337_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 40] 
	mov	qword ptr [rax], rdx
	mov	rsi, qword ptr [rbp - 48] 
	mov	qword ptr [rcx], rsi
	mov	rax, qword ptr [rax]
	mov	rcx, qword ptr [rcx]
	mov	rcx, qword ptr [rcx]
	mov	qword ptr [rax], rcx
	mov	dword ptr [rbp - 32], -2110109454
.LBB337_7:                              
	jmp	.LBB337_1
.Lfunc_end337:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEC2ERKS1_, .Lfunc_end337-_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEC2ERKS1_

	.section	.text._ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEEC2ERKS2_,"axG",@progbits,_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEEC2ERKS2_,comdat
	.weak	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEEC2ERKS2_ 
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEEC2ERKS2_,@function
_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEEC2ERKS2_: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rdi, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rbp - 16]
	call	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE12_Vector_implC2ERKS2_
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end338:
	.size	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEEC2ERKS2_, .Lfunc_end338-_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEEC2ERKS2_

	.section	.text._ZNSt6vectorIjN5Botan16secure_allocatorIjEEE22_M_initialize_dispatchISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjS3_EEEEEvT_SB_St12__false_type,"axG",@progbits,_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE22_M_initialize_dispatchISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjS3_EEEEEvT_SB_St12__false_type,comdat
	.weak	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE22_M_initialize_dispatchISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjS3_EEEEEvT_SB_St12__false_type 
	.p2align	4, 0x90
	.type	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE22_M_initialize_dispatchISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjS3_EEEEEvT_SB_St12__false_type,@function
_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE22_M_initialize_dispatchISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjS3_EEEEEvT_SB_St12__false_type: 
	.cfi_startproc

	push	rbp
.Lcfi624:
	.cfi_def_cfa_offset 16
.Lcfi625:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi626:
	.cfi_def_cfa_register rbp
	sub	rsp, 64
	mov	qword ptr [rbp - 8], rsi
	mov	qword ptr [rbp - 16], rdx
	mov	qword ptr [rbp - 32], rdi
	mov	rdi, qword ptr [rbp - 32]
	mov	rdx, qword ptr [rbp - 8]
	mov	qword ptr [rbp - 40], rdx
	mov	rdx, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 48], rdx
	mov	rsi, qword ptr [rbp - 40]
	mov	rdx, qword ptr [rbp - 48]
	call	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE19_M_range_initializeISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjS3_EEEEEvT_SB_St20forward_iterator_tag
	add	rsp, 64
	pop	rbp
	ret
.Lfunc_end339:
	.size	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE22_M_initialize_dispatchISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjS3_EEEEEvT_SB_St12__false_type, .Lfunc_end339-_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE22_M_initialize_dispatchISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjS3_EEEEEvT_SB_St12__false_type
	.cfi_endproc

	.section	.text._ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE12_Vector_implC2ERKS2_,"axG",@progbits,_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE12_Vector_implC2ERKS2_,comdat
	.weak	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE12_Vector_implC2ERKS2_ 
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE12_Vector_implC2ERKS2_,@function
_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE12_Vector_implC2ERKS2_: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rsi, qword ptr [rbp - 8]
	mov	qword ptr [rsi], 0
	mov	qword ptr [rsi + 8], 0
	mov	qword ptr [rsi + 16], 0
	pop	rbp
	ret
.Lfunc_end340:
	.size	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE12_Vector_implC2ERKS2_, .Lfunc_end340-_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE12_Vector_implC2ERKS2_

	.section	.text._ZNSt6vectorIjN5Botan16secure_allocatorIjEEE19_M_range_initializeISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjS3_EEEEEvT_SB_St20forward_iterator_tag,"axG",@progbits,_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE19_M_range_initializeISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjS3_EEEEEvT_SB_St20forward_iterator_tag,comdat
	.weak	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE19_M_range_initializeISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjS3_EEEEEvT_SB_St20forward_iterator_tag 
	.p2align	4, 0x90
	.type	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE19_M_range_initializeISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjS3_EEEEEvT_SB_St20forward_iterator_tag,@function
_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE19_M_range_initializeISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjS3_EEEEEvT_SB_St20forward_iterator_tag: 
	.cfi_startproc

	push	rbp
.Lcfi627:
	.cfi_def_cfa_offset 16
.Lcfi628:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi629:
	.cfi_def_cfa_register rbp
	sub	rsp, 96
	mov	qword ptr [rbp - 8], rsi
	mov	qword ptr [rbp - 16], rdx
	mov	qword ptr [rbp - 32], rdi
	mov	rdx, qword ptr [rbp - 32]
	mov	rsi, qword ptr [rbp - 8]
	mov	qword ptr [rbp - 48], rsi
	mov	rsi, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 56], rsi
	mov	rdi, qword ptr [rbp - 48]
	mov	rsi, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 80], rdx 
	call	_ZSt8distanceISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEENSt15iterator_traitsIT_E15difference_typeESC_SC_
	mov	qword ptr [rbp - 40], rax
	mov	rax, qword ptr [rbp - 80] 
	mov	rsi, qword ptr [rbp - 40]
	mov	rdi, rax
	call	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE11_M_allocateEm
	mov	rdx, qword ptr [rbp - 80] 
	mov	qword ptr [rdx], rax
	mov	rax, qword ptr [rdx]
	mov	rsi, qword ptr [rbp - 40]
	shl	rsi, 2
	add	rax, rsi
	mov	qword ptr [rdx + 16], rax
	mov	rax, qword ptr [rbp - 8]
	mov	qword ptr [rbp - 64], rax
	mov	rax, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 72], rax
	mov	rdx, qword ptr [rdx]
	mov	rax, qword ptr [rbp - 80] 
	mov	rdi, rax
	mov	qword ptr [rbp - 88], rdx 
	call	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE19_M_get_Tp_allocatorEv
	mov	rdi, qword ptr [rbp - 64]
	mov	rsi, qword ptr [rbp - 72]
	mov	rdx, qword ptr [rbp - 88] 
	mov	rcx, rax
	call	_ZSt22__uninitialized_copy_aISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEES3_S7_ET0_T_SC_SB_RT1_
	mov	rcx, qword ptr [rbp - 80] 
	mov	qword ptr [rcx + 8], rax
	add	rsp, 96
	pop	rbp
	ret
.Lfunc_end341:
	.size	_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE19_M_range_initializeISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjS3_EEEEEvT_SB_St20forward_iterator_tag, .Lfunc_end341-_ZNSt6vectorIjN5Botan16secure_allocatorIjEEE19_M_range_initializeISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjS3_EEEEEvT_SB_St20forward_iterator_tag
	.cfi_endproc

	.section	.text._ZSt8distanceISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEENSt15iterator_traitsIT_E15difference_typeESC_SC_,"axG",@progbits,_ZSt8distanceISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEENSt15iterator_traitsIT_E15difference_typeESC_SC_,comdat
	.weak	_ZSt8distanceISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEENSt15iterator_traitsIT_E15difference_typeESC_SC_ 
	.p2align	4, 0x90
	.type	_ZSt8distanceISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEENSt15iterator_traitsIT_E15difference_typeESC_SC_,@function
_ZSt8distanceISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEENSt15iterator_traitsIT_E15difference_typeESC_SC_: 
	.cfi_startproc

	push	rbp
.Lcfi630:
	.cfi_def_cfa_offset 16
.Lcfi631:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi632:
	.cfi_def_cfa_register rbp
	sub	rsp, 48
	lea	rax, [rbp - 8]
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rsi, qword ptr [rbp - 8]
	mov	qword ptr [rbp - 24], rsi
	mov	rsi, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 32], rsi
	mov	rdi, rax
	call	_ZSt19__iterator_categoryISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEENSt15iterator_traitsIT_E17iterator_categoryERKSC_
	mov	rdi, qword ptr [rbp - 24]
	mov	rsi, qword ptr [rbp - 32]
	call	_ZSt10__distanceISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEENSt15iterator_traitsIT_E15difference_typeESC_SC_St26random_access_iterator_tag
	add	rsp, 48
	pop	rbp
	ret
.Lfunc_end342:
	.size	_ZSt8distanceISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEENSt15iterator_traitsIT_E15difference_typeESC_SC_, .Lfunc_end342-_ZSt8distanceISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEENSt15iterator_traitsIT_E15difference_typeESC_SC_
	.cfi_endproc

	.section	.text._ZSt22__uninitialized_copy_aISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEES3_S7_ET0_T_SC_SB_RT1_,"axG",@progbits,_ZSt22__uninitialized_copy_aISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEES3_S7_ET0_T_SC_SB_RT1_,comdat
	.weak	_ZSt22__uninitialized_copy_aISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEES3_S7_ET0_T_SC_SB_RT1_ 
	.p2align	4, 0x90
	.type	_ZSt22__uninitialized_copy_aISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEES3_S7_ET0_T_SC_SB_RT1_,@function
_ZSt22__uninitialized_copy_aISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEES3_S7_ET0_T_SC_SB_RT1_: 
.Lfunc_begin42:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception42

	push	rbp
.Lcfi633:
	.cfi_def_cfa_offset 16
.Lcfi634:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi635:
	.cfi_def_cfa_register rbp
	sub	rsp, 112
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	qword ptr [rbp - 24], rdx
	mov	qword ptr [rbp - 32], rcx
	mov	rcx, qword ptr [rbp - 24]
	mov	qword ptr [rbp - 40], rcx
.LBB343_1:                              
.Ltmp187:
	lea	rdi, [rbp - 8]
	lea	rsi, [rbp - 16]
	call	_ZStneIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEbRKSt13move_iteratorIT_ESD_
.Ltmp188:
	mov	byte ptr [rbp - 53], al 
	jmp	.LBB343_2
.LBB343_2:                              
	mov	al, byte ptr [rbp - 53] 
	test	al, 1
	jne	.LBB343_3
	jmp	.LBB343_11
.LBB343_3:                              
	mov	rdi, qword ptr [rbp - 32]
	mov	rax, qword ptr [rbp - 40]
	mov	qword ptr [rbp - 64], rdi 
	mov	rdi, rax
	call	_ZSt11__addressofIjEPT_RS0_
.Ltmp189:
	lea	rdi, [rbp - 8]
	mov	qword ptr [rbp - 72], rax 
	call	_ZNKSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEdeEv
.Ltmp190:
	mov	qword ptr [rbp - 80], rax 
	jmp	.LBB343_4
.LBB343_4:                              
.Ltmp191:
	mov	rdi, qword ptr [rbp - 64] 
	mov	rsi, qword ptr [rbp - 72] 
	mov	rdx, qword ptr [rbp - 80] 
	call	_ZNSt16allocator_traitsIN5Botan16secure_allocatorIjEEE9constructIjJjEEEDTcl12_S_constructfp_fp0_spclsr3stdE7forwardIT0_Efp1_EEERS2_PT_DpOS5_
.Ltmp192:
	jmp	.LBB343_5
.LBB343_5:                              
	jmp	.LBB343_6
.LBB343_6:                              
.Ltmp193:
	lea	rdi, [rbp - 8]
	call	_ZNSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEppEv
.Ltmp194:
	mov	qword ptr [rbp - 88], rax 
	jmp	.LBB343_7
.LBB343_7:                              
	mov	rax, qword ptr [rbp - 40]
	add	rax, 4
	mov	qword ptr [rbp - 40], rax
	jmp	.LBB343_1
.LBB343_8:
.Ltmp195:
	mov	ecx, edx
	mov	qword ptr [rbp - 48], rax
	mov	dword ptr [rbp - 52], ecx

	mov	rdi, qword ptr [rbp - 48]
	call	__cxa_begin_catch
	mov	rdi, qword ptr [rbp - 24]
	mov	rsi, qword ptr [rbp - 40]
	mov	rdx, qword ptr [rbp - 32]
.Ltmp196:
	mov	qword ptr [rbp - 96], rax 
	call	_ZSt8_DestroyIPjN5Botan16secure_allocatorIjEEEvT_S4_RT0_
.Ltmp197:
	jmp	.LBB343_10
.LBB343_10:
.Ltmp198:
	call	__cxa_rethrow
.Ltmp199:
	jmp	.LBB343_16
.LBB343_11:
	mov	rax, qword ptr [rbp - 40]
	add	rsp, 112
	pop	rbp
	ret
.LBB343_12:
.Ltmp200:
	mov	ecx, edx
	mov	qword ptr [rbp - 48], rax
	mov	dword ptr [rbp - 52], ecx
.Ltmp201:
	call	__cxa_end_catch
.Ltmp202:
	jmp	.LBB343_13
.LBB343_13:
	jmp	.LBB343_14
.LBB343_14:
	mov	rdi, qword ptr [rbp - 48]
	call	_Unwind_Resume
.LBB343_15:
.Ltmp203:
	mov	ecx, edx
	mov	rdi, rax
	mov	dword ptr [rbp - 100], ecx 
	call	__clang_call_terminate
.LBB343_16:
.Lfunc_end343:
	.size	_ZSt22__uninitialized_copy_aISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEES3_S7_ET0_T_SC_SB_RT1_, .Lfunc_end343-_ZSt22__uninitialized_copy_aISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEES3_S7_ET0_T_SC_SB_RT1_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table343:
.Lexception42:
	.byte	255                     
	.byte	3                       
	.byte	73                      
	.byte	3                       
	.byte	65                      
	.long	.Ltmp187-.Lfunc_begin42 
	.long	.Ltmp194-.Ltmp187       
	.long	.Ltmp195-.Lfunc_begin42 
	.byte	1                       
	.long	.Ltmp194-.Lfunc_begin42 
	.long	.Ltmp196-.Ltmp194       
	.long	0                       
	.byte	0                       
	.long	.Ltmp196-.Lfunc_begin42 
	.long	.Ltmp199-.Ltmp196       
	.long	.Ltmp200-.Lfunc_begin42 
	.byte	0                       
	.long	.Ltmp201-.Lfunc_begin42 
	.long	.Ltmp202-.Ltmp201       
	.long	.Ltmp203-.Lfunc_begin42 
	.byte	1                       
	.long	.Ltmp202-.Lfunc_begin42 
	.long	.Lfunc_end343-.Ltmp202  
	.long	0                       
	.byte	0                       
	.byte	1                       

	.byte	0                       

	.long	0                       
	.p2align	2

	.section	.text._ZSt10__distanceISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEENSt15iterator_traitsIT_E15difference_typeESC_SC_St26random_access_iterator_tag,"axG",@progbits,_ZSt10__distanceISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEENSt15iterator_traitsIT_E15difference_typeESC_SC_St26random_access_iterator_tag,comdat
	.weak	_ZSt10__distanceISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEENSt15iterator_traitsIT_E15difference_typeESC_SC_St26random_access_iterator_tag 
	.p2align	4, 0x90
	.type	_ZSt10__distanceISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEENSt15iterator_traitsIT_E15difference_typeESC_SC_St26random_access_iterator_tag,@function
_ZSt10__distanceISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEENSt15iterator_traitsIT_E15difference_typeESC_SC_St26random_access_iterator_tag: 
	.cfi_startproc

	push	rbp
.Lcfi636:
	.cfi_def_cfa_offset 16
.Lcfi637:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi638:
	.cfi_def_cfa_register rbp
	sub	rsp, 32
	lea	rax, [rbp - 16]
	lea	rcx, [rbp - 8]
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rdi, rax
	mov	rsi, rcx
	call	_ZStmiIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEES8_EDTmicldtfp_4baseEcldtfp0_4baseEERKSt13move_iteratorIT_ERKSA_IT0_E
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end344:
	.size	_ZSt10__distanceISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEENSt15iterator_traitsIT_E15difference_typeESC_SC_St26random_access_iterator_tag, .Lfunc_end344-_ZSt10__distanceISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEENSt15iterator_traitsIT_E15difference_typeESC_SC_St26random_access_iterator_tag
	.cfi_endproc

	.section	.text._ZSt19__iterator_categoryISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEENSt15iterator_traitsIT_E17iterator_categoryERKSC_,"axG",@progbits,_ZSt19__iterator_categoryISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEENSt15iterator_traitsIT_E17iterator_categoryERKSC_,comdat
	.weak	_ZSt19__iterator_categoryISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEENSt15iterator_traitsIT_E17iterator_categoryERKSC_ 
	.p2align	4, 0x90
	.type	_ZSt19__iterator_categoryISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEENSt15iterator_traitsIT_E17iterator_categoryERKSC_,@function
_ZSt19__iterator_categoryISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEENSt15iterator_traitsIT_E17iterator_categoryERKSC_: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 16], rdi
	pop	rbp
	ret
.Lfunc_end345:
	.size	_ZSt19__iterator_categoryISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEENSt15iterator_traitsIT_E17iterator_categoryERKSC_, .Lfunc_end345-_ZSt19__iterator_categoryISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEENSt15iterator_traitsIT_E17iterator_categoryERKSC_

	.section	.text._ZStmiIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEES8_EDTmicldtfp_4baseEcldtfp0_4baseEERKSt13move_iteratorIT_ERKSA_IT0_E,"axG",@progbits,_ZStmiIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEES8_EDTmicldtfp_4baseEcldtfp0_4baseEERKSt13move_iteratorIT_ERKSA_IT0_E,comdat
	.weak	_ZStmiIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEES8_EDTmicldtfp_4baseEcldtfp0_4baseEERKSt13move_iteratorIT_ERKSA_IT0_E 
	.p2align	4, 0x90
	.type	_ZStmiIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEES8_EDTmicldtfp_4baseEcldtfp0_4baseEERKSt13move_iteratorIT_ERKSA_IT0_E,@function
_ZStmiIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEES8_EDTmicldtfp_4baseEcldtfp0_4baseEERKSt13move_iteratorIT_ERKSA_IT0_E: 
	.cfi_startproc

	push	rbp
.Lcfi639:
	.cfi_def_cfa_offset 16
.Lcfi640:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi641:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 120
.Lcfi642:
	.cfi_offset rbx, -56
.Lcfi643:
	.cfi_offset r12, -48
.Lcfi644:
	.cfi_offset r13, -40
.Lcfi645:
	.cfi_offset r14, -32
.Lcfi646:
	.cfi_offset r15, -24
	mov	eax, dword ptr [x.622]
	mov	ecx, dword ptr [y.623]
	mov	edx, eax
	sub	edx, 500617796
	sub	edx, 1
	add	edx, 500617796
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 50], r8b
	cmp	ecx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 49], r8b
	mov	dword ptr [rbp - 56], -800367231
	mov	qword ptr [rbp - 64], rdi 
	mov	qword ptr [rbp - 72], rsi 
.LBB346_1:                              
	mov	eax, dword ptr [rbp - 56]
	mov	ecx, eax
	sub	ecx, -1565396685
	mov	dword ptr [rbp - 76], eax 
	mov	dword ptr [rbp - 80], ecx 
	je	.LBB346_4
	jmp	.LBB346_8
.LBB346_8:                              
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, -800367231
	mov	dword ptr [rbp - 84], eax 
	je	.LBB346_3
	jmp	.LBB346_9
.LBB346_9:                              
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, -156596641
	mov	dword ptr [rbp - 88], eax 
	je	.LBB346_5
	jmp	.LBB346_10
.LBB346_10:                             
	mov	eax, dword ptr [rbp - 76] 
	sub	eax, 2010408756
	mov	dword ptr [rbp - 92], eax 
	je	.LBB346_6
	jmp	.LBB346_2
.LBB346_2:                              
	jmp	.LBB346_7
.LBB346_3:                              
	mov	eax, 2010408756
	mov	ecx, 2729570611
	mov	dl, byte ptr [rbp - 50]
	mov	sil, byte ptr [rbp - 49]
	mov	dil, dl
	and	dil, sil
	xor	dl, sil
	or	dil, dl
	test	dil, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 56], eax
	jmp	.LBB346_7
.LBB346_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rdi
	mov	r8, qword ptr [rbp - 72] 
	mov	qword ptr [rcx], r8
	mov	rdi, qword ptr [rax]
	mov	qword ptr [rbp - 104], rcx 
	mov	qword ptr [rbp - 112], rdx 
	mov	qword ptr [rbp - 120], rsi 
	call	_ZNKSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEE4baseEv
	mov	rcx, qword ptr [rbp - 112] 
	mov	qword ptr [rcx], rax
	mov	rax, qword ptr [rbp - 104] 
	mov	rdi, qword ptr [rax]
	call	_ZNKSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEE4baseEv
	mov	rcx, qword ptr [rbp - 120] 
	mov	qword ptr [rcx], rax
	mov	rdi, qword ptr [rbp - 112] 
	mov	rsi, rcx
	call	_ZN9__gnu_cxxmiIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	mov	r9d, 2010408756
	mov	r10d, 4138370655
	mov	qword ptr [rbp - 48], rax
	mov	r11d, dword ptr [x.622]
	mov	ebx, dword ptr [y.623]
	mov	r14d, r11d
	sub	r14d, 979236990
	sub	r14d, 1
	add	r14d, 979236990
	imul	r11d, r14d
	and	r11d, 1
	cmp	r11d, 0
	sete	r15b
	cmp	ebx, 10
	setl	r12b
	mov	r13b, r15b
	and	r13b, r12b
	xor	r15b, r12b
	or	r13b, r15b
	test	r13b, 1
	cmovne	r9d, r10d
	mov	dword ptr [rbp - 56], r9d
	jmp	.LBB346_7
.LBB346_5:
	mov	rax, qword ptr [rbp - 48]
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB346_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 64] 
	mov	qword ptr [rax], rdi
	mov	r8, qword ptr [rbp - 72] 
	mov	qword ptr [rcx], r8
	mov	rdi, qword ptr [rax]
	mov	qword ptr [rbp - 128], rcx 
	mov	qword ptr [rbp - 136], rdx 
	mov	qword ptr [rbp - 144], rsi 
	call	_ZNKSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEE4baseEv
	mov	rcx, qword ptr [rbp - 136] 
	mov	qword ptr [rcx], rax
	mov	rax, qword ptr [rbp - 128] 
	mov	rdi, qword ptr [rax]
	call	_ZNKSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEE4baseEv
	mov	rcx, qword ptr [rbp - 144] 
	mov	qword ptr [rcx], rax
	mov	rdi, qword ptr [rbp - 136] 
	mov	rsi, rcx
	call	_ZN9__gnu_cxxmiIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	mov	dword ptr [rbp - 56], -1565396685
	mov	qword ptr [rbp - 152], rax 
.LBB346_7:                              
	jmp	.LBB346_1
.Lfunc_end346:
	.size	_ZStmiIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEES8_EDTmicldtfp_4baseEcldtfp0_4baseEERKSt13move_iteratorIT_ERKSA_IT0_E, .Lfunc_end346-_ZStmiIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEES8_EDTmicldtfp_4baseEcldtfp0_4baseEERKSt13move_iteratorIT_ERKSA_IT0_E
	.cfi_endproc

	.section	.text._ZN9__gnu_cxxmiIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,"axG",@progbits,_ZN9__gnu_cxxmiIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,comdat
	.weak	_ZN9__gnu_cxxmiIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ 
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxmiIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,@function
_ZN9__gnu_cxxmiIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEE4baseEv
	mov	rax, qword ptr [rax]
	mov	rdi, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 24], rax 
	call	_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEE4baseEv
	xor	ecx, ecx
	mov	esi, ecx
	mov	rax, qword ptr [rax]
	sub	rsi, rax
	mov	rax, qword ptr [rbp - 24] 
	add	rax, rsi
	sar	rax, 2
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end347:
	.size	_ZN9__gnu_cxxmiIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_, .Lfunc_end347-_ZN9__gnu_cxxmiIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_

	.section	.text._ZNKSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEE4baseEv,"axG",@progbits,_ZNKSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEE4baseEv,comdat
	.weak	_ZNKSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEE4baseEv 
	.p2align	4, 0x90
	.type	_ZNKSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEE4baseEv,@function
_ZNKSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEE4baseEv: 

	push	rbp
	mov	rbp, rsp
	push	r14
	push	rbx
	sub	rsp, 48
	mov	eax, dword ptr [x.626]
	mov	ecx, dword ptr [y.627]
	mov	edx, eax
	add	edx, 27156890
	sub	edx, 1
	sub	edx, 27156890
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	sil
	and	sil, 1
	mov	byte ptr [rbp - 26], sil
	cmp	ecx, 10
	setl	sil
	and	sil, 1
	mov	byte ptr [rbp - 25], sil
	mov	dword ptr [rbp - 32], 1955726052
	mov	qword ptr [rbp - 40], rdi 
.LBB348_1:                              
	mov	eax, dword ptr [rbp - 32]
	mov	ecx, eax
	sub	ecx, -1216720623
	mov	dword ptr [rbp - 44], eax 
	mov	dword ptr [rbp - 48], ecx 
	je	.LBB348_5
	jmp	.LBB348_8
.LBB348_8:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 196977920
	mov	dword ptr [rbp - 52], eax 
	je	.LBB348_4
	jmp	.LBB348_9
.LBB348_9:                              
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 499115148
	mov	dword ptr [rbp - 56], eax 
	je	.LBB348_6
	jmp	.LBB348_10
.LBB348_10:                             
	mov	eax, dword ptr [rbp - 44] 
	sub	eax, 1955726052
	mov	dword ptr [rbp - 60], eax 
	je	.LBB348_3
	jmp	.LBB348_2
.LBB348_2:                              
	jmp	.LBB348_7
.LBB348_3:                              
	mov	eax, 499115148
	mov	ecx, 196977920
	mov	dl, 1
	mov	sil, byte ptr [rbp - 26]
	mov	dil, byte ptr [rbp - 25]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 0
	mov	r10b, r8b
	and	r10b, 0
	and	sil, dl
	mov	r11b, r9b
	and	r11b, 0
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 0
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB348_7
.LBB348_4:                              
	mov	eax, 499115148
	mov	ecx, 3078246673
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 40] 
	mov	qword ptr [rsi], rdi
	mov	rsi, qword ptr [rsi]
	mov	rsi, qword ptr [rsi]
	mov	qword ptr [rdx], rsi
	mov	rdx, qword ptr [rdx]
	mov	qword ptr [rbp - 24], rdx
	mov	r8d, dword ptr [x.626]
	mov	r9d, dword ptr [y.627]
	mov	r10d, r8d
	add	r10d, -1349950934
	sub	r10d, 1
	sub	r10d, -1349950934
	imul	r8d, r10d
	and	r8d, 1
	cmp	r8d, 0
	sete	r11b
	cmp	r9d, 10
	setl	bl
	mov	r14b, r11b
	and	r14b, bl
	xor	r11b, bl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 32], eax
	jmp	.LBB348_7
.LBB348_5:
	mov	rax, qword ptr [rbp - 24]
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
.LBB348_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 40] 
	mov	qword ptr [rcx], rdx
	mov	rcx, qword ptr [rcx]
	mov	rcx, qword ptr [rcx]
	mov	qword ptr [rax], rcx
	mov	dword ptr [rbp - 32], 196977920
.LBB348_7:                              
	jmp	.LBB348_1
.Lfunc_end348:
	.size	_ZNKSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEE4baseEv, .Lfunc_end348-_ZNKSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEE4baseEv

	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEE4baseEv 
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEE4baseEv: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	pop	rbp
	ret
.Lfunc_end349:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEE4baseEv, .Lfunc_end349-_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEE4baseEv

	.section	.text._ZStneIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEbRKSt13move_iteratorIT_ESD_,"axG",@progbits,_ZStneIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEbRKSt13move_iteratorIT_ESD_,comdat
	.weak	_ZStneIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEbRKSt13move_iteratorIT_ESD_ 
	.p2align	4, 0x90
	.type	_ZStneIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEbRKSt13move_iteratorIT_ESD_,@function
_ZStneIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEbRKSt13move_iteratorIT_ESD_: 
	.cfi_startproc

	push	rbp
.Lcfi647:
	.cfi_def_cfa_offset 16
.Lcfi648:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi649:
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rdi, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rbp - 16]
	call	_ZSteqIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEbRKSt13move_iteratorIT_ESD_
	mov	cl, 1
	mov	dl, al
	xor	dl, -1
	and	dl, 1
	xor	cl, 1
	and	al, cl
	or	dl, al
	and	dl, 1
	movzx	eax, dl
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end350:
	.size	_ZStneIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEbRKSt13move_iteratorIT_ESD_, .Lfunc_end350-_ZStneIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEbRKSt13move_iteratorIT_ESD_
	.cfi_endproc

	.section	.text._ZNKSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEdeEv,"axG",@progbits,_ZNKSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEdeEv,comdat
	.weak	_ZNKSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEdeEv 
	.p2align	4, 0x90
	.type	_ZNKSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEdeEv,@function
_ZNKSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEdeEv: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEdeEv
	add	rsp, 16
	pop	rbp
	ret
.Lfunc_end351:
	.size	_ZNKSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEdeEv, .Lfunc_end351-_ZNKSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEdeEv

	.section	.text._ZNSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEppEv,"axG",@progbits,_ZNSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEppEv,comdat
	.weak	_ZNSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEppEv 
	.p2align	4, 0x90
	.type	_ZNSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEppEv,@function
_ZNSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEppEv: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	qword ptr [rbp - 16], rdi 
	call	_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEppEv
	mov	rdi, qword ptr [rbp - 16] 
	mov	qword ptr [rbp - 24], rax 
	mov	rax, rdi
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end352:
	.size	_ZNSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEppEv, .Lfunc_end352-_ZNSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEppEv

	.section	.text._ZSteqIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEbRKSt13move_iteratorIT_ESD_,"axG",@progbits,_ZSteqIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEbRKSt13move_iteratorIT_ESD_,comdat
	.weak	_ZSteqIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEbRKSt13move_iteratorIT_ESD_ 
	.p2align	4, 0x90
	.type	_ZSteqIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEbRKSt13move_iteratorIT_ESD_,@function
_ZSteqIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEbRKSt13move_iteratorIT_ESD_: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r12
	push	rbx
	sub	rsp, 112
	xor	eax, eax
	mov	ecx, dword ptr [x.636]
	mov	edx, dword ptr [y.637]
	sub	eax, 1
	mov	r8d, ecx
	add	r8d, eax
	imul	ecx, r8d
	and	ecx, 1
	cmp	ecx, 0
	sete	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 35], r9b
	cmp	edx, 10
	setl	r9b
	and	r9b, 1
	mov	byte ptr [rbp - 34], r9b
	mov	dword ptr [rbp - 40], 2031104283
	mov	qword ptr [rbp - 48], rdi 
	mov	qword ptr [rbp - 56], rsi 
.LBB353_1:                              
	mov	eax, dword ptr [rbp - 40]
	mov	ecx, eax
	sub	ecx, -2061188322
	mov	dword ptr [rbp - 60], eax 
	mov	dword ptr [rbp - 64], ecx 
	je	.LBB353_4
	jmp	.LBB353_8
.LBB353_8:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, -453340681
	mov	dword ptr [rbp - 68], eax 
	je	.LBB353_5
	jmp	.LBB353_9
.LBB353_9:                              
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 17432537
	mov	dword ptr [rbp - 72], eax 
	je	.LBB353_6
	jmp	.LBB353_10
.LBB353_10:                             
	mov	eax, dword ptr [rbp - 60] 
	sub	eax, 2031104283
	mov	dword ptr [rbp - 76], eax 
	je	.LBB353_3
	jmp	.LBB353_2
.LBB353_2:                              
	jmp	.LBB353_7
.LBB353_3:                              
	mov	eax, 17432537
	mov	ecx, 2233778974
	mov	dl, 1
	mov	sil, byte ptr [rbp - 35]
	mov	dil, byte ptr [rbp - 34]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 1
	mov	r10b, r8b
	and	r10b, -1
	and	sil, dl
	mov	r11b, r9b
	and	r11b, -1
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 1
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 40], eax
	jmp	.LBB353_7
.LBB353_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 48] 
	mov	qword ptr [rax], rdi
	mov	r8, qword ptr [rbp - 56] 
	mov	qword ptr [rcx], r8
	mov	rdi, qword ptr [rax]
	mov	qword ptr [rbp - 88], rcx 
	mov	qword ptr [rbp - 96], rdx 
	mov	qword ptr [rbp - 104], rsi 
	call	_ZNKSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEE4baseEv
	mov	rcx, qword ptr [rbp - 96] 
	mov	qword ptr [rcx], rax
	mov	rax, qword ptr [rbp - 88] 
	mov	rdi, qword ptr [rax]
	call	_ZNKSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEE4baseEv
	mov	rcx, qword ptr [rbp - 104] 
	mov	qword ptr [rcx], rax
	mov	rdi, qword ptr [rbp - 96] 
	mov	rsi, rcx
	call	_ZN9__gnu_cxxeqIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	mov	r9d, 17432537
	mov	r10d, 3841626615
	and	al, 1
	mov	byte ptr [rbp - 33], al
	mov	r11d, dword ptr [x.636]
	mov	ebx, dword ptr [y.637]
	mov	r14d, r11d
	add	r14d, -660793876
	sub	r14d, 1
	sub	r14d, -660793876
	imul	r11d, r14d
	and	r11d, 1
	cmp	r11d, 0
	sete	al
	cmp	ebx, 10
	setl	r15b
	mov	r12b, al
	and	r12b, r15b
	xor	al, r15b
	or	r12b, al
	test	r12b, 1
	cmovne	r9d, r10d
	mov	dword ptr [rbp - 40], r9d
	jmp	.LBB353_7
.LBB353_5:
	mov	al, byte ptr [rbp - 33]
	and	al, 1
	movzx	eax, al
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB353_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, rsp
	add	rdx, -16
	mov	rsp, rdx
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, qword ptr [rbp - 48] 
	mov	qword ptr [rax], rdi
	mov	r8, qword ptr [rbp - 56] 
	mov	qword ptr [rcx], r8
	mov	rdi, qword ptr [rax]
	mov	qword ptr [rbp - 112], rcx 
	mov	qword ptr [rbp - 120], rdx 
	mov	qword ptr [rbp - 128], rsi 
	call	_ZNKSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEE4baseEv
	mov	rcx, qword ptr [rbp - 120] 
	mov	qword ptr [rcx], rax
	mov	rax, qword ptr [rbp - 112] 
	mov	rdi, qword ptr [rax]
	call	_ZNKSt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEE4baseEv
	mov	rcx, qword ptr [rbp - 128] 
	mov	qword ptr [rcx], rax
	mov	rdi, qword ptr [rbp - 120] 
	mov	rsi, rcx
	call	_ZN9__gnu_cxxeqIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	mov	dword ptr [rbp - 40], -2061188322
	mov	byte ptr [rbp - 129], al 
.LBB353_7:                              
	jmp	.LBB353_1
.Lfunc_end353:
	.size	_ZSteqIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEbRKSt13move_iteratorIT_ESD_, .Lfunc_end353-_ZSteqIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEEbRKSt13move_iteratorIT_ESD_

	.section	.text._ZN9__gnu_cxxeqIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEbRKNS_17__normal_iteratorIT_T0_EESC_,"axG",@progbits,_ZN9__gnu_cxxeqIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEbRKNS_17__normal_iteratorIT_T0_EESC_,comdat
	.weak	_ZN9__gnu_cxxeqIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEbRKNS_17__normal_iteratorIT_T0_EESC_ 
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxeqIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEbRKNS_17__normal_iteratorIT_T0_EESC_,@function
_ZN9__gnu_cxxeqIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEbRKNS_17__normal_iteratorIT_T0_EESC_: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 88
	mov	eax, dword ptr [x.638]
	mov	ecx, dword ptr [y.639]
	mov	edx, eax
	sub	edx, 711480444
	sub	edx, 1
	add	edx, 711480444
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 43], r8b
	cmp	ecx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 42], r8b
	mov	dword ptr [rbp - 48], 556142044
	mov	qword ptr [rbp - 56], rdi 
	mov	qword ptr [rbp - 64], rsi 
.LBB354_1:                              
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -242997159
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB354_6
	jmp	.LBB354_8
.LBB354_8:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 476531109
	mov	dword ptr [rbp - 76], eax 
	je	.LBB354_4
	jmp	.LBB354_9
.LBB354_9:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 556142044
	mov	dword ptr [rbp - 80], eax 
	je	.LBB354_3
	jmp	.LBB354_10
.LBB354_10:                             
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1716976550
	mov	dword ptr [rbp - 84], eax 
	je	.LBB354_5
	jmp	.LBB354_2
.LBB354_2:                              
	jmp	.LBB354_7
.LBB354_3:                              
	mov	eax, 4051970137
	mov	ecx, 476531109
	mov	dl, 1
	mov	sil, byte ptr [rbp - 43]
	mov	dil, byte ptr [rbp - 42]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 0
	mov	r10b, r8b
	and	r10b, 0
	and	sil, dl
	mov	r11b, r9b
	and	r11b, 0
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 0
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB354_7
.LBB354_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rdx
	mov	rsi, qword ptr [rbp - 64] 
	mov	qword ptr [rcx], rsi
	mov	rdi, qword ptr [rax]
	mov	qword ptr [rbp - 96], rcx 
	call	_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEE4baseEv
	mov	rax, qword ptr [rax]
	mov	rcx, qword ptr [rbp - 96] 
	mov	rdi, qword ptr [rcx]
	mov	qword ptr [rbp - 104], rax 
	call	_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEE4baseEv
	mov	r8d, 4051970137
	mov	r9d, 1716976550
	xor	r10d, r10d
	mov	rcx, qword ptr [rbp - 104] 
	cmp	rcx, qword ptr [rax]
	sete	r11b
	and	r11b, 1
	mov	byte ptr [rbp - 41], r11b
	mov	ebx, dword ptr [x.638]
	mov	r14d, dword ptr [y.639]
	sub	r10d, 1
	mov	r15d, ebx
	add	r15d, r10d
	imul	ebx, r15d
	and	ebx, 1
	cmp	ebx, 0
	sete	r11b
	cmp	r14d, 10
	setl	r12b
	mov	r13b, r11b
	and	r13b, r12b
	xor	r11b, r12b
	or	r13b, r11b
	test	r13b, 1
	cmovne	r8d, r9d
	mov	dword ptr [rbp - 48], r8d
	jmp	.LBB354_7
.LBB354_5:
	mov	al, byte ptr [rbp - 41]
	and	al, 1
	movzx	eax, al
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB354_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rdx
	mov	rsi, qword ptr [rbp - 64] 
	mov	qword ptr [rcx], rsi
	mov	rdi, qword ptr [rax]
	mov	qword ptr [rbp - 112], rcx 
	call	_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEE4baseEv
	mov	rcx, qword ptr [rbp - 112] 
	mov	rdi, qword ptr [rcx]
	mov	qword ptr [rbp - 120], rax 
	call	_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEE4baseEv
	mov	dword ptr [rbp - 48], 476531109
	mov	qword ptr [rbp - 128], rax 
.LBB354_7:                              
	jmp	.LBB354_1
.Lfunc_end354:
	.size	_ZN9__gnu_cxxeqIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEbRKNS_17__normal_iteratorIT_T0_EESC_, .Lfunc_end354-_ZN9__gnu_cxxeqIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEEbRKNS_17__normal_iteratorIT_T0_EESC_

	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEdeEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEdeEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEdeEv 
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEdeEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEdeEv: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	rax, qword ptr [rdi]
	pop	rbp
	ret
.Lfunc_end355:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEdeEv, .Lfunc_end355-_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEdeEv

	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEppEv,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEppEv,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEppEv 
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEppEv,@function
_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEppEv: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	rdi, qword ptr [rbp - 8]
	mov	rax, qword ptr [rdi]
	add	rax, 4
	mov	qword ptr [rdi], rax
	mov	rax, rdi
	pop	rbp
	ret
.Lfunc_end356:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEppEv, .Lfunc_end356-_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjN5Botan16secure_allocatorIjEEEEppEv

	.section	.text._ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE12_Vector_impl12_M_swap_dataERS4_,"axG",@progbits,_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE12_Vector_impl12_M_swap_dataERS4_,comdat
	.weak	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE12_Vector_impl12_M_swap_dataERS4_ 
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE12_Vector_impl12_M_swap_dataERS4_,@function
_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE12_Vector_impl12_M_swap_dataERS4_: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rsi, qword ptr [rbp - 8]
	mov	rdi, qword ptr [rbp - 16]
	mov	qword ptr [rbp - 24], rdi 
	mov	rdi, rsi
	mov	rax, qword ptr [rbp - 24] 
	mov	qword ptr [rbp - 32], rsi 
	mov	rsi, rax
	call	_ZSt4swapIPjENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_
	mov	rax, qword ptr [rbp - 32] 
	add	rax, 8
	mov	rsi, qword ptr [rbp - 16]
	add	rsi, 8
	mov	rdi, rax
	call	_ZSt4swapIPjENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_
	mov	rax, qword ptr [rbp - 32] 
	add	rax, 16
	mov	rsi, qword ptr [rbp - 16]
	add	rsi, 16
	mov	rdi, rax
	call	_ZSt4swapIPjENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end357:
	.size	_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE12_Vector_impl12_M_swap_dataERS4_, .Lfunc_end357-_ZNSt12_Vector_baseIjN5Botan16secure_allocatorIjEEE12_Vector_impl12_M_swap_dataERS4_

	.section	.text._ZN9__gnu_cxx14__alloc_traitsIN5Botan16secure_allocatorIjEEE10_S_on_swapERS3_S5_,"axG",@progbits,_ZN9__gnu_cxx14__alloc_traitsIN5Botan16secure_allocatorIjEEE10_S_on_swapERS3_S5_,comdat
	.weak	_ZN9__gnu_cxx14__alloc_traitsIN5Botan16secure_allocatorIjEEE10_S_on_swapERS3_S5_ 
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx14__alloc_traitsIN5Botan16secure_allocatorIjEEE10_S_on_swapERS3_S5_,@function
_ZN9__gnu_cxx14__alloc_traitsIN5Botan16secure_allocatorIjEEE10_S_on_swapERS3_S5_: 
	.cfi_startproc

	push	rbp
.Lcfi650:
	.cfi_def_cfa_offset 16
.Lcfi651:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi652:
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 56
.Lcfi653:
	.cfi_offset rbx, -56
.Lcfi654:
	.cfi_offset r12, -48
.Lcfi655:
	.cfi_offset r13, -40
.Lcfi656:
	.cfi_offset r14, -32
.Lcfi657:
	.cfi_offset r15, -24
	mov	eax, dword ptr [x.646]
	mov	ecx, dword ptr [y.647]
	mov	edx, eax
	sub	edx, 527465637
	sub	edx, 1
	add	edx, 527465637
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 42], r8b
	cmp	ecx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 41], r8b
	mov	dword ptr [rbp - 48], 1371922040
	mov	qword ptr [rbp - 56], rdi 
	mov	qword ptr [rbp - 64], rsi 
.LBB358_1:                              
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -1532943931
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB358_5
	jmp	.LBB358_8
.LBB358_8:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -475786246
	mov	dword ptr [rbp - 76], eax 
	je	.LBB358_4
	jmp	.LBB358_9
.LBB358_9:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 206737556
	mov	dword ptr [rbp - 80], eax 
	je	.LBB358_6
	jmp	.LBB358_10
.LBB358_10:                             
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, 1371922040
	mov	dword ptr [rbp - 84], eax 
	je	.LBB358_3
	jmp	.LBB358_2
.LBB358_2:                              
	jmp	.LBB358_7
.LBB358_3:                              
	mov	eax, 206737556
	mov	ecx, 3819181050
	mov	dl, 1
	mov	sil, byte ptr [rbp - 42]
	mov	dil, byte ptr [rbp - 41]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 0
	mov	r10b, r8b
	and	r10b, 0
	and	sil, dl
	mov	r11b, r9b
	and	r11b, 0
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 0
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB358_7
.LBB358_4:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rdx
	mov	rsi, qword ptr [rbp - 64] 
	mov	qword ptr [rcx], rsi
	mov	rdi, qword ptr [rax]
	mov	rsi, qword ptr [rcx]
	call	_ZSt15__alloc_on_swapIN5Botan16secure_allocatorIjEEEvRT_S4_
	mov	r8d, 206737556
	mov	r9d, 2762023365
	mov	r10b, 1
	xor	r11d, r11d
	mov	ebx, dword ptr [x.646]
	mov	r14d, dword ptr [y.647]
	sub	r11d, 1
	mov	r15d, ebx
	add	r15d, r11d
	imul	ebx, r15d
	and	ebx, 1
	cmp	ebx, 0
	sete	r12b
	cmp	r14d, 10
	setl	r13b
	mov	al, r12b
	xor	al, -1
	mov	cl, r13b
	xor	cl, -1
	xor	r10b, 1
	mov	dl, al
	and	dl, -1
	and	r12b, r10b
	mov	sil, cl
	and	sil, -1
	and	r13b, r10b
	or	dl, r12b
	or	sil, r13b
	xor	dl, sil
	or	al, cl
	xor	al, -1
	or	r10b, 1
	and	al, r10b
	or	dl, al
	test	dl, 1
	cmovne	r8d, r9d
	mov	dword ptr [rbp - 48], r8d
	jmp	.LBB358_7
.LBB358_5:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB358_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rdx
	mov	rsi, qword ptr [rbp - 64] 
	mov	qword ptr [rcx], rsi
	mov	rdi, qword ptr [rax]
	mov	rsi, qword ptr [rcx]
	call	_ZSt15__alloc_on_swapIN5Botan16secure_allocatorIjEEEvRT_S4_
	mov	dword ptr [rbp - 48], -475786246
.LBB358_7:                              
	jmp	.LBB358_1
.Lfunc_end358:
	.size	_ZN9__gnu_cxx14__alloc_traitsIN5Botan16secure_allocatorIjEEE10_S_on_swapERS3_S5_, .Lfunc_end358-_ZN9__gnu_cxx14__alloc_traitsIN5Botan16secure_allocatorIjEEE10_S_on_swapERS3_S5_
	.cfi_endproc

	.section	.text._ZSt4swapIPjENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_,"axG",@progbits,_ZSt4swapIPjENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_,comdat
	.weak	_ZSt4swapIPjENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_ 
	.p2align	4, 0x90
	.type	_ZSt4swapIPjENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_,@function
_ZSt4swapIPjENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_: 

	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rdi, qword ptr [rbp - 8]
	call	_ZSt4moveIRPjEONSt16remove_referenceIT_E4typeEOS3_
	mov	rax, qword ptr [rax]
	mov	qword ptr [rbp - 24], rax
	mov	rdi, qword ptr [rbp - 16]
	call	_ZSt4moveIRPjEONSt16remove_referenceIT_E4typeEOS3_
	lea	rdi, [rbp - 24]
	mov	rax, qword ptr [rax]
	mov	rsi, qword ptr [rbp - 8]
	mov	qword ptr [rsi], rax
	call	_ZSt4moveIRPjEONSt16remove_referenceIT_E4typeEOS3_
	mov	rax, qword ptr [rax]
	mov	rsi, qword ptr [rbp - 16]
	mov	qword ptr [rsi], rax
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end359:
	.size	_ZSt4swapIPjENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_, .Lfunc_end359-_ZSt4swapIPjENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_

	.section	.text._ZSt4moveIRPjEONSt16remove_referenceIT_E4typeEOS3_,"axG",@progbits,_ZSt4moveIRPjEONSt16remove_referenceIT_E4typeEOS3_,comdat
	.weak	_ZSt4moveIRPjEONSt16remove_referenceIT_E4typeEOS3_ 
	.p2align	4, 0x90
	.type	_ZSt4moveIRPjEONSt16remove_referenceIT_E4typeEOS3_,@function
_ZSt4moveIRPjEONSt16remove_referenceIT_E4typeEOS3_: 

	push	rbp
	mov	rbp, rsp
	mov	qword ptr [rbp - 8], rdi
	mov	rax, qword ptr [rbp - 8]
	pop	rbp
	ret
.Lfunc_end360:
	.size	_ZSt4moveIRPjEONSt16remove_referenceIT_E4typeEOS3_, .Lfunc_end360-_ZSt4moveIRPjEONSt16remove_referenceIT_E4typeEOS3_

	.section	.text._ZSt15__alloc_on_swapIN5Botan16secure_allocatorIjEEEvRT_S4_,"axG",@progbits,_ZSt15__alloc_on_swapIN5Botan16secure_allocatorIjEEEvRT_S4_,comdat
	.weak	_ZSt15__alloc_on_swapIN5Botan16secure_allocatorIjEEEvRT_S4_ 
	.p2align	4, 0x90
	.type	_ZSt15__alloc_on_swapIN5Botan16secure_allocatorIjEEEvRT_S4_,@function
_ZSt15__alloc_on_swapIN5Botan16secure_allocatorIjEEEvRT_S4_: 
	.cfi_startproc

	push	rbp
.Lcfi658:
	.cfi_def_cfa_offset 16
.Lcfi659:
	.cfi_offset rbp, -16
	mov	rbp, rsp
.Lcfi660:
	.cfi_def_cfa_register rbp
	sub	rsp, 32
	mov	qword ptr [rbp - 8], rdi
	mov	qword ptr [rbp - 16], rsi
	mov	rdi, qword ptr [rbp - 8]
	mov	rsi, qword ptr [rbp - 16]
	call	_ZSt18__do_alloc_on_swapIN5Botan16secure_allocatorIjEEEvRT_S4_St17integral_constantIbLb0EE
	add	rsp, 32
	pop	rbp
	ret
.Lfunc_end361:
	.size	_ZSt15__alloc_on_swapIN5Botan16secure_allocatorIjEEEvRT_S4_, .Lfunc_end361-_ZSt15__alloc_on_swapIN5Botan16secure_allocatorIjEEEvRT_S4_
	.cfi_endproc

	.section	.text._ZSt18__do_alloc_on_swapIN5Botan16secure_allocatorIjEEEvRT_S4_St17integral_constantIbLb0EE,"axG",@progbits,_ZSt18__do_alloc_on_swapIN5Botan16secure_allocatorIjEEEvRT_S4_St17integral_constantIbLb0EE,comdat
	.weak	_ZSt18__do_alloc_on_swapIN5Botan16secure_allocatorIjEEEvRT_S4_St17integral_constantIbLb0EE 
	.p2align	4, 0x90
	.type	_ZSt18__do_alloc_on_swapIN5Botan16secure_allocatorIjEEEvRT_S4_St17integral_constantIbLb0EE,@function
_ZSt18__do_alloc_on_swapIN5Botan16secure_allocatorIjEEEvRT_S4_St17integral_constantIbLb0EE: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 56
	mov	eax, dword ptr [x.654]
	mov	ecx, dword ptr [y.655]
	mov	edx, eax
	add	edx, 938130441
	sub	edx, 1
	sub	edx, 938130441
	imul	eax, edx
	and	eax, 1
	cmp	eax, 0
	sete	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 42], r8b
	cmp	ecx, 10
	setl	r8b
	and	r8b, 1
	mov	byte ptr [rbp - 41], r8b
	mov	dword ptr [rbp - 48], -1230162409
	mov	qword ptr [rbp - 56], rdi 
	mov	qword ptr [rbp - 64], rsi 
.LBB362_1:                              
	mov	eax, dword ptr [rbp - 48]
	mov	ecx, eax
	sub	ecx, -1462146544
	mov	dword ptr [rbp - 68], eax 
	mov	dword ptr [rbp - 72], ecx 
	je	.LBB362_6
	jmp	.LBB362_8
.LBB362_8:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -1230162409
	mov	dword ptr [rbp - 76], eax 
	je	.LBB362_3
	jmp	.LBB362_9
.LBB362_9:                              
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -118635229
	mov	dword ptr [rbp - 80], eax 
	je	.LBB362_5
	jmp	.LBB362_10
.LBB362_10:                             
	mov	eax, dword ptr [rbp - 68] 
	sub	eax, -104645647
	mov	dword ptr [rbp - 84], eax 
	je	.LBB362_4
	jmp	.LBB362_2
.LBB362_2:                              
	jmp	.LBB362_7
.LBB362_3:                              
	mov	eax, 2832820752
	mov	ecx, 4190321649
	mov	dl, 1
	mov	sil, byte ptr [rbp - 42]
	mov	dil, byte ptr [rbp - 41]
	mov	r8b, sil
	xor	r8b, -1
	mov	r9b, dil
	xor	r9b, -1
	xor	dl, 0
	mov	r10b, r8b
	and	r10b, 0
	and	sil, dl
	mov	r11b, r9b
	and	r11b, 0
	and	dil, dl
	or	r10b, sil
	or	r11b, dil
	xor	r10b, r11b
	or	r8b, r9b
	xor	r8b, -1
	or	dl, 0
	and	r8b, dl
	or	r10b, r8b
	test	r10b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB362_7
.LBB362_4:                              
	mov	eax, 2832820752
	mov	ecx, 4176332067
	mov	dl, 1
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rsi, rsp
	add	rsi, -16
	mov	rsp, rsi
	mov	rdi, rsp
	add	rdi, -16
	mov	rsp, rdi
	mov	r8, qword ptr [rbp - 56] 
	mov	qword ptr [rsi], r8
	mov	rsi, qword ptr [rbp - 64] 
	mov	qword ptr [rdi], rsi
	mov	r9d, dword ptr [x.654]
	mov	r10d, dword ptr [y.655]
	mov	r11d, r9d
	sub	r11d, 2088913597
	sub	r11d, 1
	add	r11d, 2088913597
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	bl
	cmp	r10d, 10
	setl	r14b
	mov	r15b, bl
	xor	r15b, -1
	mov	r12b, r14b
	xor	r12b, -1
	xor	dl, 0
	mov	r13b, r15b
	and	r13b, 0
	and	bl, dl
	mov	sil, r12b
	and	sil, 0
	and	r14b, dl
	or	r13b, bl
	or	sil, r14b
	xor	r13b, sil
	or	r15b, r12b
	xor	r15b, -1
	or	dl, 0
	and	r15b, dl
	or	r13b, r15b
	test	r13b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 48], eax
	jmp	.LBB362_7
.LBB362_5:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB362_6:                              
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rax, rsp
	add	rax, -16
	mov	rsp, rax
	mov	rcx, rsp
	add	rcx, -16
	mov	rsp, rcx
	mov	rdx, qword ptr [rbp - 56] 
	mov	qword ptr [rax], rdx
	mov	rax, qword ptr [rbp - 64] 
	mov	qword ptr [rcx], rax
	mov	dword ptr [rbp - 48], -104645647
.LBB362_7:                              
	jmp	.LBB362_1
.Lfunc_end362:
	.size	_ZSt18__do_alloc_on_swapIN5Botan16secure_allocatorIjEEEvRT_S4_St17integral_constantIbLb0EE, .Lfunc_end362-_ZSt18__do_alloc_on_swapIN5Botan16secure_allocatorIjEEEvRT_S4_St17integral_constantIbLb0EE

	.section	.text._ZN5Botan24Key_Length_SpecificationC2Emmm,"axG",@progbits,_ZN5Botan24Key_Length_SpecificationC2Emmm,comdat
	.weak	_ZN5Botan24Key_Length_SpecificationC2Emmm 
	.p2align	4, 0x90
	.type	_ZN5Botan24Key_Length_SpecificationC2Emmm,@function
_ZN5Botan24Key_Length_SpecificationC2Emmm: 

	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	push	rax
	mov	qword ptr [rbp - 88], rdi
	mov	qword ptr [rbp - 96], rsi
	mov	qword ptr [rbp - 104], rdx
	mov	qword ptr [rbp - 112], rcx
	mov	rcx, qword ptr [rbp - 88]
	mov	qword ptr [rbp - 80], rcx
	mov	rcx, qword ptr [rbp - 80]
	mov	rdx, qword ptr [rbp - 96]
	mov	qword ptr [rcx], rdx
	mov	rcx, qword ptr [rbp - 80]
	add	rcx, 8
	mov	qword ptr [rbp - 72], rcx
	mov	rcx, qword ptr [rbp - 104]
	mov	qword ptr [rbp - 64], rcx
	mov	dword ptr [rbp - 116], 1035625934
.LBB363_1:                              
	mov	eax, dword ptr [rbp - 116]
	mov	ecx, eax
	sub	ecx, -1146209254
	mov	dword ptr [rbp - 132], eax 
	mov	dword ptr [rbp - 136], ecx 
	je	.LBB363_4
	jmp	.LBB363_14
.LBB363_14:                             
	mov	eax, dword ptr [rbp - 132] 
	sub	eax, -876557325
	mov	dword ptr [rbp - 140], eax 
	je	.LBB363_11
	jmp	.LBB363_15
.LBB363_15:                             
	mov	eax, dword ptr [rbp - 132] 
	sub	eax, -56418148
	mov	dword ptr [rbp - 144], eax 
	je	.LBB363_8
	jmp	.LBB363_16
.LBB363_16:                             
	mov	eax, dword ptr [rbp - 132] 
	sub	eax, 241584211
	mov	dword ptr [rbp - 148], eax 
	je	.LBB363_7
	jmp	.LBB363_17
.LBB363_17:                             
	mov	eax, dword ptr [rbp - 132] 
	sub	eax, 390329632
	mov	dword ptr [rbp - 152], eax 
	je	.LBB363_12
	jmp	.LBB363_18
.LBB363_18:                             
	mov	eax, dword ptr [rbp - 132] 
	sub	eax, 618760549
	mov	dword ptr [rbp - 156], eax 
	je	.LBB363_6
	jmp	.LBB363_19
.LBB363_19:                             
	mov	eax, dword ptr [rbp - 132] 
	sub	eax, 637832397
	mov	dword ptr [rbp - 160], eax 
	je	.LBB363_9
	jmp	.LBB363_20
.LBB363_20:                             
	mov	eax, dword ptr [rbp - 132] 
	sub	eax, 1009803890
	mov	dword ptr [rbp - 164], eax 
	je	.LBB363_5
	jmp	.LBB363_21
.LBB363_21:                             
	mov	eax, dword ptr [rbp - 132] 
	sub	eax, 1035625934
	mov	dword ptr [rbp - 168], eax 
	je	.LBB363_3
	jmp	.LBB363_22
.LBB363_22:                             
	mov	eax, dword ptr [rbp - 132] 
	sub	eax, 1256762536
	mov	dword ptr [rbp - 172], eax 
	je	.LBB363_10
	jmp	.LBB363_2
.LBB363_2:                              
	jmp	.LBB363_13
.LBB363_3:                              
	mov	eax, 1009803890
	mov	ecx, 3148758042
	mov	rdx, qword ptr [rbp - 64]
	cmp	rdx, 0
	cmovne	eax, ecx
	mov	dword ptr [rbp - 116], eax
	jmp	.LBB363_13
.LBB363_4:                              
	mov	rax, qword ptr [rbp - 104]
	mov	dword ptr [rbp - 116], -56418148
	mov	qword ptr [rbp - 128], rax
	jmp	.LBB363_13
.LBB363_5:                              
	mov	eax, 3418409971
	mov	ecx, 618760549
	mov	dl, 1
	mov	esi, dword ptr [x.656]
	mov	edi, dword ptr [y.657]
	mov	r8d, esi
	sub	r8d, 668075274
	sub	r8d, 1
	add	r8d, 668075274
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	xor	r11b, -1
	mov	bl, r10b
	xor	bl, -1
	xor	dl, 1
	mov	r14b, r11b
	and	r14b, -1
	and	r9b, dl
	mov	r15b, bl
	and	r15b, -1
	and	r10b, dl
	or	r14b, r9b
	or	r15b, r10b
	xor	r14b, r15b
	or	r11b, bl
	xor	r11b, -1
	or	dl, 1
	and	r11b, dl
	or	r14b, r11b
	test	r14b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 116], eax
	jmp	.LBB363_13
.LBB363_6:                              
	mov	eax, 3418409971
	mov	ecx, 241584211
	xor	edx, edx
	mov	rsi, qword ptr [rbp - 96]
	mov	qword ptr [rbp - 56], rsi
	mov	edi, dword ptr [x.656]
	mov	r8d, dword ptr [y.657]
	sub	edx, 1
	mov	r9d, edi
	add	r9d, edx
	imul	edi, r9d
	and	edi, 1
	cmp	edi, 0
	sete	r10b
	cmp	r8d, 10
	setl	r11b
	mov	bl, r10b
	and	bl, r11b
	xor	r10b, r11b
	or	bl, r10b
	test	bl, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 116], eax
	jmp	.LBB363_13
.LBB363_7:                              
	mov	dword ptr [rbp - 116], -56418148
	mov	rax, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 128], rax
	jmp	.LBB363_13
.LBB363_8:                              
	mov	eax, 390329632
	mov	ecx, 637832397
	mov	rdx, qword ptr [rbp - 128]
	mov	qword ptr [rbp - 48], rdx
	mov	esi, dword ptr [x.656]
	mov	edi, dword ptr [y.657]
	mov	r8d, esi
	add	r8d, -1248479929
	sub	r8d, 1
	sub	r8d, -1248479929
	imul	esi, r8d
	and	esi, 1
	cmp	esi, 0
	sete	r9b
	cmp	edi, 10
	setl	r10b
	mov	r11b, r9b
	and	r11b, r10b
	xor	r9b, r10b
	or	r11b, r9b
	test	r11b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 116], eax
	jmp	.LBB363_13
.LBB363_9:                              
	mov	eax, 390329632
	mov	ecx, 1256762536
	mov	dl, 1
	xor	esi, esi
	mov	rdi, qword ptr [rbp - 72]
	mov	r8, qword ptr [rbp - 48]
	mov	qword ptr [rdi], r8
	mov	rdi, qword ptr [rbp - 80]
	mov	r8, qword ptr [rbp - 112]
	mov	qword ptr [rdi + 16], r8
	mov	r9d, dword ptr [x.656]
	mov	r10d, dword ptr [y.657]
	sub	esi, 1
	mov	r11d, r9d
	add	r11d, esi
	imul	r9d, r11d
	and	r9d, 1
	cmp	r9d, 0
	sete	bl
	cmp	r10d, 10
	setl	r14b
	mov	r15b, bl
	xor	r15b, -1
	mov	r12b, r14b
	xor	r12b, -1
	xor	dl, 1
	mov	r13b, r15b
	and	r13b, -1
	and	bl, dl
	mov	sil, r12b
	and	sil, -1
	and	r14b, dl
	or	r13b, bl
	or	sil, r14b
	xor	r13b, sil
	or	r15b, r12b
	xor	r15b, -1
	or	dl, 1
	and	r15b, dl
	or	r13b, r15b
	test	r13b, 1
	cmovne	eax, ecx
	mov	dword ptr [rbp - 116], eax
	jmp	.LBB363_13
.LBB363_10:
	add	rsp, 8
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
.LBB363_11:                             
	mov	dword ptr [rbp - 116], 618760549
	jmp	.LBB363_13
.LBB363_12:                             
	mov	rax, qword ptr [rbp - 72]
	mov	rcx, qword ptr [rbp - 48]
	mov	qword ptr [rax], rcx
	mov	rax, qword ptr [rbp - 80]
	mov	rcx, qword ptr [rbp - 112]
	mov	qword ptr [rax + 16], rcx
	mov	dword ptr [rbp - 116], 637832397
.LBB363_13:                             
	jmp	.LBB363_1
.Lfunc_end363:
	.size	_ZN5Botan24Key_Length_SpecificationC2Emmm, .Lfunc_end363-_ZN5Botan24Key_Length_SpecificationC2Emmm

	.type	_ZTVN5Botan7AES_128E,@object 
	.section	.rodata,"a",@progbits
	.globl	_ZTVN5Botan7AES_128E
	.p2align	3
_ZTVN5Botan7AES_128E:
	.quad	0
	.quad	_ZTIN5Botan7AES_128E
	.quad	_ZN5Botan7AES_128D2Ev
	.quad	_ZN5Botan7AES_128D0Ev
	.quad	_ZN5Botan7AES_1285clearEv
	.quad	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE8key_specEv
	.quad	_ZNK5Botan7AES_1284nameB5cxx11Ev
	.quad	_ZN5Botan7AES_12812key_scheduleEPKhm
	.quad	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE10block_sizeEv
	.quad	_ZNK5Botan7AES_12811parallelismEv
	.quad	_ZNK5Botan7AES_1288providerB5cxx11Ev
	.quad	_ZNK5Botan7AES_1289encrypt_nEPKhPhm
	.quad	_ZNK5Botan7AES_1289decrypt_nEPKhPhm
	.quad	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm
	.quad	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm
	.quad	_ZNK5Botan7AES_12810new_objectEv
	.size	_ZTVN5Botan7AES_128E, 128

	.type	_ZTSN5Botan7AES_128E,@object 
	.globl	_ZTSN5Botan7AES_128E
	.p2align	4
_ZTSN5Botan7AES_128E:
	.asciz	"N5Botan7AES_128E"
	.size	_ZTSN5Botan7AES_128E, 17

	.type	_ZTSN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEE,@object 
	.section	.rodata._ZTSN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEE,"aG",@progbits,_ZTSN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEE,comdat
	.weak	_ZTSN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEE
	.p2align	4
_ZTSN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEE:
	.asciz	"N5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEE"
	.size	_ZTSN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEE, 73

	.type	_ZTSN5Botan11BlockCipherE,@object 
	.section	.rodata._ZTSN5Botan11BlockCipherE,"aG",@progbits,_ZTSN5Botan11BlockCipherE,comdat
	.weak	_ZTSN5Botan11BlockCipherE
	.p2align	4
_ZTSN5Botan11BlockCipherE:
	.asciz	"N5Botan11BlockCipherE"
	.size	_ZTSN5Botan11BlockCipherE, 22

	.type	_ZTSN5Botan18SymmetricAlgorithmE,@object 
	.section	.rodata._ZTSN5Botan18SymmetricAlgorithmE,"aG",@progbits,_ZTSN5Botan18SymmetricAlgorithmE,comdat
	.weak	_ZTSN5Botan18SymmetricAlgorithmE
	.p2align	4
_ZTSN5Botan18SymmetricAlgorithmE:
	.asciz	"N5Botan18SymmetricAlgorithmE"
	.size	_ZTSN5Botan18SymmetricAlgorithmE, 29

	.type	_ZTIN5Botan18SymmetricAlgorithmE,@object 
	.section	.rodata._ZTIN5Botan18SymmetricAlgorithmE,"aG",@progbits,_ZTIN5Botan18SymmetricAlgorithmE,comdat
	.weak	_ZTIN5Botan18SymmetricAlgorithmE
	.p2align	3
_ZTIN5Botan18SymmetricAlgorithmE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSN5Botan18SymmetricAlgorithmE
	.size	_ZTIN5Botan18SymmetricAlgorithmE, 16

	.type	_ZTIN5Botan11BlockCipherE,@object 
	.section	.rodata._ZTIN5Botan11BlockCipherE,"aG",@progbits,_ZTIN5Botan11BlockCipherE,comdat
	.weak	_ZTIN5Botan11BlockCipherE
	.p2align	4
_ZTIN5Botan11BlockCipherE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN5Botan11BlockCipherE
	.quad	_ZTIN5Botan18SymmetricAlgorithmE
	.size	_ZTIN5Botan11BlockCipherE, 24

	.type	_ZTIN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEE,@object 
	.section	.rodata._ZTIN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEE,"aG",@progbits,_ZTIN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEE,comdat
	.weak	_ZTIN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEE
	.p2align	4
_ZTIN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEE
	.quad	_ZTIN5Botan11BlockCipherE
	.size	_ZTIN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEE, 24

	.type	_ZTIN5Botan7AES_128E,@object 
	.section	.rodata,"a",@progbits
	.globl	_ZTIN5Botan7AES_128E
	.p2align	4
_ZTIN5Botan7AES_128E:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN5Botan7AES_128E
	.quad	_ZTIN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEE
	.size	_ZTIN5Botan7AES_128E, 24

	.type	_ZTVN5Botan7AES_192E,@object 
	.globl	_ZTVN5Botan7AES_192E
	.p2align	3
_ZTVN5Botan7AES_192E:
	.quad	0
	.quad	_ZTIN5Botan7AES_192E
	.quad	_ZN5Botan7AES_192D2Ev
	.quad	_ZN5Botan7AES_192D0Ev
	.quad	_ZN5Botan7AES_1925clearEv
	.quad	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE8key_specEv
	.quad	_ZNK5Botan7AES_1924nameB5cxx11Ev
	.quad	_ZN5Botan7AES_19212key_scheduleEPKhm
	.quad	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE10block_sizeEv
	.quad	_ZNK5Botan7AES_19211parallelismEv
	.quad	_ZNK5Botan7AES_1928providerB5cxx11Ev
	.quad	_ZNK5Botan7AES_1929encrypt_nEPKhPhm
	.quad	_ZNK5Botan7AES_1929decrypt_nEPKhPhm
	.quad	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm
	.quad	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm
	.quad	_ZNK5Botan7AES_19210new_objectEv
	.size	_ZTVN5Botan7AES_192E, 128

	.type	_ZTSN5Botan7AES_192E,@object 
	.globl	_ZTSN5Botan7AES_192E
	.p2align	4
_ZTSN5Botan7AES_192E:
	.asciz	"N5Botan7AES_192E"
	.size	_ZTSN5Botan7AES_192E, 17

	.type	_ZTSN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEE,@object 
	.section	.rodata._ZTSN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEE,"aG",@progbits,_ZTSN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEE,comdat
	.weak	_ZTSN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEE
	.p2align	4
_ZTSN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEE:
	.asciz	"N5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEE"
	.size	_ZTSN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEE, 73

	.type	_ZTIN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEE,@object 
	.section	.rodata._ZTIN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEE,"aG",@progbits,_ZTIN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEE,comdat
	.weak	_ZTIN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEE
	.p2align	4
_ZTIN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEE
	.quad	_ZTIN5Botan11BlockCipherE
	.size	_ZTIN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEE, 24

	.type	_ZTIN5Botan7AES_192E,@object 
	.section	.rodata,"a",@progbits
	.globl	_ZTIN5Botan7AES_192E
	.p2align	4
_ZTIN5Botan7AES_192E:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN5Botan7AES_192E
	.quad	_ZTIN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEE
	.size	_ZTIN5Botan7AES_192E, 24

	.type	_ZTVN5Botan7AES_256E,@object 
	.globl	_ZTVN5Botan7AES_256E
	.p2align	3
_ZTVN5Botan7AES_256E:
	.quad	0
	.quad	_ZTIN5Botan7AES_256E
	.quad	_ZN5Botan7AES_256D2Ev
	.quad	_ZN5Botan7AES_256D0Ev
	.quad	_ZN5Botan7AES_2565clearEv
	.quad	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE8key_specEv
	.quad	_ZNK5Botan7AES_2564nameB5cxx11Ev
	.quad	_ZN5Botan7AES_25612key_scheduleEPKhm
	.quad	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE10block_sizeEv
	.quad	_ZNK5Botan7AES_25611parallelismEv
	.quad	_ZNK5Botan7AES_2568providerB5cxx11Ev
	.quad	_ZNK5Botan7AES_2569encrypt_nEPKhPhm
	.quad	_ZNK5Botan7AES_2569decrypt_nEPKhPhm
	.quad	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm
	.quad	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm
	.quad	_ZNK5Botan7AES_25610new_objectEv
	.size	_ZTVN5Botan7AES_256E, 128

	.type	_ZTSN5Botan7AES_256E,@object 
	.globl	_ZTSN5Botan7AES_256E
	.p2align	4
_ZTSN5Botan7AES_256E:
	.asciz	"N5Botan7AES_256E"
	.size	_ZTSN5Botan7AES_256E, 17

	.type	_ZTSN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEE,@object 
	.section	.rodata._ZTSN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEE,"aG",@progbits,_ZTSN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEE,comdat
	.weak	_ZTSN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEE
	.p2align	4
_ZTSN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEE:
	.asciz	"N5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEE"
	.size	_ZTSN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEE, 73

	.type	_ZTIN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEE,@object 
	.section	.rodata._ZTIN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEE,"aG",@progbits,_ZTIN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEE,comdat
	.weak	_ZTIN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEE
	.p2align	4
_ZTIN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEE
	.quad	_ZTIN5Botan11BlockCipherE
	.size	_ZTIN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEE, 24

	.type	_ZTIN5Botan7AES_256E,@object 
	.section	.rodata,"a",@progbits
	.globl	_ZTIN5Botan7AES_256E
	.p2align	4
_ZTIN5Botan7AES_256E:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN5Botan7AES_256E
	.quad	_ZTIN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEE
	.size	_ZTIN5Botan7AES_256E, 24

	.type	.L.str,@object          
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"cpu"
	.size	.L.str, 4

	.type	.L.str.1,@object        
.L.str.1:
	.asciz	"vperm"
	.size	.L.str.1, 6

	.type	.L.str.2,@object        
.L.str.2:
	.asciz	"base"
	.size	.L.str.2, 5

	.type	_ZZN5Botan5CPUID5stateEvE7g_cpuid,@object 
	.section	.bss._ZZN5Botan5CPUID5stateEvE7g_cpuid,"aGw",@nobits,_ZZN5Botan5CPUID5stateEvE7g_cpuid,comdat
	.weak	_ZZN5Botan5CPUID5stateEvE7g_cpuid
	.p2align	3
_ZZN5Botan5CPUID5stateEvE7g_cpuid:
	.zero	24
	.size	_ZZN5Botan5CPUID5stateEvE7g_cpuid, 24

	.type	_ZGVZN5Botan5CPUID5stateEvE7g_cpuid,@object 
	.section	.bss._ZGVZN5Botan5CPUID5stateEvE7g_cpuid,"aGw",@nobits,_ZGVZN5Botan5CPUID5stateEvE7g_cpuid,comdat
	.weak	_ZGVZN5Botan5CPUID5stateEvE7g_cpuid
	.p2align	3
_ZGVZN5Botan5CPUID5stateEvE7g_cpuid:
	.quad	0                       
	.size	_ZGVZN5Botan5CPUID5stateEvE7g_cpuid, 8

	.type	.L.str.3,@object        
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.3:
	.asciz	"EK.size() == 44 || EK.size() == 52 || EK.size() == 60"
	.size	.L.str.3, 54

	.type	.L.str.4,@object        
.L.str.4:
	.asciz	"Key was set"
	.size	.L.str.4, 12

	.type	.L__func__._ZN5Botan12_GLOBAL__N_113aes_encrypt_nEPKhPhmRKSt6vectorIjNS_16secure_allocatorIjEEE,@object 
.L__func__._ZN5Botan12_GLOBAL__N_113aes_encrypt_nEPKhPhmRKSt6vectorIjNS_16secure_allocatorIjEEE:
	.asciz	"aes_encrypt_n"
	.size	.L__func__._ZN5Botan12_GLOBAL__N_113aes_encrypt_nEPKhPhmRKSt6vectorIjNS_16secure_allocatorIjEEE, 14

	.type	.L.str.5,@object        
.L.str.5:
	.asciz	"/mnt/c/Users/Adam/Developer/CryptoFunctionDetection/crypto_implementations/botan/src/lib/block/aes/aes.cpp"
	.size	.L.str.5, 107

	.type	.L.str.6,@object        
.L.str.6:
	.asciz	"DK.size() == 44 || DK.size() == 52 || DK.size() == 60"
	.size	.L.str.6, 54

	.type	.L__func__._ZN5Botan12_GLOBAL__N_113aes_decrypt_nEPKhPhmRKSt6vectorIjNS_16secure_allocatorIjEEE,@object 
.L__func__._ZN5Botan12_GLOBAL__N_113aes_decrypt_nEPKhPhmRKSt6vectorIjNS_16secure_allocatorIjEEE:
	.asciz	"aes_decrypt_n"
	.size	.L__func__._ZN5Botan12_GLOBAL__N_113aes_decrypt_nEPKhPhmRKSt6vectorIjNS_16secure_allocatorIjEEE, 14

	.type	_ZZN5Botan12_GLOBAL__N_116aes_key_scheduleEPKhmRSt6vectorIjNS_16secure_allocatorIjEEES7_bE2RC,@object 
	.section	.rodata,"a",@progbits
	.p2align	4
_ZZN5Botan12_GLOBAL__N_116aes_key_scheduleEPKhmRSt6vectorIjNS_16secure_allocatorIjEEES7_bE2RC:
	.long	16777216                
	.long	33554432                
	.long	67108864                
	.long	134217728               
	.long	268435456               
	.long	536870912               
	.long	1073741824              
	.long	2147483648              
	.long	452984832               
	.long	905969664               
	.size	_ZZN5Botan12_GLOBAL__N_116aes_key_scheduleEPKhmRSt6vectorIjNS_16secure_allocatorIjEEES7_bE2RC, 40

	.type	.L.str.7,@object        
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.7:
	.asciz	"X == 4 || X == 6 || X == 8"
	.size	.L.str.7, 27

	.type	.L.str.8,@object        
.L.str.8:
	.zero	1
	.size	.L.str.8, 1

	.type	.L__func__._ZN5Botan12_GLOBAL__N_116aes_key_scheduleEPKhmRSt6vectorIjNS_16secure_allocatorIjEEES7_b,@object 
.L__func__._ZN5Botan12_GLOBAL__N_116aes_key_scheduleEPKhmRSt6vectorIjNS_16secure_allocatorIjEEES7_b:
	.asciz	"aes_key_schedule"
	.size	.L__func__._ZN5Botan12_GLOBAL__N_116aes_key_scheduleEPKhmRSt6vectorIjNS_16secure_allocatorIjEEES7_b, 17

	.type	.L.str.9,@object        
.L.str.9:
	.asciz	"rounds == 10 || rounds == 12 || rounds == 14"
	.size	.L.str.9, 45

	.type	.L.str.10,@object       
.L.str.10:
	.asciz	"vector::_M_default_append"
	.size	.L.str.10, 26

	.type	.L.str.11,@object       
.L.str.11:
	.asciz	"AES-128"
	.size	.L.str.11, 8

	.type	_ZTVN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEE,@object 
	.section	.rodata._ZTVN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEE,"aG",@progbits,_ZTVN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEE,comdat
	.weak	_ZTVN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEE
	.p2align	3
_ZTVN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEE:
	.quad	0
	.quad	_ZTIN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEE
	.quad	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEED2Ev
	.quad	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEED0Ev
	.quad	__cxa_pure_virtual
	.quad	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE8key_specEv
	.quad	__cxa_pure_virtual
	.quad	__cxa_pure_virtual
	.quad	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE10block_sizeEv
	.quad	_ZNK5Botan11BlockCipher11parallelismEv
	.quad	_ZNK5Botan11BlockCipher8providerB5cxx11Ev
	.quad	__cxa_pure_virtual
	.quad	__cxa_pure_virtual
	.quad	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm
	.quad	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm
	.quad	__cxa_pure_virtual
	.size	_ZTVN5Botan25Block_Cipher_Fixed_ParamsILm16ELm16ELm0ELm1ENS_11BlockCipherEEE, 128

	.type	_ZTVN5Botan11BlockCipherE,@object 
	.section	.rodata._ZTVN5Botan11BlockCipherE,"aG",@progbits,_ZTVN5Botan11BlockCipherE,comdat
	.weak	_ZTVN5Botan11BlockCipherE
	.p2align	3
_ZTVN5Botan11BlockCipherE:
	.quad	0
	.quad	_ZTIN5Botan11BlockCipherE
	.quad	_ZN5Botan11BlockCipherD2Ev
	.quad	_ZN5Botan11BlockCipherD0Ev
	.quad	__cxa_pure_virtual
	.quad	__cxa_pure_virtual
	.quad	__cxa_pure_virtual
	.quad	__cxa_pure_virtual
	.quad	__cxa_pure_virtual
	.quad	_ZNK5Botan11BlockCipher11parallelismEv
	.quad	_ZNK5Botan11BlockCipher8providerB5cxx11Ev
	.quad	__cxa_pure_virtual
	.quad	__cxa_pure_virtual
	.quad	_ZNK5Botan11BlockCipher13encrypt_n_xexEPhPKhm
	.quad	_ZNK5Botan11BlockCipher13decrypt_n_xexEPhPKhm
	.quad	__cxa_pure_virtual
	.size	_ZTVN5Botan11BlockCipherE, 128

	.type	_ZTVN5Botan18SymmetricAlgorithmE,@object 
	.section	.rodata._ZTVN5Botan18SymmetricAlgorithmE,"aG",@progbits,_ZTVN5Botan18SymmetricAlgorithmE,comdat
	.weak	_ZTVN5Botan18SymmetricAlgorithmE
	.p2align	3
_ZTVN5Botan18SymmetricAlgorithmE:
	.quad	0
	.quad	_ZTIN5Botan18SymmetricAlgorithmE
	.quad	_ZN5Botan18SymmetricAlgorithmD2Ev
	.quad	_ZN5Botan18SymmetricAlgorithmD0Ev
	.quad	__cxa_pure_virtual
	.quad	__cxa_pure_virtual
	.quad	__cxa_pure_virtual
	.quad	__cxa_pure_virtual
	.size	_ZTVN5Botan18SymmetricAlgorithmE, 64

	.type	.L.str.12,@object       
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.12:
	.asciz	"AES-192"
	.size	.L.str.12, 8

	.type	_ZTVN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEE,@object 
	.section	.rodata._ZTVN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEE,"aG",@progbits,_ZTVN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEE,comdat
	.weak	_ZTVN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEE
	.p2align	3
_ZTVN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEE:
	.quad	0
	.quad	_ZTIN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEE
	.quad	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEED2Ev
	.quad	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEED0Ev
	.quad	__cxa_pure_virtual
	.quad	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE8key_specEv
	.quad	__cxa_pure_virtual
	.quad	__cxa_pure_virtual
	.quad	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE10block_sizeEv
	.quad	_ZNK5Botan11BlockCipher11parallelismEv
	.quad	_ZNK5Botan11BlockCipher8providerB5cxx11Ev
	.quad	__cxa_pure_virtual
	.quad	__cxa_pure_virtual
	.quad	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm
	.quad	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm
	.quad	__cxa_pure_virtual
	.size	_ZTVN5Botan25Block_Cipher_Fixed_ParamsILm16ELm24ELm0ELm1ENS_11BlockCipherEEE, 128

	.type	.L.str.13,@object       
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.13:
	.asciz	"AES-256"
	.size	.L.str.13, 8

	.type	_ZTVN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEE,@object 
	.section	.rodata._ZTVN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEE,"aG",@progbits,_ZTVN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEE,comdat
	.weak	_ZTVN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEE
	.p2align	3
_ZTVN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEE:
	.quad	0
	.quad	_ZTIN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEE
	.quad	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEED2Ev
	.quad	_ZN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEED0Ev
	.quad	__cxa_pure_virtual
	.quad	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE8key_specEv
	.quad	__cxa_pure_virtual
	.quad	__cxa_pure_virtual
	.quad	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE10block_sizeEv
	.quad	_ZNK5Botan11BlockCipher11parallelismEv
	.quad	_ZNK5Botan11BlockCipher8providerB5cxx11Ev
	.quad	__cxa_pure_virtual
	.quad	__cxa_pure_virtual
	.quad	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE13encrypt_n_xexEPhPKhm
	.quad	_ZNK5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEE13decrypt_n_xexEPhPKhm
	.quad	__cxa_pure_virtual
	.size	_ZTVN5Botan25Block_Cipher_Fixed_ParamsILm16ELm32ELm0ELm1ENS_11BlockCipherEEE, 128

	.type	.L.str.14,@object       
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.14:
	.asciz	"basic_string::_M_construct null not valid"
	.size	.L.str.14, 42

	.type	.L.str.15,@object       
.L.str.15:
	.asciz	"basic_string::_M_create"
	.size	.L.str.15, 24

	.type	x,@object               
	.comm	x,4,4
	.type	y,@object               
	.comm	y,4,4
	.type	x.16,@object            
	.comm	x.16,4,4
	.type	y.17,@object            
	.comm	y.17,4,4
	.type	x.18,@object            
	.comm	x.18,4,4
	.type	y.19,@object            
	.comm	y.19,4,4
	.type	x.20,@object            
	.comm	x.20,4,4
	.type	y.21,@object            
	.comm	y.21,4,4
	.type	x.22,@object            
	.comm	x.22,4,4
	.type	y.23,@object            
	.comm	y.23,4,4
	.type	x.24,@object            
	.comm	x.24,4,4
	.type	y.25,@object            
	.comm	y.25,4,4
	.type	x.26,@object            
	.comm	x.26,4,4
	.type	y.27,@object            
	.comm	y.27,4,4
	.type	x.28,@object            
	.comm	x.28,4,4
	.type	y.29,@object            
	.comm	y.29,4,4
	.type	x.30,@object            
	.comm	x.30,4,4
	.type	y.31,@object            
	.comm	y.31,4,4
	.type	x.32,@object            
	.comm	x.32,4,4
	.type	y.33,@object            
	.comm	y.33,4,4
	.type	x.34,@object            
	.comm	x.34,4,4
	.type	y.35,@object            
	.comm	y.35,4,4
	.type	x.36,@object            
	.comm	x.36,4,4
	.type	y.37,@object            
	.comm	y.37,4,4
	.type	x.38,@object            
	.comm	x.38,4,4
	.type	y.39,@object            
	.comm	y.39,4,4
	.type	x.40,@object            
	.comm	x.40,4,4
	.type	y.41,@object            
	.comm	y.41,4,4
	.type	x.42,@object            
	.comm	x.42,4,4
	.type	y.43,@object            
	.comm	y.43,4,4
	.type	x.44,@object            
	.comm	x.44,4,4
	.type	y.45,@object            
	.comm	y.45,4,4
	.type	x.46,@object            
	.comm	x.46,4,4
	.type	y.47,@object            
	.comm	y.47,4,4
	.type	x.48,@object            
	.comm	x.48,4,4
	.type	y.49,@object            
	.comm	y.49,4,4
	.type	x.50,@object            
	.comm	x.50,4,4
	.type	y.51,@object            
	.comm	y.51,4,4
	.type	x.52,@object            
	.comm	x.52,4,4
	.type	y.53,@object            
	.comm	y.53,4,4
	.type	x.54,@object            
	.comm	x.54,4,4
	.type	y.55,@object            
	.comm	y.55,4,4
	.type	x.56,@object            
	.comm	x.56,4,4
	.type	y.57,@object            
	.comm	y.57,4,4
	.type	x.58,@object            
	.comm	x.58,4,4
	.type	y.59,@object            
	.comm	y.59,4,4
	.type	x.60,@object            
	.comm	x.60,4,4
	.type	y.61,@object            
	.comm	y.61,4,4
	.type	x.62,@object            
	.comm	x.62,4,4
	.type	y.63,@object            
	.comm	y.63,4,4
	.type	x.64,@object            
	.comm	x.64,4,4
	.type	y.65,@object            
	.comm	y.65,4,4
	.type	x.66,@object            
	.comm	x.66,4,4
	.type	y.67,@object            
	.comm	y.67,4,4
	.type	x.68,@object            
	.comm	x.68,4,4
	.type	y.69,@object            
	.comm	y.69,4,4
	.type	x.70,@object            
	.comm	x.70,4,4
	.type	y.71,@object            
	.comm	y.71,4,4
	.type	x.72,@object            
	.comm	x.72,4,4
	.type	y.73,@object            
	.comm	y.73,4,4
	.type	x.74,@object            
	.comm	x.74,4,4
	.type	y.75,@object            
	.comm	y.75,4,4
	.type	x.76,@object            
	.comm	x.76,4,4
	.type	y.77,@object            
	.comm	y.77,4,4
	.type	x.78,@object            
	.comm	x.78,4,4
	.type	y.79,@object            
	.comm	y.79,4,4
	.type	x.80,@object            
	.comm	x.80,4,4
	.type	y.81,@object            
	.comm	y.81,4,4
	.type	x.82,@object            
	.comm	x.82,4,4
	.type	y.83,@object            
	.comm	y.83,4,4
	.type	x.84,@object            
	.comm	x.84,4,4
	.type	y.85,@object            
	.comm	y.85,4,4
	.type	x.86,@object            
	.comm	x.86,4,4
	.type	y.87,@object            
	.comm	y.87,4,4
	.type	x.88,@object            
	.comm	x.88,4,4
	.type	y.89,@object            
	.comm	y.89,4,4
	.type	x.90,@object            
	.comm	x.90,4,4
	.type	y.91,@object            
	.comm	y.91,4,4
	.type	x.92,@object            
	.comm	x.92,4,4
	.type	y.93,@object            
	.comm	y.93,4,4
	.type	x.94,@object            
	.comm	x.94,4,4
	.type	y.95,@object            
	.comm	y.95,4,4
	.type	x.96,@object            
	.comm	x.96,4,4
	.type	y.97,@object            
	.comm	y.97,4,4
	.type	x.98,@object            
	.comm	x.98,4,4
	.type	y.99,@object            
	.comm	y.99,4,4
	.type	x.100,@object           
	.comm	x.100,4,4
	.type	y.101,@object           
	.comm	y.101,4,4
	.type	x.102,@object           
	.comm	x.102,4,4
	.type	y.103,@object           
	.comm	y.103,4,4
	.type	x.104,@object           
	.comm	x.104,4,4
	.type	y.105,@object           
	.comm	y.105,4,4
	.type	x.106,@object           
	.comm	x.106,4,4
	.type	y.107,@object           
	.comm	y.107,4,4
	.type	x.108,@object           
	.comm	x.108,4,4
	.type	y.109,@object           
	.comm	y.109,4,4
	.type	x.110,@object           
	.comm	x.110,4,4
	.type	y.111,@object           
	.comm	y.111,4,4
	.type	x.112,@object           
	.comm	x.112,4,4
	.type	y.113,@object           
	.comm	y.113,4,4
	.type	x.114,@object           
	.comm	x.114,4,4
	.type	y.115,@object           
	.comm	y.115,4,4
	.type	x.116,@object           
	.comm	x.116,4,4
	.type	y.117,@object           
	.comm	y.117,4,4
	.type	x.118,@object           
	.comm	x.118,4,4
	.type	y.119,@object           
	.comm	y.119,4,4
	.type	x.120,@object           
	.comm	x.120,4,4
	.type	y.121,@object           
	.comm	y.121,4,4
	.type	x.122,@object           
	.comm	x.122,4,4
	.type	y.123,@object           
	.comm	y.123,4,4
	.type	x.124,@object           
	.comm	x.124,4,4
	.type	y.125,@object           
	.comm	y.125,4,4
	.type	x.126,@object           
	.comm	x.126,4,4
	.type	y.127,@object           
	.comm	y.127,4,4
	.type	x.128,@object           
	.comm	x.128,4,4
	.type	y.129,@object           
	.comm	y.129,4,4
	.type	x.130,@object           
	.comm	x.130,4,4
	.type	y.131,@object           
	.comm	y.131,4,4
	.type	x.132,@object           
	.comm	x.132,4,4
	.type	y.133,@object           
	.comm	y.133,4,4
	.type	x.134,@object           
	.comm	x.134,4,4
	.type	y.135,@object           
	.comm	y.135,4,4
	.type	x.136,@object           
	.comm	x.136,4,4
	.type	y.137,@object           
	.comm	y.137,4,4
	.type	x.138,@object           
	.comm	x.138,4,4
	.type	y.139,@object           
	.comm	y.139,4,4
	.type	x.140,@object           
	.comm	x.140,4,4
	.type	y.141,@object           
	.comm	y.141,4,4
	.type	x.142,@object           
	.comm	x.142,4,4
	.type	y.143,@object           
	.comm	y.143,4,4
	.type	x.144,@object           
	.comm	x.144,4,4
	.type	y.145,@object           
	.comm	y.145,4,4
	.type	x.146,@object           
	.comm	x.146,4,4
	.type	y.147,@object           
	.comm	y.147,4,4
	.type	x.148,@object           
	.comm	x.148,4,4
	.type	y.149,@object           
	.comm	y.149,4,4
	.type	x.150,@object           
	.comm	x.150,4,4
	.type	y.151,@object           
	.comm	y.151,4,4
	.type	x.152,@object           
	.comm	x.152,4,4
	.type	y.153,@object           
	.comm	y.153,4,4
	.type	x.154,@object           
	.comm	x.154,4,4
	.type	y.155,@object           
	.comm	y.155,4,4
	.type	x.156,@object           
	.comm	x.156,4,4
	.type	y.157,@object           
	.comm	y.157,4,4
	.type	x.158,@object           
	.comm	x.158,4,4
	.type	y.159,@object           
	.comm	y.159,4,4
	.type	x.160,@object           
	.comm	x.160,4,4
	.type	y.161,@object           
	.comm	y.161,4,4
	.type	x.162,@object           
	.comm	x.162,4,4
	.type	y.163,@object           
	.comm	y.163,4,4
	.type	x.164,@object           
	.comm	x.164,4,4
	.type	y.165,@object           
	.comm	y.165,4,4
	.type	x.166,@object           
	.comm	x.166,4,4
	.type	y.167,@object           
	.comm	y.167,4,4
	.type	x.168,@object           
	.comm	x.168,4,4
	.type	y.169,@object           
	.comm	y.169,4,4
	.type	x.170,@object           
	.comm	x.170,4,4
	.type	y.171,@object           
	.comm	y.171,4,4
	.type	x.172,@object           
	.comm	x.172,4,4
	.type	y.173,@object           
	.comm	y.173,4,4
	.type	x.174,@object           
	.comm	x.174,4,4
	.type	y.175,@object           
	.comm	y.175,4,4
	.type	x.176,@object           
	.comm	x.176,4,4
	.type	y.177,@object           
	.comm	y.177,4,4
	.type	x.178,@object           
	.comm	x.178,4,4
	.type	y.179,@object           
	.comm	y.179,4,4
	.type	x.180,@object           
	.comm	x.180,4,4
	.type	y.181,@object           
	.comm	y.181,4,4
	.type	x.182,@object           
	.comm	x.182,4,4
	.type	y.183,@object           
	.comm	y.183,4,4
	.type	x.184,@object           
	.comm	x.184,4,4
	.type	y.185,@object           
	.comm	y.185,4,4
	.type	x.186,@object           
	.comm	x.186,4,4
	.type	y.187,@object           
	.comm	y.187,4,4
	.type	x.188,@object           
	.comm	x.188,4,4
	.type	y.189,@object           
	.comm	y.189,4,4
	.type	x.190,@object           
	.comm	x.190,4,4
	.type	y.191,@object           
	.comm	y.191,4,4
	.type	x.192,@object           
	.comm	x.192,4,4
	.type	y.193,@object           
	.comm	y.193,4,4
	.type	x.194,@object           
	.comm	x.194,4,4
	.type	y.195,@object           
	.comm	y.195,4,4
	.type	x.196,@object           
	.comm	x.196,4,4
	.type	y.197,@object           
	.comm	y.197,4,4
	.type	x.198,@object           
	.comm	x.198,4,4
	.type	y.199,@object           
	.comm	y.199,4,4
	.type	x.200,@object           
	.comm	x.200,4,4
	.type	y.201,@object           
	.comm	y.201,4,4
	.type	x.202,@object           
	.comm	x.202,4,4
	.type	y.203,@object           
	.comm	y.203,4,4
	.type	x.204,@object           
	.comm	x.204,4,4
	.type	y.205,@object           
	.comm	y.205,4,4
	.type	x.206,@object           
	.comm	x.206,4,4
	.type	y.207,@object           
	.comm	y.207,4,4
	.type	x.208,@object           
	.comm	x.208,4,4
	.type	y.209,@object           
	.comm	y.209,4,4
	.type	x.210,@object           
	.comm	x.210,4,4
	.type	y.211,@object           
	.comm	y.211,4,4
	.type	x.212,@object           
	.comm	x.212,4,4
	.type	y.213,@object           
	.comm	y.213,4,4
	.type	x.214,@object           
	.comm	x.214,4,4
	.type	y.215,@object           
	.comm	y.215,4,4
	.type	x.216,@object           
	.comm	x.216,4,4
	.type	y.217,@object           
	.comm	y.217,4,4
	.type	x.218,@object           
	.comm	x.218,4,4
	.type	y.219,@object           
	.comm	y.219,4,4
	.type	x.220,@object           
	.comm	x.220,4,4
	.type	y.221,@object           
	.comm	y.221,4,4
	.type	x.222,@object           
	.comm	x.222,4,4
	.type	y.223,@object           
	.comm	y.223,4,4
	.type	x.224,@object           
	.comm	x.224,4,4
	.type	y.225,@object           
	.comm	y.225,4,4
	.type	x.226,@object           
	.comm	x.226,4,4
	.type	y.227,@object           
	.comm	y.227,4,4
	.type	x.228,@object           
	.comm	x.228,4,4
	.type	y.229,@object           
	.comm	y.229,4,4
	.type	x.230,@object           
	.comm	x.230,4,4
	.type	y.231,@object           
	.comm	y.231,4,4
	.type	x.232,@object           
	.comm	x.232,4,4
	.type	y.233,@object           
	.comm	y.233,4,4
	.type	x.234,@object           
	.comm	x.234,4,4
	.type	y.235,@object           
	.comm	y.235,4,4
	.type	x.236,@object           
	.comm	x.236,4,4
	.type	y.237,@object           
	.comm	y.237,4,4
	.type	x.238,@object           
	.comm	x.238,4,4
	.type	y.239,@object           
	.comm	y.239,4,4
	.type	x.240,@object           
	.comm	x.240,4,4
	.type	y.241,@object           
	.comm	y.241,4,4
	.type	x.242,@object           
	.comm	x.242,4,4
	.type	y.243,@object           
	.comm	y.243,4,4
	.type	x.244,@object           
	.comm	x.244,4,4
	.type	y.245,@object           
	.comm	y.245,4,4
	.type	x.246,@object           
	.comm	x.246,4,4
	.type	y.247,@object           
	.comm	y.247,4,4
	.type	x.248,@object           
	.comm	x.248,4,4
	.type	y.249,@object           
	.comm	y.249,4,4
	.type	x.250,@object           
	.comm	x.250,4,4
	.type	y.251,@object           
	.comm	y.251,4,4
	.type	x.252,@object           
	.comm	x.252,4,4
	.type	y.253,@object           
	.comm	y.253,4,4
	.type	x.254,@object           
	.comm	x.254,4,4
	.type	y.255,@object           
	.comm	y.255,4,4
	.type	x.256,@object           
	.comm	x.256,4,4
	.type	y.257,@object           
	.comm	y.257,4,4
	.type	x.258,@object           
	.comm	x.258,4,4
	.type	y.259,@object           
	.comm	y.259,4,4
	.type	x.260,@object           
	.comm	x.260,4,4
	.type	y.261,@object           
	.comm	y.261,4,4
	.type	x.262,@object           
	.comm	x.262,4,4
	.type	y.263,@object           
	.comm	y.263,4,4
	.type	x.264,@object           
	.comm	x.264,4,4
	.type	y.265,@object           
	.comm	y.265,4,4
	.type	x.266,@object           
	.comm	x.266,4,4
	.type	y.267,@object           
	.comm	y.267,4,4
	.type	x.268,@object           
	.comm	x.268,4,4
	.type	y.269,@object           
	.comm	y.269,4,4
	.type	x.270,@object           
	.comm	x.270,4,4
	.type	y.271,@object           
	.comm	y.271,4,4
	.type	x.272,@object           
	.comm	x.272,4,4
	.type	y.273,@object           
	.comm	y.273,4,4
	.type	x.274,@object           
	.comm	x.274,4,4
	.type	y.275,@object           
	.comm	y.275,4,4
	.type	x.276,@object           
	.comm	x.276,4,4
	.type	y.277,@object           
	.comm	y.277,4,4
	.type	x.278,@object           
	.comm	x.278,4,4
	.type	y.279,@object           
	.comm	y.279,4,4
	.type	x.280,@object           
	.comm	x.280,4,4
	.type	y.281,@object           
	.comm	y.281,4,4
	.type	x.282,@object           
	.comm	x.282,4,4
	.type	y.283,@object           
	.comm	y.283,4,4
	.type	x.284,@object           
	.comm	x.284,4,4
	.type	y.285,@object           
	.comm	y.285,4,4
	.type	x.286,@object           
	.comm	x.286,4,4
	.type	y.287,@object           
	.comm	y.287,4,4
	.type	x.288,@object           
	.comm	x.288,4,4
	.type	y.289,@object           
	.comm	y.289,4,4
	.type	x.290,@object           
	.comm	x.290,4,4
	.type	y.291,@object           
	.comm	y.291,4,4
	.type	x.292,@object           
	.comm	x.292,4,4
	.type	y.293,@object           
	.comm	y.293,4,4
	.type	x.294,@object           
	.comm	x.294,4,4
	.type	y.295,@object           
	.comm	y.295,4,4
	.type	x.296,@object           
	.comm	x.296,4,4
	.type	y.297,@object           
	.comm	y.297,4,4
	.type	x.298,@object           
	.comm	x.298,4,4
	.type	y.299,@object           
	.comm	y.299,4,4
	.type	x.300,@object           
	.comm	x.300,4,4
	.type	y.301,@object           
	.comm	y.301,4,4
	.type	x.302,@object           
	.comm	x.302,4,4
	.type	y.303,@object           
	.comm	y.303,4,4
	.type	x.304,@object           
	.comm	x.304,4,4
	.type	y.305,@object           
	.comm	y.305,4,4
	.type	x.306,@object           
	.comm	x.306,4,4
	.type	y.307,@object           
	.comm	y.307,4,4
	.type	x.308,@object           
	.comm	x.308,4,4
	.type	y.309,@object           
	.comm	y.309,4,4
	.type	x.310,@object           
	.comm	x.310,4,4
	.type	y.311,@object           
	.comm	y.311,4,4
	.type	x.312,@object           
	.comm	x.312,4,4
	.type	y.313,@object           
	.comm	y.313,4,4
	.type	x.314,@object           
	.comm	x.314,4,4
	.type	y.315,@object           
	.comm	y.315,4,4
	.type	x.316,@object           
	.comm	x.316,4,4
	.type	y.317,@object           
	.comm	y.317,4,4
	.type	x.318,@object           
	.comm	x.318,4,4
	.type	y.319,@object           
	.comm	y.319,4,4
	.type	x.320,@object           
	.comm	x.320,4,4
	.type	y.321,@object           
	.comm	y.321,4,4
	.type	x.322,@object           
	.comm	x.322,4,4
	.type	y.323,@object           
	.comm	y.323,4,4
	.type	x.324,@object           
	.comm	x.324,4,4
	.type	y.325,@object           
	.comm	y.325,4,4
	.type	x.326,@object           
	.comm	x.326,4,4
	.type	y.327,@object           
	.comm	y.327,4,4
	.type	x.328,@object           
	.comm	x.328,4,4
	.type	y.329,@object           
	.comm	y.329,4,4
	.type	x.330,@object           
	.comm	x.330,4,4
	.type	y.331,@object           
	.comm	y.331,4,4
	.type	x.332,@object           
	.comm	x.332,4,4
	.type	y.333,@object           
	.comm	y.333,4,4
	.type	x.334,@object           
	.comm	x.334,4,4
	.type	y.335,@object           
	.comm	y.335,4,4
	.type	x.336,@object           
	.comm	x.336,4,4
	.type	y.337,@object           
	.comm	y.337,4,4
	.type	x.338,@object           
	.comm	x.338,4,4
	.type	y.339,@object           
	.comm	y.339,4,4
	.type	x.340,@object           
	.comm	x.340,4,4
	.type	y.341,@object           
	.comm	y.341,4,4
	.type	x.342,@object           
	.comm	x.342,4,4
	.type	y.343,@object           
	.comm	y.343,4,4
	.type	x.344,@object           
	.comm	x.344,4,4
	.type	y.345,@object           
	.comm	y.345,4,4
	.type	x.346,@object           
	.comm	x.346,4,4
	.type	y.347,@object           
	.comm	y.347,4,4
	.type	x.348,@object           
	.comm	x.348,4,4
	.type	y.349,@object           
	.comm	y.349,4,4
	.type	x.350,@object           
	.comm	x.350,4,4
	.type	y.351,@object           
	.comm	y.351,4,4
	.type	x.352,@object           
	.comm	x.352,4,4
	.type	y.353,@object           
	.comm	y.353,4,4
	.type	x.354,@object           
	.comm	x.354,4,4
	.type	y.355,@object           
	.comm	y.355,4,4
	.type	x.356,@object           
	.comm	x.356,4,4
	.type	y.357,@object           
	.comm	y.357,4,4
	.type	x.358,@object           
	.comm	x.358,4,4
	.type	y.359,@object           
	.comm	y.359,4,4
	.type	x.360,@object           
	.comm	x.360,4,4
	.type	y.361,@object           
	.comm	y.361,4,4
	.type	x.362,@object           
	.comm	x.362,4,4
	.type	y.363,@object           
	.comm	y.363,4,4
	.type	x.364,@object           
	.comm	x.364,4,4
	.type	y.365,@object           
	.comm	y.365,4,4
	.type	x.366,@object           
	.comm	x.366,4,4
	.type	y.367,@object           
	.comm	y.367,4,4
	.type	x.368,@object           
	.comm	x.368,4,4
	.type	y.369,@object           
	.comm	y.369,4,4
	.type	x.370,@object           
	.comm	x.370,4,4
	.type	y.371,@object           
	.comm	y.371,4,4
	.type	x.372,@object           
	.comm	x.372,4,4
	.type	y.373,@object           
	.comm	y.373,4,4
	.type	x.374,@object           
	.comm	x.374,4,4
	.type	y.375,@object           
	.comm	y.375,4,4
	.type	x.376,@object           
	.comm	x.376,4,4
	.type	y.377,@object           
	.comm	y.377,4,4
	.type	x.378,@object           
	.comm	x.378,4,4
	.type	y.379,@object           
	.comm	y.379,4,4
	.type	x.380,@object           
	.comm	x.380,4,4
	.type	y.381,@object           
	.comm	y.381,4,4
	.type	x.382,@object           
	.comm	x.382,4,4
	.type	y.383,@object           
	.comm	y.383,4,4
	.type	x.384,@object           
	.comm	x.384,4,4
	.type	y.385,@object           
	.comm	y.385,4,4
	.type	x.386,@object           
	.comm	x.386,4,4
	.type	y.387,@object           
	.comm	y.387,4,4
	.type	x.388,@object           
	.comm	x.388,4,4
	.type	y.389,@object           
	.comm	y.389,4,4
	.type	x.390,@object           
	.comm	x.390,4,4
	.type	y.391,@object           
	.comm	y.391,4,4
	.type	x.392,@object           
	.comm	x.392,4,4
	.type	y.393,@object           
	.comm	y.393,4,4
	.type	x.394,@object           
	.comm	x.394,4,4
	.type	y.395,@object           
	.comm	y.395,4,4
	.type	x.396,@object           
	.comm	x.396,4,4
	.type	y.397,@object           
	.comm	y.397,4,4
	.type	x.398,@object           
	.comm	x.398,4,4
	.type	y.399,@object           
	.comm	y.399,4,4
	.type	x.400,@object           
	.comm	x.400,4,4
	.type	y.401,@object           
	.comm	y.401,4,4
	.type	x.402,@object           
	.comm	x.402,4,4
	.type	y.403,@object           
	.comm	y.403,4,4
	.type	x.404,@object           
	.comm	x.404,4,4
	.type	y.405,@object           
	.comm	y.405,4,4
	.type	x.406,@object           
	.comm	x.406,4,4
	.type	y.407,@object           
	.comm	y.407,4,4
	.type	x.408,@object           
	.comm	x.408,4,4
	.type	y.409,@object           
	.comm	y.409,4,4
	.type	x.410,@object           
	.comm	x.410,4,4
	.type	y.411,@object           
	.comm	y.411,4,4
	.type	x.412,@object           
	.comm	x.412,4,4
	.type	y.413,@object           
	.comm	y.413,4,4
	.type	x.414,@object           
	.comm	x.414,4,4
	.type	y.415,@object           
	.comm	y.415,4,4
	.type	x.416,@object           
	.comm	x.416,4,4
	.type	y.417,@object           
	.comm	y.417,4,4
	.type	x.418,@object           
	.comm	x.418,4,4
	.type	y.419,@object           
	.comm	y.419,4,4
	.type	x.420,@object           
	.comm	x.420,4,4
	.type	y.421,@object           
	.comm	y.421,4,4
	.type	x.422,@object           
	.comm	x.422,4,4
	.type	y.423,@object           
	.comm	y.423,4,4
	.type	x.424,@object           
	.comm	x.424,4,4
	.type	y.425,@object           
	.comm	y.425,4,4
	.type	x.426,@object           
	.comm	x.426,4,4
	.type	y.427,@object           
	.comm	y.427,4,4
	.type	x.428,@object           
	.comm	x.428,4,4
	.type	y.429,@object           
	.comm	y.429,4,4
	.type	x.430,@object           
	.comm	x.430,4,4
	.type	y.431,@object           
	.comm	y.431,4,4
	.type	x.432,@object           
	.comm	x.432,4,4
	.type	y.433,@object           
	.comm	y.433,4,4
	.type	x.434,@object           
	.comm	x.434,4,4
	.type	y.435,@object           
	.comm	y.435,4,4
	.type	x.436,@object           
	.comm	x.436,4,4
	.type	y.437,@object           
	.comm	y.437,4,4
	.type	x.438,@object           
	.comm	x.438,4,4
	.type	y.439,@object           
	.comm	y.439,4,4
	.type	x.440,@object           
	.comm	x.440,4,4
	.type	y.441,@object           
	.comm	y.441,4,4
	.type	x.442,@object           
	.comm	x.442,4,4
	.type	y.443,@object           
	.comm	y.443,4,4
	.type	x.444,@object           
	.comm	x.444,4,4
	.type	y.445,@object           
	.comm	y.445,4,4
	.type	x.446,@object           
	.comm	x.446,4,4
	.type	y.447,@object           
	.comm	y.447,4,4
	.type	x.448,@object           
	.comm	x.448,4,4
	.type	y.449,@object           
	.comm	y.449,4,4
	.type	x.450,@object           
	.comm	x.450,4,4
	.type	y.451,@object           
	.comm	y.451,4,4
	.type	x.452,@object           
	.comm	x.452,4,4
	.type	y.453,@object           
	.comm	y.453,4,4
	.type	x.454,@object           
	.comm	x.454,4,4
	.type	y.455,@object           
	.comm	y.455,4,4
	.type	x.456,@object           
	.comm	x.456,4,4
	.type	y.457,@object           
	.comm	y.457,4,4
	.type	x.458,@object           
	.comm	x.458,4,4
	.type	y.459,@object           
	.comm	y.459,4,4
	.type	x.460,@object           
	.comm	x.460,4,4
	.type	y.461,@object           
	.comm	y.461,4,4
	.type	x.462,@object           
	.comm	x.462,4,4
	.type	y.463,@object           
	.comm	y.463,4,4
	.type	x.464,@object           
	.comm	x.464,4,4
	.type	y.465,@object           
	.comm	y.465,4,4
	.type	x.466,@object           
	.comm	x.466,4,4
	.type	y.467,@object           
	.comm	y.467,4,4
	.type	x.468,@object           
	.comm	x.468,4,4
	.type	y.469,@object           
	.comm	y.469,4,4
	.type	x.470,@object           
	.comm	x.470,4,4
	.type	y.471,@object           
	.comm	y.471,4,4
	.type	x.472,@object           
	.comm	x.472,4,4
	.type	y.473,@object           
	.comm	y.473,4,4
	.type	x.474,@object           
	.comm	x.474,4,4
	.type	y.475,@object           
	.comm	y.475,4,4
	.type	x.476,@object           
	.comm	x.476,4,4
	.type	y.477,@object           
	.comm	y.477,4,4
	.type	x.478,@object           
	.comm	x.478,4,4
	.type	y.479,@object           
	.comm	y.479,4,4
	.type	x.480,@object           
	.comm	x.480,4,4
	.type	y.481,@object           
	.comm	y.481,4,4
	.type	x.482,@object           
	.comm	x.482,4,4
	.type	y.483,@object           
	.comm	y.483,4,4
	.type	x.484,@object           
	.comm	x.484,4,4
	.type	y.485,@object           
	.comm	y.485,4,4
	.type	x.486,@object           
	.comm	x.486,4,4
	.type	y.487,@object           
	.comm	y.487,4,4
	.type	x.488,@object           
	.comm	x.488,4,4
	.type	y.489,@object           
	.comm	y.489,4,4
	.type	x.490,@object           
	.comm	x.490,4,4
	.type	y.491,@object           
	.comm	y.491,4,4
	.type	x.492,@object           
	.comm	x.492,4,4
	.type	y.493,@object           
	.comm	y.493,4,4
	.type	x.494,@object           
	.comm	x.494,4,4
	.type	y.495,@object           
	.comm	y.495,4,4
	.type	x.496,@object           
	.comm	x.496,4,4
	.type	y.497,@object           
	.comm	y.497,4,4
	.type	x.498,@object           
	.comm	x.498,4,4
	.type	y.499,@object           
	.comm	y.499,4,4
	.type	x.500,@object           
	.comm	x.500,4,4
	.type	y.501,@object           
	.comm	y.501,4,4
	.type	x.502,@object           
	.comm	x.502,4,4
	.type	y.503,@object           
	.comm	y.503,4,4
	.type	x.504,@object           
	.comm	x.504,4,4
	.type	y.505,@object           
	.comm	y.505,4,4
	.type	x.506,@object           
	.comm	x.506,4,4
	.type	y.507,@object           
	.comm	y.507,4,4
	.type	x.508,@object           
	.comm	x.508,4,4
	.type	y.509,@object           
	.comm	y.509,4,4
	.type	x.510,@object           
	.comm	x.510,4,4
	.type	y.511,@object           
	.comm	y.511,4,4
	.type	x.512,@object           
	.comm	x.512,4,4
	.type	y.513,@object           
	.comm	y.513,4,4
	.type	x.514,@object           
	.comm	x.514,4,4
	.type	y.515,@object           
	.comm	y.515,4,4
	.type	x.516,@object           
	.comm	x.516,4,4
	.type	y.517,@object           
	.comm	y.517,4,4
	.type	x.518,@object           
	.comm	x.518,4,4
	.type	y.519,@object           
	.comm	y.519,4,4
	.type	x.520,@object           
	.comm	x.520,4,4
	.type	y.521,@object           
	.comm	y.521,4,4
	.type	x.522,@object           
	.comm	x.522,4,4
	.type	y.523,@object           
	.comm	y.523,4,4
	.type	x.524,@object           
	.comm	x.524,4,4
	.type	y.525,@object           
	.comm	y.525,4,4
	.type	x.526,@object           
	.comm	x.526,4,4
	.type	y.527,@object           
	.comm	y.527,4,4
	.type	x.528,@object           
	.comm	x.528,4,4
	.type	y.529,@object           
	.comm	y.529,4,4
	.type	x.530,@object           
	.comm	x.530,4,4
	.type	y.531,@object           
	.comm	y.531,4,4
	.type	x.532,@object           
	.comm	x.532,4,4
	.type	y.533,@object           
	.comm	y.533,4,4
	.type	x.534,@object           
	.comm	x.534,4,4
	.type	y.535,@object           
	.comm	y.535,4,4
	.type	x.536,@object           
	.comm	x.536,4,4
	.type	y.537,@object           
	.comm	y.537,4,4
	.type	x.538,@object           
	.comm	x.538,4,4
	.type	y.539,@object           
	.comm	y.539,4,4
	.type	x.540,@object           
	.comm	x.540,4,4
	.type	y.541,@object           
	.comm	y.541,4,4
	.type	x.542,@object           
	.comm	x.542,4,4
	.type	y.543,@object           
	.comm	y.543,4,4
	.type	x.544,@object           
	.comm	x.544,4,4
	.type	y.545,@object           
	.comm	y.545,4,4
	.type	x.546,@object           
	.comm	x.546,4,4
	.type	y.547,@object           
	.comm	y.547,4,4
	.type	x.548,@object           
	.comm	x.548,4,4
	.type	y.549,@object           
	.comm	y.549,4,4
	.type	x.550,@object           
	.comm	x.550,4,4
	.type	y.551,@object           
	.comm	y.551,4,4
	.type	x.552,@object           
	.comm	x.552,4,4
	.type	y.553,@object           
	.comm	y.553,4,4
	.type	x.554,@object           
	.comm	x.554,4,4
	.type	y.555,@object           
	.comm	y.555,4,4
	.type	x.556,@object           
	.comm	x.556,4,4
	.type	y.557,@object           
	.comm	y.557,4,4
	.type	x.558,@object           
	.comm	x.558,4,4
	.type	y.559,@object           
	.comm	y.559,4,4
	.type	x.560,@object           
	.comm	x.560,4,4
	.type	y.561,@object           
	.comm	y.561,4,4
	.type	x.562,@object           
	.comm	x.562,4,4
	.type	y.563,@object           
	.comm	y.563,4,4
	.type	x.564,@object           
	.comm	x.564,4,4
	.type	y.565,@object           
	.comm	y.565,4,4
	.type	x.566,@object           
	.comm	x.566,4,4
	.type	y.567,@object           
	.comm	y.567,4,4
	.type	x.568,@object           
	.comm	x.568,4,4
	.type	y.569,@object           
	.comm	y.569,4,4
	.type	x.570,@object           
	.comm	x.570,4,4
	.type	y.571,@object           
	.comm	y.571,4,4
	.type	x.572,@object           
	.comm	x.572,4,4
	.type	y.573,@object           
	.comm	y.573,4,4
	.type	x.574,@object           
	.comm	x.574,4,4
	.type	y.575,@object           
	.comm	y.575,4,4
	.type	x.576,@object           
	.comm	x.576,4,4
	.type	y.577,@object           
	.comm	y.577,4,4
	.type	x.578,@object           
	.comm	x.578,4,4
	.type	y.579,@object           
	.comm	y.579,4,4
	.type	x.580,@object           
	.comm	x.580,4,4
	.type	y.581,@object           
	.comm	y.581,4,4
	.type	x.582,@object           
	.comm	x.582,4,4
	.type	y.583,@object           
	.comm	y.583,4,4
	.type	x.584,@object           
	.comm	x.584,4,4
	.type	y.585,@object           
	.comm	y.585,4,4
	.type	x.586,@object           
	.comm	x.586,4,4
	.type	y.587,@object           
	.comm	y.587,4,4
	.type	x.588,@object           
	.comm	x.588,4,4
	.type	y.589,@object           
	.comm	y.589,4,4
	.type	x.590,@object           
	.comm	x.590,4,4
	.type	y.591,@object           
	.comm	y.591,4,4
	.type	x.592,@object           
	.comm	x.592,4,4
	.type	y.593,@object           
	.comm	y.593,4,4
	.type	x.594,@object           
	.comm	x.594,4,4
	.type	y.595,@object           
	.comm	y.595,4,4
	.type	x.596,@object           
	.comm	x.596,4,4
	.type	y.597,@object           
	.comm	y.597,4,4
	.type	x.598,@object           
	.comm	x.598,4,4
	.type	y.599,@object           
	.comm	y.599,4,4
	.type	x.600,@object           
	.comm	x.600,4,4
	.type	y.601,@object           
	.comm	y.601,4,4
	.type	x.602,@object           
	.comm	x.602,4,4
	.type	y.603,@object           
	.comm	y.603,4,4
	.type	x.604,@object           
	.comm	x.604,4,4
	.type	y.605,@object           
	.comm	y.605,4,4
	.type	x.606,@object           
	.comm	x.606,4,4
	.type	y.607,@object           
	.comm	y.607,4,4
	.type	x.608,@object           
	.comm	x.608,4,4
	.type	y.609,@object           
	.comm	y.609,4,4
	.type	x.610,@object           
	.comm	x.610,4,4
	.type	y.611,@object           
	.comm	y.611,4,4
	.type	x.612,@object           
	.comm	x.612,4,4
	.type	y.613,@object           
	.comm	y.613,4,4
	.type	x.614,@object           
	.comm	x.614,4,4
	.type	y.615,@object           
	.comm	y.615,4,4
	.type	x.616,@object           
	.comm	x.616,4,4
	.type	y.617,@object           
	.comm	y.617,4,4
	.type	x.618,@object           
	.comm	x.618,4,4
	.type	y.619,@object           
	.comm	y.619,4,4
	.type	x.620,@object           
	.comm	x.620,4,4
	.type	y.621,@object           
	.comm	y.621,4,4
	.type	x.622,@object           
	.comm	x.622,4,4
	.type	y.623,@object           
	.comm	y.623,4,4
	.type	x.624,@object           
	.comm	x.624,4,4
	.type	y.625,@object           
	.comm	y.625,4,4
	.type	x.626,@object           
	.comm	x.626,4,4
	.type	y.627,@object           
	.comm	y.627,4,4
	.type	x.628,@object           
	.comm	x.628,4,4
	.type	y.629,@object           
	.comm	y.629,4,4
	.type	x.630,@object           
	.comm	x.630,4,4
	.type	y.631,@object           
	.comm	y.631,4,4
	.type	x.632,@object           
	.comm	x.632,4,4
	.type	y.633,@object           
	.comm	y.633,4,4
	.type	x.634,@object           
	.comm	x.634,4,4
	.type	y.635,@object           
	.comm	y.635,4,4
	.type	x.636,@object           
	.comm	x.636,4,4
	.type	y.637,@object           
	.comm	y.637,4,4
	.type	x.638,@object           
	.comm	x.638,4,4
	.type	y.639,@object           
	.comm	y.639,4,4
	.type	x.640,@object           
	.comm	x.640,4,4
	.type	y.641,@object           
	.comm	y.641,4,4
	.type	x.642,@object           
	.comm	x.642,4,4
	.type	y.643,@object           
	.comm	y.643,4,4
	.type	x.644,@object           
	.comm	x.644,4,4
	.type	y.645,@object           
	.comm	y.645,4,4
	.type	x.646,@object           
	.comm	x.646,4,4
	.type	y.647,@object           
	.comm	y.647,4,4
	.type	x.648,@object           
	.comm	x.648,4,4
	.type	y.649,@object           
	.comm	y.649,4,4
	.type	x.650,@object           
	.comm	x.650,4,4
	.type	y.651,@object           
	.comm	y.651,4,4
	.type	x.652,@object           
	.comm	x.652,4,4
	.type	y.653,@object           
	.comm	y.653,4,4
	.type	x.654,@object           
	.comm	x.654,4,4
	.type	y.655,@object           
	.comm	y.655,4,4
	.type	x.656,@object           
	.comm	x.656,4,4
	.type	y.657,@object           
	.comm	y.657,4,4

	.ident	"Obfuscator-LLVM clang version 5.0.0 (tags/RELEASE_500/final) (based on Obfuscator-LLVM 5.0.0git-11eb3440)"
	.section	".note.GNU-stack","",@progbits
