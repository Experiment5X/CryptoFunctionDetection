<class name="data" context="public" lifecycle="none" is_value_type="1">
    Encapsulates fixed byte array.


    <property name="bytes" type="byte" access="readonly">
        Underlying byte array.

        <array length="given"/>
    </property>


    <property name="len" type="size">
        Byte array length.
    </property>


    <variable name="empty data" type="byte" declaration="private" definition="private">
        Byte array that is used as "empty array" mark.

        <array length="derived"/>
        <value value="0x00"/>
    </variable>


    <method name="is valid">
        Returns true if underlying byte array is defined.

        <return type="boolean"/>
    </method>


    <method name="is zero">
        Returns true if underlying byte array contains only zeros.

        <return type="boolean"/>
    </method>


    <method name="is empty">
        Returns true if underlying byte array is empty.

        <return type="boolean"/>
    </method>


    <method name="equal">
        Return true if given data are equal.

        <argument name="rhs" class="data"/>

        <return type="boolean"/>
    </method>


    <method name="len">
        Return data length.

        Note, this method can be used for wrappers where direct access
        to the structure fields is prohibited.

        <return type="size"/>
    </method>


    <method name="bytes" is_const="1">
        Returns underlying data bytes.

        Note, this method can be used for wrappers where direct access
        to the structure fields is prohibited.

        <return type="byte" is_reference="1"/>
    </method>


    <method name="secure equal">
        Perform constant-time data comparison.
        The time depends on the given length but not on the data itself.
        Return true if given data are equal.

        <argument name="rhs" class="data"/>

        <return type="boolean"/>
    </method>


    <constructor name="data">
        Creates data from the preallocated bytes.

        <argument name="bytes" type="byte">
            <array length="given"/>
        </argument>

        <argument name="len" type="size"/>
    </constructor>


    <constructor name="from str">
        Creates data from the preallocated string.

        <argument name="str" type="string">
            <string length="given"/>
        </argument>

        <argument name="len" type="size"/>
    </constructor>


    <constructor name="empty">
        Creates empty data.
    </constructor>


    <method name="slice beg" >
        Return underlying data slice starting from beginning.

        <argument name="offset" type="size"/>
        <argument name="len" type="size"/>

        <return class="self" is_reference="0"/>
    </method>


    <method name="slice end">
        Return underlying data slice starting from ending.

        <argument name="offset" type="size"/>
        <argument name="len" type="size"/>

        <return class="self" is_reference="0"/>
    </method>
</class>
