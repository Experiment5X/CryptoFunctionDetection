<class name="phe cipher" context="internal">
    Class for encryption using PHE account key
    This class is thread-safe.

    <require module="const" scope="private"/>
    <require class="phe common" scope="public"/>
    <require impl="ctr drbg" project="foundation" scope="private"/>
    <require impl="sha512" project="foundation" scope="private"/>
    <require impl="hkdf" project="foundation" scope="private"/>
    <require impl="aes256 gcm" project="foundation"/>
    <require module="buffer defs" scope="private" project="common"/>

    <constant name="salt len" value="32" definition="private"/>
    <constant name="key len" value="32" definition="private"/>
    <constant name="nonce len" value="12" definition="private"/>

    <property name="aes256 gcm" impl="aes256 gcm" project="foundation"/>

    <dependency name="random" interface="random" project="foundation">
        Random used for salt generation
    </dependency>

    <method name="setup defaults">
        Setups dependencies with default values.

        <return enum="status">
            - vsce_status_ERROR_RNG_FAILED in case rng failed
        </return>
    </method>

    <method name="encrypt len">
        Returns buffer capacity needed to fit cipher text

        <argument name="plain text len" type="size">
            Plain text len
        </argument>

        <return type="size"/>
    </method>

    <method name="decrypt len">
        Returns buffer capacity needed to fit plain text

        <argument name="cipher text len" type="size">
            Cipher text len
        </argument>

        <return type="size"/>
    </method>

    <method name="encrypt">
        Encrypts data using account key

        <argument name="plain text" class="data">
            Data to encrypt
        </argument>

        <argument name="account key" class="data">
            Account key
        </argument>

        <argument name="cipher text" class="buffer" access="writeonly">
            Encrypted data

            <length method="encrypt len">
                <proxy argument="plain text" to="plain text len" cast="data_length"/>
            </length>
        </argument>

        <return enum="status">
            - vsce_status_ERROR_AES_FAILED in case AES returned error
            - vsce_status_ERROR_RNG_FAILED in case rng failed
        </return>
    </method>

    <method name="decrypt">
        Decrypts data using account key

        <argument name="cipher text" class="data">
            Encrypted data
        </argument>

        <argument name="account key" class="data">
            Account key
        </argument>

        <argument name="plain text" class="buffer" access="writeonly">
            Encrypted data

            <length method="decrypt len">
                <proxy argument="cipher text" to="cipher text len" cast="data_length"/>
            </length>
        </argument>

        <return enum="status">
            - vsce_status_ERROR_AES_FAILED in case AES returned error
        </return>
    </method>

    <method name="auth encrypt">
        Encrypts data (and authenticates additional data) using account key

        <argument name="plain text" class="data">
            Data to encrypt
        </argument>

        <argument name="additional data" class="data">
            Data to authenticate
        </argument>

        <argument name="account key" class="data">
            Account key
        </argument>

        <argument name="cipher text" class="buffer" access="writeonly">
            Encrypted data

            <length method="encrypt len">
                <proxy argument="plain text" to="plain text len" cast="data_length"/>
            </length>
        </argument>

        <return enum="status">
            - vsce_status_ERROR_AES_FAILED in case AES returned error
            - vsce_status_ERROR_RNG_FAILED in case rng failed
        </return>
    </method>

    <method name="auth decrypt">
        Decrypts data (and verifies additional data) using account key

        <argument name="cipher text" class="data">
            Encrypted data
        </argument>

        <argument name="additional data" class="data">
            Data to authenticate
        </argument>

        <argument name="account key" class="data">
            Account key
        </argument>

        <argument name="plain text" class="buffer" access="writeonly">
            Encrypted data

            <length method="decrypt len">
                <proxy argument="cipher text" to="cipher text len" cast="data_length"/>
            </length>
        </argument>

        <return enum="status">
            - vsce_status_ERROR_AES_FAILED in case AES returned error
        </return>
    </method>

</class>
