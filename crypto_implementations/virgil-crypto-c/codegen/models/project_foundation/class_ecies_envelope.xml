<class name="ecies envelope" scope="internal" context="public" lifecycle="none">
     Provides function to process ECIES envelope ASN.1 structure:

         ECIES-Envelope-Schema DEFINITIONS EXPLICIT TAGS ::=
         BEGIN

            IMPORTS

              -- Imports from RFC 5280, Appendix A.1
                 AlgorithmIdentifier
                     FROM PKIX1Explicit88
                         { iso(1) identified-organization(3) dod(6)
                           internet(1) security(5) mechanisms(5) pkix(7)
                           mod(0) pkix1-explicit(18) }

              -- Imports from ISO/IEC 18033-2, Appendix B
                 KeyDerivationFunction
                     FROM AlgorithmObjectIdentifiers
                         { iso(1) standard(0) encryption-algorithms(18033) part(2)
                           asn1-module(0) algorithm-object-identifiers(0) };


             ECIES-Envelope ::= SEQUENCE {
                 version          INTEGER { v0(0) },
                 originator       OriginatorPublicKey,
                 kdf              KeyDerivationFunction,
                 hmac             DigestInfo,
                 encryptedContent EncryptedContentInfo
             }

             OriginatorPublicKey ::= SEQUENCE {
                 algorithm AlgorithmIdentifier,
                 publicKey BIT STRING
             }

             DigestInfo ::= SEQUENCE {
                 digestAlgorithm    DigestAlgorithmIdentifier,
                 digest             Digest
             }

             DigestAlgorithmIdentifier ::= AlgorithmIdentifier

             Digest ::= OCTET STRING

             EncryptedContentInfo ::= SEQUENCE {
                 contentEncryptionAlgorithm ContentEncryptionAlgorithmIdentifier,
                 encryptedContent EncryptedContent
             }

             ContentEncryptionAlgorithmIdentifier :: = AlgorithmIdentifier

             EncryptedContent ::= OCTET STRING
         END

    <require interface="alg"/>
    <require impl="hmac"/>
    <require impl="asn1rd"/>
    <require impl="asn1wr"/>
    <require impl="key asn1 serializer"/>
    <require impl="key asn1 deserializer"/>
    <require impl="alg info der serializer"/>
    <require impl="alg info der deserializer"/>
    <require impl="hash based alg info"/>
    <require class="alg factory"/>

    <property name="ephemeral public key" impl="raw public key"/>
    <property name="cipher" interface="alg info"/>
    <property name="kdf" interface="alg info"/>
    <property name="mac" interface="alg info"/>
    <property name="mac digest" class="buffer"/>
    <property name="encrypted content" class="buffer"/>

    <method name="packed len">
        Return buffer length required to hold packed ECIES-Envelope.

        <return type="size"/>
    </method>

    <method name="pack">
        Pack properties to the ASN.1 structure.

        ECIES-Envelope ::= SEQUENCE {
            version          INTEGER { v0(0) },
            originator       OriginatorPublicKey,
            kdf              KeyDerivationFunction,
            hmac             DigestInfo,
            encryptedContent EncryptedContentInfo }

        OriginatorPublicKey ::= SEQUENCE {
            algorithm AlgorithmIdentifier,
            publicKey BIT STRING }

        DigestInfo ::= SEQUENCE {
            digestAlgorithm    DigestAlgorithmIdentifier,
            digest             Digest }

        DigestAlgorithmIdentifier ::= AlgorithmIdentifier
        Digest ::= OCTET STRING

        EncryptedContentInfo ::= SEQUENCE {
            contentEncryptionAlgorithm ContentEncryptionAlgorithmIdentifier,
            encryptedContent EncryptedContent }

        ContentEncryptionAlgorithmIdentifier :: = AlgorithmIdentifier
        EncryptedContent ::= OCTET STRING

        <argument name="out" class="buffer">
            <length method="packed len"/>
        </argument>

        <return enum="status"/>
    </method>

    <method name="unpack">
        Unpack ECIES-Envelope ASN.1 structure.
        Unpacked data can be accessed thru getters.

        <argument name="data" class="data"/>

        <return enum="status"/>
    </method>

    <method name="cleanup properties">
        Destroy internal objects.
    </method>
</class>
