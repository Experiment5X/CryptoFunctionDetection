<interface name="key serializer">
    Public and private key serialization to an interchangeable format.


    <method name="serialized public key len" is_const="1">
        Calculate buffer size enough to hold serialized public key.

        Precondition: public key must be exportable.

        <argument name="public key" impl="raw public key"/>

        <return type="size"/>
    </method>


    <method name="serialize public key">
        Serialize given public key to an interchangeable format.

        Precondition: public key must be exportable.

        <argument name="public key" impl="raw public key"/>

        <argument name="out" class="buffer">
            <length method="serialized public key len">
                <proxy argument="public key" to="public key"/>
            </length>
        </argument>

        <return enum="status"/>
    </method>


    <method name="serialized private key len" is_const="1">
        Calculate buffer size enough to hold serialized private key.

        Precondition: private key must be exportable.

        <argument name="private key" impl="raw private key"/>

        <return type="size"/>
    </method>


    <method name="serialize private key">
        Serialize given private key to an interchangeable format.

        Precondition: private key must be exportable.

        <argument name="private key" impl="raw private key"/>

        <argument name="out" class="buffer">
            <length method="serialized private key len">
                <proxy argument="private key" to="private key"/>
            </length>
        </argument>

        <return enum="status"/>
    </method>
</interface>
