<interface name="cipher">
    Provide interface for symmetric ciphers.

    <inherit interface="encrypt"/>
    <inherit interface="decrypt"/>
    <inherit interface="cipher info"/>

    <method name="set nonce">
        Setup IV or nonce.

        <argument name="nonce" class="data"/>
    </method>

    <method name="set key">
        Set cipher encryption / decryption key.

        <argument name="key" class="data"/>
    </method>

    <method name="state" is_const="1" visibility="private">
        Return cipher's current state.

        <return enum="cipher state"/>
    </method>

    <method name="start encryption">
        Start sequential encryption.
    </method>

    <method name="start decryption">
        Start sequential decryption.
    </method>

    <method name="update">
        Process encryption or decryption of the given data chunk.

        <argument name="data" class="data"/>
        <argument name="out" class="buffer">
            <length method="out len">
                <proxy argument="data" to="data len" cast="data_length"/>
            </length>
        </argument>
    </method>

    <method name="out len">
        Return buffer length required to hold an output of the methods
        "update" or "finish" in an current mode.
        Pass zero length to define buffer length of the method "finish".

        <argument name="data len" type="size"/>
        <return type="size"/>
    </method>

    <method name="encrypted out len" is_const="1">
        Return buffer length required to hold an output of the methods
        "update" or "finish" in an encryption mode.
        Pass zero length to define buffer length of the method "finish".

        <argument name="data len" type="size"/>
        <return type="size"/>
    </method>

    <method name="decrypted out len" is_const="1">
        Return buffer length required to hold an output of the methods
        "update" or "finish" in an decryption mode.
        Pass zero length to define buffer length of the method "finish".

        <argument name="data len" type="size"/>
        <return type="size"/>
    </method>

    <method name="finish">
        Accomplish encryption or decryption process.

        <argument name="out" class="buffer">
            <length method="out len">
                <proxy constant="0" to="data len"/>
            </length>
        </argument>

        <return enum="status"/>
    </method>
</interface>
