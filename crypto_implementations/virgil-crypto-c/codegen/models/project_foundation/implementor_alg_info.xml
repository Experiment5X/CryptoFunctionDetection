<implementor name="alg info" is_default="1">
    Provide implementation of algorithm information for algorithm agility.

    <implementation name="simple alg info">
        Handle simple algorithm information (just id).

        <interface name="alg info"/>

        <property name="alg id" enum="alg id"/>

        <constructor name="with alg id">
            Create algorithm info with identificator.

            <argument name="alg id" enum="alg id"/>
        </constructor>
    </implementation>


    <implementation name="hash based alg info">
        Handle hashed based algorithm information, i.e. HKDF, HMAC, etc.

        <interface name="alg info"/>

        <property name="alg id" enum="alg id"/>
        <property name="hash alg info" interface="alg info"/>

        <constructor name="with members" visibility="private">
            Create algorithm info with identificator and HASH algorithm info.

            <argument name="alg id" enum="alg id"/>
            <argument name="hash alg info" interface="alg info" access="disown"/>
        </constructor>

        <method name="hash alg info" is_const="1" declaration="public">
            Return hash algorithm information.

            <return interface="alg info"/>
        </method>
    </implementation>


    <implementation name="cipher alg info">
        Handle symmetric cipher algorithm information.

        <interface name="alg info"/>

        <property name="alg id" enum="alg id"/>
        <property name="nonce" class="buffer"/>

        <constructor name="with members">
            Create symmetric cipher algorithm info with identificator and input vector.

            <argument name="alg id" enum="alg id"/>
            <argument name="nonce" class="data"/>
        </constructor>

        <method name="nonce" is_const="1" declaration="public">
            Return IV.

            <return class="data"/>
        </method>
    </implementation>


    <implementation name="salted kdf alg info">
        Handle KDF algorithms that are configured with salt and iteration count.

        <interface name="alg info"/>

        <property name="alg id" enum="alg id"/>
        <property name="hash alg info" interface="alg info"/>
        <property name="salt" class="buffer"/>
        <property name="iteration count" type="size"/>

        <constructor name="with members" visibility="private">
            Create algorithm info with identificator, HASH algorithm info,
            salt and iteration count.

            <argument name="alg id" enum="alg id"/>
            <argument name="hash alg info" interface="alg info" access="disown"/>
            <argument name="salt" class="data"/>
            <argument name="iteration count" type="size"/>
        </constructor>

        <method name="hash alg info" is_const="1" declaration="public">
            Return hash algorithm information.

            <return interface="alg info"/>
        </method>

        <method name="salt" is_const="1" declaration="public">
            Return KDF salt.

            <return class="data"/>
        </method>

        <method name="iteration count" is_const="1" declaration="public">
            Return KDF iteration count.
            Note, can be 0 if KDF does not need the iteration count.

            <return type="size"/>
        </method>
    </implementation>


    <implementation name="pbe alg info">
        Handle information about password-based encryption algorithm.

        <interface name="alg info"/>

        <property name="alg id" enum="alg id"/>
        <property name="kdf alg info" interface="alg info"/>
        <property name="cipher alg info" interface="alg info"/>

        <constructor name="with members" visibility="private">
            Create algorithm info with identificator, KDF algorithm info and
            cipher alg info.

            <argument name="alg id" enum="alg id"/>
            <argument name="kdf alg info" interface="alg info" access="disown"/>
            <argument name="cipher alg info" interface="alg info" access="disown"/>
        </constructor>

        <method name="kdf alg info" is_const="1" declaration="public">
            Return KDF algorithm information.

            <return interface="alg info"/>
        </method>

        <method name="cipher alg info" is_const="1" declaration="public">
            Return cipher algorithm information.

            <return interface="alg info"/>
        </method>
    </implementation>


    <implementation name="ecc alg info">
        Handle algorithm information about ECP.

        <interface name="alg info"/>

        <property name="alg id" enum="alg id"/>
        <property name="key id" enum="oid id"/>
        <property name="domain id" enum="oid id"/>

        <constructor name="with members">
            Create algorithm info with EC generic key identificator, EC domain group identificator.

            <argument name="alg id" enum="alg id"/>
            <argument name="key id" enum="oid id"/>
            <argument name="domain id" enum="oid id"/>
        </constructor>

        <method name="key id" is_const="1" declaration="public">
            Return EC specific algorithm identificator {unrestricted, ecDH, ecMQV}.

            <return enum="oid id"/>
        </method>

        <method name="domain id" is_const="1" declaration="public">
            Return EC domain group identificator.

            <return enum="oid id"/>
        </method>
    </implementation>
</implementor>
